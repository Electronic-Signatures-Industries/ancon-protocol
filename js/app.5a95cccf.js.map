{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseMsgChangeOwner","creator","MsgChangeOwner","string","String","baseMsgAddDelegate","MsgAddDelegate","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","MsgSetAttribute","baseMsgFileMetadataResponse","MsgFileMetadataResponse","hash","bytes","bytesFromBase64","base64FromBytes","baseMsgNonce","delegates","MsgNonce","baseMsgMetadata","description","image","owner","parent","sources","links","verifiedCredentialRef","did","from","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","pubKey","PublicKey","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","uint64","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","baseMsgFileTx","MsgFileTx","baseMsgMetadataTx","MsgMetadataTx","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryGetDidRegistryDelegate","id","method","queryDidRegistryNonces","queryGetDidRegistryNonce","queryIdentifyOwner","queryGetAttributes","queryReadFile","cid","queryResource","queryRead","queryReadWithPath","types","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgSetAttribute","msgRevokeDelegate","msgChangeOwner","msgNonce","msgAddDelegate","msgMetadata","msgFile","queryClient","baseQueryOwnersResponse","QueryOwnersResponse","_","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","field","getDefaultState","ReadWithPath","ReadFile","Read","IdentifyOwner","GetAttributes","Resource","DidRegistryNonces","GetDidRegistryNonce","GetDidRegistryDelegate","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadWithPath","getReadFile","getRead","getIdentifyOwner","getGetAttributes","getResource","getDidRegistryNonces","getGetDidRegistryNonce","getGetDidRegistryDelegate","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadWithPath","options","subscribe","all","QueryReadFile","QueryRead","pagination","nextKey","QueryIdentifyOwner","QueryGetAttributes","QueryResource","QueryDidRegistryNonces","QueryGetDidRegistryNonce","QueryGetDidRegistryDelegate","sendMsgSetAttribute","msg","sendMsgRevokeDelegate","sendMsgChangeOwner","sendMsgNonce","sendMsgAddDelegate","sendMsgMetadata","sendMsgFile","queryAllBalances","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgSend","msgMultiSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryParams","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","sendMsgMultiSend","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgFundCommunityPool","msgWithdrawDelegatorReward","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgSetWithdrawAddress","sendMsgFundCommunityPool","sendMsgWithdrawDelegatorReward","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","V1Beta1ProposalStatus","V1Beta1VoteOption","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgVote","MsgDeposit","MsgSubmitProposal","msgVote","msgDeposit","msgSubmitProposal","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVote","sendMsgDeposit","sendMsgSubmitProposal","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","V1Beta1BondStatus","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgUndelegate","msgCreateValidator","msgDelegate","msgBeginRedelegate","msgEditValidator","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgUndelegate","sendMsgCreateValidator","sendMsgDelegate","sendMsgBeginRedelegate","sendMsgEditValidator","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","V1Order","V1State","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenTry","MsgChannelCloseInit","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgTimeoutOnClose","MsgChannelCloseConfirm","MsgChannelOpenInit","MsgRecvPacket","MsgTimeout","MsgAcknowledgement","msgChannelOpenTry","msgChannelCloseInit","msgChannelOpenAck","msgChannelOpenConfirm","msgTimeoutOnClose","msgChannelCloseConfirm","msgChannelOpenInit","msgRecvPacket","msgTimeout","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","revision_number","revision_height","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenTry","sendMsgChannelCloseInit","sendMsgChannelOpenAck","sendMsgChannelOpenConfirm","sendMsgTimeoutOnClose","sendMsgChannelCloseConfirm","sendMsgChannelOpenInit","sendMsgRecvPacket","sendMsgTimeout","sendMsgAcknowledgement","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpdateClient","msgSubmitMisbehaviour","msgCreateClient","msgUpgradeClient","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","client_id","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpdateClient","sendMsgSubmitMisbehaviour","sendMsgCreateClient","sendMsgUpgradeClient","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenTry","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenAck","msgConnectionOpenTry","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenAck","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenTry","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenAck","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","ElectronicSignaturesIndustriesAnconProtocolAnconprotocol","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkIbcCoreConnectionV1","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,IAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,+ZCnJHyC,EAAgB,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,EAAY,CACrBC,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANwB,IAApBgB,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAVqB,SAUdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKL,GACrB,MAAOa,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,EAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BqB,SA8BZ9B,GACL,IAAMY,EAAU,kBAAKL,GAarB,YAZuBiB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUuB,OAAO/B,EAAOQ,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQsB,OAAO/B,EAAOS,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXoB,OA9CqB,SA8CdpB,GACH,IAAMqB,EAAM,GAGZ,YAFoBT,IAApBZ,EAAQJ,UAA0ByB,EAAIzB,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwBwB,EAAIxB,MAAQG,EAAQH,OAC7CwB,GAEXC,YApDqB,SAoDTlC,GACR,IAAMY,EAAU,kBAAKL,GAarB,YAZuBiB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUR,EAAOQ,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQT,EAAOS,MAGvBG,EAAQH,MAAQ,EAEbG,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,qrBC1FEC,EAAqB,CAAEC,QAAS,IACzBC,EAAiB,CAC1BrC,OAD0B,SACnBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,MAHwB,KAApBgB,EAAQmC,SACRlC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmC,SAE9BlC,GAEXK,OAP0B,SAOnBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkC,GACrB,MAAO1B,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmC,QAAU3B,EAAO6B,SACzB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAxB0B,SAwBjB9B,GACL,IAAMY,EAAU,kBAAKkC,GAOrB,YANuBtB,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAUG,OAAOlD,EAAO+C,SAGhCnC,EAAQmC,QAAU,GAEfnC,GAEXoB,OAlC0B,SAkCnBpB,GACH,IAAMqB,EAAM,GAEZ,YADoBT,IAApBZ,EAAQmC,UAA0Bd,EAAIc,QAAUnC,EAAQmC,SACjDd,GAEXC,YAvC0B,SAuCdlC,GACR,IAAMY,EAAU,kBAAKkC,GAOrB,YANuBtB,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAU/C,EAAO+C,QAGzBnC,EAAQmC,QAAU,GAEfnC,IAmDTuC,EAAqB,CAAEJ,QAAS,IACzBK,EAAiB,CAC1BzC,OAD0B,SACnBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,MAHwB,KAApBgB,EAAQmC,SACRlC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmC,SAE9BlC,GAEXK,OAP0B,SAOnBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKuC,GACrB,MAAO/B,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmC,QAAU3B,EAAO6B,SACzB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAxB0B,SAwBjB9B,GACL,IAAMY,EAAU,kBAAKuC,GAOrB,YANuB3B,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAUG,OAAOlD,EAAO+C,SAGhCnC,EAAQmC,QAAU,GAEfnC,GAEXoB,OAlC0B,SAkCnBpB,GACH,IAAMqB,EAAM,GAEZ,YADoBT,IAApBZ,EAAQmC,UAA0Bd,EAAIc,QAAUnC,EAAQmC,SACjDd,GAEXC,YAvC0B,SAuCdlC,GACR,IAAMY,EAAU,kBAAKuC,GAOrB,YANuB3B,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAU/C,EAAO+C,QAGzBnC,EAAQmC,QAAU,GAEfnC,IAmDTyC,EAAwB,CAAEN,QAAS,IAC5BO,EAAoB,CAC7B3C,OAD6B,SACtBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,MAHwB,KAApBgB,EAAQmC,SACRlC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmC,SAE9BlC,GAEXK,OAP6B,SAOtBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKyC,GACrB,MAAOjC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmC,QAAU3B,EAAO6B,SACzB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAxB6B,SAwBpB9B,GACL,IAAMY,EAAU,kBAAKyC,GAOrB,YANuB7B,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAUG,OAAOlD,EAAO+C,SAGhCnC,EAAQmC,QAAU,GAEfnC,GAEXoB,OAlC6B,SAkCtBpB,GACH,IAAMqB,EAAM,GAEZ,YADoBT,IAApBZ,EAAQmC,UAA0Bd,EAAIc,QAAUnC,EAAQmC,SACjDd,GAEXC,YAvC6B,SAuCjBlC,GACR,IAAMY,EAAU,kBAAKyC,GAOrB,YANuB7B,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAU/C,EAAO+C,QAGzBnC,EAAQmC,QAAU,GAEfnC,IAmDT2C,EAAsB,CAAER,QAAS,IAC1BS,EAAkB,CAC3B7C,OAD2B,SACpBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,MAHwB,KAApBgB,EAAQmC,SACRlC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmC,SAE9BlC,GAEXK,OAP2B,SAOpBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK2C,GACrB,MAAOnC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmC,QAAU3B,EAAO6B,SACzB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAxB2B,SAwBlB9B,GACL,IAAMY,EAAU,kBAAK2C,GAOrB,YANuB/B,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAUG,OAAOlD,EAAO+C,SAGhCnC,EAAQmC,QAAU,GAEfnC,GAEXoB,OAlC2B,SAkCpBpB,GACH,IAAMqB,EAAM,GAEZ,YADoBT,IAApBZ,EAAQmC,UAA0Bd,EAAIc,QAAUnC,EAAQmC,SACjDd,GAEXC,YAvC2B,SAuCflC,GACR,IAAMY,EAAU,kBAAK2C,GAOrB,YANuB/B,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAU/C,EAAO+C,QAGzBnC,EAAQmC,QAAU,GAEfnC,IAmDT6C,EAA8B,GACvBC,EAA0B,CACnC/C,OADmC,SAC5BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,OAH4B,IAAxBgB,EAAQ+C,KAAKzG,QACb2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ+C,MAE7B9C,GAEXK,OAPmC,SAO5BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6C,GACrB,MAAOrC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+C,KAAOvC,EAAOwC,QACtB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAxBmC,SAwB1B9B,GACL,IAAMY,EAAU,kBAAK6C,GAIrB,YAHoBjC,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,OACpC/C,EAAQ+C,KAAOE,EAAgB7D,EAAO2D,OAEnC/C,GAEXoB,OA/BmC,SA+B5BpB,GACH,IAAMqB,EAAM,GAEZ,YADiBT,IAAjBZ,EAAQ+C,OAAuB1B,EAAI0B,KAAOG,OAAiCtC,IAAjBZ,EAAQ+C,KAAqB/C,EAAQ+C,KAAO,IAAItC,aACnGY,GAEXC,YApCmC,SAoCvBlC,GACR,IAAMY,EAAU,kBAAK6C,GAOrB,YANoBjC,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,KACpC/C,EAAQ+C,KAAO3D,EAAO2D,KAGtB/C,EAAQ+C,KAAO,IAAItC,WAEhBT,IAGTmD,EAAe,CAAEhB,QAAS,GAAIiB,UAAW,IAClCC,EAAW,CACpBtD,OADoB,SACbC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANwB,KAApBgB,EAAQmC,SACRlC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmC,SAEX,KAAtBnC,EAAQoD,WACRnD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoD,WAE9BnD,GAEXK,OAVoB,SAUbC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKmD,GACrB,MAAO3C,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmC,QAAU3B,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQoD,UAAY5C,EAAO6B,SAC3B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BoB,SA8BX9B,GACL,IAAMY,EAAU,kBAAKmD,GAarB,YAZuBvC,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAUG,OAAOlD,EAAO+C,SAGhCnC,EAAQmC,QAAU,QAEGvB,IAArBxB,EAAOgE,WAAgD,OAArBhE,EAAOgE,UACzCpD,EAAQoD,UAAYd,OAAOlD,EAAOgE,WAGlCpD,EAAQoD,UAAY,GAEjBpD,GAEXoB,OA9CoB,SA8CbpB,GACH,IAAMqB,EAAM,GAGZ,YAFoBT,IAApBZ,EAAQmC,UAA0Bd,EAAIc,QAAUnC,EAAQmC,cAClCvB,IAAtBZ,EAAQoD,YAA4B/B,EAAI+B,UAAYpD,EAAQoD,WACrD/B,GAEXC,YApDoB,SAoDRlC,GACR,IAAMY,EAAU,kBAAKmD,GAarB,YAZuBvC,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAU/C,EAAO+C,QAGzBnC,EAAQmC,QAAU,QAEGvB,IAArBxB,EAAOgE,WAAgD,OAArBhE,EAAOgE,UACzCpD,EAAQoD,UAAYhE,EAAOgE,UAG3BpD,EAAQoD,UAAY,GAEjBpD,IAmCTsD,EAAkB,CACpBnB,QAAS,GACTjE,KAAM,GACNqF,YAAa,GACbC,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,sBAAuB,GACvBC,IAAK,GACLC,KAAM,IAEGC,EAAc,CACvBjE,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAkC5B,MAjCwB,KAApBgB,EAAQmC,SACRlC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmC,SAEhB,KAAjBnC,EAAQ9B,MACR+B,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ9B,MAET,KAAxB8B,EAAQuD,aACRtD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQuD,aAEf,KAAlBvD,EAAQwD,OACRvD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQwD,OAEf,KAAlBxD,EAAQyD,OACRxD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyD,OAEd,KAAnBzD,EAAQ0D,QACRzD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0D,QAEb,KAApB1D,EAAQ2D,SACR1D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ2D,SAEf,KAAlB3D,EAAQ4D,OACR3D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ4D,OAEC,KAAlC5D,EAAQ6D,uBACR5D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ6D,uBAEjB,KAAhB7D,EAAQ8D,KACR7D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ8D,KAEhB,KAAjB9D,EAAQ+D,MACR9D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+D,MAE9B9D,GAEXK,OArCuB,SAqChBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKsD,GACrB,MAAO9C,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmC,QAAU3B,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQ9B,KAAOsC,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQuD,YAAc/C,EAAO6B,SAC7B,MACJ,KAAK,EACDrC,EAAQwD,MAAQhD,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQyD,MAAQjD,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0D,OAASlD,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQ2D,QAAUnD,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQ4D,MAAQpD,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ6D,sBAAwBrD,EAAO6B,SACvC,MACJ,KAAK,GACDrC,EAAQ8D,IAAMtD,EAAO6B,SACrB,MACJ,KAAK,GACDrC,EAAQ+D,KAAOvD,EAAO6B,SACtB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApFuB,SAoFd9B,GACL,IAAMY,EAAU,kBAAKsD,GAmErB,YAlEuB1C,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAUG,OAAOlD,EAAO+C,SAGhCnC,EAAQmC,QAAU,QAEFvB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC8B,EAAQ9B,KAAOoE,OAAOlD,EAAOlB,MAG7B8B,EAAQ9B,KAAO,QAEQ0C,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcjB,OAAOlD,EAAOmE,aAGpCvD,EAAQuD,YAAc,QAEL3C,IAAjBxB,EAAOoE,OAAwC,OAAjBpE,EAAOoE,MACrCxD,EAAQwD,MAAQlB,OAAOlD,EAAOoE,OAG9BxD,EAAQwD,MAAQ,QAEC5C,IAAjBxB,EAAOqE,OAAwC,OAAjBrE,EAAOqE,MACrCzD,EAAQyD,MAAQnB,OAAOlD,EAAOqE,OAG9BzD,EAAQyD,MAAQ,QAEE7C,IAAlBxB,EAAOsE,QAA0C,OAAlBtE,EAAOsE,OACtC1D,EAAQ0D,OAASpB,OAAOlD,EAAOsE,QAG/B1D,EAAQ0D,OAAS,QAEE9C,IAAnBxB,EAAOuE,SAA4C,OAAnBvE,EAAOuE,QACvC3D,EAAQ2D,QAAUrB,OAAOlD,EAAOuE,SAGhC3D,EAAQ2D,QAAU,QAED/C,IAAjBxB,EAAOwE,OAAwC,OAAjBxE,EAAOwE,MACrC5D,EAAQ4D,MAAQtB,OAAOlD,EAAOwE,OAG9B5D,EAAQ4D,MAAQ,QAEiBhD,IAAjCxB,EAAOyE,uBAAwE,OAAjCzE,EAAOyE,sBACrD7D,EAAQ6D,sBAAwBvB,OAAOlD,EAAOyE,uBAG9C7D,EAAQ6D,sBAAwB,QAEjBjD,IAAfxB,EAAO0E,KAAoC,OAAf1E,EAAO0E,IACnC9D,EAAQ8D,IAAMxB,OAAOlD,EAAO0E,KAG5B9D,EAAQ8D,IAAM,QAEElD,IAAhBxB,EAAO2E,MAAsC,OAAhB3E,EAAO2E,KACpC/D,EAAQ+D,KAAOzB,OAAOlD,EAAO2E,MAG7B/D,EAAQ+D,KAAO,GAEZ/D,GAEXoB,OA1JuB,SA0JhBpB,GACH,IAAMqB,EAAM,GAYZ,YAXoBT,IAApBZ,EAAQmC,UAA0Bd,EAAIc,QAAUnC,EAAQmC,cACvCvB,IAAjBZ,EAAQ9B,OAAuBmD,EAAInD,KAAO8B,EAAQ9B,WAC1B0C,IAAxBZ,EAAQuD,cAA8BlC,EAAIkC,YAAcvD,EAAQuD,kBAC9C3C,IAAlBZ,EAAQwD,QAAwBnC,EAAImC,MAAQxD,EAAQwD,YAClC5C,IAAlBZ,EAAQyD,QAAwBpC,EAAIoC,MAAQzD,EAAQyD,YACjC7C,IAAnBZ,EAAQ0D,SAAyBrC,EAAIqC,OAAS1D,EAAQ0D,aAClC9C,IAApBZ,EAAQ2D,UAA0BtC,EAAIsC,QAAU3D,EAAQ2D,cACtC/C,IAAlBZ,EAAQ4D,QAAwBvC,EAAIuC,MAAQ5D,EAAQ4D,YAClBhD,IAAlCZ,EAAQ6D,wBAAwCxC,EAAIwC,sBAAwB7D,EAAQ6D,4BACpEjD,IAAhBZ,EAAQ8D,MAAsBzC,EAAIyC,IAAM9D,EAAQ8D,UAC/BlD,IAAjBZ,EAAQ+D,OAAuB1C,EAAI0C,KAAO/D,EAAQ+D,MAC3C1C,GAEXC,YAzKuB,SAyKXlC,GACR,IAAMY,EAAU,kBAAKsD,GAmErB,YAlEuB1C,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAU/C,EAAO+C,QAGzBnC,EAAQmC,QAAU,QAEFvB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC8B,EAAQ9B,KAAOkB,EAAOlB,KAGtB8B,EAAQ9B,KAAO,QAEQ0C,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcnE,EAAOmE,YAG7BvD,EAAQuD,YAAc,QAEL3C,IAAjBxB,EAAOoE,OAAwC,OAAjBpE,EAAOoE,MACrCxD,EAAQwD,MAAQpE,EAAOoE,MAGvBxD,EAAQwD,MAAQ,QAEC5C,IAAjBxB,EAAOqE,OAAwC,OAAjBrE,EAAOqE,MACrCzD,EAAQyD,MAAQrE,EAAOqE,MAGvBzD,EAAQyD,MAAQ,QAEE7C,IAAlBxB,EAAOsE,QAA0C,OAAlBtE,EAAOsE,OACtC1D,EAAQ0D,OAAStE,EAAOsE,OAGxB1D,EAAQ0D,OAAS,QAEE9C,IAAnBxB,EAAOuE,SAA4C,OAAnBvE,EAAOuE,QACvC3D,EAAQ2D,QAAUvE,EAAOuE,QAGzB3D,EAAQ2D,QAAU,QAED/C,IAAjBxB,EAAOwE,OAAwC,OAAjBxE,EAAOwE,MACrC5D,EAAQ4D,MAAQxE,EAAOwE,MAGvB5D,EAAQ4D,MAAQ,QAEiBhD,IAAjCxB,EAAOyE,uBAAwE,OAAjCzE,EAAOyE,sBACrD7D,EAAQ6D,sBAAwBzE,EAAOyE,sBAGvC7D,EAAQ6D,sBAAwB,QAEjBjD,IAAfxB,EAAO0E,KAAoC,OAAf1E,EAAO0E,IACnC9D,EAAQ8D,IAAM1E,EAAO0E,IAGrB9D,EAAQ8D,IAAM,QAEElD,IAAhBxB,EAAO2E,MAAsC,OAAhB3E,EAAO2E,KACpC/D,EAAQ+D,KAAO3E,EAAO2E,KAGtB/D,EAAQ+D,KAAO,GAEZ/D,IAsDTiE,EAAc,CAAE9B,QAAS,GAAI+B,KAAM,GAAIC,QAAS,GAAItF,KAAM,GAAIuF,KAAM,GAAIC,YAAa,GAAIP,IAAK,GAAIC,KAAM,IACjGO,EAAU,CACnBvE,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAyB5B,MAxBwB,KAApBgB,EAAQmC,SACRlC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmC,SAEhB,KAAjBnC,EAAQkE,MACRjE,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQkE,MAEb,KAApBlE,EAAQmE,SACRlE,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmE,SAEhB,KAAjBnE,EAAQnB,MACRoB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQnB,MAEhB,KAAjBmB,EAAQoE,MACRnE,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoE,MAET,KAAxBpE,EAAQqE,aACRpE,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQqE,aAEjB,KAAhBrE,EAAQ8D,KACR7D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ8D,KAEhB,KAAjB9D,EAAQ+D,MACR9D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+D,MAE9B9D,GAEXK,OA5BmB,SA4BZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiE,GACrB,MAAOzD,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmC,QAAU3B,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQkE,KAAO1D,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQmE,QAAU3D,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQnB,KAAO2B,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQoE,KAAO5D,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQqE,YAAc7D,EAAO6B,SAC7B,MACJ,KAAK,EACDrC,EAAQ8D,IAAMtD,EAAO6B,SACrB,MACJ,KAAK,EACDrC,EAAQ+D,KAAOvD,EAAO6B,SACtB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAlEmB,SAkEV9B,GACL,IAAMY,EAAU,kBAAKiE,GAiDrB,YAhDuBrD,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAUG,OAAOlD,EAAO+C,SAGhCnC,EAAQmC,QAAU,QAEFvB,IAAhBxB,EAAO8E,MAAsC,OAAhB9E,EAAO8E,KACpClE,EAAQkE,KAAO5B,OAAOlD,EAAO8E,MAG7BlE,EAAQkE,KAAO,QAEItD,IAAnBxB,EAAO+E,SAA4C,OAAnB/E,EAAO+E,QACvCnE,EAAQmE,QAAU7B,OAAOlD,EAAO+E,SAGhCnE,EAAQmE,QAAU,QAEFvD,IAAhBxB,EAAOP,MAAsC,OAAhBO,EAAOP,KACpCmB,EAAQnB,KAAOyD,OAAOlD,EAAOP,MAG7BmB,EAAQnB,KAAO,QAEC+B,IAAhBxB,EAAOgF,MAAsC,OAAhBhF,EAAOgF,KACpCpE,EAAQoE,KAAO9B,OAAOlD,EAAOgF,MAG7BpE,EAAQoE,KAAO,QAEQxD,IAAvBxB,EAAOiF,aAAoD,OAAvBjF,EAAOiF,YAC3CrE,EAAQqE,YAAc/B,OAAOlD,EAAOiF,aAGpCrE,EAAQqE,YAAc,QAEPzD,IAAfxB,EAAO0E,KAAoC,OAAf1E,EAAO0E,IACnC9D,EAAQ8D,IAAMxB,OAAOlD,EAAO0E,KAG5B9D,EAAQ8D,IAAM,QAEElD,IAAhBxB,EAAO2E,MAAsC,OAAhB3E,EAAO2E,KACpC/D,EAAQ+D,KAAOzB,OAAOlD,EAAO2E,MAG7B/D,EAAQ+D,KAAO,GAEZ/D,GAEXoB,OAtHmB,SAsHZpB,GACH,IAAMqB,EAAM,GASZ,YARoBT,IAApBZ,EAAQmC,UAA0Bd,EAAIc,QAAUnC,EAAQmC,cACvCvB,IAAjBZ,EAAQkE,OAAuB7C,EAAI6C,KAAOlE,EAAQkE,WAC9BtD,IAApBZ,EAAQmE,UAA0B9C,EAAI8C,QAAUnE,EAAQmE,cACvCvD,IAAjBZ,EAAQnB,OAAuBwC,EAAIxC,KAAOmB,EAAQnB,WACjC+B,IAAjBZ,EAAQoE,OAAuB/C,EAAI+C,KAAOpE,EAAQoE,WAC1BxD,IAAxBZ,EAAQqE,cAA8BhD,EAAIgD,YAAcrE,EAAQqE,kBAChDzD,IAAhBZ,EAAQ8D,MAAsBzC,EAAIyC,IAAM9D,EAAQ8D,UAC/BlD,IAAjBZ,EAAQ+D,OAAuB1C,EAAI0C,KAAO/D,EAAQ+D,MAC3C1C,GAEXC,YAlImB,SAkIPlC,GACR,IAAMY,EAAU,kBAAKiE,GAiDrB,YAhDuBrD,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAU/C,EAAO+C,QAGzBnC,EAAQmC,QAAU,QAEFvB,IAAhBxB,EAAO8E,MAAsC,OAAhB9E,EAAO8E,KACpClE,EAAQkE,KAAO9E,EAAO8E,KAGtBlE,EAAQkE,KAAO,QAEItD,IAAnBxB,EAAO+E,SAA4C,OAAnB/E,EAAO+E,QACvCnE,EAAQmE,QAAU/E,EAAO+E,QAGzBnE,EAAQmE,QAAU,QAEFvD,IAAhBxB,EAAOP,MAAsC,OAAhBO,EAAOP,KACpCmB,EAAQnB,KAAOO,EAAOP,KAGtBmB,EAAQnB,KAAO,QAEC+B,IAAhBxB,EAAOgF,MAAsC,OAAhBhF,EAAOgF,KACpCpE,EAAQoE,KAAOhF,EAAOgF,KAGtBpE,EAAQoE,KAAO,QAEQxD,IAAvBxB,EAAOiF,aAAoD,OAAvBjF,EAAOiF,YAC3CrE,EAAQqE,YAAcjF,EAAOiF,YAG7BrE,EAAQqE,YAAc,QAEPzD,IAAfxB,EAAO0E,KAAoC,OAAf1E,EAAO0E,IACnC9D,EAAQ8D,IAAM1E,EAAO0E,IAGrB9D,EAAQ8D,IAAM,QAEElD,IAAhBxB,EAAO2E,MAAsC,OAAhB3E,EAAO2E,KACpC/D,EAAQ+D,KAAO3E,EAAO2E,KAGtB/D,EAAQ+D,KAAO,GAEZ/D,IA8FXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MAAS,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WACzF,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MAAS,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WACzF,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,ieC7nCnBC,EAAmB,CAAEC,iBAAkB,GAChCC,EAAe,CACxBrF,OADwB,SACjBC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQqF,YADc,IACtC,2BAAoC,KAAzBC,EAAyB,QAChCC,EAAUxF,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFZ,8BAUtC,YANyB7E,IAArBZ,EAAQ0F,UACRH,EAAUxF,OAAOC,EAAQ0F,SAAUzF,EAAOE,OAAO,IAAIqF,QAAQC,SAEhC,IAA7BzF,EAAQmF,kBACRlF,EAAOE,OAAO,IAAIC,MAAMJ,EAAQmF,kBAE7BlF,GAEXK,OAbwB,SAajBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkF,GACrBlF,EAAQqF,WAAa,GACrB,MAAO7E,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqF,WAAWzI,KAAK2I,EAAUjF,OAAOE,EAAQA,EAAOL,WACxD,MACJ,KAAK,EACDH,EAAQ0F,SAAWH,EAAUjF,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQmF,iBAAmBnE,EAAaR,EAAOJ,SAC/C,MACJ,QACII,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SArCwB,SAqCf9B,GACL,IAAMY,EAAU,kBAAKkF,GAErB,GADAlF,EAAQqF,WAAa,QACKzE,IAAtBxB,EAAOiG,YAAkD,OAAtBjG,EAAOiG,WAAqB,wBAC/CjG,EAAOiG,YADwC,IAC/D,2BAAmC,KAAxBM,EAAwB,QAC/B3F,EAAQqF,WAAWzI,KAAK2I,EAAUrE,SAASyE,KAFgB,+BAkBnE,YAbwB/E,IAApBxB,EAAOsG,UAA8C,OAApBtG,EAAOsG,SACxC1F,EAAQ0F,SAAWH,EAAUrE,SAAS9B,EAAOsG,UAG7C1F,EAAQ0F,cAAW9E,OAESA,IAA5BxB,EAAO+F,kBACqB,OAA5B/F,EAAO+F,iBACPnF,EAAQmF,iBAAmBhE,OAAO/B,EAAO+F,kBAGzCnF,EAAQmF,iBAAmB,EAExBnF,GAEXoB,OA5DwB,SA4DjBpB,GACH,IAAMqB,EAAM,GAaZ,OAZIrB,EAAQqF,WACRhE,EAAIgE,WAAarF,EAAQqF,WAAWO,KAAI,SAACD,GAAD,OAAOA,EAAIJ,EAAUnE,OAAOuE,QAAK/E,KAGzES,EAAIgE,WAAa,QAEAzE,IAArBZ,EAAQ0F,WACHrE,EAAIqE,SAAW1F,EAAQ0F,SAClBH,EAAUnE,OAAOpB,EAAQ0F,eACzB9E,QACmBA,IAA7BZ,EAAQmF,mBACH9D,EAAI8D,iBAAmBnF,EAAQmF,kBAC7B9D,GAEXC,YA5EwB,SA4EZlC,GACR,IAAMY,EAAU,kBAAKkF,GAErB,GADAlF,EAAQqF,WAAa,QACKzE,IAAtBxB,EAAOiG,YAAkD,OAAtBjG,EAAOiG,WAAqB,wBAC/CjG,EAAOiG,YADwC,IAC/D,2BAAmC,KAAxBM,EAAwB,QAC/B3F,EAAQqF,WAAWzI,KAAK2I,EAAUjE,YAAYqE,KAFa,+BAkBnE,YAbwB/E,IAApBxB,EAAOsG,UAA8C,OAApBtG,EAAOsG,SACxC1F,EAAQ0F,SAAWH,EAAUjE,YAAYlC,EAAOsG,UAGhD1F,EAAQ0F,cAAW9E,OAESA,IAA5BxB,EAAO+F,kBACqB,OAA5B/F,EAAO+F,iBACPnF,EAAQmF,iBAAmB/F,EAAO+F,iBAGlCnF,EAAQmF,iBAAmB,EAExBnF,IAGT6F,EAAgB,CAAEC,YAAa,EAAGC,iBAAkB,GAC7CR,EAAY,CACrBxF,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,OAZ+B,IAA3BgB,EAAQgG,QAAQ1J,QAChB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQgG,cAEbpF,IAAnBZ,EAAQiG,QACRC,OAAUnG,OAAOC,EAAQiG,OAAQhG,EAAOE,OAAO,IAAIqF,QAAQC,SAEnC,IAAxBzF,EAAQ8F,aACR7F,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ8F,aAEH,IAA7B9F,EAAQ+F,kBACR9F,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ+F,kBAE7B9F,GAEXK,OAhBqB,SAgBdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6F,GACrB,MAAOrF,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgG,QAAUxF,EAAOwC,QACzB,MACJ,KAAK,EACDhD,EAAQiG,OAASC,OAAU5F,OAAOE,EAAQA,EAAOL,UACjD,MACJ,KAAK,EACDH,EAAQ8F,YAAc9E,EAAaR,EAAOJ,SAC1C,MACJ,KAAK,EACDJ,EAAQ+F,iBAAmB/E,EAAaR,EAAOJ,SAC/C,MACJ,QACII,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1CqB,SA0CZ9B,GACL,IAAMY,EAAU,kBAAK6F,GAuBrB,YAtBuBjF,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,UACvChG,EAAQgG,QAAU/C,EAAgB7D,EAAO4G,eAEvBpF,IAAlBxB,EAAO6G,QAA0C,OAAlB7G,EAAO6G,OACtCjG,EAAQiG,OAASC,OAAUhF,SAAS9B,EAAO6G,QAG3CjG,EAAQiG,YAASrF,OAEMA,IAAvBxB,EAAO0G,aAAoD,OAAvB1G,EAAO0G,YAC3C9F,EAAQ8F,YAAc3E,OAAO/B,EAAO0G,aAGpC9F,EAAQ8F,YAAc,OAEMlF,IAA5BxB,EAAO2G,kBACqB,OAA5B3G,EAAO2G,iBACP/F,EAAQ+F,iBAAmB5E,OAAO/B,EAAO2G,kBAGzC/F,EAAQ+F,iBAAmB,EAExB/F,GAEXoB,OApEqB,SAoEdpB,GACH,IAAMqB,EAAM,GAUZ,YAToBT,IAApBZ,EAAQgG,UACH3E,EAAI2E,QAAU9C,OAAoCtC,IAApBZ,EAAQgG,QAAwBhG,EAAQgG,QAAU,IAAIvF,kBACtEG,IAAnBZ,EAAQiG,SACH5E,EAAI4E,OAASjG,EAAQiG,OAChBC,OAAU9E,OAAOpB,EAAQiG,aACzBrF,QACcA,IAAxBZ,EAAQ8F,cAA8BzE,EAAIyE,YAAc9F,EAAQ8F,kBACnClF,IAA7BZ,EAAQ+F,mBACH1E,EAAI0E,iBAAmB/F,EAAQ+F,kBAC7B1E,GAEXC,YAjFqB,SAiFTlC,GACR,IAAMY,EAAU,kBAAK6F,GA0BrB,YAzBuBjF,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU5G,EAAO4G,QAGzBhG,EAAQgG,QAAU,IAAIvF,gBAEJG,IAAlBxB,EAAO6G,QAA0C,OAAlB7G,EAAO6G,OACtCjG,EAAQiG,OAASC,OAAU5E,YAAYlC,EAAO6G,QAG9CjG,EAAQiG,YAASrF,OAEMA,IAAvBxB,EAAO0G,aAAoD,OAAvB1G,EAAO0G,YAC3C9F,EAAQ8F,YAAc1G,EAAO0G,YAG7B9F,EAAQ8F,YAAc,OAEMlF,IAA5BxB,EAAO2G,kBACqB,OAA5B3G,EAAO2G,iBACP/F,EAAQ+F,iBAAmB3G,EAAO2G,iBAGlC/F,EAAQ+F,iBAAmB,EAExB/F,IA4EXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAEzB,SAASjE,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,qiBCrUEkE,EAAsB,CAAEC,OAAQ,IACzBC,EAAkB,CAC3BtG,OAD2B,SACpBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,YAT4B4B,IAAxBZ,EAAQsG,aACRC,OAAIxG,OAAOC,EAAQsG,YAAarG,EAAOE,OAAO,IAAIqF,QAAQC,cAE/B7E,IAA3BZ,EAAQwG,gBACRD,OAAIxG,OAAOC,EAAQwG,eAAgBvG,EAAOE,OAAO,IAAIqF,QAAQC,SAE1C,KAAnBzF,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAb2B,SAapBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKmG,GACrB,MAAO3F,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsG,YAAcC,OAAIjG,OAAOE,EAAQA,EAAOL,UAChD,MACJ,KAAK,EACDH,EAAQwG,eAAiBD,OAAIjG,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApC2B,SAoClB9B,GACL,IAAMY,EAAU,kBAAKmG,GAmBrB,YAlB2BvF,IAAvBxB,EAAOkH,aAAoD,OAAvBlH,EAAOkH,YAC3CtG,EAAQsG,YAAcC,OAAIrF,SAAS9B,EAAOkH,aAG1CtG,EAAQsG,iBAAc1F,OAEIA,IAA1BxB,EAAOoH,gBAA0D,OAA1BpH,EAAOoH,eAC9CxG,EAAQwG,eAAiBD,OAAIrF,SAAS9B,EAAOoH,gBAG7CxG,EAAQwG,oBAAiB5F,OAEPA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OA1D2B,SA0DpBpB,GACH,IAAMqB,EAAM,GAUZ,YATwBT,IAAxBZ,EAAQsG,cACHjF,EAAIiF,YAActG,EAAQsG,YACrBC,OAAInF,OAAOpB,EAAQsG,kBACnB1F,QACiBA,IAA3BZ,EAAQwG,iBACHnF,EAAImF,eAAiBxG,EAAQwG,eACxBD,OAAInF,OAAOpB,EAAQwG,qBACnB5F,QACSA,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YAvE2B,SAuEflC,GACR,IAAMY,EAAU,kBAAKmG,GAmBrB,YAlB2BvF,IAAvBxB,EAAOkH,aAAoD,OAAvBlH,EAAOkH,YAC3CtG,EAAQsG,YAAcC,OAAIjF,YAAYlC,EAAOkH,aAG7CtG,EAAQsG,iBAAc1F,OAEIA,IAA1BxB,EAAOoH,gBAA0D,OAA1BpH,EAAOoH,eAC9CxG,EAAQwG,eAAiBD,OAAIjF,YAAYlC,EAAOoH,gBAGhDxG,EAAQwG,oBAAiB5F,OAEPA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAyCTyG,EAAsB,CAAEC,SAAU,GAAIN,OAAQ,IACvCO,EAAkB,CAC3B5G,OAD2B,SACpBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATyB,KAArBgB,EAAQ0G,UACRzG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0G,eAEd9F,IAAnBZ,EAAQ4G,QACRL,OAAIxG,OAAOC,EAAQ4G,OAAQ3G,EAAOE,OAAO,IAAIqF,QAAQC,SAElC,KAAnBzF,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAb2B,SAapBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKyG,GACrB,MAAOjG,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0G,SAAWlG,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQ4G,OAASL,OAAIjG,OAAOE,EAAQA,EAAOL,UAC3C,MACJ,KAAK,EACDH,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApC2B,SAoClB9B,GACL,IAAMY,EAAU,kBAAKyG,GAmBrB,YAlBwB7F,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWpE,OAAOlD,EAAOsH,UAGjC1G,EAAQ0G,SAAW,QAED9F,IAAlBxB,EAAOwH,QAA0C,OAAlBxH,EAAOwH,OACtC5G,EAAQ4G,OAASL,OAAIrF,SAAS9B,EAAOwH,QAGrC5G,EAAQ4G,YAAShG,OAECA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OA1D2B,SA0DpBpB,GACH,IAAMqB,EAAM,GAKZ,YAJqBT,IAArBZ,EAAQ0G,WAA2BrF,EAAIqF,SAAW1G,EAAQ0G,eACvC9F,IAAnBZ,EAAQ4G,SACHvF,EAAIuF,OAAS5G,EAAQ4G,OAASL,OAAInF,OAAOpB,EAAQ4G,aAAUhG,QAC7CA,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YAlE2B,SAkEflC,GACR,IAAMY,EAAU,kBAAKyG,GAmBrB,YAlBwB7F,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWtH,EAAOsH,SAG1B1G,EAAQ0G,SAAW,QAED9F,IAAlBxB,EAAOwH,QAA0C,OAAlBxH,EAAOwH,OACtC5G,EAAQ4G,OAASL,OAAIjF,YAAYlC,EAAOwH,QAGxC5G,EAAQ4G,YAAShG,OAECA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAyCT6G,EAAuB,CAAEH,SAAU,GAAIN,OAAQ,IACxCU,EAAmB,CAC5B/G,OAD4B,SACrBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAmB5B,MAlByB,KAArBgB,EAAQ0G,UACRzG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0G,eAET9F,IAAxBZ,EAAQsG,aACRC,OAAIxG,OAAOC,EAAQsG,YAAarG,EAAOE,OAAO,IAAIqF,QAAQC,cAE/B7E,IAA3BZ,EAAQwG,gBACRD,OAAIxG,OAAOC,EAAQwG,eAAgBvG,EAAOE,OAAO,IAAIqF,QAAQC,SAEvB,IAAtCzF,EAAQ+G,mBAAmBzK,QAC3B2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ+G,oBAEc,IAA9C/G,EAAQgH,2BAA2B1K,QACnC2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQgH,4BAEb,KAAnBhH,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAtB4B,SAsBrBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6G,GACrB,MAAOrG,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0G,SAAWlG,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQsG,YAAcC,OAAIjG,OAAOE,EAAQA,EAAOL,UAChD,MACJ,KAAK,EACDH,EAAQwG,eAAiBD,OAAIjG,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQ+G,mBAAqBvG,EAAOwC,QACpC,MACJ,KAAK,EACDhD,EAAQgH,2BAA6BxG,EAAOwC,QAC5C,MACJ,KAAK,EACDhD,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAtD4B,SAsDnB9B,GACL,IAAMY,EAAU,kBAAK6G,GAiCrB,YAhCwBjG,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWpE,OAAOlD,EAAOsH,UAGjC1G,EAAQ0G,SAAW,QAEI9F,IAAvBxB,EAAOkH,aAAoD,OAAvBlH,EAAOkH,YAC3CtG,EAAQsG,YAAcC,OAAIrF,SAAS9B,EAAOkH,aAG1CtG,EAAQsG,iBAAc1F,OAEIA,IAA1BxB,EAAOoH,gBAA0D,OAA1BpH,EAAOoH,eAC9CxG,EAAQwG,eAAiBD,OAAIrF,SAAS9B,EAAOoH,gBAG7CxG,EAAQwG,oBAAiB5F,OAEKA,IAA9BxB,EAAO2H,oBACuB,OAA9B3H,EAAO2H,qBACP/G,EAAQ+G,mBAAqB9D,EAAgB7D,EAAO2H,0BAEdnG,IAAtCxB,EAAO4H,4BAC+B,OAAtC5H,EAAO4H,6BACPhH,EAAQgH,2BAA6B/D,EAAgB7D,EAAO4H,kCAE1CpG,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OA1F4B,SA0FrBpB,GACH,IAAMqB,EAAM,GAmBZ,YAlBqBT,IAArBZ,EAAQ0G,WAA2BrF,EAAIqF,SAAW1G,EAAQ0G,eAClC9F,IAAxBZ,EAAQsG,cACHjF,EAAIiF,YAActG,EAAQsG,YACrBC,OAAInF,OAAOpB,EAAQsG,kBACnB1F,QACiBA,IAA3BZ,EAAQwG,iBACHnF,EAAImF,eAAiBxG,EAAQwG,eACxBD,OAAInF,OAAOpB,EAAQwG,qBACnB5F,QACqBA,IAA/BZ,EAAQ+G,qBACH1F,EAAI0F,mBAAqB7D,OAA+CtC,IAA/BZ,EAAQ+G,mBAC5C/G,EAAQ+G,mBACR,IAAItG,kBACyBG,IAAvCZ,EAAQgH,6BACH3F,EAAI2F,2BAA6B9D,OAAuDtC,IAAvCZ,EAAQgH,2BACpDhH,EAAQgH,2BACR,IAAIvG,kBACKG,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YAhH4B,SAgHhBlC,GACR,IAAMY,EAAU,kBAAK6G,GAuCrB,YAtCwBjG,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWtH,EAAOsH,SAG1B1G,EAAQ0G,SAAW,QAEI9F,IAAvBxB,EAAOkH,aAAoD,OAAvBlH,EAAOkH,YAC3CtG,EAAQsG,YAAcC,OAAIjF,YAAYlC,EAAOkH,aAG7CtG,EAAQsG,iBAAc1F,OAEIA,IAA1BxB,EAAOoH,gBAA0D,OAA1BpH,EAAOoH,eAC9CxG,EAAQwG,eAAiBD,OAAIjF,YAAYlC,EAAOoH,gBAGhDxG,EAAQwG,oBAAiB5F,OAEKA,IAA9BxB,EAAO2H,oBACuB,OAA9B3H,EAAO2H,mBACP/G,EAAQ+G,mBAAqB3H,EAAO2H,mBAGpC/G,EAAQ+G,mBAAqB,IAAItG,gBAEKG,IAAtCxB,EAAO4H,4BAC+B,OAAtC5H,EAAO4H,2BACPhH,EAAQgH,2BAA6B5H,EAAO4H,2BAG5ChH,EAAQgH,2BAA6B,IAAIvG,gBAEvBG,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAyCTiH,EAA4B,CAAEP,SAAU,GAAIN,OAAQ,IAC7Cc,EAAwB,CACjCnH,OADiC,SAC1BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATyB,KAArBgB,EAAQ0G,UACRzG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0G,eAER9F,IAAzBZ,EAAQmH,cACRZ,OAAIxG,OAAOC,EAAQmH,aAAclH,EAAOE,OAAO,IAAIqF,QAAQC,SAExC,KAAnBzF,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAbiC,SAa1BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiH,GACrB,MAAOzG,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0G,SAAWlG,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQmH,aAAeZ,OAAIjG,OAAOE,EAAQA,EAAOL,UACjD,MACJ,KAAK,EACDH,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApCiC,SAoCxB9B,GACL,IAAMY,EAAU,kBAAKiH,GAmBrB,YAlBwBrG,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWpE,OAAOlD,EAAOsH,UAGjC1G,EAAQ0G,SAAW,QAEK9F,IAAxBxB,EAAO+H,cAAsD,OAAxB/H,EAAO+H,aAC5CnH,EAAQmH,aAAeZ,OAAIrF,SAAS9B,EAAO+H,cAG3CnH,EAAQmH,kBAAevG,OAELA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OA1DiC,SA0D1BpB,GACH,IAAMqB,EAAM,GAOZ,YANqBT,IAArBZ,EAAQ0G,WAA2BrF,EAAIqF,SAAW1G,EAAQ0G,eACjC9F,IAAzBZ,EAAQmH,eACH9F,EAAI8F,aAAenH,EAAQmH,aACtBZ,OAAInF,OAAOpB,EAAQmH,mBACnBvG,QACSA,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YApEiC,SAoErBlC,GACR,IAAMY,EAAU,kBAAKiH,GAmBrB,YAlBwBrG,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWtH,EAAOsH,SAG1B1G,EAAQ0G,SAAW,QAEK9F,IAAxBxB,EAAO+H,cAAsD,OAAxB/H,EAAO+H,aAC5CnH,EAAQmH,aAAeZ,OAAIjF,YAAYlC,EAAO+H,cAG9CnH,EAAQmH,kBAAevG,OAELA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAkEXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,iICznBdmC,EA8BAC,EAoCAC,EA4DAC,E,6ZA7HX,SAAWH,GACPA,EAAYA,EAAY,OAAS,GAAK,MACtCA,EAAYA,EAAY,WAAa,GAAK,UAC1CA,EAAYA,EAAY,iBAAmB,GAAK,gBAHpD,CAIGA,IAAgBA,EAAc,KA0BjC,SAAWC,GACPA,EAAaA,EAAa,WAAa,GAAK,UAC5CA,EAAaA,EAAa,kBAAoB,GAAK,iBACnDA,EAAaA,EAAa,uBAAyB,GAAK,sBACxDA,EAAaA,EAAa,iBAAmB,GAAK,eAJtD,CAKGA,IAAiBA,EAAe,KA+BnC,SAAWC,GAEPA,EAA6BA,EAA6B,WAAa,GAAK,UAE5EA,EAA6BA,EAA6B,UAAY,GAAK,SAE3EA,EAA6BA,EAA6B,SAAW,GAAK,QAE1EA,EAA6BA,EAA6B,UAAY,GAAK,SAE3EA,EAA6BA,EAA6B,iBAAmB,GAAK,gBAElFA,EAA6BA,EAA6B,iBAAmB,GAAK,gBAClFA,EAA6BA,EAA6B,iBAAmB,GAAK,eAbtF,CAcGA,IAAiCA,EAA+B,KA8CnE,SAAWC,GAEPA,EAAkCA,EAAkC,WAAa,GAAK,UAEtFA,EAAkCA,EAAkC,UAAY,GAAK,SAErFA,EAAkCA,EAAkC,SAAW,GAAK,QAEpFA,EAAkCA,EAAkC,SAAW,GAAK,QAEpFA,EAAkCA,EAAkC,kBAAoB,GAAK,iBAE7FA,EAAkCA,EAAkC,mBAAqB,GAAK,kBAC9FA,EAAkCA,EAAkC,iBAAmB,GAAK,eAbhG,CAcGA,IAAsCA,EAAoC,KA6C7E,IA2nHMC,EAAY,CAAEC,KAAM,IACbC,EAAQ,CACjB3H,OADiB,SACVC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACP,KAAjBgB,EAAQyH,MACRxH,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyH,MAFC,uBAItBzH,EAAQ2H,YAJc,IAItC,2BAAoC,KAAzBrC,EAAyB,QAChCsC,EAAe7H,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALjB,8BAOtC,OAAOxF,GAEXK,OAViB,SAUVC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKwH,GACrBxH,EAAQ2H,WAAa,GACrB,MAAOnH,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyH,KAAOjH,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQ2H,WAAW/K,KAAKgL,EAAetH,OAAOE,EAAQA,EAAOL,WAC7D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/BiB,SA+BR9B,GACL,IAAMY,EAAU,kBAAKwH,GAQrB,GAPAxH,EAAQ2H,WAAa,QACD/G,IAAhBxB,EAAOqI,MAAsC,OAAhBrI,EAAOqI,KACpCzH,EAAQyH,KAAOnF,OAAOlD,EAAOqI,MAG7BzH,EAAQyH,KAAO,QAEO7G,IAAtBxB,EAAOuI,YAAkD,OAAtBvI,EAAOuI,WAAqB,wBAC/CvI,EAAOuI,YADwC,IAC/D,2BAAmC,KAAxBhC,EAAwB,QAC/B3F,EAAQ2H,WAAW/K,KAAKgL,EAAe1G,SAASyE,KAFW,+BAKnE,OAAO3F,GAEXoB,OA/CiB,SA+CVpB,GACH,IAAMqB,EAAM,GAQZ,YAPiBT,IAAjBZ,EAAQyH,OAAuBpG,EAAIoG,KAAOzH,EAAQyH,MAC9CzH,EAAQ2H,WACRtG,EAAIsG,WAAa3H,EAAQ2H,WAAW/B,KAAI,SAACD,GAAD,OAAOA,EAAIiC,EAAexG,OAAOuE,QAAK/E,KAG9ES,EAAIsG,WAAa,GAEdtG,GAEXC,YA1DiB,SA0DLlC,GACR,IAAMY,EAAU,kBAAKwH,GAQrB,GAPAxH,EAAQ2H,WAAa,QACD/G,IAAhBxB,EAAOqI,MAAsC,OAAhBrI,EAAOqI,KACpCzH,EAAQyH,KAAOrI,EAAOqI,KAGtBzH,EAAQyH,KAAO,QAEO7G,IAAtBxB,EAAOuI,YAAkD,OAAtBvI,EAAOuI,WAAqB,wBAC/CvI,EAAOuI,YADwC,IAC/D,2BAAmC,KAAxBhC,EAAwB,QAC/B3F,EAAQ2H,WAAW/K,KAAKgL,EAAetG,YAAYqE,KAFQ,+BAKnE,OAAO3F,IAGT6H,EAAqB,CAAEC,OAAO,GACvBF,EAAiB,CAC1B7H,OAD0B,SACnBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,OAT2B,IAAvBgB,EAAQf,IAAI3C,QACZ2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQf,KAEP,IAAzBe,EAAQrB,MAAMrC,QACd2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQrB,QAEd,IAAlBqB,EAAQ8H,OACR7H,EAAOE,OAAO,IAAI4H,KAAK/H,EAAQ8H,OAE5B7H,GAEXK,OAb0B,SAanBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6H,GACrB,MAAOrH,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQf,IAAMuB,EAAOwC,QACrB,MACJ,KAAK,EACDhD,EAAQrB,MAAQ6B,EAAOwC,QACvB,MACJ,KAAK,EACDhD,EAAQ8H,MAAQtH,EAAOuH,OACvB,MACJ,QACIvH,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApC0B,SAoCjB9B,GACL,IAAMY,EAAU,kBAAK6H,GAarB,YAZmBjH,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,MACnCe,EAAQf,IAAMgE,EAAgB7D,EAAOH,WAEpB2B,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCqB,EAAQrB,MAAQsE,EAAgB7D,EAAOT,aAEtBiC,IAAjBxB,EAAO0I,OAAwC,OAAjB1I,EAAO0I,MACrC9H,EAAQ8H,MAAQE,QAAQ5I,EAAO0I,OAG/B9H,EAAQ8H,OAAQ,EAEb9H,GAEXoB,OApD0B,SAoDnBpB,GACH,IAAMqB,EAAM,GAMZ,YALgBT,IAAhBZ,EAAQf,MACHoC,EAAIpC,IAAMiE,OAAgCtC,IAAhBZ,EAAQf,IAAoBe,EAAQf,IAAM,IAAIwB,kBAC3DG,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQuE,OAAkCtC,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,kBACjEG,IAAlBZ,EAAQ8H,QAAwBzG,EAAIyG,MAAQ9H,EAAQ8H,OAC7CzG,GAEXC,YA7D0B,SA6DdlC,GACR,IAAMY,EAAU,kBAAK6H,GAmBrB,YAlBmBjH,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,IACnCe,EAAQf,IAAMG,EAAOH,IAGrBe,EAAQf,IAAM,IAAIwB,gBAEDG,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,IAAI8B,gBAEHG,IAAjBxB,EAAO0I,OAAwC,OAAjB1I,EAAO0I,MACrC9H,EAAQ8H,MAAQ1I,EAAO0I,MAGvB9H,EAAQ8H,OAAQ,EAEb9H,IA2pBXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KA6BrBlD,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,6gBCr1IEgG,G,UAAa,CAAEC,eAAgB,EAAGC,eAAgB,IAC3CC,EAAS,CAClBrI,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OAN+B,IAA3BgB,EAAQkI,gBACRjI,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQkI,gBAEL,IAA3BlI,EAAQmI,gBACRlI,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQmI,gBAE9BlI,GAEXK,OAVkB,SAUXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiI,GACrB,MAAOzH,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQkI,eAAiBlH,EAAaR,EAAO6H,UAC7C,MACJ,KAAK,EACDrI,EAAQmI,eAAiBnH,EAAaR,EAAO6H,UAC7C,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BkB,SA8BT9B,GACL,IAAMY,EAAU,kBAAKiI,GAarB,YAZ8BrH,IAA1BxB,EAAO8I,gBAA0D,OAA1B9I,EAAO8I,eAC9ClI,EAAQkI,eAAiB/G,OAAO/B,EAAO8I,gBAGvClI,EAAQkI,eAAiB,OAECtH,IAA1BxB,EAAO+I,gBAA0D,OAA1B/I,EAAO+I,eAC9CnI,EAAQmI,eAAiBhH,OAAO/B,EAAO+I,gBAGvCnI,EAAQmI,eAAiB,EAEtBnI,GAEXoB,OA9CkB,SA8CXpB,GACH,IAAMqB,EAAM,GAKZ,YAJ2BT,IAA3BZ,EAAQkI,iBACH7G,EAAI6G,eAAiBlI,EAAQkI,qBACPtH,IAA3BZ,EAAQmI,iBACH9G,EAAI8G,eAAiBnI,EAAQmI,gBAC3B9G,GAEXC,YAtDkB,SAsDNlC,GACR,IAAMY,EAAU,kBAAKiI,GAarB,YAZ8BrH,IAA1BxB,EAAO8I,gBAA0D,OAA1B9I,EAAO8I,eAC9ClI,EAAQkI,eAAiB9I,EAAO8I,eAGhClI,EAAQkI,eAAiB,OAECtH,IAA1BxB,EAAO+I,gBAA0D,OAA1B/I,EAAO+I,eAC9CnI,EAAQmI,eAAiB/I,EAAO+I,eAGhCnI,EAAQmI,eAAiB,EAEtBnI,IA4DXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,iaC7eEtC,EAAgB,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,EAAY,CACrBC,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANwB,IAApBgB,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAVqB,SAUdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKL,GACrB,MAAOa,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,EAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BqB,SA8BZ9B,GACL,IAAMY,EAAU,kBAAKL,GAarB,YAZuBiB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUuB,OAAO/B,EAAOQ,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQsB,OAAO/B,EAAOS,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXoB,OA9CqB,SA8CdpB,GACH,IAAMqB,EAAM,GAGZ,YAFoBT,IAApBZ,EAAQJ,UAA0ByB,EAAIzB,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwBwB,EAAIxB,MAAQG,EAAQH,OAC7CwB,GAEXC,YApDqB,SAoDTlC,GACR,IAAMY,EAAU,kBAAKL,GAarB,YAZuBiB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUR,EAAOQ,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQT,EAAOS,MAGvBG,EAAQH,MAAQ,EAEbG,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,iiBCyHEqG,EAAqB,CAAEC,gBAAiB,EAAGC,SAAU,GAC9CC,EAAiB,CAC1B1I,OAD0B,SACnBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,OATgC,IAA5BgB,EAAQuI,iBACRtI,EAAOE,OAAO,GAAGC,MAAMJ,EAAQuI,sBAEJ3H,IAA3BZ,EAAQ0I,gBACRC,OAAS5I,OAAOC,EAAQ0I,eAAgBzI,EAAOE,OAAO,IAAIqF,QAAQC,SAE7C,IAArBzF,EAAQwI,UACRvI,EAAOE,OAAO,IAAIC,MAAMJ,EAAQwI,UAE7BvI,GAEXK,OAb0B,SAanBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKsI,GACrB,MAAO9H,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQuI,gBAAkBvH,EAAaR,EAAOJ,SAC9C,MACJ,KAAK,EACDJ,EAAQ0I,eAAiBC,OAASrI,OAAOE,EAAQA,EAAOL,UACxD,MACJ,KAAK,EACDH,EAAQwI,SAAWxH,EAAaR,EAAOJ,SACvC,MACJ,QACII,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApC0B,SAoCjB9B,GACL,IAAMY,EAAU,kBAAKsI,GAoBrB,YAnB+B1H,IAA3BxB,EAAOmJ,iBACoB,OAA3BnJ,EAAOmJ,gBACPvI,EAAQuI,gBAAkBpH,OAAO/B,EAAOmJ,iBAGxCvI,EAAQuI,gBAAkB,OAEA3H,IAA1BxB,EAAOsJ,gBAA0D,OAA1BtJ,EAAOsJ,eAC9C1I,EAAQ0I,eAAiBC,OAASzH,SAAS9B,EAAOsJ,gBAGlD1I,EAAQ0I,oBAAiB9H,OAELA,IAApBxB,EAAOoJ,UAA8C,OAApBpJ,EAAOoJ,SACxCxI,EAAQwI,SAAWrH,OAAO/B,EAAOoJ,UAGjCxI,EAAQwI,SAAW,EAEhBxI,GAEXoB,OA3D0B,SA2DnBpB,GACH,IAAMqB,EAAM,GAQZ,YAP4BT,IAA5BZ,EAAQuI,kBACHlH,EAAIkH,gBAAkBvI,EAAQuI,sBACR3H,IAA3BZ,EAAQ0I,iBACHrH,EAAIqH,eAAiB1I,EAAQ0I,eACxBC,OAASvH,OAAOpB,EAAQ0I,qBACxB9H,QACWA,IAArBZ,EAAQwI,WAA2BnH,EAAImH,SAAWxI,EAAQwI,UACnDnH,GAEXC,YAtE0B,SAsEdlC,GACR,IAAMY,EAAU,kBAAKsI,GAoBrB,YAnB+B1H,IAA3BxB,EAAOmJ,iBACoB,OAA3BnJ,EAAOmJ,gBACPvI,EAAQuI,gBAAkBnJ,EAAOmJ,gBAGjCvI,EAAQuI,gBAAkB,OAEA3H,IAA1BxB,EAAOsJ,gBAA0D,OAA1BtJ,EAAOsJ,eAC9C1I,EAAQ0I,eAAiBC,OAASrH,YAAYlC,EAAOsJ,gBAGrD1I,EAAQ0I,oBAAiB9H,OAELA,IAApBxB,EAAOoJ,UAA8C,OAApBpJ,EAAOoJ,SACxCxI,EAAQwI,SAAWpJ,EAAOoJ,SAG1BxI,EAAQwI,SAAW,EAEhBxI,IAGT4I,EAAsB,CAAEC,YAAa,IAC9BC,EAAkB,CAC3B/I,OAD2B,SACpBC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQ6I,aADc,IACtC,2BAAqC,KAA1BvD,EAA0B,QACjCrF,EAAOE,OAAO,IAAIkC,OAAOiD,IAFS,8BAItC,OAAOrF,GAEXK,OAP2B,SAOpBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4I,GACrB5I,EAAQ6I,YAAc,GACtB,MAAOrI,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6I,YAAYjM,KAAK4D,EAAO6B,UAChC,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAzB2B,SAyBlB9B,GACL,IAAMY,EAAU,kBAAK4I,GAErB,GADA5I,EAAQ6I,YAAc,QACKjI,IAAvBxB,EAAOyJ,aAAoD,OAAvBzJ,EAAOyJ,YAAsB,wBACjDzJ,EAAOyJ,aAD0C,IACjE,2BAAoC,KAAzBlD,EAAyB,QAChC3F,EAAQ6I,YAAYjM,KAAK0F,OAAOqD,KAF6B,+BAKrE,OAAO3F,GAEXoB,OAnC2B,SAmCpBpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQ6I,YACRxH,EAAIwH,YAAc7I,EAAQ6I,YAAYjD,KAAI,SAACD,GAAD,OAAOA,KAGjDtE,EAAIwH,YAAc,GAEfxH,GAEXC,YA7C2B,SA6CflC,GACR,IAAMY,EAAU,kBAAK4I,GAErB,GADA5I,EAAQ6I,YAAc,QACKjI,IAAvBxB,EAAOyJ,aAAoD,OAAvBzJ,EAAOyJ,YAAsB,wBACjDzJ,EAAOyJ,aAD0C,IACjE,2BAAoC,KAAzBlD,EAAyB,QAChC3F,EAAQ6I,YAAYjM,KAAK+I,IAFoC,+BAKrE,OAAO3F,IAGT+I,EAAoB,CAAEC,WAAY,GAC3BC,EAAgB,CACzBlJ,OADyB,SAClBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,OAH2B,IAAvBgB,EAAQgJ,YACR/I,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQgJ,YAE7B/I,GAEXK,OAPyB,SAOlBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK+I,GACrB,MAAOvI,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgJ,WAAahI,EAAaR,EAAO6H,UACzC,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAxByB,SAwBhB9B,GACL,IAAMY,EAAU,kBAAK+I,GAOrB,YAN0BnI,IAAtBxB,EAAO4J,YAAkD,OAAtB5J,EAAO4J,WAC1ChJ,EAAQgJ,WAAa7H,OAAO/B,EAAO4J,YAGnChJ,EAAQgJ,WAAa,EAElBhJ,GAEXoB,OAlCyB,SAkClBpB,GACH,IAAMqB,EAAM,GAEZ,YADuBT,IAAvBZ,EAAQgJ,aAA6B3H,EAAI2H,WAAahJ,EAAQgJ,YACvD3H,GAEXC,YAvCyB,SAuCblC,GACR,IAAMY,EAAU,kBAAK+I,GAOrB,YAN0BnI,IAAtBxB,EAAO4J,YAAkD,OAAtB5J,EAAO4J,WAC1ChJ,EAAQgJ,WAAa5J,EAAO4J,WAG5BhJ,EAAQgJ,WAAa,EAElBhJ,IA0EXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,mZCxfEiH,EAAU,CAAEC,QAAS,IACd5C,EAAM,CACfxG,OADe,SACRC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANwB,KAApBgB,EAAQmJ,SACRlJ,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmJ,SAER,IAAzBnJ,EAAQrB,MAAMrC,QACd2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQrB,OAE7BsB,GAEXK,OAVe,SAURC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkJ,GACrB,MAAO1I,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmJ,QAAU3I,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQrB,MAAQ6B,EAAOwC,QACvB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9Be,SA8BN9B,GACL,IAAMY,EAAU,kBAAKkJ,GAUrB,YATuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU7G,OAAOlD,EAAO+J,SAGhCnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCqB,EAAQrB,MAAQsE,EAAgB7D,EAAOT,QAEpCqB,GAEXoB,OA3Ce,SA2CRpB,GACH,IAAMqB,EAAM,GAIZ,YAHoBT,IAApBZ,EAAQmJ,UAA0B9H,EAAI8H,QAAUnJ,EAAQmJ,cACtCvI,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQuE,OAAkCtC,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aAC5EY,GAEXC,YAlDe,SAkDHlC,GACR,IAAMY,EAAU,kBAAKkJ,GAarB,YAZuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU/J,EAAO+J,QAGzBnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,uHC1FdmE,EA2CAC,E,2YA1CX,SAAWD,GACPA,EAAYA,EAAY,yBAA2B,GAAK,wBACxDA,EAAYA,EAAY,wBAA0B,GAAK,uBACvDA,EAAYA,EAAY,wBAA0B,GAAK,uBACvDA,EAAYA,EAAY,qBAAuB,GAAK,oBACpDA,EAAYA,EAAY,iBAAmB,GAAK,gBALpD,CAMGA,IAAgBA,EAAc,KAqCjC,SAAWC,GACPA,EAAcA,EAAc,2BAA6B,GAAK,0BAE9DA,EAAcA,EAAc,2BAA6B,GAAK,0BAC9DA,EAAcA,EAAc,6BAA+B,GAAK,4BAEhEA,EAAcA,EAAc,4BAA8B,IAAM,2BAChEA,EAAcA,EAAc,iBAAmB,GAAK,eAPxD,CAQGA,IAAkBA,EAAgB,KAmCrC,IAAMC,EAAoB,CAAEC,MAAO,GACtBC,EAAgB,CACzBzJ,OADyB,SAClBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANsB,IAAlBgB,EAAQuJ,OACRtJ,EAAOE,OAAO,GAAGA,OAAOH,EAAQuJ,OAER,IAAxBvJ,EAAQ+C,KAAKzG,QACb2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ+C,MAE7B9C,GAEXK,OAVyB,SAUlBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKsJ,GACrB,MAAO9I,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQuJ,MAAQ/I,EAAOL,SACvB,MACJ,KAAK,EACDH,EAAQ+C,KAAOvC,EAAOwC,QACtB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9ByB,SA8BhB9B,GACL,IAAMY,EAAU,kBAAKsJ,GAUrB,YATqB1I,IAAjBxB,EAAOmK,OAAwC,OAAjBnK,EAAOmK,MACrCvJ,EAAQuJ,MAAQpI,OAAO/B,EAAOmK,OAG9BvJ,EAAQuJ,MAAQ,OAEA3I,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,OACpC/C,EAAQ+C,KAAOE,EAAgB7D,EAAO2D,OAEnC/C,GAEXoB,OA3CyB,SA2ClBpB,GACH,IAAMqB,EAAM,GAIZ,YAHkBT,IAAlBZ,EAAQuJ,QAAwBlI,EAAIkI,MAAQvJ,EAAQuJ,YACnC3I,IAAjBZ,EAAQ+C,OACH1B,EAAI0B,KAAOG,OAAiCtC,IAAjBZ,EAAQ+C,KAAqB/C,EAAQ+C,KAAO,IAAItC,aACzEY,GAEXC,YAlDyB,SAkDblC,GACR,IAAMY,EAAU,kBAAKsJ,GAarB,YAZqB1I,IAAjBxB,EAAOmK,OAAwC,OAAjBnK,EAAOmK,MACrCvJ,EAAQuJ,MAAQnK,EAAOmK,MAGvBvJ,EAAQuJ,MAAQ,OAEA3I,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,KACpC/C,EAAQ+C,KAAO3D,EAAO2D,KAGtB/C,EAAQ+C,KAAO,IAAItC,WAEhBT,IA2FTyJ,EAAc,GACPC,EAAU,CACnB3J,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OAN4B,IAAxBgB,EAAQ+C,KAAKzG,QACb2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ+C,WAENnC,IAA1BZ,EAAQ2J,eACRH,EAAczJ,OAAOC,EAAQ2J,cAAe1J,EAAOE,OAAO,IAAIqF,QAAQC,SAEnExF,GAEXK,OAVmB,SAUZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKyJ,GACrB,MAAOjJ,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+C,KAAOvC,EAAOwC,QACtB,MACJ,KAAK,EACDhD,EAAQ2J,cAAgBH,EAAclJ,OAAOE,EAAQA,EAAOL,UAC5D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BmB,SA8BV9B,GACL,IAAMY,EAAU,kBAAKyJ,GAUrB,YAToB7I,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,OACpC/C,EAAQ+C,KAAOE,EAAgB7D,EAAO2D,YAEbnC,IAAzBxB,EAAOuK,eAAwD,OAAzBvK,EAAOuK,cAC7C3J,EAAQ2J,cAAgBH,EAActI,SAAS9B,EAAOuK,eAGtD3J,EAAQ2J,mBAAgB/I,EAErBZ,GAEXoB,OA3CmB,SA2CZpB,GACH,IAAMqB,EAAM,GAOZ,YANiBT,IAAjBZ,EAAQ+C,OACH1B,EAAI0B,KAAOG,OAAiCtC,IAAjBZ,EAAQ+C,KAAqB/C,EAAQ+C,KAAO,IAAItC,kBACtDG,IAA1BZ,EAAQ2J,gBACHtI,EAAIsI,cAAgB3J,EAAQ2J,cACvBH,EAAcpI,OAAOpB,EAAQ2J,oBAC7B/I,GACHS,GAEXC,YArDmB,SAqDPlC,GACR,IAAMY,EAAU,kBAAKyJ,GAarB,YAZoB7I,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,KACpC/C,EAAQ+C,KAAO3D,EAAO2D,KAGtB/C,EAAQ+C,KAAO,IAAItC,gBAEMG,IAAzBxB,EAAOuK,eAAwD,OAAzBvK,EAAOuK,cAC7C3J,EAAQ2J,cAAgBH,EAAclI,YAAYlC,EAAOuK,eAGzD3J,EAAQ2J,mBAAgB/I,EAErBZ,IAGT4J,EAAa,CAAEC,QAAS,GAAIC,OAAQ,GAC7BC,EAAS,CAClBhK,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SA2C5B,YA1CwB4B,IAApBZ,EAAQgK,SACRC,OAAUlK,OAAOC,EAAQgK,QAAS/J,EAAOE,OAAO,IAAIqF,QAAQC,SAExC,KAApBzF,EAAQ6J,SACR5J,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ6J,SAEd,IAAnB7J,EAAQ8J,QACR7J,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ8J,aAEflJ,IAAjBZ,EAAQoE,MACRtE,OAAUC,OAAOmK,EAAYlK,EAAQoE,MAAOnE,EAAOE,OAAO,IAAIqF,QAAQC,cAE9C7E,IAAxBZ,EAAQmK,aACRT,EAAQ3J,OAAOC,EAAQmK,YAAalK,EAAOE,OAAO,IAAIqF,QAAQC,SAE5B,IAAlCzF,EAAQoK,eAAe9N,QACvB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQoK,gBAEJ,IAA5BpK,EAAQqK,SAAS/N,QACjB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQqK,UAEE,IAAlCrK,EAAQsK,eAAehO,QACvB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQsK,gBAEM,IAAtCtK,EAAQuK,mBAAmBjO,QAC3B2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQuK,oBAEC,IAAjCvK,EAAQwK,cAAclO,QACtB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQwK,eAEL,IAA3BxK,EAAQyK,QAAQnO,QAChB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQyK,SAEG,IAAnCzK,EAAQ0K,gBAAgBpO,QACxB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ0K,iBAEA,IAAhC1K,EAAQ2K,aAAarO,QACrB2D,EAAOE,OAAO,KAAK6C,MAAMhD,EAAQ2K,cAEE,IAAnC3K,EAAQ4K,gBAAgBtO,QACxB2D,EAAOE,OAAO,KAAK6C,MAAMhD,EAAQ4K,iBAE9B3K,GAEXK,OA9CkB,SA8CXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4J,GACrB,MAAOpJ,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgK,QAAUC,OAAU3J,OAAOE,EAAQA,EAAOL,UAClD,MACJ,KAAK,EACDH,EAAQ6J,QAAUrJ,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQ8J,OAAS9I,EAAaR,EAAOJ,SACrC,MACJ,KAAK,EACDJ,EAAQoE,KAAOyG,EAAc/K,OAAUQ,OAAOE,EAAQA,EAAOL,WAC7D,MACJ,KAAK,EACDH,EAAQmK,YAAcT,EAAQpJ,OAAOE,EAAQA,EAAOL,UACpD,MACJ,KAAK,EACDH,EAAQoK,eAAiB5J,EAAOwC,QAChC,MACJ,KAAK,EACDhD,EAAQqK,SAAW7J,EAAOwC,QAC1B,MACJ,KAAK,EACDhD,EAAQsK,eAAiB9J,EAAOwC,QAChC,MACJ,KAAK,EACDhD,EAAQuK,mBAAqB/J,EAAOwC,QACpC,MACJ,KAAK,GACDhD,EAAQwK,cAAgBhK,EAAOwC,QAC/B,MACJ,KAAK,GACDhD,EAAQyK,QAAUjK,EAAOwC,QACzB,MACJ,KAAK,GACDhD,EAAQ0K,gBAAkBlK,EAAOwC,QACjC,MACJ,KAAK,GACDhD,EAAQ2K,aAAenK,EAAOwC,QAC9B,MACJ,KAAK,GACDhD,EAAQ4K,gBAAkBpK,EAAOwC,QACjC,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAtGkB,SAsGT9B,GACL,IAAMY,EAAU,kBAAK4J,GA6DrB,YA5DuBhJ,IAAnBxB,EAAO4K,SAA4C,OAAnB5K,EAAO4K,QACvChK,EAAQgK,QAAUC,OAAU/I,SAAS9B,EAAO4K,SAG5ChK,EAAQgK,aAAUpJ,OAECA,IAAnBxB,EAAOyK,SAA4C,OAAnBzK,EAAOyK,QACvC7J,EAAQ6J,QAAUvH,OAAOlD,EAAOyK,SAGhC7J,EAAQ6J,QAAU,QAEAjJ,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS3I,OAAO/B,EAAO0K,QAG/B9J,EAAQ8J,OAAS,OAEDlJ,IAAhBxB,EAAOgF,MAAsC,OAAhBhF,EAAOgF,KACpCpE,EAAQoE,KAAO0G,EAAkB1L,EAAOgF,MAGxCpE,EAAQoE,UAAOxD,OAEQA,IAAvBxB,EAAO+K,aAAoD,OAAvB/K,EAAO+K,YAC3CnK,EAAQmK,YAAcT,EAAQxI,SAAS9B,EAAO+K,aAG9CnK,EAAQmK,iBAAcvJ,OAEIA,IAA1BxB,EAAOgL,gBAA0D,OAA1BhL,EAAOgL,iBAC9CpK,EAAQoK,eAAiBnH,EAAgB7D,EAAOgL,sBAE5BxJ,IAApBxB,EAAOiL,UAA8C,OAApBjL,EAAOiL,WACxCrK,EAAQqK,SAAWpH,EAAgB7D,EAAOiL,gBAEhBzJ,IAA1BxB,EAAOkL,gBAA0D,OAA1BlL,EAAOkL,iBAC9CtK,EAAQsK,eAAiBrH,EAAgB7D,EAAOkL,sBAElB1J,IAA9BxB,EAAOmL,oBACuB,OAA9BnL,EAAOmL,qBACPvK,EAAQuK,mBAAqBtH,EAAgB7D,EAAOmL,0BAE3B3J,IAAzBxB,EAAOoL,eAAwD,OAAzBpL,EAAOoL,gBAC7CxK,EAAQwK,cAAgBvH,EAAgB7D,EAAOoL,qBAE5B5J,IAAnBxB,EAAOqL,SAA4C,OAAnBrL,EAAOqL,UACvCzK,EAAQyK,QAAUxH,EAAgB7D,EAAOqL,eAEd7J,IAA3BxB,EAAOsL,iBACoB,OAA3BtL,EAAOsL,kBACP1K,EAAQ0K,gBAAkBzH,EAAgB7D,EAAOsL,uBAEzB9J,IAAxBxB,EAAOuL,cAAsD,OAAxBvL,EAAOuL,eAC5C3K,EAAQ2K,aAAe1H,EAAgB7D,EAAOuL,oBAEnB/J,IAA3BxB,EAAOwL,iBACoB,OAA3BxL,EAAOwL,kBACP5K,EAAQ4K,gBAAkB3H,EAAgB7D,EAAOwL,kBAE9C5K,GAEXoB,OAtKkB,SAsKXpB,GACH,IAAMqB,EAAM,GA8CZ,YA7CoBT,IAApBZ,EAAQgK,UACH3I,EAAI2I,QAAUhK,EAAQgK,QACjBC,OAAU7I,OAAOpB,EAAQgK,cACzBpJ,QACUA,IAApBZ,EAAQ6J,UAA0BxI,EAAIwI,QAAU7J,EAAQ6J,cACrCjJ,IAAnBZ,EAAQ8J,SAAyBzI,EAAIyI,OAAS9J,EAAQ8J,aACrClJ,IAAjBZ,EAAQoE,OACH/C,EAAI+C,UACgBxD,IAAjBZ,EAAQoE,KAAqBpE,EAAQoE,KAAK2G,cAAgB,WAC1CnK,IAAxBZ,EAAQmK,cACH9I,EAAI8I,YAAcnK,EAAQmK,YACrBT,EAAQtI,OAAOpB,EAAQmK,kBACvBvJ,QACiBA,IAA3BZ,EAAQoK,iBACH/I,EAAI+I,eAAiBlH,OAA2CtC,IAA3BZ,EAAQoK,eACxCpK,EAAQoK,eACR,IAAI3J,kBACOG,IAArBZ,EAAQqK,WACHhJ,EAAIgJ,SAAWnH,OAAqCtC,IAArBZ,EAAQqK,SAAyBrK,EAAQqK,SAAW,IAAI5J,kBACjEG,IAA3BZ,EAAQsK,iBACHjJ,EAAIiJ,eAAiBpH,OAA2CtC,IAA3BZ,EAAQsK,eACxCtK,EAAQsK,eACR,IAAI7J,kBACiBG,IAA/BZ,EAAQuK,qBACHlJ,EAAIkJ,mBAAqBrH,OAA+CtC,IAA/BZ,EAAQuK,mBAC5CvK,EAAQuK,mBACR,IAAI9J,kBACYG,IAA1BZ,EAAQwK,gBACHnJ,EAAImJ,cAAgBtH,OAA0CtC,IAA1BZ,EAAQwK,cACvCxK,EAAQwK,cACR,IAAI/J,kBACMG,IAApBZ,EAAQyK,UACHpJ,EAAIoJ,QAAUvH,OAAoCtC,IAApBZ,EAAQyK,QAAwBzK,EAAQyK,QAAU,IAAIhK,kBAC7DG,IAA5BZ,EAAQ0K,kBACHrJ,EAAIqJ,gBAAkBxH,OAA4CtC,IAA5BZ,EAAQ0K,gBACzC1K,EAAQ0K,gBACR,IAAIjK,kBACWG,IAAzBZ,EAAQ2K,eACHtJ,EAAIsJ,aAAezH,OAAyCtC,IAAzBZ,EAAQ2K,aACtC3K,EAAQ2K,aACR,IAAIlK,kBACcG,IAA5BZ,EAAQ4K,kBACHvJ,EAAIuJ,gBAAkB1H,OAA4CtC,IAA5BZ,EAAQ4K,gBACzC5K,EAAQ4K,gBACR,IAAInK,aACPY,GAEXC,YAvNkB,SAuNNlC,GACR,IAAMY,EAAU,kBAAK4J,GAwFrB,YAvFuBhJ,IAAnBxB,EAAO4K,SAA4C,OAAnB5K,EAAO4K,QACvChK,EAAQgK,QAAUC,OAAU3I,YAAYlC,EAAO4K,SAG/ChK,EAAQgK,aAAUpJ,OAECA,IAAnBxB,EAAOyK,SAA4C,OAAnBzK,EAAOyK,QACvC7J,EAAQ6J,QAAUzK,EAAOyK,QAGzB7J,EAAQ6J,QAAU,QAEAjJ,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS1K,EAAO0K,OAGxB9J,EAAQ8J,OAAS,OAEDlJ,IAAhBxB,EAAOgF,MAAsC,OAAhBhF,EAAOgF,KACpCpE,EAAQoE,KAAOhF,EAAOgF,KAGtBpE,EAAQoE,UAAOxD,OAEQA,IAAvBxB,EAAO+K,aAAoD,OAAvB/K,EAAO+K,YAC3CnK,EAAQmK,YAAcT,EAAQpI,YAAYlC,EAAO+K,aAGjDnK,EAAQmK,iBAAcvJ,OAEIA,IAA1BxB,EAAOgL,gBAA0D,OAA1BhL,EAAOgL,eAC9CpK,EAAQoK,eAAiBhL,EAAOgL,eAGhCpK,EAAQoK,eAAiB,IAAI3J,gBAETG,IAApBxB,EAAOiL,UAA8C,OAApBjL,EAAOiL,SACxCrK,EAAQqK,SAAWjL,EAAOiL,SAG1BrK,EAAQqK,SAAW,IAAI5J,gBAEGG,IAA1BxB,EAAOkL,gBAA0D,OAA1BlL,EAAOkL,eAC9CtK,EAAQsK,eAAiBlL,EAAOkL,eAGhCtK,EAAQsK,eAAiB,IAAI7J,gBAECG,IAA9BxB,EAAOmL,oBACuB,OAA9BnL,EAAOmL,mBACPvK,EAAQuK,mBAAqBnL,EAAOmL,mBAGpCvK,EAAQuK,mBAAqB,IAAI9J,gBAERG,IAAzBxB,EAAOoL,eAAwD,OAAzBpL,EAAOoL,cAC7CxK,EAAQwK,cAAgBpL,EAAOoL,cAG/BxK,EAAQwK,cAAgB,IAAI/J,gBAETG,IAAnBxB,EAAOqL,SAA4C,OAAnBrL,EAAOqL,QACvCzK,EAAQyK,QAAUrL,EAAOqL,QAGzBzK,EAAQyK,QAAU,IAAIhK,gBAEKG,IAA3BxB,EAAOsL,iBACoB,OAA3BtL,EAAOsL,gBACP1K,EAAQ0K,gBAAkBtL,EAAOsL,gBAGjC1K,EAAQ0K,gBAAkB,IAAIjK,gBAENG,IAAxBxB,EAAOuL,cAAsD,OAAxBvL,EAAOuL,aAC5C3K,EAAQ2K,aAAevL,EAAOuL,aAG9B3K,EAAQ2K,aAAe,IAAIlK,gBAEAG,IAA3BxB,EAAOwL,iBACoB,OAA3BxL,EAAOwL,gBACP5K,EAAQ4K,gBAAkBxL,EAAOwL,gBAGjC5K,EAAQ4K,gBAAkB,IAAInK,WAE3BT,IAs+BXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAEzB,SAASiF,EAAYc,GACjB,IAAMpL,EAAUoL,EAAKC,UAAY,IAC3BpL,EAASmL,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAErL,UAASC,SAEtB,SAASgL,EAAcjM,GACnB,IAAIsM,EAAqB,IAAZtM,EAAEgB,QAEf,OADAsL,GAAUtM,EAAEiB,MAAQ,IACb,IAAIsL,KAAKD,GAEpB,SAASJ,EAAkB1M,GACvB,OAAIA,aAAa+M,KACN/M,EAEW,kBAANA,EACL,IAAI+M,KAAK/M,GAGTyM,EAAc/K,OAAUoB,SAAS9C,IAGhD,SAAS4C,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,qZClpDEiH,EAAU,CAAEC,QAAS,IACd5C,EAAM,CACfxG,OADe,SACRC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANwB,KAApBgB,EAAQmJ,SACRlJ,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmJ,SAER,IAAzBnJ,EAAQrB,MAAMrC,QACd2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQrB,OAE7BsB,GAEXK,OAVe,SAURC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkJ,GACrB,MAAO1I,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmJ,QAAU3I,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQrB,MAAQ6B,EAAOwC,QACvB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9Be,SA8BN9B,GACL,IAAMY,EAAU,kBAAKkJ,GAUrB,YATuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU7G,OAAOlD,EAAO+J,SAGhCnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCqB,EAAQrB,MAAQsE,EAAgB7D,EAAOT,QAEpCqB,GAEXoB,OA3Ce,SA2CRpB,GACH,IAAMqB,EAAM,GAIZ,YAHoBT,IAApBZ,EAAQmJ,UAA0B9H,EAAI8H,QAAUnJ,EAAQmJ,cACtCvI,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQuE,OAAkCtC,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aAC5EY,GAEXC,YAlDe,SAkDHlC,GACR,IAAMY,EAAU,kBAAKkJ,GAarB,YAZuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU/J,EAAO+J,QAGzBnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,2aC9FnBmG,EAAmB,CAAEtB,OAAQ,EAAGuB,MAAO,EAAGC,iBAAkB,IACrDC,EAAe,CACxBxL,OADwB,SACjBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,OAZuB,IAAnBgB,EAAQ8J,QACR7J,EAAOE,OAAO,GAAGC,MAAMJ,EAAQ8J,aAEdlJ,IAAjBZ,EAAQoE,MACRtE,OAAUC,OAAOmK,EAAYlK,EAAQoE,MAAOnE,EAAOE,OAAO,IAAIqF,QAAQC,SAEpD,IAAlBzF,EAAQqL,OACRpL,EAAOE,OAAO,IAAIC,MAAMJ,EAAQqL,OAEH,KAA7BrL,EAAQsL,kBACRrL,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsL,kBAE9BrL,GAEXK,OAhBwB,SAgBjBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKoL,GACrB,MAAO5K,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8J,OAAS9I,EAAaR,EAAOJ,SACrC,MACJ,KAAK,EACDJ,EAAQoE,KAAOyG,EAAc/K,OAAUQ,OAAOE,EAAQA,EAAOL,WAC7D,MACJ,KAAK,EACDH,EAAQqL,MAAQrK,EAAaR,EAAOJ,SACpC,MACJ,KAAK,EACDJ,EAAQsL,iBAAmB9K,EAAO6B,SAClC,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1CwB,SA0Cf9B,GACL,IAAMY,EAAU,kBAAKoL,GA0BrB,YAzBsBxK,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS3I,OAAO/B,EAAO0K,QAG/B9J,EAAQ8J,OAAS,OAEDlJ,IAAhBxB,EAAOgF,MAAsC,OAAhBhF,EAAOgF,KACpCpE,EAAQoE,KAAO0G,EAAkB1L,EAAOgF,MAGxCpE,EAAQoE,UAAOxD,OAEEA,IAAjBxB,EAAOiM,OAAwC,OAAjBjM,EAAOiM,MACrCrL,EAAQqL,MAAQlK,OAAO/B,EAAOiM,OAG9BrL,EAAQqL,MAAQ,OAEYzK,IAA5BxB,EAAOkM,kBACqB,OAA5BlM,EAAOkM,iBACPtL,EAAQsL,iBAAmBhJ,OAAOlD,EAAOkM,kBAGzCtL,EAAQsL,iBAAmB,GAExBtL,GAEXoB,OAvEwB,SAuEjBpB,GACH,IAAMqB,EAAM,GAQZ,YAPmBT,IAAnBZ,EAAQ8J,SAAyBzI,EAAIyI,OAAS9J,EAAQ8J,aACrClJ,IAAjBZ,EAAQoE,OACH/C,EAAI+C,UACgBxD,IAAjBZ,EAAQoE,KAAqBpE,EAAQoE,KAAK2G,cAAgB,WAChDnK,IAAlBZ,EAAQqL,QAAwBhK,EAAIgK,MAAQrL,EAAQqL,YACvBzK,IAA7BZ,EAAQsL,mBACHjK,EAAIiK,iBAAmBtL,EAAQsL,kBAC7BjK,GAEXC,YAlFwB,SAkFZlC,GACR,IAAMY,EAAU,kBAAKoL,GA0BrB,YAzBsBxK,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS1K,EAAO0K,OAGxB9J,EAAQ8J,OAAS,OAEDlJ,IAAhBxB,EAAOgF,MAAsC,OAAhBhF,EAAOgF,KACpCpE,EAAQoE,KAAOhF,EAAOgF,KAGtBpE,EAAQoE,UAAOxD,OAEEA,IAAjBxB,EAAOiM,OAAwC,OAAjBjM,EAAOiM,MACrCrL,EAAQqL,MAAQjM,EAAOiM,MAGvBrL,EAAQqL,MAAQ,OAEYzK,IAA5BxB,EAAOkM,kBACqB,OAA5BlM,EAAOkM,iBACPtL,EAAQsL,iBAAmBlM,EAAOkM,iBAGlCtL,EAAQsL,iBAAmB,GAExBtL,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAASyI,EAAYc,GACjB,IAAMpL,EAAUoL,EAAKC,UAAY,IAC3BpL,EAASmL,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAErL,UAASC,SAEtB,SAASgL,EAAcjM,GACnB,IAAIsM,EAAqB,IAAZtM,EAAEgB,QAEf,OADAsL,GAAUtM,EAAEiB,MAAQ,IACb,IAAIsL,KAAKD,GAEpB,SAASJ,EAAkB1M,GACvB,OAAIA,aAAa+M,KACN/M,EAEW,kBAANA,EACL,IAAI+M,KAAK/M,GAGTyM,EAAc/K,OAAUoB,SAAS9C,IAGhD,SAAS4C,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,mdC+LEgG,G,UAAa,CAAEC,eAAgB,EAAGC,eAAgB,IAC3CC,EAAS,CAClBrI,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OAN+B,IAA3BgB,EAAQkI,gBACRjI,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQkI,gBAEL,IAA3BlI,EAAQmI,gBACRlI,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQmI,gBAE9BlI,GAEXK,OAVkB,SAUXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiI,GACrB,MAAOzH,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQkI,eAAiBlH,EAAaR,EAAO6H,UAC7C,MACJ,KAAK,EACDrI,EAAQmI,eAAiBnH,EAAaR,EAAO6H,UAC7C,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BkB,SA8BT9B,GACL,IAAMY,EAAU,kBAAKiI,GAarB,YAZ8BrH,IAA1BxB,EAAO8I,gBAA0D,OAA1B9I,EAAO8I,eAC9ClI,EAAQkI,eAAiB/G,OAAO/B,EAAO8I,gBAGvClI,EAAQkI,eAAiB,OAECtH,IAA1BxB,EAAO+I,gBAA0D,OAA1B/I,EAAO+I,eAC9CnI,EAAQmI,eAAiBhH,OAAO/B,EAAO+I,gBAGvCnI,EAAQmI,eAAiB,EAEtBnI,GAEXoB,OA9CkB,SA8CXpB,GACH,IAAMqB,EAAM,GAKZ,YAJ2BT,IAA3BZ,EAAQkI,iBACH7G,EAAI6G,eAAiBlI,EAAQkI,qBACPtH,IAA3BZ,EAAQmI,iBACH9G,EAAI8G,eAAiBnI,EAAQmI,gBAC3B9G,GAEXC,YAtDkB,SAsDNlC,GACR,IAAMY,EAAU,kBAAKiI,GAarB,YAZ8BrH,IAA1BxB,EAAO8I,gBAA0D,OAA1B9I,EAAO8I,eAC9ClI,EAAQkI,eAAiB9I,EAAO8I,eAGhClI,EAAQkI,eAAiB,OAECtH,IAA1BxB,EAAO+I,gBAA0D,OAA1B/I,EAAO+I,eAC9CnI,EAAQmI,eAAiB/I,EAAO+I,eAGhCnI,EAAQmI,eAAiB,EAEtBnI,IA4DXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,mbC7eEuJ,EAAe,CAAE5L,QAAS,EAAGC,MAAO,GAC7B8I,EAAW,CACpB5I,OADoB,SACbC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANwB,IAApBgB,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAVoB,SAUbC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKwL,GACrB,MAAOhL,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,EAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BoB,SA8BX9B,GACL,IAAMY,EAAU,kBAAKwL,GAarB,YAZuB5K,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUuB,OAAO/B,EAAOQ,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQsB,OAAO/B,EAAOS,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXoB,OA9CoB,SA8CbpB,GACH,IAAMqB,EAAM,GAGZ,YAFoBT,IAApBZ,EAAQJ,UAA0ByB,EAAIzB,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwBwB,EAAIxB,MAAQG,EAAQH,OAC7CwB,GAEXC,YApDoB,SAoDRlC,GACR,IAAMY,EAAU,kBAAKwL,GAarB,YAZuB5K,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUR,EAAOQ,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQT,EAAOS,MAGvBG,EAAQH,MAAQ,EAEbG,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,wnBCvFEwJ,EAAyB,CAAEC,QAAS,GAC7BC,EAAqB,CAC9B5L,OAD8B,SACvBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,cACA4B,IAAxBZ,EAAQ4L,aACRC,OAAY9L,OAAOC,EAAQ4L,YAAa3L,EAAOE,OAAO,IAAIqF,QAAQC,SAFhC,uBAItBzF,EAAQ8L,iBAJc,IAItC,2BAAyC,KAA9BxG,EAA8B,QACrCyG,OAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALP,qDAOtBzF,EAAQgM,eAPc,IAOtC,2BAAuC,KAA5B1G,EAA4B,QACnCyG,OAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UARP,qDAUtBzF,EAAQiM,kBAVc,IAUtC,2BAA0C,KAA/B3G,EAA+B,QACtCyG,OAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAXP,8BAgBtC,OAHwB,IAApBzF,EAAQ0L,SACRzL,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ0L,SAE7BzL,GAEXK,OAnB8B,SAmBvBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKyL,GACrBzL,EAAQ8L,gBAAkB,GAC1B9L,EAAQgM,cAAgB,GACxBhM,EAAQiM,iBAAmB,GAC3B,MAAOzL,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4L,YAAcC,OAAYvL,OAAOE,EAAQA,EAAOL,UACxD,MACJ,KAAK,EACDH,EAAQ8L,gBAAgBlP,KAAKmP,OAAKzL,OAAOE,EAAQA,EAAOL,WACxD,MACJ,KAAK,EACDH,EAAQgM,cAAcpP,KAAKmP,OAAKzL,OAAOE,EAAQA,EAAOL,WACtD,MACJ,KAAK,EACDH,EAAQiM,iBAAiBrP,KAAKmP,OAAKzL,OAAOE,EAAQA,EAAOL,WACzD,MACJ,KAAK,EACDH,EAAQ0L,QAAU1K,EAAaR,EAAOJ,SACtC,MACJ,QACII,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAnD8B,SAmDrB9B,GACL,IAAMY,EAAU,kBAAKyL,GAUrB,GATAzL,EAAQ8L,gBAAkB,GAC1B9L,EAAQgM,cAAgB,GACxBhM,EAAQiM,iBAAmB,QACArL,IAAvBxB,EAAOwM,aAAoD,OAAvBxM,EAAOwM,YAC3C5L,EAAQ4L,YAAcC,OAAY3K,SAAS9B,EAAOwM,aAGlD5L,EAAQ4L,iBAAchL,OAEKA,IAA3BxB,EAAO0M,iBACoB,OAA3B1M,EAAO0M,gBAA0B,wBACjB1M,EAAO0M,iBADU,IACjC,2BAAwC,KAA7BnG,EAA6B,QACpC3F,EAAQ8L,gBAAgBlP,KAAKmP,OAAK7K,SAASyE,KAFd,+BAKrC,QAA6B/E,IAAzBxB,EAAO4M,eAAwD,OAAzB5M,EAAO4M,cAAwB,wBACrD5M,EAAO4M,eAD8C,IACrE,2BAAsC,KAA3BrG,EAA2B,QAClC3F,EAAQgM,cAAcpP,KAAKmP,OAAK7K,SAASyE,KAFwB,+BAKzE,QAAgC/E,IAA5BxB,EAAO6M,kBACqB,OAA5B7M,EAAO6M,iBAA2B,wBAClB7M,EAAO6M,kBADW,IAClC,2BAAyC,KAA9BtG,EAA8B,QACrC3F,EAAQiM,iBAAiBrP,KAAKmP,OAAK7K,SAASyE,KAFd,+BAWtC,YANuB/E,IAAnBxB,EAAOsM,SAA4C,OAAnBtM,EAAOsM,QACvC1L,EAAQ0L,QAAUvK,OAAO/B,EAAOsM,SAGhC1L,EAAQ0L,QAAU,EAEf1L,GAEXoB,OAvF8B,SAuFvBpB,GACH,IAAMqB,EAAM,GAwBZ,YAvBwBT,IAAxBZ,EAAQ4L,cACHvK,EAAIuK,YAAc5L,EAAQ4L,YACrBC,OAAYzK,OAAOpB,EAAQ4L,kBAC3BhL,GACNZ,EAAQ8L,gBACRzK,EAAIyK,gBAAkB9L,EAAQ8L,gBAAgBlG,KAAI,SAACD,GAAD,OAAOA,EAAIoG,OAAK3K,OAAOuE,QAAK/E,KAG9ES,EAAIyK,gBAAkB,GAEtB9L,EAAQgM,cACR3K,EAAI2K,cAAgBhM,EAAQgM,cAAcpG,KAAI,SAACD,GAAD,OAAOA,EAAIoG,OAAK3K,OAAOuE,QAAK/E,KAG1ES,EAAI2K,cAAgB,GAEpBhM,EAAQiM,iBACR5K,EAAI4K,iBAAmBjM,EAAQiM,iBAAiBrG,KAAI,SAACD,GAAD,OAAOA,EAAIoG,OAAK3K,OAAOuE,QAAK/E,KAGhFS,EAAI4K,iBAAmB,QAEPrL,IAApBZ,EAAQ0L,UAA0BrK,EAAIqK,QAAU1L,EAAQ0L,SACjDrK,GAEXC,YAlH8B,SAkHlBlC,GACR,IAAMY,EAAU,kBAAKyL,GAUrB,GATAzL,EAAQ8L,gBAAkB,GAC1B9L,EAAQgM,cAAgB,GACxBhM,EAAQiM,iBAAmB,QACArL,IAAvBxB,EAAOwM,aAAoD,OAAvBxM,EAAOwM,YAC3C5L,EAAQ4L,YAAcC,OAAYvK,YAAYlC,EAAOwM,aAGrD5L,EAAQ4L,iBAAchL,OAEKA,IAA3BxB,EAAO0M,iBACoB,OAA3B1M,EAAO0M,gBAA0B,wBACjB1M,EAAO0M,iBADU,IACjC,2BAAwC,KAA7BnG,EAA6B,QACpC3F,EAAQ8L,gBAAgBlP,KAAKmP,OAAKzK,YAAYqE,KAFjB,+BAKrC,QAA6B/E,IAAzBxB,EAAO4M,eAAwD,OAAzB5M,EAAO4M,cAAwB,wBACrD5M,EAAO4M,eAD8C,IACrE,2BAAsC,KAA3BrG,EAA2B,QAClC3F,EAAQgM,cAAcpP,KAAKmP,OAAKzK,YAAYqE,KAFqB,+BAKzE,QAAgC/E,IAA5BxB,EAAO6M,kBACqB,OAA5B7M,EAAO6M,iBAA2B,wBAClB7M,EAAO6M,kBADW,IAClC,2BAAyC,KAA9BtG,EAA8B,QACrC3F,EAAQiM,iBAAiBrP,KAAKmP,OAAKzK,YAAYqE,KAFjB,+BAWtC,YANuB/E,IAAnBxB,EAAOsM,SAA4C,OAAnBtM,EAAOsM,QACvC1L,EAAQ0L,QAAUtM,EAAOsM,QAGzB1L,EAAQ0L,QAAU,EAEf1L,IAGTkM,EAA+B,CAAEC,UAAW,GACrCC,EAA2B,CACpCrM,OADoC,SAC7BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,YANmC4B,IAA/BZ,EAAQqM,oBACRV,EAAmB5L,OAAOC,EAAQqM,mBAAoBpM,EAAOE,OAAO,IAAIqF,QAAQC,SAE1D,IAAtBzF,EAAQmM,WACRlM,EAAOE,OAAO,IAAIC,MAAMJ,EAAQmM,WAE7BlM,GAEXK,OAVoC,SAU7BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTkM,GAEP,MAAO1L,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqM,mBAAqBV,EAAmBrL,OAAOE,EAAQA,EAAOL,UACtE,MACJ,KAAK,EACDH,EAAQmM,UAAYnL,EAAaR,EAAOJ,SACxC,MACJ,QACII,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhCoC,SAgC3B9B,GACL,IAAMY,EAAU,kBACTkM,GAeP,YAbkCtL,IAA9BxB,EAAOiN,oBACuB,OAA9BjN,EAAOiN,mBACPrM,EAAQqM,mBAAqBV,EAAmBzK,SAAS9B,EAAOiN,oBAGhErM,EAAQqM,wBAAqBzL,OAERA,IAArBxB,EAAO+M,WAAgD,OAArB/M,EAAO+M,UACzCnM,EAAQmM,UAAYhL,OAAO/B,EAAO+M,WAGlCnM,EAAQmM,UAAY,EAEjBnM,GAEXoB,OAnDoC,SAmD7BpB,GACH,IAAMqB,EAAM,GAMZ,YAL+BT,IAA/BZ,EAAQqM,qBACHhL,EAAIgL,mBAAqBrM,EAAQqM,mBAC5BV,EAAmBvK,OAAOpB,EAAQqM,yBAClCzL,QACYA,IAAtBZ,EAAQmM,YAA4B9K,EAAI8K,UAAYnM,EAAQmM,WACrD9K,GAEXC,YA5DoC,SA4DxBlC,GACR,IAAMY,EAAU,kBACTkM,GAeP,YAbkCtL,IAA9BxB,EAAOiN,oBACuB,OAA9BjN,EAAOiN,mBACPrM,EAAQqM,mBAAqBV,EAAmBrK,YAAYlC,EAAOiN,oBAGnErM,EAAQqM,wBAAqBzL,OAERA,IAArBxB,EAAO+M,WAAgD,OAArB/M,EAAO+M,UACzCnM,EAAQmM,UAAY/M,EAAO+M,UAG3BnM,EAAQmM,UAAY,EAEjBnM,IAGTsM,EAA4B,GACrBC,EAAwB,CACjCxM,OADiC,SAC1BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,YAHmC4B,IAA/BZ,EAAQqM,oBACRV,EAAmB5L,OAAOC,EAAQqM,mBAAoBpM,EAAOE,OAAO,IAAIqF,QAAQC,SAE7ExF,GAEXK,OAPiC,SAO1BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKsM,GACrB,MAAO9L,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqM,mBAAqBV,EAAmBrL,OAAOE,EAAQA,EAAOL,UACtE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAxBiC,SAwBxB9B,GACL,IAAMY,EAAU,kBAAKsM,GAQrB,YAPkC1L,IAA9BxB,EAAOiN,oBACuB,OAA9BjN,EAAOiN,mBACPrM,EAAQqM,mBAAqBV,EAAmBzK,SAAS9B,EAAOiN,oBAGhErM,EAAQqM,wBAAqBzL,EAE1BZ,GAEXoB,OAnCiC,SAmC1BpB,GACH,IAAMqB,EAAM,GAKZ,YAJ+BT,IAA/BZ,EAAQqM,qBACHhL,EAAIgL,mBAAqBrM,EAAQqM,mBAC5BV,EAAmBvK,OAAOpB,EAAQqM,yBAClCzL,GACHS,GAEXC,YA3CiC,SA2CrBlC,GACR,IAAMY,EAAU,kBAAKsM,GAQrB,YAPkC1L,IAA9BxB,EAAOiN,oBACuB,OAA9BjN,EAAOiN,mBACPrM,EAAQqM,mBAAqBV,EAAmBrK,YAAYlC,EAAOiN,oBAGnErM,EAAQqM,wBAAqBzL,EAE1BZ,IAGTwM,EAAa,CAAElQ,OAAQ,GAChBmQ,EAAS,CAClB1M,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACL,IAAnBgB,EAAQ1D,QACR2D,EAAOE,OAAO,GAAGC,MAAMJ,EAAQ1D,QAFG,uBAItB0D,EAAQ0M,QAJc,IAItC,2BAAgC,KAArBpH,EAAqB,QAC5ByG,OAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALP,8BAOtC,OAAOxF,GAEXK,OAVkB,SAUXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKwM,GACrBxM,EAAQ0M,OAAS,GACjB,MAAOlM,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ1D,OAAS0E,EAAaR,EAAOJ,SACrC,MACJ,KAAK,EACDJ,EAAQ0M,OAAO9P,KAAKmP,OAAKzL,OAAOE,EAAQA,EAAOL,WAC/C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/BkB,SA+BT9B,GACL,IAAMY,EAAU,kBAAKwM,GAQrB,GAPAxM,EAAQ0M,OAAS,QACK9L,IAAlBxB,EAAO9C,QAA0C,OAAlB8C,EAAO9C,OACtC0D,EAAQ1D,OAAS6E,OAAO/B,EAAO9C,QAG/B0D,EAAQ1D,OAAS,OAECsE,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,wBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,OAAK7K,SAASyE,KAFiB,+BAK3D,OAAO3F,GAEXoB,OA/CkB,SA+CXpB,GACH,IAAMqB,EAAM,GAQZ,YAPmBT,IAAnBZ,EAAQ1D,SAAyB+E,EAAI/E,OAAS0D,EAAQ1D,QAClD0D,EAAQ0M,OACRrL,EAAIqL,OAAS1M,EAAQ0M,OAAO9G,KAAI,SAACD,GAAD,OAAQA,EAAIoG,OAAK3K,OAAOuE,QAAK/E,KAG7DS,EAAIqL,OAAS,GAEVrL,GAEXC,YA1DkB,SA0DNlC,GACR,IAAMY,EAAU,kBAAKwM,GAQrB,GAPAxM,EAAQ0M,OAAS,QACK9L,IAAlBxB,EAAO9C,QAA0C,OAAlB8C,EAAO9C,OACtC0D,EAAQ1D,OAAS8C,EAAO9C,OAGxB0D,EAAQ1D,OAAS,OAECsE,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,wBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,OAAKzK,YAAYqE,KAFc,+BAK3D,OAAO3F,IAGT2M,EAA6B,CAAER,UAAW,GACnCS,EAAyB,CAClC7M,OADkC,SAC3BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,cACO4B,IAA/BZ,EAAQqM,oBACRV,EAAmB5L,OAAOC,EAAQqM,mBAAoBpM,EAAOE,OAAO,IAAIqF,QAAQC,SAE1D,IAAtBzF,EAAQmM,WACRlM,EAAOE,OAAO,IAAIC,MAAMJ,EAAQmM,WALE,uBAOtBnM,EAAQ6M,gBAPc,IAOtC,2BAAwC,KAA7BvH,EAA6B,QACpCmH,EAAO1M,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UART,8BAUtC,OAAOxF,GAEXK,OAbkC,SAa3BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK2M,GACrB3M,EAAQ6M,eAAiB,GACzB,MAAOrM,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqM,mBAAqBV,EAAmBrL,OAAOE,EAAQA,EAAOL,UACtE,MACJ,KAAK,EACDH,EAAQmM,UAAYnL,EAAaR,EAAOJ,SACxC,MACJ,KAAK,EACDJ,EAAQ6M,eAAejQ,KAAK6P,EAAOnM,OAAOE,EAAQA,EAAOL,WACzD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SArCkC,SAqCzB9B,GACL,IAAMY,EAAU,kBAAK2M,GAerB,GAdA3M,EAAQ6M,eAAiB,QACSjM,IAA9BxB,EAAOiN,oBACuB,OAA9BjN,EAAOiN,mBACPrM,EAAQqM,mBAAqBV,EAAmBzK,SAAS9B,EAAOiN,oBAGhErM,EAAQqM,wBAAqBzL,OAERA,IAArBxB,EAAO+M,WAAgD,OAArB/M,EAAO+M,UACzCnM,EAAQmM,UAAYhL,OAAO/B,EAAO+M,WAGlCnM,EAAQmM,UAAY,OAEMvL,IAA1BxB,EAAOyN,gBAA0D,OAA1BzN,EAAOyN,eAAyB,wBACvDzN,EAAOyN,gBADgD,IACvE,2BAAuC,KAA5BlH,EAA4B,QACnC3F,EAAQ6M,eAAejQ,KAAK6P,EAAOvL,SAASyE,KAFuB,+BAK3E,OAAO3F,GAEXoB,OA5DkC,SA4D3BpB,GACH,IAAMqB,EAAM,GAYZ,YAX+BT,IAA/BZ,EAAQqM,qBACHhL,EAAIgL,mBAAqBrM,EAAQqM,mBAC5BV,EAAmBvK,OAAOpB,EAAQqM,yBAClCzL,QACYA,IAAtBZ,EAAQmM,YAA4B9K,EAAI8K,UAAYnM,EAAQmM,WACxDnM,EAAQ6M,eACRxL,EAAIwL,eAAiB7M,EAAQ6M,eAAejH,KAAI,SAACD,GAAD,OAAOA,EAAI8G,EAAOrL,OAAOuE,QAAK/E,KAG9ES,EAAIwL,eAAiB,GAElBxL,GAEXC,YA3EkC,SA2EtBlC,GACR,IAAMY,EAAU,kBAAK2M,GAerB,GAdA3M,EAAQ6M,eAAiB,QACSjM,IAA9BxB,EAAOiN,oBACuB,OAA9BjN,EAAOiN,mBACPrM,EAAQqM,mBAAqBV,EAAmBrK,YAAYlC,EAAOiN,oBAGnErM,EAAQqM,wBAAqBzL,OAERA,IAArBxB,EAAO+M,WAAgD,OAArB/M,EAAO+M,UACzCnM,EAAQmM,UAAY/M,EAAO+M,UAG3BnM,EAAQmM,UAAY,OAEMvL,IAA1BxB,EAAOyN,gBAA0D,OAA1BzN,EAAOyN,eAAyB,wBACvDzN,EAAOyN,gBADgD,IACvE,2BAAuC,KAA5BlH,EAA4B,QACnC3F,EAAQ6M,eAAejQ,KAAK6P,EAAOnL,YAAYqE,KAFoB,+BAK3E,OAAO3F,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,qoBCteEY,EAA8B,GACvBC,EAA0B,CACnC/C,OADmC,SAC5BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,OAH4B,IAAxBgB,EAAQ+C,KAAKzG,QACb2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ+C,MAE7B9C,GAEXK,OAPmC,SAO5BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6C,GACrB,MAAOrC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+C,KAAOvC,EAAOwC,QACtB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAxBmC,SAwB1B9B,GACL,IAAMY,EAAU,kBAAK6C,GAIrB,YAHoBjC,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,OACpC/C,EAAQ+C,KAAOE,EAAgB7D,EAAO2D,OAEnC/C,GAEXoB,OA/BmC,SA+B5BpB,GACH,IAAMqB,EAAM,GAEZ,YADiBT,IAAjBZ,EAAQ+C,OAAuB1B,EAAI0B,KAAOG,OAAiCtC,IAAjBZ,EAAQ+C,KAAqB/C,EAAQ+C,KAAO,IAAItC,aACnGY,GAEXC,YApCmC,SAoCvBlC,GACR,IAAMY,EAAU,kBAAK6C,GAOrB,YANoBjC,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,KACpC/C,EAAQ+C,KAAO3D,EAAO2D,KAGtB/C,EAAQ+C,KAAO,IAAItC,WAEhBT,IAGT8M,EAAgB,CAAE5I,KAAM,GAAIC,QAAS,GAAItF,KAAM,GAAIuF,KAAM,EAAGC,YAAa,GAAIP,IAAK,GAAIC,KAAM,IACrFgJ,EAAY,CACrBhN,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAsB5B,MArBqB,KAAjBgB,EAAQkE,MACRjE,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQkE,MAEb,KAApBlE,EAAQmE,SACRlE,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmE,SAEhB,KAAjBnE,EAAQnB,MACRoB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQnB,MAEhB,IAAjBmB,EAAQoE,MACRnE,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQoE,MAET,KAAxBpE,EAAQqE,aACRpE,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQqE,aAEjB,KAAhBrE,EAAQ8D,KACR7D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ8D,KAEhB,KAAjB9D,EAAQ+D,MACR9D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+D,MAE9B9D,GAEXK,OAzBqB,SAyBdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK8M,GACrB,MAAOtM,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQkE,KAAO1D,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQmE,QAAU3D,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQnB,KAAO2B,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQoE,KAAOpD,EAAaR,EAAO6H,UACnC,MACJ,KAAK,EACDrI,EAAQqE,YAAc7D,EAAO6B,SAC7B,MACJ,KAAK,EACDrC,EAAQ8D,IAAMtD,EAAO6B,SACrB,MACJ,KAAK,EACDrC,EAAQ+D,KAAOvD,EAAO6B,SACtB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA5DqB,SA4DZ9B,GACL,IAAMY,EAAU,kBAAK8M,GA2CrB,YA1CoBlM,IAAhBxB,EAAO8E,MAAsC,OAAhB9E,EAAO8E,KACpClE,EAAQkE,KAAO5B,OAAOlD,EAAO8E,MAG7BlE,EAAQkE,KAAO,QAEItD,IAAnBxB,EAAO+E,SAA4C,OAAnB/E,EAAO+E,QACvCnE,EAAQmE,QAAU7B,OAAOlD,EAAO+E,SAGhCnE,EAAQmE,QAAU,QAEFvD,IAAhBxB,EAAOP,MAAsC,OAAhBO,EAAOP,KACpCmB,EAAQnB,KAAOyD,OAAOlD,EAAOP,MAG7BmB,EAAQnB,KAAO,QAEC+B,IAAhBxB,EAAOgF,MAAsC,OAAhBhF,EAAOgF,KACpCpE,EAAQoE,KAAOjD,OAAO/B,EAAOgF,MAG7BpE,EAAQoE,KAAO,OAEQxD,IAAvBxB,EAAOiF,aAAoD,OAAvBjF,EAAOiF,YAC3CrE,EAAQqE,YAAc/B,OAAOlD,EAAOiF,aAGpCrE,EAAQqE,YAAc,QAEPzD,IAAfxB,EAAO0E,KAAoC,OAAf1E,EAAO0E,IACnC9D,EAAQ8D,IAAMxB,OAAOlD,EAAO0E,KAG5B9D,EAAQ8D,IAAM,QAEElD,IAAhBxB,EAAO2E,MAAsC,OAAhB3E,EAAO2E,KACpC/D,EAAQ+D,KAAOzB,OAAOlD,EAAO2E,MAG7B/D,EAAQ+D,KAAO,GAEZ/D,GAEXoB,OA1GqB,SA0GdpB,GACH,IAAMqB,EAAM,GAQZ,YAPiBT,IAAjBZ,EAAQkE,OAAuB7C,EAAI6C,KAAOlE,EAAQkE,WAC9BtD,IAApBZ,EAAQmE,UAA0B9C,EAAI8C,QAAUnE,EAAQmE,cACvCvD,IAAjBZ,EAAQnB,OAAuBwC,EAAIxC,KAAOmB,EAAQnB,WACjC+B,IAAjBZ,EAAQoE,OAAuB/C,EAAI+C,KAAOpE,EAAQoE,WAC1BxD,IAAxBZ,EAAQqE,cAA8BhD,EAAIgD,YAAcrE,EAAQqE,kBAChDzD,IAAhBZ,EAAQ8D,MAAsBzC,EAAIyC,IAAM9D,EAAQ8D,UAC/BlD,IAAjBZ,EAAQ+D,OAAuB1C,EAAI0C,KAAO/D,EAAQ+D,MAC3C1C,GAEXC,YArHqB,SAqHTlC,GACR,IAAMY,EAAU,kBAAK8M,GA2CrB,YA1CoBlM,IAAhBxB,EAAO8E,MAAsC,OAAhB9E,EAAO8E,KACpClE,EAAQkE,KAAO9E,EAAO8E,KAGtBlE,EAAQkE,KAAO,QAEItD,IAAnBxB,EAAO+E,SAA4C,OAAnB/E,EAAO+E,QACvCnE,EAAQmE,QAAU/E,EAAO+E,QAGzBnE,EAAQmE,QAAU,QAEFvD,IAAhBxB,EAAOP,MAAsC,OAAhBO,EAAOP,KACpCmB,EAAQnB,KAAOO,EAAOP,KAGtBmB,EAAQnB,KAAO,QAEC+B,IAAhBxB,EAAOgF,MAAsC,OAAhBhF,EAAOgF,KACpCpE,EAAQoE,KAAOhF,EAAOgF,KAGtBpE,EAAQoE,KAAO,OAEQxD,IAAvBxB,EAAOiF,aAAoD,OAAvBjF,EAAOiF,YAC3CrE,EAAQqE,YAAcjF,EAAOiF,YAG7BrE,EAAQqE,YAAc,QAEPzD,IAAfxB,EAAO0E,KAAoC,OAAf1E,EAAO0E,IACnC9D,EAAQ8D,IAAM1E,EAAO0E,IAGrB9D,EAAQ8D,IAAM,QAEElD,IAAhBxB,EAAO2E,MAAsC,OAAhB3E,EAAO2E,KACpC/D,EAAQ+D,KAAO3E,EAAO2E,KAGtB/D,EAAQ+D,KAAO,GAEZ/D,IAGTgN,EAAoB,CACtB9O,KAAM,GACNqF,YAAa,GACbC,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,sBAAuB,GACvBC,IAAK,GACLC,KAAM,IAEGkJ,EAAgB,CACzBlN,OADyB,SAClBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACP,KAAjBgB,EAAQ9B,MACR+B,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ9B,MAET,KAAxB8B,EAAQuD,aACRtD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQuD,aAEf,KAAlBvD,EAAQwD,OACRvD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQwD,OAEf,KAAlBxD,EAAQyD,OACRxD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyD,OAEd,KAAnBzD,EAAQ0D,QACRzD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0D,QAdC,uBAgBtB1D,EAAQ2D,SAhBc,IAgBtC,2BAAiC,KAAtB2B,EAAsB,QAC7BrF,EAAOE,OAAO,IAAIkC,OAAOiD,IAjBS,qDAmBtBtF,EAAQ4D,OAnBc,IAmBtC,2BAA+B,KAApB0B,EAAoB,QAC3BrF,EAAOE,OAAO,IAAIkC,OAAOiD,IApBS,8BA+BtC,MATsC,KAAlCtF,EAAQ6D,uBACR5D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ6D,uBAEjB,KAAhB7D,EAAQ8D,KACR7D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ8D,KAEhB,KAAjB9D,EAAQ+D,MACR9D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+D,MAE9B9D,GAEXK,OAlCyB,SAkClBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKgN,GACrBhN,EAAQ2D,QAAU,GAClB3D,EAAQ4D,MAAQ,GAChB,MAAOpD,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ9B,KAAOsC,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQuD,YAAc/C,EAAO6B,SAC7B,MACJ,KAAK,EACDrC,EAAQwD,MAAQhD,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQyD,MAAQjD,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0D,OAASlD,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQ2D,QAAQ/G,KAAK4D,EAAO6B,UAC5B,MACJ,KAAK,EACDrC,EAAQ4D,MAAMhH,KAAK4D,EAAO6B,UAC1B,MACJ,KAAK,EACDrC,EAAQ6D,sBAAwBrD,EAAO6B,SACvC,MACJ,KAAK,EACDrC,EAAQ8D,IAAMtD,EAAO6B,SACrB,MACJ,KAAK,GACDrC,EAAQ+D,KAAOvD,EAAO6B,SACtB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhFyB,SAgFhB9B,GACL,IAAMY,EAAU,kBAAKgN,GAiCrB,GAhCAhN,EAAQ2D,QAAU,GAClB3D,EAAQ4D,MAAQ,QACIhD,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC8B,EAAQ9B,KAAOoE,OAAOlD,EAAOlB,MAG7B8B,EAAQ9B,KAAO,QAEQ0C,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcjB,OAAOlD,EAAOmE,aAGpCvD,EAAQuD,YAAc,QAEL3C,IAAjBxB,EAAOoE,OAAwC,OAAjBpE,EAAOoE,MACrCxD,EAAQwD,MAAQlB,OAAOlD,EAAOoE,OAG9BxD,EAAQwD,MAAQ,QAEC5C,IAAjBxB,EAAOqE,OAAwC,OAAjBrE,EAAOqE,MACrCzD,EAAQyD,MAAQnB,OAAOlD,EAAOqE,OAG9BzD,EAAQyD,MAAQ,QAEE7C,IAAlBxB,EAAOsE,QAA0C,OAAlBtE,EAAOsE,OACtC1D,EAAQ0D,OAASpB,OAAOlD,EAAOsE,QAG/B1D,EAAQ0D,OAAS,QAEE9C,IAAnBxB,EAAOuE,SAA4C,OAAnBvE,EAAOuE,QAAkB,wBACzCvE,EAAOuE,SADkC,IACzD,2BAAgC,KAArBgC,EAAqB,QAC5B3F,EAAQ2D,QAAQ/G,KAAK0F,OAAOqD,KAFyB,+BAK7D,QAAqB/E,IAAjBxB,EAAOwE,OAAwC,OAAjBxE,EAAOwE,MAAgB,wBACrCxE,EAAOwE,OAD8B,IACrD,2BAA8B,KAAnB+B,EAAmB,QAC1B3F,EAAQ4D,MAAMhH,KAAK0F,OAAOqD,KAFuB,+BAuBzD,YAlBqC/E,IAAjCxB,EAAOyE,uBAAwE,OAAjCzE,EAAOyE,sBACrD7D,EAAQ6D,sBAAwBvB,OAAOlD,EAAOyE,uBAG9C7D,EAAQ6D,sBAAwB,QAEjBjD,IAAfxB,EAAO0E,KAAoC,OAAf1E,EAAO0E,IACnC9D,EAAQ8D,IAAMxB,OAAOlD,EAAO0E,KAG5B9D,EAAQ8D,IAAM,QAEElD,IAAhBxB,EAAO2E,MAAsC,OAAhB3E,EAAO2E,KACpC/D,EAAQ+D,KAAOzB,OAAOlD,EAAO2E,MAG7B/D,EAAQ+D,KAAO,GAEZ/D,GAEXoB,OAhJyB,SAgJlBpB,GACH,IAAMqB,EAAM,GAqBZ,YApBiBT,IAAjBZ,EAAQ9B,OAAuBmD,EAAInD,KAAO8B,EAAQ9B,WAC1B0C,IAAxBZ,EAAQuD,cAA8BlC,EAAIkC,YAAcvD,EAAQuD,kBAC9C3C,IAAlBZ,EAAQwD,QAAwBnC,EAAImC,MAAQxD,EAAQwD,YAClC5C,IAAlBZ,EAAQyD,QAAwBpC,EAAIoC,MAAQzD,EAAQyD,YACjC7C,IAAnBZ,EAAQ0D,SAAyBrC,EAAIqC,OAAS1D,EAAQ0D,QAClD1D,EAAQ2D,QACRtC,EAAIsC,QAAU3D,EAAQ2D,QAAQiC,KAAI,SAACD,GAAD,OAAOA,KAGzCtE,EAAIsC,QAAU,GAEd3D,EAAQ4D,MACRvC,EAAIuC,MAAQ5D,EAAQ4D,MAAMgC,KAAI,SAACD,GAAD,OAAOA,KAGrCtE,EAAIuC,MAAQ,QAEkBhD,IAAlCZ,EAAQ6D,wBAAwCxC,EAAIwC,sBAAwB7D,EAAQ6D,4BACpEjD,IAAhBZ,EAAQ8D,MAAsBzC,EAAIyC,IAAM9D,EAAQ8D,UAC/BlD,IAAjBZ,EAAQ+D,OAAuB1C,EAAI0C,KAAO/D,EAAQ+D,MAC3C1C,GAEXC,YAxKyB,SAwKblC,GACR,IAAMY,EAAU,kBAAKgN,GAiCrB,GAhCAhN,EAAQ2D,QAAU,GAClB3D,EAAQ4D,MAAQ,QACIhD,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC8B,EAAQ9B,KAAOkB,EAAOlB,KAGtB8B,EAAQ9B,KAAO,QAEQ0C,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcnE,EAAOmE,YAG7BvD,EAAQuD,YAAc,QAEL3C,IAAjBxB,EAAOoE,OAAwC,OAAjBpE,EAAOoE,MACrCxD,EAAQwD,MAAQpE,EAAOoE,MAGvBxD,EAAQwD,MAAQ,QAEC5C,IAAjBxB,EAAOqE,OAAwC,OAAjBrE,EAAOqE,MACrCzD,EAAQyD,MAAQrE,EAAOqE,MAGvBzD,EAAQyD,MAAQ,QAEE7C,IAAlBxB,EAAOsE,QAA0C,OAAlBtE,EAAOsE,OACtC1D,EAAQ0D,OAAStE,EAAOsE,OAGxB1D,EAAQ0D,OAAS,QAEE9C,IAAnBxB,EAAOuE,SAA4C,OAAnBvE,EAAOuE,QAAkB,wBACzCvE,EAAOuE,SADkC,IACzD,2BAAgC,KAArBgC,EAAqB,QAC5B3F,EAAQ2D,QAAQ/G,KAAK+I,IAFgC,+BAK7D,QAAqB/E,IAAjBxB,EAAOwE,OAAwC,OAAjBxE,EAAOwE,MAAgB,wBACrCxE,EAAOwE,OAD8B,IACrD,2BAA8B,KAAnB+B,EAAmB,QAC1B3F,EAAQ4D,MAAMhH,KAAK+I,IAF8B,+BAuBzD,YAlBqC/E,IAAjCxB,EAAOyE,uBAAwE,OAAjCzE,EAAOyE,sBACrD7D,EAAQ6D,sBAAwBzE,EAAOyE,sBAGvC7D,EAAQ6D,sBAAwB,QAEjBjD,IAAfxB,EAAO0E,KAAoC,OAAf1E,EAAO0E,IACnC9D,EAAQ8D,IAAM1E,EAAO0E,IAGrB9D,EAAQ8D,IAAM,QAEElD,IAAhBxB,EAAO2E,MAAsC,OAAhB3E,EAAO2E,KACpC/D,EAAQ+D,KAAO3E,EAAO2E,KAGtB/D,EAAQ+D,KAAO,GAEZ/D,IAGTsD,EAAkB,CACpBnB,QAAS,GACTjE,KAAM,GACNqF,YAAa,GACbC,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,sBAAuB,GACvBC,IAAK,GACLC,KAAM,IAEGC,EAAc,CACvBjE,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAkC5B,MAjCwB,KAApBgB,EAAQmC,SACRlC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmC,SAEhB,KAAjBnC,EAAQ9B,MACR+B,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ9B,MAET,KAAxB8B,EAAQuD,aACRtD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQuD,aAEf,KAAlBvD,EAAQwD,OACRvD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQwD,OAEf,KAAlBxD,EAAQyD,OACRxD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyD,OAEd,KAAnBzD,EAAQ0D,QACRzD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0D,QAEb,KAApB1D,EAAQ2D,SACR1D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ2D,SAEf,KAAlB3D,EAAQ4D,OACR3D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ4D,OAEC,KAAlC5D,EAAQ6D,uBACR5D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ6D,uBAEjB,KAAhB7D,EAAQ8D,KACR7D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ8D,KAEhB,KAAjB9D,EAAQ+D,MACR9D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+D,MAE9B9D,GAEXK,OArCuB,SAqChBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKsD,GACrB,MAAO9C,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmC,QAAU3B,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQ9B,KAAOsC,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQuD,YAAc/C,EAAO6B,SAC7B,MACJ,KAAK,EACDrC,EAAQwD,MAAQhD,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQyD,MAAQjD,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0D,OAASlD,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQ2D,QAAUnD,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQ4D,MAAQpD,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ6D,sBAAwBrD,EAAO6B,SACvC,MACJ,KAAK,GACDrC,EAAQ8D,IAAMtD,EAAO6B,SACrB,MACJ,KAAK,GACDrC,EAAQ+D,KAAOvD,EAAO6B,SACtB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApFuB,SAoFd9B,GACL,IAAMY,EAAU,kBAAKsD,GAmErB,YAlEuB1C,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAUG,OAAOlD,EAAO+C,SAGhCnC,EAAQmC,QAAU,QAEFvB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC8B,EAAQ9B,KAAOoE,OAAOlD,EAAOlB,MAG7B8B,EAAQ9B,KAAO,QAEQ0C,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcjB,OAAOlD,EAAOmE,aAGpCvD,EAAQuD,YAAc,QAEL3C,IAAjBxB,EAAOoE,OAAwC,OAAjBpE,EAAOoE,MACrCxD,EAAQwD,MAAQlB,OAAOlD,EAAOoE,OAG9BxD,EAAQwD,MAAQ,QAEC5C,IAAjBxB,EAAOqE,OAAwC,OAAjBrE,EAAOqE,MACrCzD,EAAQyD,MAAQnB,OAAOlD,EAAOqE,OAG9BzD,EAAQyD,MAAQ,QAEE7C,IAAlBxB,EAAOsE,QAA0C,OAAlBtE,EAAOsE,OACtC1D,EAAQ0D,OAASpB,OAAOlD,EAAOsE,QAG/B1D,EAAQ0D,OAAS,QAEE9C,IAAnBxB,EAAOuE,SAA4C,OAAnBvE,EAAOuE,QACvC3D,EAAQ2D,QAAUrB,OAAOlD,EAAOuE,SAGhC3D,EAAQ2D,QAAU,QAED/C,IAAjBxB,EAAOwE,OAAwC,OAAjBxE,EAAOwE,MACrC5D,EAAQ4D,MAAQtB,OAAOlD,EAAOwE,OAG9B5D,EAAQ4D,MAAQ,QAEiBhD,IAAjCxB,EAAOyE,uBAAwE,OAAjCzE,EAAOyE,sBACrD7D,EAAQ6D,sBAAwBvB,OAAOlD,EAAOyE,uBAG9C7D,EAAQ6D,sBAAwB,QAEjBjD,IAAfxB,EAAO0E,KAAoC,OAAf1E,EAAO0E,IACnC9D,EAAQ8D,IAAMxB,OAAOlD,EAAO0E,KAG5B9D,EAAQ8D,IAAM,QAEElD,IAAhBxB,EAAO2E,MAAsC,OAAhB3E,EAAO2E,KACpC/D,EAAQ+D,KAAOzB,OAAOlD,EAAO2E,MAG7B/D,EAAQ+D,KAAO,GAEZ/D,GAEXoB,OA1JuB,SA0JhBpB,GACH,IAAMqB,EAAM,GAYZ,YAXoBT,IAApBZ,EAAQmC,UAA0Bd,EAAIc,QAAUnC,EAAQmC,cACvCvB,IAAjBZ,EAAQ9B,OAAuBmD,EAAInD,KAAO8B,EAAQ9B,WAC1B0C,IAAxBZ,EAAQuD,cAA8BlC,EAAIkC,YAAcvD,EAAQuD,kBAC9C3C,IAAlBZ,EAAQwD,QAAwBnC,EAAImC,MAAQxD,EAAQwD,YAClC5C,IAAlBZ,EAAQyD,QAAwBpC,EAAIoC,MAAQzD,EAAQyD,YACjC7C,IAAnBZ,EAAQ0D,SAAyBrC,EAAIqC,OAAS1D,EAAQ0D,aAClC9C,IAApBZ,EAAQ2D,UAA0BtC,EAAIsC,QAAU3D,EAAQ2D,cACtC/C,IAAlBZ,EAAQ4D,QAAwBvC,EAAIuC,MAAQ5D,EAAQ4D,YAClBhD,IAAlCZ,EAAQ6D,wBAAwCxC,EAAIwC,sBAAwB7D,EAAQ6D,4BACpEjD,IAAhBZ,EAAQ8D,MAAsBzC,EAAIyC,IAAM9D,EAAQ8D,UAC/BlD,IAAjBZ,EAAQ+D,OAAuB1C,EAAI0C,KAAO/D,EAAQ+D,MAC3C1C,GAEXC,YAzKuB,SAyKXlC,GACR,IAAMY,EAAU,kBAAKsD,GAmErB,YAlEuB1C,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAU/C,EAAO+C,QAGzBnC,EAAQmC,QAAU,QAEFvB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC8B,EAAQ9B,KAAOkB,EAAOlB,KAGtB8B,EAAQ9B,KAAO,QAEQ0C,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcnE,EAAOmE,YAG7BvD,EAAQuD,YAAc,QAEL3C,IAAjBxB,EAAOoE,OAAwC,OAAjBpE,EAAOoE,MACrCxD,EAAQwD,MAAQpE,EAAOoE,MAGvBxD,EAAQwD,MAAQ,QAEC5C,IAAjBxB,EAAOqE,OAAwC,OAAjBrE,EAAOqE,MACrCzD,EAAQyD,MAAQrE,EAAOqE,MAGvBzD,EAAQyD,MAAQ,QAEE7C,IAAlBxB,EAAOsE,QAA0C,OAAlBtE,EAAOsE,OACtC1D,EAAQ0D,OAAStE,EAAOsE,OAGxB1D,EAAQ0D,OAAS,QAEE9C,IAAnBxB,EAAOuE,SAA4C,OAAnBvE,EAAOuE,QACvC3D,EAAQ2D,QAAUvE,EAAOuE,QAGzB3D,EAAQ2D,QAAU,QAED/C,IAAjBxB,EAAOwE,OAAwC,OAAjBxE,EAAOwE,MACrC5D,EAAQ4D,MAAQxE,EAAOwE,MAGvB5D,EAAQ4D,MAAQ,QAEiBhD,IAAjCxB,EAAOyE,uBAAwE,OAAjCzE,EAAOyE,sBACrD7D,EAAQ6D,sBAAwBzE,EAAOyE,sBAGvC7D,EAAQ6D,sBAAwB,QAEjBjD,IAAfxB,EAAO0E,KAAoC,OAAf1E,EAAO0E,IACnC9D,EAAQ8D,IAAM1E,EAAO0E,IAGrB9D,EAAQ8D,IAAM,QAEElD,IAAhBxB,EAAO2E,MAAsC,OAAhB3E,EAAO2E,KACpC/D,EAAQ+D,KAAO3E,EAAO2E,KAGtB/D,EAAQ+D,KAAO,GAEZ/D,IAsDTiE,EAAc,CAAE9B,QAAS,GAAI+B,KAAM,GAAIC,QAAS,GAAItF,KAAM,GAAIuF,KAAM,GAAIC,YAAa,GAAIP,IAAK,GAAIC,KAAM,IACjGO,EAAU,CACnBvE,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAyB5B,MAxBwB,KAApBgB,EAAQmC,SACRlC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmC,SAEhB,KAAjBnC,EAAQkE,MACRjE,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQkE,MAEb,KAApBlE,EAAQmE,SACRlE,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmE,SAEhB,KAAjBnE,EAAQnB,MACRoB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQnB,MAEhB,KAAjBmB,EAAQoE,MACRnE,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoE,MAET,KAAxBpE,EAAQqE,aACRpE,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQqE,aAEjB,KAAhBrE,EAAQ8D,KACR7D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ8D,KAEhB,KAAjB9D,EAAQ+D,MACR9D,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+D,MAE9B9D,GAEXK,OA5BmB,SA4BZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiE,GACrB,MAAOzD,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmC,QAAU3B,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQkE,KAAO1D,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQmE,QAAU3D,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQnB,KAAO2B,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQoE,KAAO5D,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQqE,YAAc7D,EAAO6B,SAC7B,MACJ,KAAK,EACDrC,EAAQ8D,IAAMtD,EAAO6B,SACrB,MACJ,KAAK,EACDrC,EAAQ+D,KAAOvD,EAAO6B,SACtB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAlEmB,SAkEV9B,GACL,IAAMY,EAAU,kBAAKiE,GAiDrB,YAhDuBrD,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAUG,OAAOlD,EAAO+C,SAGhCnC,EAAQmC,QAAU,QAEFvB,IAAhBxB,EAAO8E,MAAsC,OAAhB9E,EAAO8E,KACpClE,EAAQkE,KAAO5B,OAAOlD,EAAO8E,MAG7BlE,EAAQkE,KAAO,QAEItD,IAAnBxB,EAAO+E,SAA4C,OAAnB/E,EAAO+E,QACvCnE,EAAQmE,QAAU7B,OAAOlD,EAAO+E,SAGhCnE,EAAQmE,QAAU,QAEFvD,IAAhBxB,EAAOP,MAAsC,OAAhBO,EAAOP,KACpCmB,EAAQnB,KAAOyD,OAAOlD,EAAOP,MAG7BmB,EAAQnB,KAAO,QAEC+B,IAAhBxB,EAAOgF,MAAsC,OAAhBhF,EAAOgF,KACpCpE,EAAQoE,KAAO9B,OAAOlD,EAAOgF,MAG7BpE,EAAQoE,KAAO,QAEQxD,IAAvBxB,EAAOiF,aAAoD,OAAvBjF,EAAOiF,YAC3CrE,EAAQqE,YAAc/B,OAAOlD,EAAOiF,aAGpCrE,EAAQqE,YAAc,QAEPzD,IAAfxB,EAAO0E,KAAoC,OAAf1E,EAAO0E,IACnC9D,EAAQ8D,IAAMxB,OAAOlD,EAAO0E,KAG5B9D,EAAQ8D,IAAM,QAEElD,IAAhBxB,EAAO2E,MAAsC,OAAhB3E,EAAO2E,KACpC/D,EAAQ+D,KAAOzB,OAAOlD,EAAO2E,MAG7B/D,EAAQ+D,KAAO,GAEZ/D,GAEXoB,OAtHmB,SAsHZpB,GACH,IAAMqB,EAAM,GASZ,YARoBT,IAApBZ,EAAQmC,UAA0Bd,EAAIc,QAAUnC,EAAQmC,cACvCvB,IAAjBZ,EAAQkE,OAAuB7C,EAAI6C,KAAOlE,EAAQkE,WAC9BtD,IAApBZ,EAAQmE,UAA0B9C,EAAI8C,QAAUnE,EAAQmE,cACvCvD,IAAjBZ,EAAQnB,OAAuBwC,EAAIxC,KAAOmB,EAAQnB,WACjC+B,IAAjBZ,EAAQoE,OAAuB/C,EAAI+C,KAAOpE,EAAQoE,WAC1BxD,IAAxBZ,EAAQqE,cAA8BhD,EAAIgD,YAAcrE,EAAQqE,kBAChDzD,IAAhBZ,EAAQ8D,MAAsBzC,EAAIyC,IAAM9D,EAAQ8D,UAC/BlD,IAAjBZ,EAAQ+D,OAAuB1C,EAAI0C,KAAO/D,EAAQ+D,MAC3C1C,GAEXC,YAlImB,SAkIPlC,GACR,IAAMY,EAAU,kBAAKiE,GAiDrB,YAhDuBrD,IAAnBxB,EAAO+C,SAA4C,OAAnB/C,EAAO+C,QACvCnC,EAAQmC,QAAU/C,EAAO+C,QAGzBnC,EAAQmC,QAAU,QAEFvB,IAAhBxB,EAAO8E,MAAsC,OAAhB9E,EAAO8E,KACpClE,EAAQkE,KAAO9E,EAAO8E,KAGtBlE,EAAQkE,KAAO,QAEItD,IAAnBxB,EAAO+E,SAA4C,OAAnB/E,EAAO+E,QACvCnE,EAAQmE,QAAU/E,EAAO+E,QAGzBnE,EAAQmE,QAAU,QAEFvD,IAAhBxB,EAAOP,MAAsC,OAAhBO,EAAOP,KACpCmB,EAAQnB,KAAOO,EAAOP,KAGtBmB,EAAQnB,KAAO,QAEC+B,IAAhBxB,EAAOgF,MAAsC,OAAhBhF,EAAOgF,KACpCpE,EAAQoE,KAAOhF,EAAOgF,KAGtBpE,EAAQoE,KAAO,QAEQxD,IAAvBxB,EAAOiF,aAAoD,OAAvBjF,EAAOiF,YAC3CrE,EAAQqE,YAAcjF,EAAOiF,YAG7BrE,EAAQqE,YAAc,QAEPzD,IAAfxB,EAAO0E,KAAoC,OAAf1E,EAAO0E,IACnC9D,EAAQ8D,IAAM1E,EAAO0E,IAGrB9D,EAAQ8D,IAAM,QAEElD,IAAhBxB,EAAO2E,MAAsC,OAAhB3E,EAAO2E,KACpC/D,EAAQ+D,KAAO3E,EAAO2E,KAGtB/D,EAAQ+D,KAAO,GAEZ/D,IAqEXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MAAS,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WACzF,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MAAS,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WACzF,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAEzB,SAASjE,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,mbCxhCEtC,EAAgB,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,EAAY,CACrBC,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANwB,IAApBgB,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAVqB,SAUdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKL,GACrB,MAAOa,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,EAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BqB,SA8BZ9B,GACL,IAAMY,EAAU,kBAAKL,GAarB,YAZuBiB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUuB,OAAO/B,EAAOQ,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQsB,OAAO/B,EAAOS,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXoB,OA9CqB,SA8CdpB,GACH,IAAMqB,EAAM,GAGZ,YAFoBT,IAApBZ,EAAQJ,UAA0ByB,EAAIzB,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwBwB,EAAIxB,MAAQG,EAAQH,OAC7CwB,GAEXC,YApDqB,SAoDTlC,GACR,IAAMY,EAAU,kBAAKL,GAarB,YAZuBiB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUR,EAAOQ,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQT,EAAOS,MAGvBG,EAAQH,MAAQ,EAEbG,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,uRCpFOiL,EA4DAC,E,oXAxCJ,SAASC,EAAchO,GAC1B,OAAQA,GACJ,KAAK,EACL,IAAK,kCACD,OAAO8N,EAAMG,gCACjB,KAAK,EACL,IAAK,aACD,OAAOH,EAAMI,WACjB,KAAK,EACL,IAAK,gBACD,OAAOJ,EAAMK,cACjB,KAAK,EACL,IAAK,aACD,OAAOL,EAAMM,WACjB,KAAK,EACL,IAAK,eACD,OAAON,EAAMO,aACjB,KAAM,EACN,IAAK,eACL,QACI,OAAOP,EAAMQ,cAGlB,SAASC,EAAYvO,GACxB,OAAQA,GACJ,KAAK8N,EAAMG,gCACP,MAAO,kCACX,KAAKH,EAAMI,WACP,MAAO,aACX,KAAKJ,EAAMK,cACP,MAAO,gBACX,KAAKL,EAAMM,WACP,MAAO,aACX,KAAKN,EAAMO,aACP,MAAO,eACX,QACI,MAAO,WAiBZ,SAASG,EAAcxO,GAC1B,OAAQA,GACJ,KAAK,EACL,IAAK,yBACD,OAAO+N,EAAMU,uBACjB,KAAK,EACL,IAAK,kBACD,OAAOV,EAAMW,gBACjB,KAAK,EACL,IAAK,gBACD,OAAOX,EAAMY,cACjB,KAAM,EACN,IAAK,eACL,QACI,OAAOZ,EAAMO,cAGlB,SAASM,EAAY5O,GACxB,OAAQA,GACJ,KAAK+N,EAAMU,uBACP,MAAO,yBACX,KAAKV,EAAMW,gBACP,MAAO,kBACX,KAAKX,EAAMY,cACP,MAAO,gBACX,QACI,MAAO,YAlGnB,SAAWb,GAEPA,EAAMA,EAAM,mCAAqC,GAAK,kCAEtDA,EAAMA,EAAM,cAAgB,GAAK,aAEjCA,EAAMA,EAAM,iBAAmB,GAAK,gBAKpCA,EAAMA,EAAM,cAAgB,GAAK,aAKjCA,EAAMA,EAAM,gBAAkB,GAAK,eACnCA,EAAMA,EAAM,iBAAmB,GAAK,gBAjBxC,CAkBGA,IAAUA,EAAQ,KA0CrB,SAAWC,GAEPA,EAAMA,EAAM,0BAA4B,GAAK,yBAK7CA,EAAMA,EAAM,mBAAqB,GAAK,kBAEtCA,EAAMA,EAAM,iBAAmB,GAAK,gBACpCA,EAAMA,EAAM,iBAAmB,GAAK,eAVxC,CAWGA,IAAUA,EAAQ,KA8BrB,IAAMc,EAAc,CAChBC,MAAO,EACPC,SAAU,EACVC,eAAgB,GAChBpE,QAAS,IAEAqE,EAAU,CACnBtO,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACN,IAAlBgB,EAAQkO,OACRjO,EAAOE,OAAO,GAAGE,MAAML,EAAQkO,OAEV,IAArBlO,EAAQmO,UACRlO,EAAOE,OAAO,IAAIE,MAAML,EAAQmO,eAEPvN,IAAzBZ,EAAQsO,cACRC,EAAaxO,OAAOC,EAAQsO,aAAcrO,EAAOE,OAAO,IAAIqF,QAAQC,SARlC,uBAUtBzF,EAAQoO,gBAVc,IAUtC,2BAAwC,KAA7B9I,EAA6B,QACpCrF,EAAOE,OAAO,IAAIkC,OAAOiD,IAXS,8BAgBtC,MAHwB,KAApBtF,EAAQgK,SACR/J,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgK,SAE9B/J,GAEXK,OAnBmB,SAmBZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiO,GACrBjO,EAAQoO,eAAiB,GACzB,MAAO5N,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQkO,MAAQ1N,EAAOH,QACvB,MACJ,KAAK,EACDL,EAAQmO,SAAW3N,EAAOH,QAC1B,MACJ,KAAK,EACDL,EAAQsO,aAAeC,EAAajO,OAAOE,EAAQA,EAAOL,UAC1D,MACJ,KAAK,EACDH,EAAQoO,eAAexR,KAAK4D,EAAO6B,UACnC,MACJ,KAAK,EACDrC,EAAQgK,QAAUxJ,EAAO6B,SACzB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAjDmB,SAiDV9B,GACL,IAAMY,EAAU,kBAAKiO,GAoBrB,GAnBAjO,EAAQoO,eAAiB,QACJxN,IAAjBxB,EAAO8O,OAAwC,OAAjB9O,EAAO8O,MACrClO,EAAQkO,MAAQd,EAAchO,EAAO8O,OAGrClO,EAAQkO,MAAQ,OAEItN,IAApBxB,EAAO+O,UAA8C,OAApB/O,EAAO+O,SACxCnO,EAAQmO,SAAWP,EAAcxO,EAAO+O,UAGxCnO,EAAQmO,SAAW,OAEKvN,IAAxBxB,EAAOkP,cAAsD,OAAxBlP,EAAOkP,aAC5CtO,EAAQsO,aAAeC,EAAarN,SAAS9B,EAAOkP,cAGpDtO,EAAQsO,kBAAe1N,OAEGA,IAA1BxB,EAAOgP,gBAA0D,OAA1BhP,EAAOgP,eAAyB,wBACvDhP,EAAOgP,gBADgD,IACvE,2BAAuC,KAA5BzI,EAA4B,QACnC3F,EAAQoO,eAAexR,KAAK0F,OAAOqD,KAFgC,+BAW3E,YANuB/E,IAAnBxB,EAAO4K,SAA4C,OAAnB5K,EAAO4K,QACvChK,EAAQgK,QAAU1H,OAAOlD,EAAO4K,SAGhChK,EAAQgK,QAAU,GAEfhK,GAEXoB,OAnFmB,SAmFZpB,GACH,IAAMqB,EAAM,GAeZ,YAdkBT,IAAlBZ,EAAQkO,QAAwB7M,EAAI6M,MAAQP,EAAY3N,EAAQkO,aAC3CtN,IAArBZ,EAAQmO,WACH9M,EAAI8M,SAAWH,EAAYhO,EAAQmO,gBACfvN,IAAzBZ,EAAQsO,eACHjN,EAAIiN,aAAetO,EAAQsO,aACtBC,EAAanN,OAAOpB,EAAQsO,mBAC5B1N,GACNZ,EAAQoO,eACR/M,EAAI+M,eAAiBpO,EAAQoO,eAAexI,KAAI,SAACD,GAAD,OAAOA,KAGvDtE,EAAI+M,eAAiB,QAELxN,IAApBZ,EAAQgK,UAA0B3I,EAAI2I,QAAUhK,EAAQgK,SACjD3I,GAEXC,YArGmB,SAqGPlC,GACR,IAAMY,EAAU,kBAAKiO,GAoBrB,GAnBAjO,EAAQoO,eAAiB,QACJxN,IAAjBxB,EAAO8O,OAAwC,OAAjB9O,EAAO8O,MACrClO,EAAQkO,MAAQ9O,EAAO8O,MAGvBlO,EAAQkO,MAAQ,OAEItN,IAApBxB,EAAO+O,UAA8C,OAApB/O,EAAO+O,SACxCnO,EAAQmO,SAAW/O,EAAO+O,SAG1BnO,EAAQmO,SAAW,OAEKvN,IAAxBxB,EAAOkP,cAAsD,OAAxBlP,EAAOkP,aAC5CtO,EAAQsO,aAAeC,EAAajN,YAAYlC,EAAOkP,cAGvDtO,EAAQsO,kBAAe1N,OAEGA,IAA1BxB,EAAOgP,gBAA0D,OAA1BhP,EAAOgP,eAAyB,wBACvDhP,EAAOgP,gBADgD,IACvE,2BAAuC,KAA5BzI,EAA4B,QACnC3F,EAAQoO,eAAexR,KAAK+I,IAFuC,+BAW3E,YANuB/E,IAAnBxB,EAAO4K,SAA4C,OAAnB5K,EAAO4K,QACvChK,EAAQgK,QAAU5K,EAAO4K,QAGzBhK,EAAQgK,QAAU,GAEfhK,IAGTwO,EAAwB,CAC1BN,MAAO,EACPC,SAAU,EACVC,eAAgB,GAChBpE,QAAS,GACTyE,OAAQ,GACRC,UAAW,IAEFC,EAAoB,CAC7B5O,OAD6B,SACtBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACN,IAAlBgB,EAAQkO,OACRjO,EAAOE,OAAO,GAAGE,MAAML,EAAQkO,OAEV,IAArBlO,EAAQmO,UACRlO,EAAOE,OAAO,IAAIE,MAAML,EAAQmO,eAEPvN,IAAzBZ,EAAQsO,cACRC,EAAaxO,OAAOC,EAAQsO,aAAcrO,EAAOE,OAAO,IAAIqF,QAAQC,SARlC,uBAUtBzF,EAAQoO,gBAVc,IAUtC,2BAAwC,KAA7B9I,EAA6B,QACpCrF,EAAOE,OAAO,IAAIkC,OAAOiD,IAXS,8BAsBtC,MATwB,KAApBtF,EAAQgK,SACR/J,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgK,SAEd,KAAnBhK,EAAQyO,QACRxO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyO,QAEX,KAAtBzO,EAAQ0O,WACRzO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0O,WAE9BzO,GAEXK,OAzB6B,SAyBtBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKwO,GACrBxO,EAAQoO,eAAiB,GACzB,MAAO5N,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQkO,MAAQ1N,EAAOH,QACvB,MACJ,KAAK,EACDL,EAAQmO,SAAW3N,EAAOH,QAC1B,MACJ,KAAK,EACDL,EAAQsO,aAAeC,EAAajO,OAAOE,EAAQA,EAAOL,UAC1D,MACJ,KAAK,EACDH,EAAQoO,eAAexR,KAAK4D,EAAO6B,UACnC,MACJ,KAAK,EACDrC,EAAQgK,QAAUxJ,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQyO,OAASjO,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQ0O,UAAYlO,EAAO6B,SAC3B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA7D6B,SA6DpB9B,GACL,IAAMY,EAAU,kBAAKwO,GAoBrB,GAnBAxO,EAAQoO,eAAiB,QACJxN,IAAjBxB,EAAO8O,OAAwC,OAAjB9O,EAAO8O,MACrClO,EAAQkO,MAAQd,EAAchO,EAAO8O,OAGrClO,EAAQkO,MAAQ,OAEItN,IAApBxB,EAAO+O,UAA8C,OAApB/O,EAAO+O,SACxCnO,EAAQmO,SAAWP,EAAcxO,EAAO+O,UAGxCnO,EAAQmO,SAAW,OAEKvN,IAAxBxB,EAAOkP,cAAsD,OAAxBlP,EAAOkP,aAC5CtO,EAAQsO,aAAeC,EAAarN,SAAS9B,EAAOkP,cAGpDtO,EAAQsO,kBAAe1N,OAEGA,IAA1BxB,EAAOgP,gBAA0D,OAA1BhP,EAAOgP,eAAyB,wBACvDhP,EAAOgP,gBADgD,IACvE,2BAAuC,KAA5BzI,EAA4B,QACnC3F,EAAQoO,eAAexR,KAAK0F,OAAOqD,KAFgC,+BAuB3E,YAlBuB/E,IAAnBxB,EAAO4K,SAA4C,OAAnB5K,EAAO4K,QACvChK,EAAQgK,QAAU1H,OAAOlD,EAAO4K,SAGhChK,EAAQgK,QAAU,QAEApJ,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASnM,OAAOlD,EAAOqP,QAG/BzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYpM,OAAOlD,EAAOsP,WAGlC1O,EAAQ0O,UAAY,GAEjB1O,GAEXoB,OA3G6B,SA2GtBpB,GACH,IAAMqB,EAAM,GAiBZ,YAhBkBT,IAAlBZ,EAAQkO,QAAwB7M,EAAI6M,MAAQP,EAAY3N,EAAQkO,aAC3CtN,IAArBZ,EAAQmO,WACH9M,EAAI8M,SAAWH,EAAYhO,EAAQmO,gBACfvN,IAAzBZ,EAAQsO,eACHjN,EAAIiN,aAAetO,EAAQsO,aACtBC,EAAanN,OAAOpB,EAAQsO,mBAC5B1N,GACNZ,EAAQoO,eACR/M,EAAI+M,eAAiBpO,EAAQoO,eAAexI,KAAI,SAACD,GAAD,OAAOA,KAGvDtE,EAAI+M,eAAiB,QAELxN,IAApBZ,EAAQgK,UAA0B3I,EAAI2I,QAAUhK,EAAQgK,cACrCpJ,IAAnBZ,EAAQyO,SAAyBpN,EAAIoN,OAASzO,EAAQyO,aAChC7N,IAAtBZ,EAAQ0O,YAA4BrN,EAAIqN,UAAY1O,EAAQ0O,WACrDrN,GAEXC,YA/H6B,SA+HjBlC,GACR,IAAMY,EAAU,kBAAKwO,GAoBrB,GAnBAxO,EAAQoO,eAAiB,QACJxN,IAAjBxB,EAAO8O,OAAwC,OAAjB9O,EAAO8O,MACrClO,EAAQkO,MAAQ9O,EAAO8O,MAGvBlO,EAAQkO,MAAQ,OAEItN,IAApBxB,EAAO+O,UAA8C,OAApB/O,EAAO+O,SACxCnO,EAAQmO,SAAW/O,EAAO+O,SAG1BnO,EAAQmO,SAAW,OAEKvN,IAAxBxB,EAAOkP,cAAsD,OAAxBlP,EAAOkP,aAC5CtO,EAAQsO,aAAeC,EAAajN,YAAYlC,EAAOkP,cAGvDtO,EAAQsO,kBAAe1N,OAEGA,IAA1BxB,EAAOgP,gBAA0D,OAA1BhP,EAAOgP,eAAyB,wBACvDhP,EAAOgP,gBADgD,IACvE,2BAAuC,KAA5BzI,EAA4B,QACnC3F,EAAQoO,eAAexR,KAAK+I,IAFuC,+BAuB3E,YAlBuB/E,IAAnBxB,EAAO4K,SAA4C,OAAnB5K,EAAO4K,QACvChK,EAAQgK,QAAU5K,EAAO4K,QAGzBhK,EAAQgK,QAAU,QAEApJ,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASrP,EAAOqP,OAGxBzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYtP,EAAOsP,UAG3B1O,EAAQ0O,UAAY,GAEjB1O,IAGT4O,EAAmB,CAAEH,OAAQ,GAAIC,UAAW,IACrCH,EAAe,CACxBxO,OADwB,SACjBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANuB,KAAnBgB,EAAQyO,QACRxO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyO,QAEX,KAAtBzO,EAAQ0O,WACRzO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0O,WAE9BzO,GAEXK,OAVwB,SAUjBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4O,GACrB,MAAOpO,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyO,OAASjO,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQ0O,UAAYlO,EAAO6B,SAC3B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BwB,SA8Bf9B,GACL,IAAMY,EAAU,kBAAK4O,GAarB,YAZsBhO,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASnM,OAAOlD,EAAOqP,QAG/BzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYpM,OAAOlD,EAAOsP,WAGlC1O,EAAQ0O,UAAY,GAEjB1O,GAEXoB,OA9CwB,SA8CjBpB,GACH,IAAMqB,EAAM,GAGZ,YAFmBT,IAAnBZ,EAAQyO,SAAyBpN,EAAIoN,OAASzO,EAAQyO,aAChC7N,IAAtBZ,EAAQ0O,YAA4BrN,EAAIqN,UAAY1O,EAAQ0O,WACrDrN,GAEXC,YApDwB,SAoDZlC,GACR,IAAMY,EAAU,kBAAK4O,GAarB,YAZsBhO,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASrP,EAAOqP,OAGxBzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYtP,EAAOsP,UAG3B1O,EAAQ0O,UAAY,GAEjB1O,IAGT6O,EAAa,CACfC,SAAU,EACVC,WAAY,GACZC,cAAe,GACfC,gBAAiB,GACjBC,mBAAoB,GACpBC,iBAAkB,GAETC,EAAS,CAClBrP,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAyB5B,OAxByB,IAArBgB,EAAQ8O,UACR7O,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQ8O,UAET,KAAvB9O,EAAQ+O,YACR9O,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+O,YAEP,KAA1B/O,EAAQgP,eACR/O,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgP,eAEL,KAA5BhP,EAAQiP,iBACRhP,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQiP,iBAEF,KAA/BjP,EAAQkP,oBACRjP,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQkP,oBAET,IAAxBlP,EAAQlE,KAAKQ,QACb2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQlE,WAEN8E,IAA1BZ,EAAQqP,eACRjH,OAAOrI,OAAOC,EAAQqP,cAAepP,EAAOE,OAAO,IAAIqF,QAAQC,SAElC,IAA7BzF,EAAQmP,kBACRlP,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQmP,kBAE9BlP,GAEXK,OA5BkB,SA4BXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6O,GACrB,MAAOrO,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8O,SAAW9N,EAAaR,EAAO6H,UACvC,MACJ,KAAK,EACDrI,EAAQ+O,WAAavO,EAAO6B,SAC5B,MACJ,KAAK,EACDrC,EAAQgP,cAAgBxO,EAAO6B,SAC/B,MACJ,KAAK,EACDrC,EAAQiP,gBAAkBzO,EAAO6B,SACjC,MACJ,KAAK,EACDrC,EAAQkP,mBAAqB1O,EAAO6B,SACpC,MACJ,KAAK,EACDrC,EAAQlE,KAAO0E,EAAOwC,QACtB,MACJ,KAAK,EACDhD,EAAQqP,cAAgBjH,OAAO9H,OAAOE,EAAQA,EAAOL,UACrD,MACJ,KAAK,EACDH,EAAQmP,iBAAmBnO,EAAaR,EAAO6H,UAC/C,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAlEkB,SAkET9B,GACL,IAAMY,EAAU,kBAAK6O,GAiDrB,YAhDwBjO,IAApBxB,EAAO0P,UAA8C,OAApB1P,EAAO0P,SACxC9O,EAAQ8O,SAAW3N,OAAO/B,EAAO0P,UAGjC9O,EAAQ8O,SAAW,OAEGlO,IAAtBxB,EAAO2P,YAAkD,OAAtB3P,EAAO2P,WAC1C/O,EAAQ+O,WAAazM,OAAOlD,EAAO2P,YAGnC/O,EAAQ+O,WAAa,QAEInO,IAAzBxB,EAAO4P,eAAwD,OAAzB5P,EAAO4P,cAC7ChP,EAAQgP,cAAgB1M,OAAOlD,EAAO4P,eAGtChP,EAAQgP,cAAgB,QAEGpO,IAA3BxB,EAAO6P,iBACoB,OAA3B7P,EAAO6P,gBACPjP,EAAQiP,gBAAkB3M,OAAOlD,EAAO6P,iBAGxCjP,EAAQiP,gBAAkB,QAEIrO,IAA9BxB,EAAO8P,oBACuB,OAA9B9P,EAAO8P,mBACPlP,EAAQkP,mBAAqB5M,OAAOlD,EAAO8P,oBAG3ClP,EAAQkP,mBAAqB,QAEbtO,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,OACpCkE,EAAQlE,KAAOmH,EAAgB7D,EAAOtD,YAEb8E,IAAzBxB,EAAOiQ,eAAwD,OAAzBjQ,EAAOiQ,cAC7CrP,EAAQqP,cAAgBjH,OAAOlH,SAAS9B,EAAOiQ,eAG/CrP,EAAQqP,mBAAgBzO,OAEIA,IAA5BxB,EAAO+P,kBACqB,OAA5B/P,EAAO+P,iBACPnP,EAAQmP,iBAAmBhO,OAAO/B,EAAO+P,kBAGzCnP,EAAQmP,iBAAmB,EAExBnP,GAEXoB,OAtHkB,SAsHXpB,GACH,IAAMqB,EAAM,GAiBZ,YAhBqBT,IAArBZ,EAAQ8O,WAA2BzN,EAAIyN,SAAW9O,EAAQ8O,eACnClO,IAAvBZ,EAAQ+O,aAA6B1N,EAAI0N,WAAa/O,EAAQ+O,iBACpCnO,IAA1BZ,EAAQgP,gBACH3N,EAAI2N,cAAgBhP,EAAQgP,oBACLpO,IAA5BZ,EAAQiP,kBACH5N,EAAI4N,gBAAkBjP,EAAQiP,sBACJrO,IAA/BZ,EAAQkP,qBACH7N,EAAI6N,mBAAqBlP,EAAQkP,yBACrBtO,IAAjBZ,EAAQlE,OACHuF,EAAIvF,KAAOoH,OAAiCtC,IAAjBZ,EAAQlE,KAAqBkE,EAAQlE,KAAO,IAAI2E,kBACtDG,IAA1BZ,EAAQqP,gBACHhO,EAAIgO,cAAgBrP,EAAQqP,cACvBjH,OAAOhH,OAAOpB,EAAQqP,oBACtBzO,QACmBA,IAA7BZ,EAAQmP,mBACH9N,EAAI8N,iBAAmBnP,EAAQmP,kBAC7B9N,GAEXC,YA1IkB,SA0INlC,GACR,IAAMY,EAAU,kBAAK6O,GAoDrB,YAnDwBjO,IAApBxB,EAAO0P,UAA8C,OAApB1P,EAAO0P,SACxC9O,EAAQ8O,SAAW1P,EAAO0P,SAG1B9O,EAAQ8O,SAAW,OAEGlO,IAAtBxB,EAAO2P,YAAkD,OAAtB3P,EAAO2P,WAC1C/O,EAAQ+O,WAAa3P,EAAO2P,WAG5B/O,EAAQ+O,WAAa,QAEInO,IAAzBxB,EAAO4P,eAAwD,OAAzB5P,EAAO4P,cAC7ChP,EAAQgP,cAAgB5P,EAAO4P,cAG/BhP,EAAQgP,cAAgB,QAEGpO,IAA3BxB,EAAO6P,iBACoB,OAA3B7P,EAAO6P,gBACPjP,EAAQiP,gBAAkB7P,EAAO6P,gBAGjCjP,EAAQiP,gBAAkB,QAEIrO,IAA9BxB,EAAO8P,oBACuB,OAA9B9P,EAAO8P,mBACPlP,EAAQkP,mBAAqB9P,EAAO8P,mBAGpClP,EAAQkP,mBAAqB,QAEbtO,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCkE,EAAQlE,KAAOsD,EAAOtD,KAGtBkE,EAAQlE,KAAO,IAAI2E,gBAEMG,IAAzBxB,EAAOiQ,eAAwD,OAAzBjQ,EAAOiQ,cAC7CrP,EAAQqP,cAAgBjH,OAAO9G,YAAYlC,EAAOiQ,eAGlDrP,EAAQqP,mBAAgBzO,OAEIA,IAA5BxB,EAAO+P,kBACqB,OAA5B/P,EAAO+P,iBACPnP,EAAQmP,iBAAmB/P,EAAO+P,iBAGlCnP,EAAQmP,iBAAmB,EAExBnP,IAGTsP,EAAkB,CAAEb,OAAQ,GAAIC,UAAW,GAAII,SAAU,GAClDS,EAAc,CACvBxP,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,MAZuB,KAAnBgB,EAAQyO,QACRxO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyO,QAEX,KAAtBzO,EAAQ0O,WACRzO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0O,WAEZ,IAArB1O,EAAQ8O,UACR7O,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQ8O,UAET,IAAxB9O,EAAQlE,KAAKQ,QACb2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQlE,MAE7BmE,GAEXK,OAhBuB,SAgBhBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKsP,GACrB,MAAO9O,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyO,OAASjO,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQ0O,UAAYlO,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQ8O,SAAW9N,EAAaR,EAAO6H,UACvC,MACJ,KAAK,EACDrI,EAAQlE,KAAO0E,EAAOwC,QACtB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1CuB,SA0Cd9B,GACL,IAAMY,EAAU,kBAAKsP,GAsBrB,YArBsB1O,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASnM,OAAOlD,EAAOqP,QAG/BzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYpM,OAAOlD,EAAOsP,WAGlC1O,EAAQ0O,UAAY,QAEA9N,IAApBxB,EAAO0P,UAA8C,OAApB1P,EAAO0P,SACxC9O,EAAQ8O,SAAW3N,OAAO/B,EAAO0P,UAGjC9O,EAAQ8O,SAAW,OAEHlO,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,OACpCkE,EAAQlE,KAAOmH,EAAgB7D,EAAOtD,OAEnCkE,GAEXoB,OAnEuB,SAmEhBpB,GACH,IAAMqB,EAAM,GAMZ,YALmBT,IAAnBZ,EAAQyO,SAAyBpN,EAAIoN,OAASzO,EAAQyO,aAChC7N,IAAtBZ,EAAQ0O,YAA4BrN,EAAIqN,UAAY1O,EAAQ0O,gBACvC9N,IAArBZ,EAAQ8O,WAA2BzN,EAAIyN,SAAW9O,EAAQ8O,eACzClO,IAAjBZ,EAAQlE,OACHuF,EAAIvF,KAAOoH,OAAiCtC,IAAjBZ,EAAQlE,KAAqBkE,EAAQlE,KAAO,IAAI2E,aACzEY,GAEXC,YA5EuB,SA4EXlC,GACR,IAAMY,EAAU,kBAAKsP,GAyBrB,YAxBsB1O,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASrP,EAAOqP,OAGxBzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYtP,EAAOsP,UAG3B1O,EAAQ0O,UAAY,QAEA9N,IAApBxB,EAAO0P,UAA8C,OAApB1P,EAAO0P,SACxC9O,EAAQ8O,SAAW1P,EAAO0P,SAG1B9O,EAAQ8O,SAAW,OAEHlO,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCkE,EAAQlE,KAAOsD,EAAOtD,KAGtBkE,EAAQlE,KAAO,IAAI2E,WAEhBT,IAGTwP,EAAsB,GACfC,EAAkB,CAC3B1P,OAD2B,SACpBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,YANuB4B,IAAnBZ,EAAQ7C,QACR8C,EAAOE,OAAO,KAAK6C,MAAMhD,EAAQ7C,aAEfyD,IAAlBZ,EAAQ0P,OACRzP,EAAOE,OAAO,KAAKkC,OAAOrC,EAAQ0P,OAE/BzP,GAEXK,OAV2B,SAUpBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKwP,GACrB,MAAOhP,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,GACDf,EAAQ7C,OAASqD,EAAOwC,QACxB,MACJ,KAAK,GACDhD,EAAQ0P,MAAQlP,EAAO6B,SACvB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9B2B,SA8BlB9B,GACL,IAAMY,EAAU,kBAAKwP,GAUrB,YATsB5O,IAAlBxB,EAAOjC,QAA0C,OAAlBiC,EAAOjC,SACtC6C,EAAQ7C,OAAS8F,EAAgB7D,EAAOjC,cAEvByD,IAAjBxB,EAAOsQ,OAAwC,OAAjBtQ,EAAOsQ,MACrC1P,EAAQ0P,MAAQpN,OAAOlD,EAAOsQ,OAG9B1P,EAAQ0P,WAAQ9O,EAEbZ,GAEXoB,OA3C2B,SA2CpBpB,GACH,IAAMqB,EAAM,GAOZ,YANmBT,IAAnBZ,EAAQ7C,SACHkE,EAAIlE,YACkByD,IAAnBZ,EAAQ7C,OACF+F,EAAgBlD,EAAQ7C,aACxByD,QACIA,IAAlBZ,EAAQ0P,QAAwBrO,EAAIqO,MAAQ1P,EAAQ0P,OAC7CrO,GAEXC,YArD2B,SAqDflC,GACR,IAAMY,EAAU,kBAAKwP,GAarB,YAZsB5O,IAAlBxB,EAAOjC,QAA0C,OAAlBiC,EAAOjC,OACtC6C,EAAQ7C,OAASiC,EAAOjC,OAGxB6C,EAAQ7C,YAASyD,OAEAA,IAAjBxB,EAAOsQ,OAAwC,OAAjBtQ,EAAOsQ,MACrC1P,EAAQ0P,MAAQtQ,EAAOsQ,MAGvB1P,EAAQ0P,WAAQ9O,EAEbZ,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAEzB,SAASjE,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,6xBCh5BO0N,E,8aAYJ,SAASC,EAAmBxQ,GAC/B,OAAQA,GACJ,KAAK,EACL,IAAK,0BACD,OAAOuQ,EAAWE,wBACtB,KAAK,EACL,IAAK,uBACD,OAAOF,EAAWG,qBACtB,KAAK,EACL,IAAK,wBACD,OAAOH,EAAWI,sBACtB,KAAK,EACL,IAAK,qBACD,OAAOJ,EAAWK,mBACtB,KAAM,EACN,IAAK,eACL,QACI,OAAOL,EAAWjC,cAGvB,SAASuC,EAAiB7Q,GAC7B,OAAQA,GACJ,KAAKuQ,EAAWE,wBACZ,MAAO,0BACX,KAAKF,EAAWG,qBACZ,MAAO,uBACX,KAAKH,EAAWI,sBACZ,MAAO,wBACX,KAAKJ,EAAWK,mBACZ,MAAO,qBACX,QACI,MAAO,YA1CnB,SAAWL,GAEPA,EAAWA,EAAW,2BAA6B,GAAK,0BAExDA,EAAWA,EAAW,wBAA0B,GAAK,uBAErDA,EAAWA,EAAW,yBAA2B,GAAK,wBAEtDA,EAAWA,EAAW,sBAAwB,GAAK,qBACnDA,EAAWA,EAAW,iBAAmB,GAAK,gBATlD,CAUGA,IAAeA,EAAa,KAmC/B,IAAMO,EAAqB,GACdC,EAAiB,CAC1BpQ,OAD0B,SACnBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,cACL4B,IAAnBZ,EAAQ4G,QACRmD,OAAOhK,OAAOC,EAAQ4G,OAAQ3G,EAAOE,OAAO,IAAIqF,QAAQC,SAFtB,uBAItBzF,EAAQoQ,QAJc,IAItC,2BAAgC,KAArB9K,EAAqB,QAC5BC,EAAUxF,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALZ,8BAOtC,OAAOxF,GAEXK,OAV0B,SAUnBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkQ,GACrBlQ,EAAQoQ,OAAS,GACjB,MAAO5P,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4G,OAASmD,OAAOzJ,OAAOE,EAAQA,EAAOL,UAC9C,MACJ,KAAK,EACDH,EAAQoQ,OAAOxT,KAAK2I,EAAUjF,OAAOE,EAAQA,EAAOL,WACpD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/B0B,SA+BjB9B,GACL,IAAMY,EAAU,kBAAKkQ,GAQrB,GAPAlQ,EAAQoQ,OAAS,QACKxP,IAAlBxB,EAAOwH,QAA0C,OAAlBxH,EAAOwH,OACtC5G,EAAQ4G,OAASmD,OAAO7I,SAAS9B,EAAOwH,QAGxC5G,EAAQ4G,YAAShG,OAECA,IAAlBxB,EAAOgR,QAA0C,OAAlBhR,EAAOgR,OAAiB,wBACvChR,EAAOgR,QADgC,IACvD,2BAA+B,KAApBzK,EAAoB,QAC3B3F,EAAQoQ,OAAOxT,KAAK2I,EAAUrE,SAASyE,KAFY,+BAK3D,OAAO3F,GAEXoB,OA/C0B,SA+CnBpB,GACH,IAAMqB,EAAM,GASZ,YARmBT,IAAnBZ,EAAQ4G,SACHvF,EAAIuF,OAAS5G,EAAQ4G,OAASmD,OAAO3I,OAAOpB,EAAQ4G,aAAUhG,GAC/DZ,EAAQoQ,OACR/O,EAAI+O,OAASpQ,EAAQoQ,OAAOxK,KAAI,SAACD,GAAD,OAAOA,EAAIJ,EAAUnE,OAAOuE,QAAK/E,KAGjES,EAAI+O,OAAS,GAEV/O,GAEXC,YA3D0B,SA2DdlC,GACR,IAAMY,EAAU,kBAAKkQ,GAQrB,GAPAlQ,EAAQoQ,OAAS,QACKxP,IAAlBxB,EAAOwH,QAA0C,OAAlBxH,EAAOwH,OACtC5G,EAAQ4G,OAASmD,OAAOzI,YAAYlC,EAAOwH,QAG3C5G,EAAQ4G,YAAShG,OAECA,IAAlBxB,EAAOgR,QAA0C,OAAlBhR,EAAOgR,OAAiB,wBACvChR,EAAOgR,QADgC,IACvD,2BAA+B,KAApBzK,EAAoB,QAC3B3F,EAAQoQ,OAAOxT,KAAK2I,EAAUjE,YAAYqE,KAFS,+BAK3D,OAAO3F,IAGTqQ,EAAsB,CAAEC,KAAM,GAAIC,QAAS,GAAIC,cAAe,IACvDC,EAAkB,CAC3B1Q,OAD2B,SACpBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATqB,KAAjBgB,EAAQsQ,MACRrQ,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsQ,MAEb,KAApBtQ,EAAQuQ,SACRtQ,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQuQ,SAEP,KAA1BvQ,EAAQwQ,eACRvQ,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQwQ,eAE9BvQ,GAEXK,OAb2B,SAapBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKqQ,GACrB,MAAO7P,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsQ,KAAO9P,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQuQ,QAAU/P,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQwQ,cAAgBhQ,EAAO6B,SAC/B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApC2B,SAoClB9B,GACL,IAAMY,EAAU,kBAAKqQ,GAmBrB,YAlBoBzP,IAAhBxB,EAAOkR,MAAsC,OAAhBlR,EAAOkR,KACpCtQ,EAAQsQ,KAAOhO,OAAOlD,EAAOkR,MAG7BtQ,EAAQsQ,KAAO,QAEI1P,IAAnBxB,EAAOmR,SAA4C,OAAnBnR,EAAOmR,QACvCvQ,EAAQuQ,QAAUjO,OAAOlD,EAAOmR,SAGhCvQ,EAAQuQ,QAAU,QAEO3P,IAAzBxB,EAAOoR,eAAwD,OAAzBpR,EAAOoR,cAC7CxQ,EAAQwQ,cAAgBlO,OAAOlD,EAAOoR,eAGtCxQ,EAAQwQ,cAAgB,GAErBxQ,GAEXoB,OA1D2B,SA0DpBpB,GACH,IAAMqB,EAAM,GAKZ,YAJiBT,IAAjBZ,EAAQsQ,OAAuBjP,EAAIiP,KAAOtQ,EAAQsQ,WAC9B1P,IAApBZ,EAAQuQ,UAA0BlP,EAAIkP,QAAUvQ,EAAQuQ,cAC9B3P,IAA1BZ,EAAQwQ,gBACHnP,EAAImP,cAAgBxQ,EAAQwQ,eAC1BnP,GAEXC,YAlE2B,SAkEflC,GACR,IAAMY,EAAU,kBAAKqQ,GAmBrB,YAlBoBzP,IAAhBxB,EAAOkR,MAAsC,OAAhBlR,EAAOkR,KACpCtQ,EAAQsQ,KAAOlR,EAAOkR,KAGtBtQ,EAAQsQ,KAAO,QAEI1P,IAAnBxB,EAAOmR,SAA4C,OAAnBnR,EAAOmR,QACvCvQ,EAAQuQ,QAAUnR,EAAOmR,QAGzBvQ,EAAQuQ,QAAU,QAEO3P,IAAzBxB,EAAOoR,eAAwD,OAAzBpR,EAAOoR,cAC7CxQ,EAAQwQ,cAAgBpR,EAAOoR,cAG/BxQ,EAAQwQ,cAAgB,GAErBxQ,IAGT0Q,EAAiB,GACVC,EAAa,CACtB5Q,OADsB,SACfC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,YANgC4B,IAA5BZ,EAAQ4Q,iBACRH,EAAgB1Q,OAAOC,EAAQ4Q,gBAAiB3Q,EAAOE,OAAO,IAAIqF,QAAQC,cAEnD7E,IAAvBZ,EAAQ6Q,YACR/Q,OAAUC,OAAOmK,GAAYlK,EAAQ6Q,YAAa5Q,EAAOE,OAAO,IAAIqF,QAAQC,SAEzExF,GAEXK,OAVsB,SAUfC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK0Q,GACrB,MAAOlQ,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4Q,gBAAkBH,EAAgBnQ,OAAOE,EAAQA,EAAOL,UAChE,MACJ,KAAK,EACDH,EAAQ6Q,WAAahG,GAAc/K,OAAUQ,OAAOE,EAAQA,EAAOL,WACnE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BsB,SA8Bb9B,GACL,IAAMY,EAAU,kBAAK0Q,GAcrB,YAb+B9P,IAA3BxB,EAAOwR,iBACoB,OAA3BxR,EAAOwR,gBACP5Q,EAAQ4Q,gBAAkBH,EAAgBvP,SAAS9B,EAAOwR,iBAG1D5Q,EAAQ4Q,qBAAkBhQ,OAEJA,IAAtBxB,EAAOyR,YAAkD,OAAtBzR,EAAOyR,WAC1C7Q,EAAQ6Q,WAAa/F,GAAkB1L,EAAOyR,YAG9C7Q,EAAQ6Q,gBAAajQ,EAElBZ,GAEXoB,OA/CsB,SA+CfpB,GACH,IAAMqB,EAAM,GAUZ,YAT4BT,IAA5BZ,EAAQ4Q,kBACHvP,EAAIuP,gBAAkB5Q,EAAQ4Q,gBACzBH,EAAgBrP,OAAOpB,EAAQ4Q,sBAC/BhQ,QACaA,IAAvBZ,EAAQ6Q,aACHxP,EAAIwP,gBACsBjQ,IAAvBZ,EAAQ6Q,WACF7Q,EAAQ6Q,WAAW9F,cACnB,MACP1J,GAEXC,YA5DsB,SA4DVlC,GACR,IAAMY,EAAU,kBAAK0Q,GAcrB,YAb+B9P,IAA3BxB,EAAOwR,iBACoB,OAA3BxR,EAAOwR,gBACP5Q,EAAQ4Q,gBAAkBH,EAAgBnP,YAAYlC,EAAOwR,iBAG7D5Q,EAAQ4Q,qBAAkBhQ,OAEJA,IAAtBxB,EAAOyR,YAAkD,OAAtBzR,EAAOyR,WAC1C7Q,EAAQ6Q,WAAazR,EAAOyR,WAG5B7Q,EAAQ6Q,gBAAajQ,EAElBZ,IAGT8Q,EAAkB,CACpBC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,gBAAiB,GACjBC,QAAS,IAEAC,EAAc,CACvBrR,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAgB5B,MAfwB,KAApBgB,EAAQ+Q,SACR9Q,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+Q,SAEZ,KAArB/Q,EAAQgR,UACR/Q,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgR,UAEb,KAApBhR,EAAQiR,SACRhR,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQiR,SAEL,KAA5BjR,EAAQkR,iBACRjR,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQkR,iBAEb,KAApBlR,EAAQmR,SACRlR,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmR,SAE9BlR,GAEXK,OAnBuB,SAmBhBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK8Q,GACrB,MAAOtQ,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+Q,QAAUvQ,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQgR,SAAWxQ,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQiR,QAAUzQ,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQkR,gBAAkB1Q,EAAO6B,SACjC,MACJ,KAAK,EACDrC,EAAQmR,QAAU3Q,EAAO6B,SACzB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhDuB,SAgDd9B,GACL,IAAMY,EAAU,kBAAK8Q,GAgCrB,YA/BuBlQ,IAAnBxB,EAAO2R,SAA4C,OAAnB3R,EAAO2R,QACvC/Q,EAAQ+Q,QAAUzO,OAAOlD,EAAO2R,SAGhC/Q,EAAQ+Q,QAAU,QAEEnQ,IAApBxB,EAAO4R,UAA8C,OAApB5R,EAAO4R,SACxChR,EAAQgR,SAAW1O,OAAOlD,EAAO4R,UAGjChR,EAAQgR,SAAW,QAEApQ,IAAnBxB,EAAO6R,SAA4C,OAAnB7R,EAAO6R,QACvCjR,EAAQiR,QAAU3O,OAAOlD,EAAO6R,SAGhCjR,EAAQiR,QAAU,QAESrQ,IAA3BxB,EAAO8R,iBACoB,OAA3B9R,EAAO8R,gBACPlR,EAAQkR,gBAAkB5O,OAAOlD,EAAO8R,iBAGxClR,EAAQkR,gBAAkB,QAEPtQ,IAAnBxB,EAAO+R,SAA4C,OAAnB/R,EAAO+R,QACvCnR,EAAQmR,QAAU7O,OAAOlD,EAAO+R,SAGhCnR,EAAQmR,QAAU,GAEfnR,GAEXoB,OAnFuB,SAmFhBpB,GACH,IAAMqB,EAAM,GAOZ,YANoBT,IAApBZ,EAAQ+Q,UAA0B1P,EAAI0P,QAAU/Q,EAAQ+Q,cACnCnQ,IAArBZ,EAAQgR,WAA2B3P,EAAI2P,SAAWhR,EAAQgR,eACtCpQ,IAApBZ,EAAQiR,UAA0B5P,EAAI4P,QAAUjR,EAAQiR,cAC5BrQ,IAA5BZ,EAAQkR,kBACH7P,EAAI6P,gBAAkBlR,EAAQkR,sBACftQ,IAApBZ,EAAQmR,UAA0B9P,EAAI8P,QAAUnR,EAAQmR,SACjD9P,GAEXC,YA7FuB,SA6FXlC,GACR,IAAMY,EAAU,kBAAK8Q,GAgCrB,YA/BuBlQ,IAAnBxB,EAAO2R,SAA4C,OAAnB3R,EAAO2R,QACvC/Q,EAAQ+Q,QAAU3R,EAAO2R,QAGzB/Q,EAAQ+Q,QAAU,QAEEnQ,IAApBxB,EAAO4R,UAA8C,OAApB5R,EAAO4R,SACxChR,EAAQgR,SAAW5R,EAAO4R,SAG1BhR,EAAQgR,SAAW,QAEApQ,IAAnBxB,EAAO6R,SAA4C,OAAnB7R,EAAO6R,QACvCjR,EAAQiR,QAAU7R,EAAO6R,QAGzBjR,EAAQiR,QAAU,QAESrQ,IAA3BxB,EAAO8R,iBACoB,OAA3B9R,EAAO8R,gBACPlR,EAAQkR,gBAAkB9R,EAAO8R,gBAGjClR,EAAQkR,gBAAkB,QAEPtQ,IAAnBxB,EAAO+R,SAA4C,OAAnB/R,EAAO+R,QACvCnR,EAAQmR,QAAU/R,EAAO+R,QAGzBnR,EAAQmR,QAAU,GAEfnR,IAGT6F,EAAgB,CAClBwL,gBAAiB,GACjBC,QAAQ,EACRC,OAAQ,EACRC,OAAQ,GACRC,gBAAiB,GACjBC,gBAAiB,EACjBC,kBAAmB,IAEVpM,EAAY,CACrBxF,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAkC5B,MAjCgC,KAA5BgB,EAAQqR,iBACRpR,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQqR,sBAELzQ,IAA5BZ,EAAQ4R,iBACRrL,OAAIxG,OAAOC,EAAQ4R,gBAAiB3R,EAAOE,OAAO,IAAIqF,QAAQC,UAE3C,IAAnBzF,EAAQsR,QACRrR,EAAOE,OAAO,IAAI4H,KAAK/H,EAAQsR,QAEZ,IAAnBtR,EAAQuR,QACRtR,EAAOE,OAAO,IAAIE,MAAML,EAAQuR,QAEb,KAAnBvR,EAAQwR,QACRvR,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQwR,QAEL,KAA5BxR,EAAQyR,iBACRxR,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyR,sBAET7Q,IAAxBZ,EAAQuD,aACR6N,EAAYrR,OAAOC,EAAQuD,YAAatD,EAAOE,OAAO,IAAIqF,QAAQC,SAEtC,IAA5BzF,EAAQ0R,iBACRzR,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ0R,sBAEN9Q,IAA1BZ,EAAQ6R,eACR/R,OAAUC,OAAOmK,GAAYlK,EAAQ6R,eAAgB5R,EAAOE,OAAO,IAAIqF,QAAQC,cAExD7E,IAAvBZ,EAAQ8R,YACRnB,EAAW5Q,OAAOC,EAAQ8R,WAAY7R,EAAOE,OAAO,IAAIqF,QAAQC,SAElC,KAA9BzF,EAAQ2R,mBACR1R,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ2R,mBAE9B1R,GAEXK,OArCqB,SAqCdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6F,GACrB,MAAOrF,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqR,gBAAkB7Q,EAAO6B,SACjC,MACJ,KAAK,EACDrC,EAAQ4R,gBAAkBrL,OAAIjG,OAAOE,EAAQA,EAAOL,UACpD,MACJ,KAAK,EACDH,EAAQsR,OAAS9Q,EAAOuH,OACxB,MACJ,KAAK,EACD/H,EAAQuR,OAAS/Q,EAAOH,QACxB,MACJ,KAAK,EACDL,EAAQwR,OAAShR,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQyR,gBAAkBjR,EAAO6B,SACjC,MACJ,KAAK,EACDrC,EAAQuD,YAAc6N,EAAY9Q,OAAOE,EAAQA,EAAOL,UACxD,MACJ,KAAK,EACDH,EAAQ0R,gBAAkB1Q,GAAaR,EAAOJ,SAC9C,MACJ,KAAK,EACDJ,EAAQ6R,cAAgBhH,GAAc/K,OAAUQ,OAAOE,EAAQA,EAAOL,WACtE,MACJ,KAAK,GACDH,EAAQ8R,WAAanB,EAAWrQ,OAAOE,EAAQA,EAAOL,UACtD,MACJ,KAAK,GACDH,EAAQ2R,kBAAoBnR,EAAO6B,SACnC,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApFqB,SAoFZ9B,GACL,IAAMY,EAAU,kBAAK6F,GAwErB,YAvE+BjF,IAA3BxB,EAAOiS,iBACoB,OAA3BjS,EAAOiS,gBACPrR,EAAQqR,gBAAkB/O,OAAOlD,EAAOiS,iBAGxCrR,EAAQqR,gBAAkB,QAECzQ,IAA3BxB,EAAOwS,iBACoB,OAA3BxS,EAAOwS,gBACP5R,EAAQ4R,gBAAkBrL,OAAIrF,SAAS9B,EAAOwS,iBAG9C5R,EAAQ4R,qBAAkBhR,OAERA,IAAlBxB,EAAOkS,QAA0C,OAAlBlS,EAAOkS,OACtCtR,EAAQsR,OAAStJ,QAAQ5I,EAAOkS,QAGhCtR,EAAQsR,QAAS,OAEC1Q,IAAlBxB,EAAOmS,QAA0C,OAAlBnS,EAAOmS,OACtCvR,EAAQuR,OAAS3B,EAAmBxQ,EAAOmS,QAG3CvR,EAAQuR,OAAS,OAEC3Q,IAAlBxB,EAAOoS,QAA0C,OAAlBpS,EAAOoS,OACtCxR,EAAQwR,OAASlP,OAAOlD,EAAOoS,QAG/BxR,EAAQwR,OAAS,QAEU5Q,IAA3BxB,EAAOqS,iBACoB,OAA3BrS,EAAOqS,gBACPzR,EAAQyR,gBAAkBnP,OAAOlD,EAAOqS,iBAGxCzR,EAAQyR,gBAAkB,QAEH7Q,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAc6N,EAAYlQ,SAAS9B,EAAOmE,aAGlDvD,EAAQuD,iBAAc3C,OAEKA,IAA3BxB,EAAOsS,iBACoB,OAA3BtS,EAAOsS,gBACP1R,EAAQ0R,gBAAkBvQ,OAAO/B,EAAOsS,iBAGxC1R,EAAQ0R,gBAAkB,OAED9Q,IAAzBxB,EAAOyS,eAAwD,OAAzBzS,EAAOyS,cAC7C7R,EAAQ6R,cAAgB/G,GAAkB1L,EAAOyS,eAGjD7R,EAAQ6R,mBAAgBjR,OAEFA,IAAtBxB,EAAO0S,YAAkD,OAAtB1S,EAAO0S,WAC1C9R,EAAQ8R,WAAanB,EAAWzP,SAAS9B,EAAO0S,YAGhD9R,EAAQ8R,gBAAalR,OAEQA,IAA7BxB,EAAOuS,mBACsB,OAA7BvS,EAAOuS,kBACP3R,EAAQ2R,kBAAoBrP,OAAOlD,EAAOuS,mBAG1C3R,EAAQ2R,kBAAoB,GAEzB3R,GAEXoB,OA/JqB,SA+JdpB,GACH,IAAMqB,EAAM,GA8BZ,YA7B4BT,IAA5BZ,EAAQqR,kBACHhQ,EAAIgQ,gBAAkBrR,EAAQqR,sBACPzQ,IAA5BZ,EAAQ4R,kBACHvQ,EAAIuQ,gBAAkB5R,EAAQ4R,gBACzBrL,OAAInF,OAAOpB,EAAQ4R,sBACnBhR,QACSA,IAAnBZ,EAAQsR,SAAyBjQ,EAAIiQ,OAAStR,EAAQsR,aACnC1Q,IAAnBZ,EAAQuR,SACHlQ,EAAIkQ,OAAStB,EAAiBjQ,EAAQuR,cACxB3Q,IAAnBZ,EAAQwR,SAAyBnQ,EAAImQ,OAASxR,EAAQwR,aAC1B5Q,IAA5BZ,EAAQyR,kBACHpQ,EAAIoQ,gBAAkBzR,EAAQyR,sBACX7Q,IAAxBZ,EAAQuD,cACHlC,EAAIkC,YAAcvD,EAAQuD,YACrB6N,EAAYhQ,OAAOpB,EAAQuD,kBAC3B3C,QACkBA,IAA5BZ,EAAQ0R,kBACHrQ,EAAIqQ,gBAAkB1R,EAAQ0R,sBACT9Q,IAA1BZ,EAAQ6R,gBACHxQ,EAAIwQ,mBACyBjR,IAA1BZ,EAAQ6R,cACF7R,EAAQ6R,cAAc9G,cACtB,WACSnK,IAAvBZ,EAAQ8R,aACHzQ,EAAIyQ,WAAa9R,EAAQ8R,WACpBnB,EAAWvP,OAAOpB,EAAQ8R,iBAC1BlR,QACoBA,IAA9BZ,EAAQ2R,oBACHtQ,EAAIsQ,kBAAoB3R,EAAQ2R,mBAC9BtQ,GAEXC,YAhMqB,SAgMTlC,GACR,IAAMY,EAAU,kBAAK6F,GAwErB,YAvE+BjF,IAA3BxB,EAAOiS,iBACoB,OAA3BjS,EAAOiS,gBACPrR,EAAQqR,gBAAkBjS,EAAOiS,gBAGjCrR,EAAQqR,gBAAkB,QAECzQ,IAA3BxB,EAAOwS,iBACoB,OAA3BxS,EAAOwS,gBACP5R,EAAQ4R,gBAAkBrL,OAAIjF,YAAYlC,EAAOwS,iBAGjD5R,EAAQ4R,qBAAkBhR,OAERA,IAAlBxB,EAAOkS,QAA0C,OAAlBlS,EAAOkS,OACtCtR,EAAQsR,OAASlS,EAAOkS,OAGxBtR,EAAQsR,QAAS,OAEC1Q,IAAlBxB,EAAOmS,QAA0C,OAAlBnS,EAAOmS,OACtCvR,EAAQuR,OAASnS,EAAOmS,OAGxBvR,EAAQuR,OAAS,OAEC3Q,IAAlBxB,EAAOoS,QAA0C,OAAlBpS,EAAOoS,OACtCxR,EAAQwR,OAASpS,EAAOoS,OAGxBxR,EAAQwR,OAAS,QAEU5Q,IAA3BxB,EAAOqS,iBACoB,OAA3BrS,EAAOqS,gBACPzR,EAAQyR,gBAAkBrS,EAAOqS,gBAGjCzR,EAAQyR,gBAAkB,QAEH7Q,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAc6N,EAAY9P,YAAYlC,EAAOmE,aAGrDvD,EAAQuD,iBAAc3C,OAEKA,IAA3BxB,EAAOsS,iBACoB,OAA3BtS,EAAOsS,gBACP1R,EAAQ0R,gBAAkBtS,EAAOsS,gBAGjC1R,EAAQ0R,gBAAkB,OAED9Q,IAAzBxB,EAAOyS,eAAwD,OAAzBzS,EAAOyS,cAC7C7R,EAAQ6R,cAAgBzS,EAAOyS,cAG/B7R,EAAQ6R,mBAAgBjR,OAEFA,IAAtBxB,EAAO0S,YAAkD,OAAtB1S,EAAO0S,WAC1C9R,EAAQ8R,WAAanB,EAAWrP,YAAYlC,EAAO0S,YAGnD9R,EAAQ8R,gBAAalR,OAEQA,IAA7BxB,EAAOuS,mBACsB,OAA7BvS,EAAOuS,kBACP3R,EAAQ2R,kBAAoBvS,EAAOuS,kBAGnC3R,EAAQ2R,kBAAoB,GAEzB3R,IAGT+R,EAAmB,CAAEC,UAAW,IACzBC,EAAe,CACxBlS,OADwB,SACjBC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQgS,WADc,IACtC,2BAAmC,KAAxB1M,EAAwB,QAC/BrF,EAAOE,OAAO,IAAIkC,OAAOiD,IAFS,8BAItC,OAAOrF,GAEXK,OAPwB,SAOjBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK+R,GACrB/R,EAAQgS,UAAY,GACpB,MAAOxR,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgS,UAAUpV,KAAK4D,EAAO6B,UAC9B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAzBwB,SAyBf9B,GACL,IAAMY,EAAU,kBAAK+R,GAErB,GADA/R,EAAQgS,UAAY,QACKpR,IAArBxB,EAAO4S,WAAgD,OAArB5S,EAAO4S,UAAoB,wBAC7C5S,EAAO4S,WADsC,IAC7D,2BAAkC,KAAvBrM,EAAuB,QAC9B3F,EAAQgS,UAAUpV,KAAK0F,OAAOqD,KAF2B,+BAKjE,OAAO3F,GAEXoB,OAnCwB,SAmCjBpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQgS,UACR3Q,EAAI2Q,UAAYhS,EAAQgS,UAAUpM,KAAI,SAACD,GAAD,OAAOA,KAG7CtE,EAAI2Q,UAAY,GAEb3Q,GAEXC,YA7CwB,SA6CZlC,GACR,IAAMY,EAAU,kBAAK+R,GAErB,GADA/R,EAAQgS,UAAY,QACKpR,IAArBxB,EAAO4S,WAAgD,OAArB5S,EAAO4S,UAAoB,wBAC7C5S,EAAO4S,WADsC,IAC7D,2BAAkC,KAAvBrM,EAAuB,QAC9B3F,EAAQgS,UAAUpV,KAAK+I,IAFkC,+BAKjE,OAAO3F,IAGTkS,EAAa,CAAEC,iBAAkB,GAAIC,iBAAkB,IAChDC,EAAS,CAClBtS,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANiC,KAA7BgB,EAAQmS,kBACRlS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmS,kBAEJ,KAA7BnS,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,kBAE9BnS,GAEXK,OAVkB,SAUXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkS,GACrB,MAAO1R,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmS,iBAAmB3R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BkB,SA8BT9B,GACL,IAAMY,EAAU,kBAAKkS,GAerB,YAdgCtR,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB7P,OAAOlD,EAAO+S,kBAGzCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,GAExBpS,GAEXoB,OAhDkB,SAgDXpB,GACH,IAAMqB,EAAM,GAKZ,YAJ6BT,IAA7BZ,EAAQmS,mBACH9Q,EAAI8Q,iBAAmBnS,EAAQmS,uBACPvR,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,kBAC7B/Q,GAEXC,YAxDkB,SAwDNlC,GACR,IAAMY,EAAU,kBAAKkS,GAerB,YAdgCtR,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB/S,EAAO+S,iBAGlCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,GAExBpS,IAGTsS,EAAc,GACPC,EAAU,CACnBxS,OADmB,SACZC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQwS,OADc,IACtC,2BAA+B,KAApBlN,EAAoB,QAC3B+M,EAAOtS,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFT,8BAItC,OAAOxF,GAEXK,OAPmB,SAOZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKsS,GACrBtS,EAAQwS,MAAQ,GAChB,MAAOhS,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQwS,MAAM5V,KAAKyV,EAAO/R,OAAOE,EAAQA,EAAOL,WAChD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAzBmB,SAyBV9B,GACL,IAAMY,EAAU,kBAAKsS,GAErB,GADAtS,EAAQwS,MAAQ,QACK5R,IAAjBxB,EAAOoT,OAAwC,OAAjBpT,EAAOoT,MAAgB,wBACrCpT,EAAOoT,OAD8B,IACrD,2BAA8B,KAAnB7M,EAAmB,QAC1B3F,EAAQwS,MAAM5V,KAAKyV,EAAOnR,SAASyE,KAFc,+BAKzD,OAAO3F,GAEXoB,OAnCmB,SAmCZpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQwS,MACRnR,EAAImR,MAAQxS,EAAQwS,MAAM5M,KAAI,SAACD,GAAD,OAAQA,EAAI0M,EAAOjR,OAAOuE,QAAK/E,KAG7DS,EAAImR,MAAQ,GAETnR,GAEXC,YA7CmB,SA6CPlC,GACR,IAAMY,EAAU,kBAAKsS,GAErB,GADAtS,EAAQwS,MAAQ,QACK5R,IAAjBxB,EAAOoT,OAAwC,OAAjBpT,EAAOoT,MAAgB,wBACrCpT,EAAOoT,OAD8B,IACrD,2BAA8B,KAAnB7M,EAAmB,QAC1B3F,EAAQwS,MAAM5V,KAAKyV,EAAO/Q,YAAYqE,KAFW,+BAKzD,OAAO3F,IAGTyS,EAAiB,CACnBN,iBAAkB,GAClBO,oBAAqB,GACrBC,oBAAqB,IAEZC,EAAa,CACtB7S,OADsB,SACfC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATiC,KAA7BgB,EAAQmS,kBACRlS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmS,kBAED,KAAhCnS,EAAQ0S,qBACRzS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0S,qBAED,KAAhC1S,EAAQ2S,qBACR1S,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ2S,qBAE9B1S,GAEXK,OAbsB,SAafC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKyS,GACrB,MAAOjS,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmS,iBAAmB3R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQ0S,oBAAsBlS,EAAO6B,SACrC,MACJ,KAAK,EACDrC,EAAQ2S,oBAAsBnS,EAAO6B,SACrC,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApCsB,SAoCb9B,GACL,IAAMY,EAAU,kBAAKyS,GAsBrB,YArBgC7R,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB7P,OAAOlD,EAAO+S,kBAGzCnS,EAAQmS,iBAAmB,QAEIvR,IAA/BxB,EAAOsT,qBACwB,OAA/BtT,EAAOsT,oBACP1S,EAAQ0S,oBAAsBpQ,OAAOlD,EAAOsT,qBAG5C1S,EAAQ0S,oBAAsB,QAEC9R,IAA/BxB,EAAOuT,qBACwB,OAA/BvT,EAAOuT,oBACP3S,EAAQ2S,oBAAsBrQ,OAAOlD,EAAOuT,qBAG5C3S,EAAQ2S,oBAAsB,GAE3B3S,GAEXoB,OA7DsB,SA6DfpB,GACH,IAAMqB,EAAM,GAOZ,YAN6BT,IAA7BZ,EAAQmS,mBACH9Q,EAAI8Q,iBAAmBnS,EAAQmS,uBACJvR,IAAhCZ,EAAQ0S,sBACHrR,EAAIqR,oBAAsB1S,EAAQ0S,0BACP9R,IAAhCZ,EAAQ2S,sBACHtR,EAAIsR,oBAAsB3S,EAAQ2S,qBAChCtR,GAEXC,YAvEsB,SAuEVlC,GACR,IAAMY,EAAU,kBAAKyS,GAsBrB,YArBgC7R,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB/S,EAAO+S,iBAGlCnS,EAAQmS,iBAAmB,QAEIvR,IAA/BxB,EAAOsT,qBACwB,OAA/BtT,EAAOsT,oBACP1S,EAAQ0S,oBAAsBtT,EAAOsT,oBAGrC1S,EAAQ0S,oBAAsB,QAEC9R,IAA/BxB,EAAOuT,qBACwB,OAA/BvT,EAAOuT,oBACP3S,EAAQ2S,oBAAsBvT,EAAOuT,oBAGrC3S,EAAQ2S,oBAAsB,GAE3B3S,IAGT6S,EAAkB,GACXC,EAAc,CACvB/S,OADuB,SAChBC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQ+S,UADc,IACtC,2BAAkC,KAAvBzN,EAAuB,QAC9BsN,EAAW7S,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFb,8BAItC,OAAOxF,GAEXK,OAPuB,SAOhBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6S,GACrB7S,EAAQ+S,SAAW,GACnB,MAAOvS,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+S,SAASnW,KAAKgW,EAAWtS,OAAOE,EAAQA,EAAOL,WACvD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAzBuB,SAyBd9B,GACL,IAAMY,EAAU,kBAAK6S,GAErB,GADA7S,EAAQ+S,SAAW,QACKnS,IAApBxB,EAAO2T,UAA8C,OAApB3T,EAAO2T,SAAmB,wBAC3C3T,EAAO2T,UADoC,IAC3D,2BAAiC,KAAtBpN,EAAsB,QAC7B3F,EAAQ+S,SAASnW,KAAKgW,EAAW1R,SAASyE,KAFa,+BAK/D,OAAO3F,GAEXoB,OAnCuB,SAmChBpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQ+S,SACR1R,EAAI0R,SAAW/S,EAAQ+S,SAASnN,KAAI,SAACD,GAAD,OAAOA,EAAIiN,EAAWxR,OAAOuE,QAAK/E,KAGtES,EAAI0R,SAAW,GAEZ1R,GAEXC,YA7CuB,SA6CXlC,GACR,IAAMY,EAAU,kBAAK6S,GAErB,GADA7S,EAAQ+S,SAAW,QACKnS,IAApBxB,EAAO2T,UAA8C,OAApB3T,EAAO2T,SAAmB,wBAC3C3T,EAAO2T,UADoC,IAC3D,2BAAiC,KAAtBpN,EAAsB,QAC7B3F,EAAQ+S,SAASnW,KAAKgW,EAAWtR,YAAYqE,KAFU,+BAK/D,OAAO3F,IAGTgT,EAAiB,CACnBb,iBAAkB,GAClBC,iBAAkB,GAClBa,OAAQ,IAECC,EAAa,CACtBnT,OADsB,SACfC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATiC,KAA7BgB,EAAQmS,kBACRlS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmS,kBAEJ,KAA7BnS,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,kBAEd,KAAnBpS,EAAQiT,QACRhT,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQiT,QAE9BhT,GAEXK,OAbsB,SAafC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKgT,GACrB,MAAOxS,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmS,iBAAmB3R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQiT,OAASzS,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApCsB,SAoCb9B,GACL,IAAMY,EAAU,kBAAKgT,GAqBrB,YApBgCpS,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB7P,OAAOlD,EAAO+S,kBAGzCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAO6T,QAA0C,OAAlB7T,EAAO6T,OACtCjT,EAAQiT,OAAS3Q,OAAOlD,EAAO6T,QAG/BjT,EAAQiT,OAAS,GAEdjT,GAEXoB,OA5DsB,SA4DfpB,GACH,IAAMqB,EAAM,GAMZ,YAL6BT,IAA7BZ,EAAQmS,mBACH9Q,EAAI8Q,iBAAmBnS,EAAQmS,uBACPvR,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,uBACjBxR,IAAnBZ,EAAQiT,SAAyB5R,EAAI4R,OAASjT,EAAQiT,QAC/C5R,GAEXC,YArEsB,SAqEVlC,GACR,IAAMY,EAAU,kBAAKgT,GAqBrB,YApBgCpS,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB/S,EAAO+S,iBAGlCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAO6T,QAA0C,OAAlB7T,EAAO6T,OACtCjT,EAAQiT,OAAS7T,EAAO6T,OAGxBjT,EAAQiT,OAAS,GAEdjT,IAGTmT,EAA0B,CAC5BhB,iBAAkB,GAClBC,iBAAkB,IAETgB,EAAsB,CAC/BrT,OAD+B,SACxBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACK,KAA7BgB,EAAQmS,kBACRlS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmS,kBAEJ,KAA7BnS,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,kBALC,uBAOtBpS,EAAQqT,SAPc,IAOtC,2BAAiC,KAAtB/N,EAAsB,QAC7BgO,EAAyBvT,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAR3B,8BAUtC,OAAOxF,GAEXK,OAb+B,SAaxBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKmT,GACrBnT,EAAQqT,QAAU,GAClB,MAAO7S,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmS,iBAAmB3R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQqT,QAAQzW,KAAK0W,EAAyBhT,OAAOE,EAAQA,EAAOL,WACpE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SArC+B,SAqCtB9B,GACL,IAAMY,EAAU,kBAAKmT,GAgBrB,GAfAnT,EAAQqT,QAAU,QACczS,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB7P,OAAOlD,EAAO+S,kBAGzCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,QAERxR,IAAnBxB,EAAOiU,SAA4C,OAAnBjU,EAAOiU,QAAkB,wBACzCjU,EAAOiU,SADkC,IACzD,2BAAgC,KAArB1N,EAAqB,QAC5B3F,EAAQqT,QAAQzW,KAAK0W,EAAyBpS,SAASyE,KAFF,+BAK7D,OAAO3F,GAEXoB,OA7D+B,SA6DxBpB,GACH,IAAMqB,EAAM,GAWZ,YAV6BT,IAA7BZ,EAAQmS,mBACH9Q,EAAI8Q,iBAAmBnS,EAAQmS,uBACPvR,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,kBAChCpS,EAAQqT,QACRhS,EAAIgS,QAAUrT,EAAQqT,QAAQzN,KAAI,SAACD,GAAD,OAAOA,EAAI2N,EAAyBlS,OAAOuE,QAAK/E,KAGlFS,EAAIgS,QAAU,GAEXhS,GAEXC,YA3E+B,SA2EnBlC,GACR,IAAMY,EAAU,kBAAKmT,GAgBrB,GAfAnT,EAAQqT,QAAU,QACczS,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB/S,EAAO+S,iBAGlCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,QAERxR,IAAnBxB,EAAOiU,SAA4C,OAAnBjU,EAAOiU,QAAkB,wBACzCjU,EAAOiU,SADkC,IACzD,2BAAgC,KAArB1N,EAAqB,QAC5B3F,EAAQqT,QAAQzW,KAAK0W,EAAyBhS,YAAYqE,KAFL,+BAK7D,OAAO3F,IAGTuT,EAA+B,CACjCC,eAAgB,EAChBC,eAAgB,GAChBC,QAAS,IAEAJ,EAA2B,CACpCvT,OADoC,SAC7BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,OAZ+B,IAA3BgB,EAAQwT,gBACRvT,EAAOE,OAAO,GAAGC,MAAMJ,EAAQwT,qBAEJ5S,IAA3BZ,EAAQ2T,gBACR7T,OAAUC,OAAOmK,GAAYlK,EAAQ2T,gBAAiB1T,EAAOE,OAAO,IAAIqF,QAAQC,SAErD,KAA3BzF,EAAQyT,gBACRxT,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyT,gBAEb,KAApBzT,EAAQ0T,SACRzT,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0T,SAE9BzT,GAEXK,OAhBoC,SAgB7BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTuT,GAEP,MAAO/S,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQwT,eAAiBxS,GAAaR,EAAOJ,SAC7C,MACJ,KAAK,EACDJ,EAAQ2T,eAAiB9I,GAAc/K,OAAUQ,OAAOE,EAAQA,EAAOL,WACvE,MACJ,KAAK,EACDH,EAAQyT,eAAiBjT,EAAO6B,SAChC,MACJ,KAAK,EACDrC,EAAQ0T,QAAUlT,EAAO6B,SACzB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA5CoC,SA4C3B9B,GACL,IAAMY,EAAU,kBACTuT,GA0BP,YAxB8B3S,IAA1BxB,EAAOoU,gBAA0D,OAA1BpU,EAAOoU,eAC9CxT,EAAQwT,eAAiBrS,OAAO/B,EAAOoU,gBAGvCxT,EAAQwT,eAAiB,OAEC5S,IAA1BxB,EAAOuU,gBAA0D,OAA1BvU,EAAOuU,eAC9C3T,EAAQ2T,eAAiB7I,GAAkB1L,EAAOuU,gBAGlD3T,EAAQ2T,oBAAiB/S,OAECA,IAA1BxB,EAAOqU,gBAA0D,OAA1BrU,EAAOqU,eAC9CzT,EAAQyT,eAAiBnR,OAAOlD,EAAOqU,gBAGvCzT,EAAQyT,eAAiB,QAEN7S,IAAnBxB,EAAOsU,SAA4C,OAAnBtU,EAAOsU,QACvC1T,EAAQ0T,QAAUpR,OAAOlD,EAAOsU,SAGhC1T,EAAQ0T,QAAU,GAEf1T,GAEXoB,OA1EoC,SA0E7BpB,GACH,IAAMqB,EAAM,GAWZ,YAV2BT,IAA3BZ,EAAQwT,iBACHnS,EAAImS,eAAiBxT,EAAQwT,qBACP5S,IAA3BZ,EAAQ2T,iBACHtS,EAAIsS,oBAC0B/S,IAA3BZ,EAAQ2T,eACF3T,EAAQ2T,eAAe5I,cACvB,WACanK,IAA3BZ,EAAQyT,iBACHpS,EAAIoS,eAAiBzT,EAAQyT,qBACd7S,IAApBZ,EAAQ0T,UAA0BrS,EAAIqS,QAAU1T,EAAQ0T,SACjDrS,GAEXC,YAxFoC,SAwFxBlC,GACR,IAAMY,EAAU,kBACTuT,GA0BP,YAxB8B3S,IAA1BxB,EAAOoU,gBAA0D,OAA1BpU,EAAOoU,eAC9CxT,EAAQwT,eAAiBpU,EAAOoU,eAGhCxT,EAAQwT,eAAiB,OAEC5S,IAA1BxB,EAAOuU,gBAA0D,OAA1BvU,EAAOuU,eAC9C3T,EAAQ2T,eAAiBvU,EAAOuU,eAGhC3T,EAAQ2T,oBAAiB/S,OAECA,IAA1BxB,EAAOqU,gBAA0D,OAA1BrU,EAAOqU,eAC9CzT,EAAQyT,eAAiBrU,EAAOqU,eAGhCzT,EAAQyT,eAAiB,QAEN7S,IAAnBxB,EAAOsU,SAA4C,OAAnBtU,EAAOsU,QACvC1T,EAAQ0T,QAAUtU,EAAOsU,QAGzB1T,EAAQ0T,QAAU,GAEf1T,IAGT4T,EAAwB,CAC1BJ,eAAgB,EAChBC,eAAgB,GAChBI,UAAW,IAEFC,EAAoB,CAC7B/T,OAD6B,SACtBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,OAZ+B,IAA3BgB,EAAQwT,gBACRvT,EAAOE,OAAO,GAAGC,MAAMJ,EAAQwT,qBAEJ5S,IAA3BZ,EAAQ2T,gBACR7T,OAAUC,OAAOmK,GAAYlK,EAAQ2T,gBAAiB1T,EAAOE,OAAO,IAAIqF,QAAQC,SAErD,KAA3BzF,EAAQyT,gBACRxT,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyT,gBAEX,KAAtBzT,EAAQ6T,WACR5T,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ6T,WAE9B5T,GAEXK,OAhB6B,SAgBtBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4T,GACrB,MAAOpT,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQwT,eAAiBxS,GAAaR,EAAOJ,SAC7C,MACJ,KAAK,EACDJ,EAAQ2T,eAAiB9I,GAAc/K,OAAUQ,OAAOE,EAAQA,EAAOL,WACvE,MACJ,KAAK,EACDH,EAAQyT,eAAiBjT,EAAO6B,SAChC,MACJ,KAAK,EACDrC,EAAQ6T,UAAYrT,EAAO6B,SAC3B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1C6B,SA0CpB9B,GACL,IAAMY,EAAU,kBAAK4T,GAyBrB,YAxB8BhT,IAA1BxB,EAAOoU,gBAA0D,OAA1BpU,EAAOoU,eAC9CxT,EAAQwT,eAAiBrS,OAAO/B,EAAOoU,gBAGvCxT,EAAQwT,eAAiB,OAEC5S,IAA1BxB,EAAOuU,gBAA0D,OAA1BvU,EAAOuU,eAC9C3T,EAAQ2T,eAAiB7I,GAAkB1L,EAAOuU,gBAGlD3T,EAAQ2T,oBAAiB/S,OAECA,IAA1BxB,EAAOqU,gBAA0D,OAA1BrU,EAAOqU,eAC9CzT,EAAQyT,eAAiBnR,OAAOlD,EAAOqU,gBAGvCzT,EAAQyT,eAAiB,QAEJ7S,IAArBxB,EAAOyU,WAAgD,OAArBzU,EAAOyU,UACzC7T,EAAQ6T,UAAYvR,OAAOlD,EAAOyU,WAGlC7T,EAAQ6T,UAAY,GAEjB7T,GAEXoB,OAtE6B,SAsEtBpB,GACH,IAAMqB,EAAM,GAWZ,YAV2BT,IAA3BZ,EAAQwT,iBACHnS,EAAImS,eAAiBxT,EAAQwT,qBACP5S,IAA3BZ,EAAQ2T,iBACHtS,EAAIsS,oBAC0B/S,IAA3BZ,EAAQ2T,eACF3T,EAAQ2T,eAAe5I,cACvB,WACanK,IAA3BZ,EAAQyT,iBACHpS,EAAIoS,eAAiBzT,EAAQyT,qBACZ7S,IAAtBZ,EAAQ6T,YAA4BxS,EAAIwS,UAAY7T,EAAQ6T,WACrDxS,GAEXC,YApF6B,SAoFjBlC,GACR,IAAMY,EAAU,kBAAK4T,GAyBrB,YAxB8BhT,IAA1BxB,EAAOoU,gBAA0D,OAA1BpU,EAAOoU,eAC9CxT,EAAQwT,eAAiBpU,EAAOoU,eAGhCxT,EAAQwT,eAAiB,OAEC5S,IAA1BxB,EAAOuU,gBAA0D,OAA1BvU,EAAOuU,eAC9C3T,EAAQ2T,eAAiBvU,EAAOuU,eAGhC3T,EAAQ2T,oBAAiB/S,OAECA,IAA1BxB,EAAOqU,gBAA0D,OAA1BrU,EAAOqU,eAC9CzT,EAAQyT,eAAiBrU,EAAOqU,eAGhCzT,EAAQyT,eAAiB,QAEJ7S,IAArBxB,EAAOyU,WAAgD,OAArBzU,EAAOyU,UACzC7T,EAAQ6T,UAAYzU,EAAOyU,UAG3B7T,EAAQ6T,UAAY,GAEjB7T,IAGT+T,EAAmB,CACrB5B,iBAAkB,GAClBO,oBAAqB,GACrBC,oBAAqB,IAEZqB,EAAe,CACxBjU,OADwB,SACjBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACK,KAA7BgB,EAAQmS,kBACRlS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmS,kBAED,KAAhCnS,EAAQ0S,qBACRzS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0S,qBAED,KAAhC1S,EAAQ2S,qBACR1S,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ2S,qBARC,uBAUtB3S,EAAQqT,SAVc,IAUtC,2BAAiC,KAAtB/N,EAAsB,QAC7BwO,EAAkB/T,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAXpB,8BAatC,OAAOxF,GAEXK,OAhBwB,SAgBjBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK+T,GACrB/T,EAAQqT,QAAU,GAClB,MAAO7S,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmS,iBAAmB3R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQ0S,oBAAsBlS,EAAO6B,SACrC,MACJ,KAAK,EACDrC,EAAQ2S,oBAAsBnS,EAAO6B,SACrC,MACJ,KAAK,EACDrC,EAAQqT,QAAQzW,KAAKkX,EAAkBxT,OAAOE,EAAQA,EAAOL,WAC7D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA3CwB,SA2Cf9B,GACL,IAAMY,EAAU,kBAAK+T,GAuBrB,GAtBA/T,EAAQqT,QAAU,QACczS,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB7P,OAAOlD,EAAO+S,kBAGzCnS,EAAQmS,iBAAmB,QAEIvR,IAA/BxB,EAAOsT,qBACwB,OAA/BtT,EAAOsT,oBACP1S,EAAQ0S,oBAAsBpQ,OAAOlD,EAAOsT,qBAG5C1S,EAAQ0S,oBAAsB,QAEC9R,IAA/BxB,EAAOuT,qBACwB,OAA/BvT,EAAOuT,oBACP3S,EAAQ2S,oBAAsBrQ,OAAOlD,EAAOuT,qBAG5C3S,EAAQ2S,oBAAsB,QAEX/R,IAAnBxB,EAAOiU,SAA4C,OAAnBjU,EAAOiU,QAAkB,wBACzCjU,EAAOiU,SADkC,IACzD,2BAAgC,KAArB1N,EAAqB,QAC5B3F,EAAQqT,QAAQzW,KAAKkX,EAAkB5S,SAASyE,KAFK,+BAK7D,OAAO3F,GAEXoB,OA1EwB,SA0EjBpB,GACH,IAAMqB,EAAM,GAaZ,YAZ6BT,IAA7BZ,EAAQmS,mBACH9Q,EAAI8Q,iBAAmBnS,EAAQmS,uBACJvR,IAAhCZ,EAAQ0S,sBACHrR,EAAIqR,oBAAsB1S,EAAQ0S,0BACP9R,IAAhCZ,EAAQ2S,sBACHtR,EAAIsR,oBAAsB3S,EAAQ2S,qBACnC3S,EAAQqT,QACRhS,EAAIgS,QAAUrT,EAAQqT,QAAQzN,KAAI,SAACD,GAAD,OAAOA,EAAImO,EAAkB1S,OAAOuE,QAAK/E,KAG3ES,EAAIgS,QAAU,GAEXhS,GAEXC,YA1FwB,SA0FZlC,GACR,IAAMY,EAAU,kBAAK+T,GAuBrB,GAtBA/T,EAAQqT,QAAU,QACczS,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB/S,EAAO+S,iBAGlCnS,EAAQmS,iBAAmB,QAEIvR,IAA/BxB,EAAOsT,qBACwB,OAA/BtT,EAAOsT,oBACP1S,EAAQ0S,oBAAsBtT,EAAOsT,oBAGrC1S,EAAQ0S,oBAAsB,QAEC9R,IAA/BxB,EAAOuT,qBACwB,OAA/BvT,EAAOuT,oBACP3S,EAAQ2S,oBAAsBvT,EAAOuT,oBAGrC3S,EAAQ2S,oBAAsB,QAEX/R,IAAnBxB,EAAOiU,SAA4C,OAAnBjU,EAAOiU,QAAkB,wBACzCjU,EAAOiU,SADkC,IACzD,2BAAgC,KAArB1N,EAAqB,QAC5B3F,EAAQqT,QAAQzW,KAAKkX,EAAkBxS,YAAYqE,KAFE,+BAK7D,OAAO3F,IAGTiU,EAAa,CACfC,cAAe,EACfC,WAAY,EACZC,kBAAmB,EACnBC,UAAW,IAEFC,EAAS,CAClBvU,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAgB5B,YAf8B4B,IAA1BZ,EAAQ6R,eACRlJ,OAAS5I,OAAOC,EAAQ6R,cAAe5R,EAAOE,OAAO,IAAIqF,QAAQC,SAEvC,IAA1BzF,EAAQkU,eACRjU,EAAOE,OAAO,IAAIA,OAAOH,EAAQkU,eAEV,IAAvBlU,EAAQmU,YACRlU,EAAOE,OAAO,IAAIA,OAAOH,EAAQmU,YAEH,IAA9BnU,EAAQoU,mBACRnU,EAAOE,OAAO,IAAIA,OAAOH,EAAQoU,mBAEX,KAAtBpU,EAAQqU,WACRpU,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQqU,WAE9BpU,GAEXK,OAnBkB,SAmBXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiU,GACrB,MAAOzT,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6R,cAAgBlJ,OAASrI,OAAOE,EAAQA,EAAOL,UACvD,MACJ,KAAK,EACDH,EAAQkU,cAAgB1T,EAAOL,SAC/B,MACJ,KAAK,EACDH,EAAQmU,WAAa3T,EAAOL,SAC5B,MACJ,KAAK,EACDH,EAAQoU,kBAAoB5T,EAAOL,SACnC,MACJ,KAAK,EACDH,EAAQqU,UAAY7T,EAAO6B,SAC3B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhDkB,SAgDT9B,GACL,IAAMY,EAAU,kBAAKiU,GAgCrB,YA/B6BrT,IAAzBxB,EAAOyS,eAAwD,OAAzBzS,EAAOyS,cAC7C7R,EAAQ6R,cAAgBlJ,OAASzH,SAAS9B,EAAOyS,eAGjD7R,EAAQ6R,mBAAgBjR,OAECA,IAAzBxB,EAAO8U,eAAwD,OAAzB9U,EAAO8U,cAC7ClU,EAAQkU,cAAgB/S,OAAO/B,EAAO8U,eAGtClU,EAAQkU,cAAgB,OAEFtT,IAAtBxB,EAAO+U,YAAkD,OAAtB/U,EAAO+U,WAC1CnU,EAAQmU,WAAahT,OAAO/B,EAAO+U,YAGnCnU,EAAQmU,WAAa,OAEQvT,IAA7BxB,EAAOgV,mBACsB,OAA7BhV,EAAOgV,kBACPpU,EAAQoU,kBAAoBjT,OAAO/B,EAAOgV,mBAG1CpU,EAAQoU,kBAAoB,OAEPxT,IAArBxB,EAAOiV,WAAgD,OAArBjV,EAAOiV,UACzCrU,EAAQqU,UAAY/R,OAAOlD,EAAOiV,WAGlCrU,EAAQqU,UAAY,GAEjBrU,GAEXoB,OAnFkB,SAmFXpB,GACH,IAAMqB,EAAM,GAWZ,YAV0BT,IAA1BZ,EAAQ6R,gBACHxQ,EAAIwQ,cAAgB7R,EAAQ6R,cACvBlJ,OAASvH,OAAOpB,EAAQ6R,oBACxBjR,QACgBA,IAA1BZ,EAAQkU,gBACH7S,EAAI6S,cAAgBlU,EAAQkU,oBACVtT,IAAvBZ,EAAQmU,aAA6B9S,EAAI8S,WAAanU,EAAQmU,iBAChCvT,IAA9BZ,EAAQoU,oBACH/S,EAAI+S,kBAAoBpU,EAAQoU,wBACfxT,IAAtBZ,EAAQqU,YAA4BhT,EAAIgT,UAAYrU,EAAQqU,WACrDhT,GAEXC,YAjGkB,SAiGNlC,GACR,IAAMY,EAAU,kBAAKiU,GAgCrB,YA/B6BrT,IAAzBxB,EAAOyS,eAAwD,OAAzBzS,EAAOyS,cAC7C7R,EAAQ6R,cAAgBlJ,OAASrH,YAAYlC,EAAOyS,eAGpD7R,EAAQ6R,mBAAgBjR,OAECA,IAAzBxB,EAAO8U,eAAwD,OAAzB9U,EAAO8U,cAC7ClU,EAAQkU,cAAgB9U,EAAO8U,cAG/BlU,EAAQkU,cAAgB,OAEFtT,IAAtBxB,EAAO+U,YAAkD,OAAtB/U,EAAO+U,WAC1CnU,EAAQmU,WAAa/U,EAAO+U,WAG5BnU,EAAQmU,WAAa,OAEQvT,IAA7BxB,EAAOgV,mBACsB,OAA7BhV,EAAOgV,kBACPpU,EAAQoU,kBAAoBhV,EAAOgV,kBAGnCpU,EAAQoU,kBAAoB,OAEPxT,IAArBxB,EAAOiV,WAAgD,OAArBjV,EAAOiV,UACzCrU,EAAQqU,UAAYjV,EAAOiV,UAG3BrU,EAAQqU,UAAY,GAEjBrU,IAGTuU,EAAyB,GAClBC,EAAqB,CAC9BzU,OAD8B,SACvBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,YAN2B4B,IAAvBZ,EAAQyU,YACRvB,EAAWnT,OAAOC,EAAQyU,WAAYxU,EAAOE,OAAO,IAAIqF,QAAQC,cAE5C7E,IAApBZ,EAAQ0T,SACR3H,OAAKhM,OAAOC,EAAQ0T,QAASzT,EAAOE,OAAO,IAAIqF,QAAQC,SAEpDxF,GAEXK,OAV8B,SAUvBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKuU,GACrB,MAAO/T,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyU,WAAavB,EAAW5S,OAAOE,EAAQA,EAAOL,UACtD,MACJ,KAAK,EACDH,EAAQ0T,QAAU3H,OAAKzL,OAAOE,EAAQA,EAAOL,UAC7C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9B8B,SA8BrB9B,GACL,IAAMY,EAAU,kBAAKuU,GAarB,YAZ0B3T,IAAtBxB,EAAOqV,YAAkD,OAAtBrV,EAAOqV,WAC1CzU,EAAQyU,WAAavB,EAAWhS,SAAS9B,EAAOqV,YAGhDzU,EAAQyU,gBAAa7T,OAEFA,IAAnBxB,EAAOsU,SAA4C,OAAnBtU,EAAOsU,QACvC1T,EAAQ0T,QAAU3H,OAAK7K,SAAS9B,EAAOsU,SAGvC1T,EAAQ0T,aAAU9S,EAEfZ,GAEXoB,OA9C8B,SA8CvBpB,GACH,IAAMqB,EAAM,GAOZ,YANuBT,IAAvBZ,EAAQyU,aACHpT,EAAIoT,WAAazU,EAAQyU,WACpBvB,EAAW9R,OAAOpB,EAAQyU,iBAC1B7T,QACUA,IAApBZ,EAAQ0T,UACHrS,EAAIqS,QAAU1T,EAAQ0T,QAAU3H,OAAK3K,OAAOpB,EAAQ0T,cAAW9S,GAC7DS,GAEXC,YAxD8B,SAwDlBlC,GACR,IAAMY,EAAU,kBAAKuU,GAarB,YAZ0B3T,IAAtBxB,EAAOqV,YAAkD,OAAtBrV,EAAOqV,WAC1CzU,EAAQyU,WAAavB,EAAW5R,YAAYlC,EAAOqV,YAGnDzU,EAAQyU,gBAAa7T,OAEFA,IAAnBxB,EAAOsU,SAA4C,OAAnBtU,EAAOsU,QACvC1T,EAAQ0T,QAAU3H,OAAKzK,YAAYlC,EAAOsU,SAG1C1T,EAAQ0T,aAAU9S,EAEfZ,IAGT0U,EAAgC,CAAEhB,QAAS,IACpCiB,EAA4B,CACrC5U,OADqC,SAC9BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,YANkC4B,IAA9BZ,EAAQ4U,mBACRd,EAAkB/T,OAAOC,EAAQ4U,kBAAmB3U,EAAOE,OAAO,IAAIqF,QAAQC,SAE1D,KAApBzF,EAAQ0T,SACRzT,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0T,SAE9BzT,GAEXK,OAVqC,SAU9BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACT0U,GAEP,MAAOlU,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4U,kBAAoBd,EAAkBxT,OAAOE,EAAQA,EAAOL,UACpE,MACJ,KAAK,EACDH,EAAQ0T,QAAUlT,EAAO6B,SACzB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhCqC,SAgC5B9B,GACL,IAAMY,EAAU,kBACT0U,GAeP,YAbiC9T,IAA7BxB,EAAOwV,mBACsB,OAA7BxV,EAAOwV,kBACP5U,EAAQ4U,kBAAoBd,EAAkB5S,SAAS9B,EAAOwV,mBAG9D5U,EAAQ4U,uBAAoBhU,OAETA,IAAnBxB,EAAOsU,SAA4C,OAAnBtU,EAAOsU,QACvC1T,EAAQ0T,QAAUpR,OAAOlD,EAAOsU,SAGhC1T,EAAQ0T,QAAU,GAEf1T,GAEXoB,OAnDqC,SAmD9BpB,GACH,IAAMqB,EAAM,GAMZ,YAL8BT,IAA9BZ,EAAQ4U,oBACHvT,EAAIuT,kBAAoB5U,EAAQ4U,kBAC3Bd,EAAkB1S,OAAOpB,EAAQ4U,wBACjChU,QACUA,IAApBZ,EAAQ0T,UAA0BrS,EAAIqS,QAAU1T,EAAQ0T,SACjDrS,GAEXC,YA5DqC,SA4DzBlC,GACR,IAAMY,EAAU,kBACT0U,GAeP,YAbiC9T,IAA7BxB,EAAOwV,mBACsB,OAA7BxV,EAAOwV,kBACP5U,EAAQ4U,kBAAoBd,EAAkBxS,YAAYlC,EAAOwV,mBAGjE5U,EAAQ4U,uBAAoBhU,OAETA,IAAnBxB,EAAOsU,SAA4C,OAAnBtU,EAAOsU,QACvC1T,EAAQ0T,QAAUtU,EAAOsU,QAGzB1T,EAAQ0T,QAAU,GAEf1T,IAGT6U,EAA2B,GACpBC,EAAuB,CAChC/U,OADgC,SACzBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,cACC4B,IAAzBZ,EAAQ+U,cACRf,EAAajU,OAAOC,EAAQ+U,aAAc9U,EAAOE,OAAO,IAAIqF,QAAQC,SAFlC,uBAItBzF,EAAQqT,SAJc,IAItC,2BAAiC,KAAtB/N,EAAsB,QAC7BqP,EAA0B5U,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAL5B,8BAOtC,OAAOxF,GAEXK,OAVgC,SAUzBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6U,GACrB7U,EAAQqT,QAAU,GAClB,MAAO7S,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+U,aAAef,EAAa1T,OAAOE,EAAQA,EAAOL,UAC1D,MACJ,KAAK,EACDH,EAAQqT,QAAQzW,KAAK+X,EAA0BrU,OAAOE,EAAQA,EAAOL,WACrE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/BgC,SA+BvB9B,GACL,IAAMY,EAAU,kBAAK6U,GAQrB,GAPA7U,EAAQqT,QAAU,QACUzS,IAAxBxB,EAAO2V,cAAsD,OAAxB3V,EAAO2V,aAC5C/U,EAAQ+U,aAAef,EAAa9S,SAAS9B,EAAO2V,cAGpD/U,EAAQ+U,kBAAenU,OAEJA,IAAnBxB,EAAOiU,SAA4C,OAAnBjU,EAAOiU,QAAkB,wBACzCjU,EAAOiU,SADkC,IACzD,2BAAgC,KAArB1N,EAAqB,QAC5B3F,EAAQqT,QAAQzW,KAAK+X,EAA0BzT,SAASyE,KAFH,+BAK7D,OAAO3F,GAEXoB,OA/CgC,SA+CzBpB,GACH,IAAMqB,EAAM,GAWZ,YAVyBT,IAAzBZ,EAAQ+U,eACH1T,EAAI0T,aAAe/U,EAAQ+U,aACtBf,EAAa5S,OAAOpB,EAAQ+U,mBAC5BnU,GACNZ,EAAQqT,QACRhS,EAAIgS,QAAUrT,EAAQqT,QAAQzN,KAAI,SAACD,GAAD,OAAOA,EAAIgP,EAA0BvT,OAAOuE,QAAK/E,KAGnFS,EAAIgS,QAAU,GAEXhS,GAEXC,YA7DgC,SA6DpBlC,GACR,IAAMY,EAAU,kBAAK6U,GAQrB,GAPA7U,EAAQqT,QAAU,QACUzS,IAAxBxB,EAAO2V,cAAsD,OAAxB3V,EAAO2V,aAC5C/U,EAAQ+U,aAAef,EAAa1S,YAAYlC,EAAO2V,cAGvD/U,EAAQ+U,kBAAenU,OAEJA,IAAnBxB,EAAOiU,SAA4C,OAAnBjU,EAAOiU,QAAkB,wBACzCjU,EAAOiU,SADkC,IACzD,2BAAgC,KAArB1N,EAAqB,QAC5B3F,EAAQqT,QAAQzW,KAAK+X,EAA0BrT,YAAYqE,KAFN,+BAK7D,OAAO3F,IAGTgV,EAAW,CAAEC,gBAAiB,GAAIC,aAAc,IACzCC,GAAO,CAChBpV,OADgB,SACTC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANgC,KAA5BgB,EAAQiV,iBACRhV,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQiV,iBAER,KAAzBjV,EAAQkV,cACRjV,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQkV,cAE9BjV,GAEXK,OAVgB,SAUTC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKgV,GACrB,MAAOxU,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQiV,gBAAkBzU,EAAO6B,SACjC,MACJ,KAAK,EACDrC,EAAQkV,aAAe1U,EAAO6B,SAC9B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BgB,SA8BP9B,GACL,IAAMY,EAAU,kBAAKgV,GAcrB,YAb+BpU,IAA3BxB,EAAO6V,iBACoB,OAA3B7V,EAAO6V,gBACPjV,EAAQiV,gBAAkB3S,OAAOlD,EAAO6V,iBAGxCjV,EAAQiV,gBAAkB,QAEFrU,IAAxBxB,EAAO8V,cAAsD,OAAxB9V,EAAO8V,aAC5ClV,EAAQkV,aAAe5S,OAAOlD,EAAO8V,cAGrClV,EAAQkV,aAAe,GAEpBlV,GAEXoB,OA/CgB,SA+CTpB,GACH,IAAMqB,EAAM,GAKZ,YAJ4BT,IAA5BZ,EAAQiV,kBACH5T,EAAI4T,gBAAkBjV,EAAQiV,sBACVrU,IAAzBZ,EAAQkV,eACH7T,EAAI6T,aAAelV,EAAQkV,cACzB7T,GAEXC,YAvDgB,SAuDJlC,GACR,IAAMY,EAAU,kBAAKgV,GAcrB,YAb+BpU,IAA3BxB,EAAO6V,iBACoB,OAA3B7V,EAAO6V,gBACPjV,EAAQiV,gBAAkB7V,EAAO6V,gBAGjCjV,EAAQiV,gBAAkB,QAEFrU,IAAxBxB,EAAO8V,cAAsD,OAAxB9V,EAAO8V,aAC5ClV,EAAQkV,aAAe9V,EAAO8V,aAG9BlV,EAAQkV,aAAe,GAEpBlV,IAGXuB,GAAc,WACd,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAASyI,GAAYc,GACjB,IAAMpL,EAAUoL,EAAKC,UAAY,IAC3BpL,EAASmL,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAErL,UAASC,SAEtB,SAASgL,GAAcjM,GACnB,IAAIsM,EAAqB,IAAZtM,EAAEgB,QAEf,OADAsL,GAAUtM,EAAEiB,MAAQ,IACb,IAAIsL,KAAKD,GAEpB,SAASJ,GAAkB1M,GACvB,OAAIA,aAAa+M,KACN/M,EAEW,kBAANA,EACL,IAAI+M,KAAK/M,GAGTyM,GAAc/K,OAAUoB,SAAS9C,IAGhD,SAAS4C,GAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,GAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,wVC1kEQ,EAAAmT,a,yBAAX,gCAUM,SATL,yBAA2E,GAAjEC,IAAI,SAAc,iBAAe,+BAAE,EAAAC,MAAMC,KAAKC,mB,UACxD,yBAOW,QANOC,QAAO,sBACvB,iBAAW,CAAX,yBAAW,OAEKtR,QAAO,sBACvB,iBAAe,CAAf,yBAAe,O,iGCChB,gCAA2B,OAAtBuR,MAAM,WAAS,U,EAYpB,gCAAwC,OAAnCA,MAAM,WAAU,iBAAa,G,mSApBpC,yBAsBY,GArBN,cAAY,+BAAE,EAAAC,aAAW,IACzB,eAAa,+BAAE,EAAAA,aAAW,K,CAEdC,QAAO,sBACvB,iBAAyD,CAAzD,yBAAyD,GAA7CC,KAAK,IAAIC,KAAK,YAAYC,KAAK,cAC3C,yBAA2D,GAA/CF,KAAK,SAASC,KAAK,cAAcC,KAAK,SAClD,yBAAmE,GAAvDF,KAAK,YAAYC,KAAK,WAAWC,KAAK,iBAClD,EACA,yBAKE,GAJDC,KAAK,yCACLC,OAAO,SACPH,KAAK,gBACLC,KAAK,aAGUG,OAAM,sBACtB,iBAAuC,CAAvC,yBAAuC,GAAzBC,SAAU,EAAAR,aAAW,qBACnC,yBAAuC,GAAzBQ,SAAU,EAAAR,aAAW,qBACnC,yBAAsC,GAAzBQ,SAAU,EAAAR,aAAW,qBAClC,M,MAMY,OACdzX,KAAM,UACNpC,KAFc,WAGb,MAAO,CACN6Z,aAAa,IAGfS,SAAU,CACTC,UADS,WAER,OAAOC,KAAKC,OAAOC,UAAU,CAAC,SAAU,cCjC3C,EAAOC,OAAS,EAED,QFoBA,GACdC,WAAY,CACXC,WAED7a,KAJc,WAKb,MAAO,CACNsZ,aAAa,IAGfgB,SAAU,CACTC,UADS,WAER,OAAOC,KAAKC,OAAOC,UAAU,CAAC,SAAU,aAGpCI,QAdQ,WAcE,wKACT,EAAKL,OAAOM,SAAS,mBADZ,OAEf,EAAKzB,aAAc,EAFJ,8CAIhB0B,cAlBc,SAkBAC,GAEb,OADAC,QAAQC,IAAIF,IACL,I,UGxCT,EAAON,OAASA,EAED,ICGJS,EDHI,I,4XCIf,SAAWA,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,IAAgBA,EAAc,KAC1B,IAAMC,EAAb,WACI,aAA4B,aAAhBC,EAAgB,uDAAJ,GAAI,uBACxBd,KAAKe,QAAU,GACff,KAAKgB,aAAe,KACpBhB,KAAKiB,eAAiB,KACtBjB,KAAKkB,iBAAmB,IAAIC,IAC5BnB,KAAKoB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpBxB,KAAKyB,gBAAkB,SAACjc,GACpB,EAAKwb,aAAexb,GAExBwa,KAAK0B,mBAAL,sBACKd,EAAYe,MAAO,SAAC1X,GAAD,OAAqB,OAAVA,GAAoC,WAAjB,eAAOA,IAAuC,kBAAVA,EAA8CA,EAAxB2X,KAAKC,UAAU5X,MAD/H,iBAEK2W,EAAYkB,UAAW,SAAC7X,GAAD,OAAWhE,OAAO8b,KAAK9X,GAAS,IAAI+X,QAAO,SAACxc,EAAMmD,GAEtE,OADAnD,EAAKyc,OAAOtZ,EAAKsB,EAAMtB,IAChBnD,IACR,IAAIsc,aALX,iBAMKlB,EAAYsB,YAAa,SAACjY,GAAD,OAAW,EAAKkY,cAAclY,MAN5D,GAQA+V,KAAKoC,kBAAoB,SAACC,GACtB,GAAI,EAAKnB,iBAAiBoB,IAAID,GAAc,CACxC,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAClD,OAAIE,EACOA,EAAgBC,YAE3B,EAEJ,IAAMD,EAAkB,IAAIE,gBAE5B,OADA,EAAKvB,iBAAiBwB,IAAIL,EAAaE,GAChCA,EAAgBC,QAE3BxC,KAAK2C,aAAe,SAACN,GACjB,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAC9CE,IACAA,EAAgBK,QAChB,EAAK1B,iBAAiB2B,OAAOR,KAGrCrC,KAAK8C,QAAU,YAA2F,IAAxFC,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQpV,EAA0E,EAA1EA,KAAMuD,EAAoE,EAApEA,KAAM8R,EAA8D,EAA9DA,MAA8D,IAAvDC,cAAuD,MAA9C,OAA8C,EAAtCnC,EAAsC,EAAtCA,QAASsB,EAA6B,EAA7BA,YAAgBc,EAAa,oBAChGC,EAAgBJ,GAAU,EAAK/B,gBAAkB,EAAKA,eAAe,EAAKD,eAAkB,GAC5FqC,EAAgB,EAAKC,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS,EAAKd,cAAcc,GAC1CO,EAAmB,EAAK9B,kBAAkBvQ,GAAQyP,EAAYe,MACpE,OAAO8B,MAAM,GAAD,OAAI1C,GAAW,EAAKA,SAAW,IAA/B,OAAoCnT,GAApC,OAA2C2V,EAAc,IAAH,OAAOA,GAAgB,IAA7E,eAAC,kBACNF,GADK,IAER/B,QAAS,iCACDnQ,GAAQA,IAASyP,EAAYkB,SAAW,CAAE,eAAgB3Q,GAAS,IACnEkS,EAAc/B,SAAW,IAEjCkB,OAAQH,EAAc,EAAKD,kBAAkBC,QAAe,EAC5DU,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOS,EAAiBT,MAC9EW,KARI,yDAQC,WAAOC,GAAP,gGACEzb,EAAIyb,EACVzb,EAAE1C,KAAO,KACT0C,EAAEkR,MAAQ,KAHN,SAIeuK,EAAST,KACvBQ,MAAK,SAACle,GAOP,OANI0C,EAAE0b,GACF1b,EAAE1C,KAAOA,EAGT0C,EAAEkR,MAAQ5T,EAEP0C,KAEN2b,OAAM,SAACxU,GAER,OADAnH,EAAEkR,MAAQ/J,EACHnH,KAhBP,UAIE1C,EAJF,OAkBA6c,GACA,EAAKnB,iBAAiB2B,OAAOR,GAE5BsB,EAASC,GArBV,sBAsBMpe,EAtBN,gCAuBGA,GAvBH,4CARD,wDAkCXS,OAAO6d,OAAO9D,KAAMc,GAjF5B,oDAmFI,SAAcmC,EAAOta,GACjB,IAAMN,EAAQ4a,EAAMta,GACpB,OAAQob,mBAAmBpb,GACvB,IACAob,mBAAmBC,MAAMC,QAAQ5b,GAASA,EAAMsG,KAAK,KAAwB,kBAAVtG,EAAqBA,EAA5B,UAAuCA,MAvF/G,2BAyFI,SAAc6b,GAAU,WACdjB,EAAQiB,GAAY,GACpBnC,EAAO9b,OAAO8b,KAAKkB,GAAOkB,QAAO,SAACxb,GAAD,MAAS,qBAAuBsa,EAAMta,MAC7E,OAAOoZ,EACFzS,KAAI,SAAC3G,GAAD,MAA+B,WAAtB,eAAOsa,EAAMta,KAAsBqb,MAAMC,QAAQhB,EAAMta,IAEnE,EAAKyb,cAAcnB,EAAOta,GAD1B,EAAKwZ,cAAcc,EAAMta,OAE1BgG,KAAK,OAhGlB,4BAkGI,SAAeuV,GACX,IAAMX,EAAcvD,KAAKmC,cAAc+B,GACvC,OAAOX,EAAc,IAAH,OAAOA,GAAgB,KApGjD,gCAsGI,SAAmBc,EAASC,GACxB,sEACOtE,KAAKoB,eACLiD,GACCC,GAAW,IAHnB,IAIIhD,QAAS,gDACDtB,KAAKoB,cAAcE,SAAW,IAC9B+C,EAAQ/C,SAAW,IAClBgD,GAAWA,EAAQhD,SAAY,UA9GpD,KAuHaiD,EAAb,wDACI,aAAc,oCACV,eAASC,WAST,EAAKC,4BAA8B,SAACC,GAAD,IAAKvB,EAAL,uDAAc,GAAd,OAAqB,EAAKL,QAAL,gBACpDlV,KAAM,gCAAF,OAAkC8W,GACtCC,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKyB,uBAAyB,SAAC3B,GAAD,IAAQE,EAAR,uDAAiB,GAAjB,OAAwB,EAAKL,QAAL,gBAClDlV,KAAM,4BACN+W,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAK0B,yBAA2B,SAACH,GAAD,IAAKvB,EAAL,uDAAc,GAAd,OAAqB,EAAKL,QAAL,gBACjDlV,KAAM,6BAAF,OAA+B8W,GACnCC,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK2B,mBAAqB,SAACpV,GAAD,IAAUyT,EAAV,uDAAmB,GAAnB,OAA0B,EAAKL,QAAL,gBAChDlV,KAAM,sBAAF,OAAwB8B,GAC5BiV,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK4B,mBAAqB,SAACrV,GAAD,IAAUyT,EAAV,uDAAmB,GAAnB,OAA0B,EAAKL,QAAL,gBAChDlV,KAAM,sBAAF,OAAwB8B,EAAxB,eACJiV,OAAQ,MACRzB,OAAQ,QACLC,KAWP,EAAK6B,cAAgB,SAACC,EAAKrX,GAAN,IAAYuV,EAAZ,uDAAqB,GAArB,OAA4B,EAAKL,QAAL,gBAC7ClV,KAAM,eAAF,OAAiBqX,EAAjB,YAAwBrX,GAC5B+W,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK+B,cAAgB,SAACD,EAAKhC,GAAN,IAAaE,EAAb,uDAAsB,GAAtB,OAA6B,EAAKL,QAAL,gBAC9ClV,KAAM,mBAAF,OAAqBqX,GACzBN,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAKgC,UAAY,SAACF,EAAKhC,GAAN,IAAaE,EAAb,uDAAsB,GAAtB,OAA6B,EAAKL,QAAL,gBAC1ClV,KAAM,UAAF,OAAYqX,GAChBN,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAKiC,kBAAoB,SAACH,EAAKrX,GAAN,IAAYuV,EAAZ,uDAAqB,GAArB,OAA4B,EAAKL,QAAL,gBACjDlV,KAAM,UAAF,OAAYqX,EAAZ,YAAmBrX,GACvB+W,OAAQ,MACRzB,OAAQ,QACLC,KAlIG,EADlB,UAAyBtC,G,YC5HnBwE,EAAQ,CACV,CAAC,8EAA+E/Y,QAChF,CAAC,gFAAiFF,QAClF,CAAC,6EAA8EN,QAC/E,CAAC,uEAAwEiB,QACzE,CAAC,6EAA8Eb,QAC/E,CAAC,0EAA2EwB,QAC5E,CAAC,sEAAuEM,SAE/DsX,EAAqB,IAAI/Z,MAAM,sBACtCga,EAAW,IAAIC,cAASH,GACxBI,EAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,EAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,EAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,aAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,EAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvHC,gBAAiB,SAAC9gB,GAAD,MAAW,CAAEqN,QAAS,8EAA+ExK,MAAO7C,IAC7H+gB,kBAAmB,SAAC/gB,GAAD,MAAW,CAAEqN,QAAS,gFAAiFxK,MAAO7C,IACjIghB,eAAgB,SAAChhB,GAAD,MAAW,CAAEqN,QAAS,6EAA8ExK,MAAO7C,IAC3HihB,SAAU,SAACjhB,GAAD,MAAW,CAAEqN,QAAS,uEAAwExK,MAAO7C,IAC/GkhB,eAAgB,SAAClhB,GAAD,MAAW,CAAEqN,QAAS,6EAA8ExK,MAAO7C,IAC3HmhB,YAAa,SAACnhB,GAAD,MAAW,CAAEqN,QAAS,0EAA2ExK,MAAO7C,IACrHohB,QAAS,SAACphB,GAAD,MAAW,CAAEqN,QAAS,sEAAuExK,MAAO7C,MAbpG,4CAAH,sDAgBRqhB,EAAW,yDAAG,0JAAwB,CAAEhB,KAAM,yBAAjBA,EAAf,EAASA,KAAT,kBACT,IAAItB,EAAI,CAAExD,QAAS8E,KADV,2CAAH,qD,8PCqSXiB,EAA0B,GACnBC,EAAsB,CAC/Btd,OAD+B,SACxBud,GAA6B,IAA1Brd,EAA0B,uDAAjBC,YAAOlB,SACtB,OAAOiB,GAEXK,OAJ+B,SAIxBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKod,GACrB,MAAO5c,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,QACIP,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAlB+B,SAkBtBoc,GACL,IAAMtd,EAAU,kBAAKod,GACrB,OAAOpd,GAEXoB,OAtB+B,SAsBxBkc,GACH,IAAMjc,EAAM,GACZ,OAAOA,GAEXC,YA1B+B,SA0BnBgc,GACR,IAAMtd,EAAU,kBAAKod,GACrB,OAAOpd,I,SCtWAud,E,gGAAf,WAA4BC,GAA5B,iGACiBvB,EAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,iCAKeC,E,gGAAf,WAA+BD,GAA/B,iGACiBL,EAAY,CACrBhB,KAAMqB,EAAY,0BAF1B,mF,wBAKA,SAASE,EAAa/e,EAAOgf,GACzB,cAAiBphB,OAAO8b,KAAKsF,GAA7B,eAA2C,CAAtC,IAAIC,EAAI,KACLtD,MAAMC,QAAQoD,EAAYC,IAC1Bjf,EAAMif,GAAN,yBAAkBjf,EAAMif,IAAxB,eAAkCD,EAAYC,KAG9Cjf,EAAMif,GAAQD,EAAYC,GAGlC,OAAOjf,EAEX,SAASkf,EAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,IC3BW7G,ED2BLgH,EAAkB,WACpB,MAAO,CACHC,aAAc,GACdC,SAAU,GACVC,KAAM,GACNC,cAAe,GACfC,cAAe,GACfC,SAAU,GACVC,kBAAmB,GACnBC,oBAAqB,GACrBC,uBAAwB,GACxBC,WAAY,CACRvB,oBAAqBQ,EAAaR,EAAoB/b,YAAY,KAClEwB,wBAAyB+a,EAAa/a,OAAwBxB,YAAY,MAE9Eud,eAAgB,IAAIC,MAItB5Q,EAAQgQ,IACC,GACXa,YAAY,EACZ7Q,QACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,MAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACLC,gBAAiB,SAACtR,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI5C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMiQ,aAAajG,KAAKC,UAAUsB,WAAzC,QAAqD,KAEzDgG,YAAa,SAACvR,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIxC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMkQ,SAASlG,KAAKC,UAAUsB,WAArC,QAAiD,KAErDiG,QAAS,SAACxR,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIpC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMmQ,KAAKnG,KAAKC,UAAUsB,WAAjC,QAA6C,KAEjDkG,iBAAkB,SAACzR,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI7C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMoQ,cAAcpG,KAAKC,UAAUsB,WAA1C,QAAsD,KAE1DmG,iBAAkB,SAAC1R,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI7C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMqQ,cAAcrG,KAAKC,UAAUsB,WAA1C,QAAsD,KAE1DoG,YAAa,SAAC3R,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIxC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMsQ,SAAStG,KAAKC,UAAUsB,WAArC,QAAiD,KAErDqG,qBAAsB,SAAC5R,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIjD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMuQ,kBAAkBvG,KAAKC,UAAUsB,WAA9C,QAA0D,KAE9DsG,uBAAwB,SAAC7R,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAInD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMwQ,oBAAoBxG,KAAKC,UAAUsB,WAAhD,QAA4D,KAEhEuG,0BAA2B,SAAC9R,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAItD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMyQ,uBAAuBzG,KAAKC,UAAUsB,WAAnD,QAA+D,KAEnEwG,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,wFACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjC8gB,kBAzBD,cAyB2J,gLAAtIP,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE9HkE,EAAgB2C,GAF8G,cAElJjD,EAFkJ,iBAGrIA,EAAYzB,kBAAkBzc,EAAIsc,IAAKtc,EAAIiF,MAH0F,eAGpJvF,EAHoJ,OAGnF7C,KACrEykB,EAAO,QAAS,CAAEhH,MAAO,eAAgBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACzEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,oBAAqBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOjJgG,EAAQ,mBAAmB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUlJ,IAAIsH,iBAAY,gCAAiC,kDAAoD,KAAE7gB,SAV2C,6DAa1JkhB,cAtCD,cAsCuJ,gLAAtIX,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE1HkE,EAAgB2C,GAF0G,cAE9IjD,EAF8I,iBAGjIA,EAAY7B,cAAcrc,EAAIsc,IAAKtc,EAAIiF,MAH0F,eAGhJvF,EAHgJ,OAGnF7C,KACjEykB,EAAO,QAAS,CAAEhH,MAAO,WAAYta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACrEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,gBAAiBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO7IgG,EAAQ,eAAe,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU9I,IAAIsH,iBAAY,4BAA6B,kDAAoD,KAAE7gB,SAV2C,6DAatJmhB,UAnDD,cAmDmJ,kLAAtIZ,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEtHkE,EAAgB2C,GAFsG,cAE1IjD,EAF0I,iBAG7HA,EAAY1B,UAAUxc,EAAIsc,IAAKhC,GAH8F,QAG5I5a,EAH4I,OAGtF7C,KAHsF,YAIzImlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJ6F,kCAKnHlE,EAAY1B,UAAUxc,EAAIsc,IAA1B,iCAAoChC,GAApC,IAA2C,iBAAkB5a,EAAMyiB,WAAWC,WALqC,QAKxI1D,EALwI,OAKzB7hB,KACnH6C,EAAQ+e,EAAa/e,EAAOgf,GANgH,+BAQhJ4C,EAAO,QAAS,CAAEhH,MAAO,OAAQta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACjEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,YAAaC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWzIgG,EAAQ,WAAW,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAc1I,IAAIsH,iBAAY,wBAAyB,kDAAoD,KAAE7gB,SAd2C,6DAiBlJshB,mBApED,cAoE4J,gLAAtIf,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE/HkE,EAAgB2C,GAF+G,cAEnJjD,EAFmJ,iBAGtIA,EAAY/B,mBAAmBnc,EAAI+G,SAHmG,eAGrJrH,EAHqJ,OAGzF7C,KAChEykB,EAAO,QAAS,CAAEhH,MAAO,gBAAiBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC1EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,qBAAsBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOlJgG,EAAQ,oBAAoB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUnJ,IAAIsH,iBAAY,iCAAkC,kDAAoD,KAAE7gB,SAV2C,6DAa3JuhB,mBAjFD,cAiF4J,gLAAtIhB,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE/HkE,EAAgB2C,GAF+G,cAEnJjD,EAFmJ,iBAGtIA,EAAY9B,mBAAmBpc,EAAI+G,SAHmG,eAGrJrH,EAHqJ,OAGzF7C,KAChEykB,EAAO,QAAS,CAAEhH,MAAO,gBAAiBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC1EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,qBAAsBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOlJgG,EAAQ,oBAAoB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUnJ,IAAIsH,iBAAY,iCAAkC,kDAAoD,KAAE7gB,SAV2C,6DAa3JwhB,cA9FD,cA8FuJ,kLAAtIjB,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE1HkE,EAAgB2C,GAF0G,cAE9IjD,EAF8I,iBAGjIA,EAAY3B,cAAcvc,EAAIsc,IAAKhC,GAH8F,QAGhJ5a,EAHgJ,OAGtF7C,KAHsF,YAI7ImlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJiG,kCAKvHlE,EAAY3B,cAAcvc,EAAIsc,IAA9B,iCAAwChC,GAAxC,IAA+C,iBAAkB5a,EAAMyiB,WAAWC,WALqC,QAK5I1D,EAL4I,OAKzB7hB,KACvH6C,EAAQ+e,EAAa/e,EAAOgf,GANoH,+BAQpJ4C,EAAO,QAAS,CAAEhH,MAAO,WAAYta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACrEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,gBAAiBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAW7IgG,EAAQ,eAAe,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAc9I,IAAIsH,iBAAY,4BAA6B,kDAAoD,KAAE7gB,SAd2C,6DAiBtJyhB,uBA/GD,cA+GgK,kLAAtIlB,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEnIkE,EAAgB2C,GAFmH,cAEvJjD,EAFuJ,iBAG1IA,EAAYjC,uBAAuB3B,GAHuG,QAGzJ5a,EAHyJ,OAG/F7C,KAH+F,YAItJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJ0G,kCAKhIlE,EAAYjC,uBAAZ,iCAAwC3B,GAAxC,IAA+C,iBAAkB5a,EAAMyiB,WAAWC,WAL8C,QAKrJ1D,EALqJ,OAKlC7hB,KACvH6C,EAAQ+e,EAAa/e,EAAOgf,GAN6H,+BAQ7J4C,EAAO,QAAS,CAAEhH,MAAO,oBAAqBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC9EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,yBAA0BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWtJgG,EAAQ,wBAAwB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAcvJ,IAAIsH,iBAAY,qCAAsC,kDAAoD,KAAE7gB,SAd2C,6DAiB/J0hB,yBAhID,cAgIkK,gLAAtInB,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAErIkE,EAAgB2C,GAFqH,cAEzJjD,EAFyJ,iBAG5IA,EAAYhC,yBAAyBlc,EAAI+b,IAHmG,eAG3Jrc,EAH2J,OAG9F7C,KACjEykB,EAAO,QAAS,CAAEhH,MAAO,sBAAuBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAChFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,2BAA4BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOxJgG,EAAQ,0BAA0B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUzJ,IAAIsH,iBAAY,uCAAwC,kDAAoD,KAAE7gB,SAV2C,6DAajK2hB,4BA7ID,cA6IqK,gLAAtIpB,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAExIkE,EAAgB2C,GAFwH,cAE5JjD,EAF4J,iBAG/IA,EAAYpC,4BAA4B9b,EAAI+b,IAHmG,eAG9Jrc,EAH8J,OAG9F7C,KACpEykB,EAAO,QAAS,CAAEhH,MAAO,yBAA0Bta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACnFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,8BAA+BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO3JgG,EAAQ,6BAA6B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU5J,IAAIsH,iBAAY,0CAA2C,kDAAoD,KAAE7gB,SAV2C,6DAapK4hB,oBA1JD,cA0JsE,0KAA/CxB,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE5CY,EAAa6C,GAF+B,cAE7DnE,EAF6D,gBAGjDA,EAASW,gBAAgBje,GAHwB,cAG7DkjB,EAH6D,iBAI9C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL0C,eAI7Dxf,EAJ6D,yBAM5DA,GAN4D,wCAS/D,MAAKye,EAT0D,uBAUzD,IAAIiF,iBAAY,gCAAiC,4DAVQ,cAazD,IAAIA,iBAAY,gCAAiC,2BAA6B,KAAE7gB,SAbvB,6DAiBrE8hB,sBA3KD,cA2KwE,0KAA/C1B,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE9CY,EAAa6C,GAFiC,cAE/DnE,EAF+D,gBAGnDA,EAASY,kBAAkBle,GAHwB,cAG/DkjB,EAH+D,iBAIhD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL4C,eAI/Dxf,EAJ+D,yBAM9DA,GAN8D,wCASjE,MAAKye,EAT4D,uBAU3D,IAAIiF,iBAAY,kCAAmC,4DAVQ,cAa3D,IAAIA,iBAAY,kCAAmC,2BAA6B,KAAE7gB,SAbvB,6DAiBvE+hB,mBA5LD,cA4LqE,0KAA/C3B,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE3CY,EAAa6C,GAF8B,cAE5DnE,EAF4D,gBAGhDA,EAASa,eAAene,GAHwB,cAG5DkjB,EAH4D,iBAI7C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALyC,eAI5Dxf,EAJ4D,yBAM3DA,GAN2D,wCAS9D,MAAKye,EATyD,uBAUxD,IAAIiF,iBAAY,+BAAgC,4DAVQ,cAaxD,IAAIA,iBAAY,+BAAgC,2BAA6B,KAAE7gB,SAbvB,6DAiBpEgiB,aA7MD,cA6M+D,0KAA/C5B,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAErCY,EAAa6C,GAFwB,cAEtDnE,EAFsD,gBAG1CA,EAASc,SAASpe,GAHwB,cAGtDkjB,EAHsD,iBAIvC5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALmC,eAItDxf,EAJsD,yBAMrDA,GANqD,wCASxD,MAAKye,EATmD,uBAUlD,IAAIiF,iBAAY,yBAA0B,4DAVQ,cAalD,IAAIA,iBAAY,yBAA0B,2BAA6B,KAAE7gB,SAbvB,6DAiB9DiiB,mBA9ND,cA8NqE,0KAA/C7B,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE3CY,EAAa6C,GAF8B,cAE5DnE,EAF4D,gBAGhDA,EAASe,eAAere,GAHwB,cAG5DkjB,EAH4D,iBAI7C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALyC,eAI5Dxf,EAJ4D,yBAM3DA,GAN2D,wCAS9D,MAAKye,EATyD,uBAUxD,IAAIiF,iBAAY,+BAAgC,4DAVQ,cAaxD,IAAIA,iBAAY,+BAAgC,2BAA6B,KAAE7gB,SAbvB,6DAiBpEkiB,gBA/OD,cA+OkE,0KAA/C9B,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAExCY,EAAa6C,GAF2B,cAEzDnE,EAFyD,gBAG7CA,EAASgB,YAAYte,GAHwB,cAGzDkjB,EAHyD,iBAI1C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALsC,eAIzDxf,EAJyD,yBAMxDA,GANwD,wCAS3D,MAAKye,EATsD,uBAUrD,IAAIiF,iBAAY,4BAA6B,4DAVQ,cAarD,IAAIA,iBAAY,4BAA6B,2BAA6B,KAAE7gB,SAbvB,6DAiBjEmiB,YAhQD,cAgQ8D,0KAA/C/B,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEpCY,EAAa6C,GAFuB,cAErDnE,EAFqD,gBAGzCA,EAASiB,QAAQve,GAHwB,cAGrDkjB,EAHqD,iBAItC5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALkC,eAIrDxf,EAJqD,yBAMpDA,GANoD,wCASvD,MAAKye,EATkD,uBAUjD,IAAIiF,iBAAY,wBAAyB,4DAVQ,cAajD,IAAIA,iBAAY,wBAAyB,2BAA6B,KAAE7gB,SAbvB,6DAiB7D4C,gBAjRD,cAiR6C,gKAA1Bwd,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEnB4e,EAAa6C,GAFM,cAEpCnE,EAFoC,gBAGxBA,EAASW,gBAAgBje,GAHD,cAGpCkjB,EAHoC,yBAInCA,GAJmC,wCAOtC,MAAKjG,EAPiC,uBAQhC,IAAIiF,iBAAY,gCAAiC,4DARjB,cAWhC,IAAIA,iBAAY,kCAAmC,6BAA+B,KAAE7gB,SAXpD,6DAe5C0C,kBAhSD,cAgS+C,gKAA1B0d,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAErB4e,EAAa6C,GAFQ,cAEtCnE,EAFsC,gBAG1BA,EAASY,kBAAkBle,GAHD,cAGtCkjB,EAHsC,yBAIrCA,GAJqC,wCAOxC,MAAKjG,EAPmC,uBAQlC,IAAIiF,iBAAY,kCAAmC,4DARjB,cAWlC,IAAIA,iBAAY,oCAAqC,6BAA+B,KAAE7gB,SAXpD,6DAe9CoC,eA/SD,cA+S4C,gKAA1Bge,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAElB4e,EAAa6C,GAFK,cAEnCnE,EAFmC,gBAGvBA,EAASa,eAAene,GAHD,cAGnCkjB,EAHmC,yBAIlCA,GAJkC,wCAOrC,MAAKjG,EAPgC,uBAQ/B,IAAIiF,iBAAY,+BAAgC,4DARjB,cAW/B,IAAIA,iBAAY,iCAAkC,6BAA+B,KAAE7gB,SAXpD,6DAe3CqD,SA9TD,cA8TsC,gKAA1B+c,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEZ4e,EAAa6C,GAFD,cAE7BnE,EAF6B,gBAGjBA,EAASc,SAASpe,GAHD,cAG7BkjB,EAH6B,yBAI5BA,GAJ4B,wCAO/B,MAAKjG,EAP0B,uBAQzB,IAAIiF,iBAAY,yBAA0B,4DARjB,cAWzB,IAAIA,iBAAY,2BAA4B,6BAA+B,KAAE7gB,SAXpD,6DAerCwC,eA7UD,cA6U4C,gKAA1B4d,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAElB4e,EAAa6C,GAFK,cAEnCnE,EAFmC,gBAGvBA,EAASe,eAAere,GAHD,cAGnCkjB,EAHmC,yBAIlCA,GAJkC,wCAOrC,MAAKjG,EAPgC,uBAQ/B,IAAIiF,iBAAY,+BAAgC,4DARjB,cAW/B,IAAIA,iBAAY,iCAAkC,6BAA+B,KAAE7gB,SAXpD,6DAe3CgE,YA5VD,cA4VyC,gKAA1Boc,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEf4e,EAAa6C,GAFE,cAEhCnE,EAFgC,gBAGpBA,EAASgB,YAAYte,GAHD,cAGhCkjB,EAHgC,yBAI/BA,GAJ+B,wCAOlC,MAAKjG,EAP6B,uBAQ5B,IAAIiF,iBAAY,4BAA6B,4DARjB,cAW5B,IAAIA,iBAAY,8BAA+B,6BAA+B,KAAE7gB,SAXpD,6DAexCsE,QA3WD,cA2WqC,gKAA1B8b,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEX4e,EAAa6C,GAFF,cAE5BnE,EAF4B,gBAGhBA,EAASiB,QAAQve,GAHD,cAG5BkjB,EAH4B,yBAI3BA,GAJ2B,wCAO9B,MAAKjG,EAPyB,uBAQxB,IAAIiF,iBAAY,wBAAyB,4DARjB,cAWxB,IAAIA,iBAAY,0BAA2B,6BAA+B,KAAE7gB,SAXpD,+D,4ECrelD,SAAWkX,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,IAAgBA,EAAc,KAC1B,IAAMC,EAAb,WACI,aAA4B,aAAhBC,EAAgB,uDAAJ,GAAI,uBACxBd,KAAKe,QAAU,GACff,KAAKgB,aAAe,KACpBhB,KAAKiB,eAAiB,KACtBjB,KAAKkB,iBAAmB,IAAIC,IAC5BnB,KAAKoB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpBxB,KAAKyB,gBAAkB,SAACjc,GACpB,EAAKwb,aAAexb,GAExBwa,KAAK0B,mBAAL,sBACKd,EAAYe,MAAO,SAAC1X,GAAD,OAAqB,OAAVA,GAAoC,WAAjB,eAAOA,IAAuC,kBAAVA,EAA8CA,EAAxB2X,KAAKC,UAAU5X,MAD/H,iBAEK2W,EAAYkB,UAAW,SAAC7X,GAAD,OAAWhE,OAAO8b,KAAK9X,GAAS,IAAI+X,QAAO,SAACxc,EAAMmD,GAEtE,OADAnD,EAAKyc,OAAOtZ,EAAKsB,EAAMtB,IAChBnD,IACR,IAAIsc,aALX,iBAMKlB,EAAYsB,YAAa,SAACjY,GAAD,OAAW,EAAKkY,cAAclY,MAN5D,GAQA+V,KAAKoC,kBAAoB,SAACC,GACtB,GAAI,EAAKnB,iBAAiBoB,IAAID,GAAc,CACxC,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAClD,OAAIE,EACOA,EAAgBC,YAE3B,EAEJ,IAAMD,EAAkB,IAAIE,gBAE5B,OADA,EAAKvB,iBAAiBwB,IAAIL,EAAaE,GAChCA,EAAgBC,QAE3BxC,KAAK2C,aAAe,SAACN,GACjB,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAC9CE,IACAA,EAAgBK,QAChB,EAAK1B,iBAAiB2B,OAAOR,KAGrCrC,KAAK8C,QAAU,YAA2F,IAAxFC,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQpV,EAA0E,EAA1EA,KAAMuD,EAAoE,EAApEA,KAAM8R,EAA8D,EAA9DA,MAA8D,IAAvDC,cAAuD,MAA9C,OAA8C,EAAtCnC,EAAsC,EAAtCA,QAASsB,EAA6B,EAA7BA,YAAgBc,EAAa,oBAChGC,EAAgBJ,GAAU,EAAK/B,gBAAkB,EAAKA,eAAe,EAAKD,eAAkB,GAC5FqC,EAAgB,EAAKC,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS,EAAKd,cAAcc,GAC1CO,EAAmB,EAAK9B,kBAAkBvQ,GAAQyP,EAAYe,MACpE,OAAO8B,MAAM,GAAD,OAAI1C,GAAW,EAAKA,SAAW,IAA/B,OAAoCnT,GAApC,OAA2C2V,EAAc,IAAH,OAAOA,GAAgB,IAA7E,eAAC,kBACNF,GADK,IAER/B,QAAS,iCACDnQ,GAAQA,IAASyP,EAAYkB,SAAW,CAAE,eAAgB3Q,GAAS,IACnEkS,EAAc/B,SAAW,IAEjCkB,OAAQH,EAAc,EAAKD,kBAAkBC,QAAe,EAC5DU,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOS,EAAiBT,MAC9EW,KARI,yDAQC,WAAOC,GAAP,gGACEzb,EAAIyb,EACVzb,EAAE1C,KAAO,KACT0C,EAAEkR,MAAQ,KAHN,SAIeuK,EAAST,KACvBQ,MAAK,SAACle,GAOP,OANI0C,EAAE0b,GACF1b,EAAE1C,KAAOA,EAGT0C,EAAEkR,MAAQ5T,EAEP0C,KAEN2b,OAAM,SAACxU,GAER,OADAnH,EAAEkR,MAAQ/J,EACHnH,KAhBP,UAIE1C,EAJF,OAkBA6c,GACA,EAAKnB,iBAAiB2B,OAAOR,GAE5BsB,EAASC,GArBV,sBAsBMpe,EAtBN,gCAuBGA,GAvBH,4CARD,wDAkCXS,OAAO6d,OAAO9D,KAAMc,GAjF5B,oDAmFI,SAAcmC,EAAOta,GACjB,IAAMN,EAAQ4a,EAAMta,GACpB,OAAQob,mBAAmBpb,GACvB,IACAob,mBAAmBC,MAAMC,QAAQ5b,GAASA,EAAMsG,KAAK,KAAwB,kBAAVtG,EAAqBA,EAA5B,UAAuCA,MAvF/G,2BAyFI,SAAc6b,GAAU,WACdjB,EAAQiB,GAAY,GACpBnC,EAAO9b,OAAO8b,KAAKkB,GAAOkB,QAAO,SAACxb,GAAD,MAAS,qBAAuBsa,EAAMta,MAC7E,OAAOoZ,EACFzS,KAAI,SAAC3G,GAAD,MAA+B,WAAtB,eAAOsa,EAAMta,KAAsBqb,MAAMC,QAAQhB,EAAMta,IAEnE,EAAKyb,cAAcnB,EAAOta,GAD1B,EAAKwZ,cAAcc,EAAMta,OAE1BgG,KAAK,OAhGlB,4BAkGI,SAAeuV,GACX,IAAMX,EAAcvD,KAAKmC,cAAc+B,GACvC,OAAOX,EAAc,IAAH,OAAOA,GAAgB,KApGjD,gCAsGI,SAAmBc,EAASC,GACxB,sEACOtE,KAAKoB,eACLiD,GACCC,GAAW,IAHnB,IAIIhD,QAAS,gDACDtB,KAAKoB,cAAcE,SAAW,IAC9B+C,EAAQ/C,SAAW,IAClBgD,GAAWA,EAAQhD,SAAY,UA9GpD,KAuHaiD,GAAb,wDACI,aAAc,oCACV,eAASC,WAST,EAAKU,cAAgB,SAACD,EAAKrX,GAAN,IAAYuV,EAAZ,uDAAqB,GAArB,OAA4B,EAAKL,QAAL,gBAC7ClV,KAAM,UAAF,OAAYqX,EAAZ,YAAmBrX,GACvB+W,OAAQ,MACRzB,OAAQ,QACLC,KAdG,EADlB,UAAyBtC,G,aCjInBwE,GAAQ,CACV,CAAC,yBAA0BrX,SAC3B,CAAC,6BAA8BN,UAEtB4X,GAAqB,IAAI/Z,MAAM,sBACtCga,GAAW,IAAIC,cAASH,IACxBI,GAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,GAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,GAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,cAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,GAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvHO,QAAS,SAACphB,GAAD,MAAW,CAAEqN,QAAS,yBAA0BxK,MAAO7C,IAChEmhB,YAAa,SAACnhB,GAAD,MAAW,CAAEqN,QAAS,6BAA8BxK,MAAO7C,MAR/D,4CAAH,sDAWRqhB,GAAW,yDAAG,0JAAwB,CAAEhB,KAAM,yBAAjBA,EAAf,EAASA,KAAT,kBACT,IAAItB,GAAI,CAAExD,QAAS8E,KADV,2CAAH,qD,SCpBFoB,G,mGAAf,WAA4BC,GAA5B,iGACiBvB,GAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,kCAKeC,G,mGAAf,WAA+BD,GAA/B,iGACiBL,GAAY,CACrBhB,KAAMqB,EAAY,0BAF1B,mF,yBAgBA,SAASK,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,IC5BW7G,GD4BLgH,GAAkB,WACpB,MAAO,CACHM,SAAU,GACVI,WAAY,CACR9b,wBAAyB+a,GAAa/a,QAAwBxB,YAAY,KAC1EyL,UAAW8Q,GAAa9Q,QAAUzL,YAAY,KAC9C2L,cAAe4Q,GAAa5Q,QAAc3L,YAAY,MAE1Dud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACLM,YAAa,SAAC3R,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIxC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMsQ,SAAStG,KAAKC,UAAUsB,WAArC,QAAiD,KAErDwG,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,2CACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjCwhB,cAzBD,cAyBuJ,gLAAtIjB,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE1HkE,GAAgB2C,GAF0G,cAE9IjD,EAF8I,iBAGjIA,EAAY3B,cAAcvc,EAAIsc,IAAKtc,EAAIiF,MAH0F,eAGhJvF,EAHgJ,OAGnF7C,KACjEykB,EAAO,QAAS,CAAEhH,MAAO,WAAYta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACrEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,gBAAiBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO7IgG,EAAQ,eAAe,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU9I,IAAIsH,iBAAY,4BAA6B,kDAAoD,KAAE7gB,SAV2C,6DAatJmiB,YAtCD,cAsC8D,0KAA/C/B,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEpCY,GAAa6C,GAFuB,cAErDnE,EAFqD,gBAGzCA,EAASiB,QAAQve,GAHwB,cAGrDkjB,EAHqD,iBAItC5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALkC,eAIrDxf,EAJqD,yBAMpDA,GANoD,wCASvD,MAAKye,GATkD,uBAUjD,IAAIiF,iBAAY,wBAAyB,4DAVQ,cAajD,IAAIA,iBAAY,wBAAyB,2BAA6B,KAAE7gB,SAbvB,6DAiB7DkiB,gBAvDD,cAuDkE,0KAA/C9B,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAExCY,GAAa6C,GAF2B,cAEzDnE,EAFyD,gBAG7CA,EAASgB,YAAYte,GAHwB,cAGzDkjB,EAHyD,iBAI1C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALsC,eAIzDxf,EAJyD,yBAMxDA,GANwD,wCAS3D,MAAKye,GATsD,uBAUrD,IAAIiF,iBAAY,4BAA6B,4DAVQ,cAarD,IAAIA,iBAAY,4BAA6B,2BAA6B,KAAE7gB,SAbvB,6DAiBjEsE,QAxED,cAwEqC,gKAA1B8b,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEX4e,GAAa6C,GAFF,cAE5BnE,EAF4B,gBAGhBA,EAASiB,QAAQve,GAHD,cAG5BkjB,EAH4B,yBAI3BA,GAJ2B,wCAO9B,MAAKjG,GAPyB,uBAQxB,IAAIiF,iBAAY,wBAAyB,4DARjB,cAWxB,IAAIA,iBAAY,0BAA2B,6BAA+B,KAAE7gB,SAXpD,6DAepCgE,YAvFD,cAuFyC,gKAA1Boc,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEf4e,GAAa6C,GAFE,cAEhCnE,EAFgC,gBAGpBA,EAASgB,YAAYte,GAHD,cAGhCkjB,EAHgC,yBAI/BA,GAJ+B,wCAOlC,MAAKjG,GAP6B,uBAQ5B,IAAIiF,iBAAY,4BAA6B,4DARjB,cAW5B,IAAIA,iBAAY,8BAA+B,6BAA+B,KAAE7gB,SAXpD,+D,6EC3JtD,SAAWkX,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,IAAMC,GAAb,WACI,aAA4B,aAAhBC,EAAgB,uDAAJ,GAAI,uBACxBd,KAAKe,QAAU,GACff,KAAKgB,aAAe,KACpBhB,KAAKiB,eAAiB,KACtBjB,KAAKkB,iBAAmB,IAAIC,IAC5BnB,KAAKoB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpBxB,KAAKyB,gBAAkB,SAACjc,GACpB,EAAKwb,aAAexb,GAExBwa,KAAK0B,mBAAL,sBACKd,GAAYe,MAAO,SAAC1X,GAAD,OAAqB,OAAVA,GAAoC,WAAjB,eAAOA,IAAuC,kBAAVA,EAA8CA,EAAxB2X,KAAKC,UAAU5X,MAD/H,iBAEK2W,GAAYkB,UAAW,SAAC7X,GAAD,OAAWhE,OAAO8b,KAAK9X,GAAS,IAAI+X,QAAO,SAACxc,EAAMmD,GAEtE,OADAnD,EAAKyc,OAAOtZ,EAAKsB,EAAMtB,IAChBnD,IACR,IAAIsc,aALX,iBAMKlB,GAAYsB,YAAa,SAACjY,GAAD,OAAW,EAAKkY,cAAclY,MAN5D,GAQA+V,KAAKoC,kBAAoB,SAACC,GACtB,GAAI,EAAKnB,iBAAiBoB,IAAID,GAAc,CACxC,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAClD,OAAIE,EACOA,EAAgBC,YAE3B,EAEJ,IAAMD,EAAkB,IAAIE,gBAE5B,OADA,EAAKvB,iBAAiBwB,IAAIL,EAAaE,GAChCA,EAAgBC,QAE3BxC,KAAK2C,aAAe,SAACN,GACjB,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAC9CE,IACAA,EAAgBK,QAChB,EAAK1B,iBAAiB2B,OAAOR,KAGrCrC,KAAK8C,QAAU,YAA2F,IAAxFC,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQpV,EAA0E,EAA1EA,KAAMuD,EAAoE,EAApEA,KAAM8R,EAA8D,EAA9DA,MAA8D,IAAvDC,cAAuD,MAA9C,OAA8C,EAAtCnC,EAAsC,EAAtCA,QAASsB,EAA6B,EAA7BA,YAAgBc,EAAa,qBAChGC,EAAgBJ,GAAU,EAAK/B,gBAAkB,EAAKA,eAAe,EAAKD,eAAkB,GAC5FqC,EAAgB,EAAKC,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS,EAAKd,cAAcc,GAC1CO,EAAmB,EAAK9B,kBAAkBvQ,GAAQyP,GAAYe,MACpE,OAAO8B,MAAM,GAAD,OAAI1C,GAAW,EAAKA,SAAW,IAA/B,OAAoCnT,GAApC,OAA2C2V,EAAc,IAAH,OAAOA,GAAgB,IAA7E,eAAC,kBACNF,GADK,IAER/B,QAAS,iCACDnQ,GAAQA,IAASyP,GAAYkB,SAAW,CAAE,eAAgB3Q,GAAS,IACnEkS,EAAc/B,SAAW,IAEjCkB,OAAQH,EAAc,EAAKD,kBAAkBC,QAAe,EAC5DU,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOS,EAAiBT,MAC9EW,KARI,yDAQC,WAAOC,GAAP,gGACEzb,EAAIyb,EACVzb,EAAE1C,KAAO,KACT0C,EAAEkR,MAAQ,KAHN,SAIeuK,EAAST,KACvBQ,MAAK,SAACle,GAOP,OANI0C,EAAE0b,GACF1b,EAAE1C,KAAOA,EAGT0C,EAAEkR,MAAQ5T,EAEP0C,KAEN2b,OAAM,SAACxU,GAER,OADAnH,EAAEkR,MAAQ/J,EACHnH,KAhBP,UAIE1C,EAJF,OAkBA6c,GACA,EAAKnB,iBAAiB2B,OAAOR,GAE5BsB,EAASC,GArBV,sBAsBMpe,EAtBN,gCAuBGA,GAvBH,4CARD,wDAkCXS,OAAO6d,OAAO9D,KAAMc,GAjF5B,oDAmFI,SAAcmC,EAAOta,GACjB,IAAMN,EAAQ4a,EAAMta,GACpB,OAAQob,mBAAmBpb,GACvB,IACAob,mBAAmBC,MAAMC,QAAQ5b,GAASA,EAAMsG,KAAK,KAAwB,kBAAVtG,EAAqBA,EAA5B,UAAuCA,MAvF/G,2BAyFI,SAAc6b,GAAU,WACdjB,EAAQiB,GAAY,GACpBnC,EAAO9b,OAAO8b,KAAKkB,GAAOkB,QAAO,SAACxb,GAAD,MAAS,qBAAuBsa,EAAMta,MAC7E,OAAOoZ,EACFzS,KAAI,SAAC3G,GAAD,MAA+B,WAAtB,eAAOsa,EAAMta,KAAsBqb,MAAMC,QAAQhB,EAAMta,IAEnE,EAAKyb,cAAcnB,EAAOta,GAD1B,EAAKwZ,cAAcc,EAAMta,OAE1BgG,KAAK,OAhGlB,4BAkGI,SAAeuV,GACX,IAAMX,EAAcvD,KAAKmC,cAAc+B,GACvC,OAAOX,EAAc,IAAH,OAAOA,GAAgB,KApGjD,gCAsGI,SAAmBc,EAASC,GACxB,sEACOtE,KAAKoB,eACLiD,GACCC,GAAW,IAHnB,IAIIhD,QAAS,gDACDtB,KAAKoB,cAAcE,SAAW,IAC9B+C,EAAQ/C,SAAW,IAClBgD,GAAWA,EAAQhD,SAAY,UA9GpD,KAuHaiD,GAAb,wDACI,aAAc,oCACV,eAASC,WAST,EAAKsH,iBAAmB,SAACpc,EAASuT,GAAV,IAAiBE,EAAjB,uDAA0B,GAA1B,OAAiC,EAAKL,QAAL,gBACrDlV,KAAM,iCAAF,OAAmC8B,GACvCiV,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAK4I,aAAe,SAACrc,EAASsc,GAAV,IAAiB7I,EAAjB,uDAA0B,GAA1B,OAAiC,EAAKL,QAAL,gBACjDlV,KAAM,iCAAF,OAAmC8B,EAAnC,YAA8Csc,GAClDrH,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK8I,oBAAsB,SAAChJ,GAAD,IAAQE,EAAR,uDAAiB,GAAjB,OAAwB,EAAKL,QAAL,gBAC/ClV,KAAM,uCACN+W,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAK+I,mBAAqB,SAACF,GAAD,IAAQ7I,EAAR,uDAAiB,GAAjB,OAAwB,EAAKL,QAAL,gBAC9ClV,KAAM,wCAAF,OAA0Coe,GAC9CrH,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKgJ,YAAc,eAAChJ,EAAD,uDAAU,GAAV,OAAiB,EAAKL,QAAL,gBAChClV,KAAM,8BACN+W,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKiJ,iBAAmB,eAACjJ,EAAD,uDAAU,GAAV,OAAiB,EAAKL,QAAL,gBACrClV,KAAM,8BACN+W,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKkJ,cAAgB,SAACL,GAAD,IAAQ7I,EAAR,uDAAiB,GAAjB,OAAwB,EAAKL,QAAL,gBACzClV,KAAM,+BAAF,OAAiCoe,GACrCrH,OAAQ,MACRzB,OAAQ,QACLC,KApGG,EADlB,UAAyBtC,I,aCpInByL,I,UAAW,CAAEN,MAAO,GAAI5V,OAAQ,KACzBX,GAAO,CAChBhM,OADgB,SACTC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANsB,KAAlBgB,EAAQsiB,OACRriB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsiB,OAEd,KAAnBtiB,EAAQ0M,QACRzM,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0M,QAE9BzM,GAEXK,OAVgB,SAUTC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4iB,IACrB,MAAOpiB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsiB,MAAQ9hB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0M,OAASlM,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BgB,SA8BP9B,GACL,IAAMY,EAAU,kBAAK4iB,IAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQhgB,OAAOlD,EAAOkjB,OAG9BtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASpK,OAAOlD,EAAOsN,QAG/B1M,EAAQ0M,OAAS,GAEd1M,GAEXoB,OA9CgB,SA8CTpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQsiB,QAAwBjhB,EAAIihB,MAAQtiB,EAAQsiB,YACjC1hB,IAAnBZ,EAAQ0M,SAAyBrL,EAAIqL,OAAS1M,EAAQ0M,QAC/CrL,GAEXC,YApDgB,SAoDJlC,GACR,IAAMY,EAAU,kBAAK4iB,IAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQljB,EAAOkjB,MAGvBtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAAStN,EAAOsN,OAGxB1M,EAAQ0M,OAAS,GAEd1M,IClETiU,I,8BAAa,CAAE4O,oBAAoB,IAC5BvO,GAAS,CAClBvU,OADkB,SACXC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,kBACtBgB,EAAQ8iB,aADc,IACtC,2BAAqC,KAA1Bxd,EAA0B,QACjCyd,GAAYhjB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFd,8BAOtC,OAHmC,IAA/BzF,EAAQ6iB,oBACR5iB,EAAOE,OAAO,IAAI4H,KAAK/H,EAAQ6iB,oBAE5B5iB,GAEXK,OAVkB,SAUXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiU,IACrBjU,EAAQ8iB,YAAc,GACtB,MAAOtiB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8iB,YAAYlmB,KAAKmmB,GAAYziB,OAAOE,EAAQA,EAAOL,WAC3D,MACJ,KAAK,EACDH,EAAQ6iB,mBAAqBriB,EAAOuH,OACpC,MACJ,QACIvH,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/BkB,SA+BT9B,GACL,IAAMY,EAAU,kBAAKiU,IAErB,GADAjU,EAAQ8iB,YAAc,QACKliB,IAAvBxB,EAAO0jB,aAAoD,OAAvB1jB,EAAO0jB,YAAsB,yBACjD1jB,EAAO0jB,aAD0C,IACjE,2BAAoC,KAAzBnd,EAAyB,QAChC3F,EAAQ8iB,YAAYlmB,KAAKmmB,GAAY7hB,SAASyE,KAFe,+BAYrE,YAPkC/E,IAA9BxB,EAAOyjB,oBACuB,OAA9BzjB,EAAOyjB,mBACP7iB,EAAQ6iB,mBAAqB7a,QAAQ5I,EAAOyjB,oBAG5C7iB,EAAQ6iB,oBAAqB,EAE1B7iB,GAEXoB,OAhDkB,SAgDXpB,GACH,IAAMqB,EAAM,GASZ,OARIrB,EAAQ8iB,YACRzhB,EAAIyhB,YAAc9iB,EAAQ8iB,YAAYld,KAAI,SAACD,GAAD,OAAOA,EAAIod,GAAY3hB,OAAOuE,QAAK/E,KAG7ES,EAAIyhB,YAAc,QAESliB,IAA/BZ,EAAQ6iB,qBACHxhB,EAAIwhB,mBAAqB7iB,EAAQ6iB,oBAC/BxhB,GAEXC,YA5DkB,SA4DNlC,GACR,IAAMY,EAAU,kBAAKiU,IAErB,GADAjU,EAAQ8iB,YAAc,QACKliB,IAAvBxB,EAAO0jB,aAAoD,OAAvB1jB,EAAO0jB,YAAsB,yBACjD1jB,EAAO0jB,aAD0C,IACjE,2BAAoC,KAAzBnd,EAAyB,QAChC3F,EAAQ8iB,YAAYlmB,KAAKmmB,GAAYzhB,YAAYqE,KAFY,+BAYrE,YAPkC/E,IAA9BxB,EAAOyjB,oBACuB,OAA9BzjB,EAAOyjB,mBACP7iB,EAAQ6iB,mBAAqBzjB,EAAOyjB,mBAGpC7iB,EAAQ6iB,oBAAqB,EAE1B7iB,IAGTgjB,GAAkB,CAAEV,MAAO,GAAIW,SAAS,GACjCF,GAAc,CACvBhjB,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANsB,KAAlBgB,EAAQsiB,OACRriB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsiB,QAEb,IAApBtiB,EAAQijB,SACRhjB,EAAOE,OAAO,IAAI4H,KAAK/H,EAAQijB,SAE5BhjB,GAEXK,OAVuB,SAUhBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKgjB,IACrB,MAAOxiB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsiB,MAAQ9hB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQijB,QAAUziB,EAAOuH,OACzB,MACJ,QACIvH,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BuB,SA8Bd9B,GACL,IAAMY,EAAU,kBAAKgjB,IAarB,YAZqBpiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQhgB,OAAOlD,EAAOkjB,OAG9BtiB,EAAQsiB,MAAQ,QAEG1hB,IAAnBxB,EAAO6jB,SAA4C,OAAnB7jB,EAAO6jB,QACvCjjB,EAAQijB,QAAUjb,QAAQ5I,EAAO6jB,SAGjCjjB,EAAQijB,SAAU,EAEfjjB,GAEXoB,OA9CuB,SA8ChBpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQsiB,QAAwBjhB,EAAIihB,MAAQtiB,EAAQsiB,YAChC1hB,IAApBZ,EAAQijB,UAA0B5hB,EAAI4hB,QAAUjjB,EAAQijB,SACjD5hB,GAEXC,YApDuB,SAoDXlC,GACR,IAAMY,EAAU,kBAAKgjB,IAarB,YAZqBpiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQljB,EAAOkjB,MAGvBtiB,EAAQsiB,MAAQ,QAEG1hB,IAAnBxB,EAAO6jB,SAA4C,OAAnB7jB,EAAO6jB,QACvCjjB,EAAQijB,QAAU7jB,EAAO6jB,QAGzBjjB,EAAQijB,SAAU,EAEfjjB,IAGTkjB,GAAY,CAAEld,QAAS,IAChBmd,GAAQ,CACjBpjB,OADiB,SACVC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACJ,KAApBgB,EAAQgG,SACR/F,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgG,SAFC,wBAItBhG,EAAQojB,OAJc,IAItC,2BAA+B,KAApB9d,EAAoB,QAC3ByG,GAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALP,8BAOtC,OAAOxF,GAEXK,OAViB,SAUVC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkjB,IACrBljB,EAAQojB,MAAQ,GAChB,MAAO5iB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgG,QAAUxF,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQojB,MAAMxmB,KAAKmP,GAAKzL,OAAOE,EAAQA,EAAOL,WAC9C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/BiB,SA+BR9B,GACL,IAAMY,EAAU,kBAAKkjB,IAQrB,GAPAljB,EAAQojB,MAAQ,QACOxiB,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU1D,OAAOlD,EAAO4G,SAGhChG,EAAQgG,QAAU,QAEDpF,IAAjBxB,EAAOgkB,OAAwC,OAAjBhkB,EAAOgkB,MAAgB,yBACrChkB,EAAOgkB,OAD8B,IACrD,2BAA8B,KAAnBzd,EAAmB,QAC1B3F,EAAQojB,MAAMxmB,KAAKmP,GAAK7K,SAASyE,KAFgB,+BAKzD,OAAO3F,GAEXoB,OA/CiB,SA+CVpB,GACH,IAAMqB,EAAM,GAQZ,YAPoBT,IAApBZ,EAAQgG,UAA0B3E,EAAI2E,QAAUhG,EAAQgG,SACpDhG,EAAQojB,MACR/hB,EAAI+hB,MAAQpjB,EAAQojB,MAAMxd,KAAI,SAACD,GAAD,OAAQA,EAAIoG,GAAK3K,OAAOuE,QAAK/E,KAG3DS,EAAI+hB,MAAQ,GAET/hB,GAEXC,YA1DiB,SA0DLlC,GACR,IAAMY,EAAU,kBAAKkjB,IAQrB,GAPAljB,EAAQojB,MAAQ,QACOxiB,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU5G,EAAO4G,QAGzBhG,EAAQgG,QAAU,QAEDpF,IAAjBxB,EAAOgkB,OAAwC,OAAjBhkB,EAAOgkB,MAAgB,yBACrChkB,EAAOgkB,OAD8B,IACrD,2BAA8B,KAAnBzd,EAAmB,QAC1B3F,EAAQojB,MAAMxmB,KAAKmP,GAAKzK,YAAYqE,KAFa,+BAKzD,OAAO3F,IAGTqjB,GAAa,CAAErd,QAAS,IACjBsd,GAAS,CAClBvjB,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACJ,KAApBgB,EAAQgG,SACR/F,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgG,SAFC,wBAItBhG,EAAQojB,OAJc,IAItC,2BAA+B,KAApB9d,EAAoB,QAC3ByG,GAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALP,8BAOtC,OAAOxF,GAEXK,OAVkB,SAUXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKqjB,IACrBrjB,EAAQojB,MAAQ,GAChB,MAAO5iB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgG,QAAUxF,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQojB,MAAMxmB,KAAKmP,GAAKzL,OAAOE,EAAQA,EAAOL,WAC9C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/BkB,SA+BT9B,GACL,IAAMY,EAAU,kBAAKqjB,IAQrB,GAPArjB,EAAQojB,MAAQ,QACOxiB,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU1D,OAAOlD,EAAO4G,SAGhChG,EAAQgG,QAAU,QAEDpF,IAAjBxB,EAAOgkB,OAAwC,OAAjBhkB,EAAOgkB,MAAgB,yBACrChkB,EAAOgkB,OAD8B,IACrD,2BAA8B,KAAnBzd,EAAmB,QAC1B3F,EAAQojB,MAAMxmB,KAAKmP,GAAK7K,SAASyE,KAFgB,+BAKzD,OAAO3F,GAEXoB,OA/CkB,SA+CXpB,GACH,IAAMqB,EAAM,GAQZ,YAPoBT,IAApBZ,EAAQgG,UAA0B3E,EAAI2E,QAAUhG,EAAQgG,SACpDhG,EAAQojB,MACR/hB,EAAI+hB,MAAQpjB,EAAQojB,MAAMxd,KAAI,SAACD,GAAD,OAAQA,EAAIoG,GAAK3K,OAAOuE,QAAK/E,KAG3DS,EAAI+hB,MAAQ,GAET/hB,GAEXC,YA1DkB,SA0DNlC,GACR,IAAMY,EAAU,kBAAKqjB,IAQrB,GAPArjB,EAAQojB,MAAQ,QACOxiB,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU5G,EAAO4G,QAGzBhG,EAAQgG,QAAU,QAEDpF,IAAjBxB,EAAOgkB,OAAwC,OAAjBhkB,EAAOgkB,MAAgB,yBACrChkB,EAAOgkB,OAD8B,IACrD,2BAA8B,KAAnBzd,EAAmB,QAC1B3F,EAAQojB,MAAMxmB,KAAKmP,GAAKzK,YAAYqE,KAFa,+BAKzD,OAAO3F,IAGTujB,GAAa,GACNC,GAAS,CAClBzjB,OADkB,SACXC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,kBACtBgB,EAAQuJ,OADc,IACtC,2BAA+B,KAApBjE,EAAoB,QAC3ByG,GAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFP,8BAItC,OAAOxF,GAEXK,OAPkB,SAOXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKujB,IACrBvjB,EAAQuJ,MAAQ,GAChB,MAAO/I,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQuJ,MAAM3M,KAAKmP,GAAKzL,OAAOE,EAAQA,EAAOL,WAC9C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAzBkB,SAyBT9B,GACL,IAAMY,EAAU,kBAAKujB,IAErB,GADAvjB,EAAQuJ,MAAQ,QACK3I,IAAjBxB,EAAOmK,OAAwC,OAAjBnK,EAAOmK,MAAgB,yBACrCnK,EAAOmK,OAD8B,IACrD,2BAA8B,KAAnB5D,EAAmB,QAC1B3F,EAAQuJ,MAAM3M,KAAKmP,GAAK7K,SAASyE,KAFgB,+BAKzD,OAAO3F,GAEXoB,OAnCkB,SAmCXpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQuJ,MACRlI,EAAIkI,MAAQvJ,EAAQuJ,MAAM3D,KAAI,SAACD,GAAD,OAAQA,EAAIoG,GAAK3K,OAAOuE,QAAK/E,KAG3DS,EAAIkI,MAAQ,GAETlI,GAEXC,YA7CkB,SA6CNlC,GACR,IAAMY,EAAU,kBAAKujB,IAErB,GADAvjB,EAAQuJ,MAAQ,QACK3I,IAAjBxB,EAAOmK,OAAwC,OAAjBnK,EAAOmK,MAAgB,yBACrCnK,EAAOmK,OAD8B,IACrD,2BAA8B,KAAnB5D,EAAmB,QAC1B3F,EAAQuJ,MAAM3M,KAAKmP,GAAKzK,YAAYqE,KAFa,+BAKzD,OAAO3F,IAGTyjB,GAAgB,CAAEnB,MAAO,GAAIoB,SAAU,EAAGC,QAAS,IAC5CC,GAAY,CACrB7jB,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACN,KAAlBgB,EAAQsiB,OACRriB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsiB,OAEZ,IAArBtiB,EAAQ0jB,UACRzjB,EAAOE,OAAO,IAAIA,OAAOH,EAAQ0jB,UALC,wBAOtB1jB,EAAQ2jB,SAPc,IAOtC,2BAAiC,KAAtBre,EAAsB,QAC7BrF,EAAOE,OAAO,IAAIkC,OAAOiD,IARS,8BAUtC,OAAOrF,GAEXK,OAbqB,SAadC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKyjB,IACrBzjB,EAAQ2jB,QAAU,GAClB,MAAOnjB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsiB,MAAQ9hB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0jB,SAAWljB,EAAOL,SAC1B,MACJ,KAAK,EACDH,EAAQ2jB,QAAQ/mB,KAAK4D,EAAO6B,UAC5B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SArCqB,SAqCZ9B,GACL,IAAMY,EAAU,kBAAKyjB,IAcrB,GAbAzjB,EAAQ2jB,QAAU,QACG/iB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQhgB,OAAOlD,EAAOkjB,OAG9BtiB,EAAQsiB,MAAQ,QAEI1hB,IAApBxB,EAAOskB,UAA8C,OAApBtkB,EAAOskB,SACxC1jB,EAAQ0jB,SAAWviB,OAAO/B,EAAOskB,UAGjC1jB,EAAQ0jB,SAAW,OAEA9iB,IAAnBxB,EAAOukB,SAA4C,OAAnBvkB,EAAOukB,QAAkB,yBACzCvkB,EAAOukB,SADkC,IACzD,2BAAgC,KAArBhe,EAAqB,QAC5B3F,EAAQ2jB,QAAQ/mB,KAAK0F,OAAOqD,KAFyB,+BAK7D,OAAO3F,GAEXoB,OA3DqB,SA2DdpB,GACH,IAAMqB,EAAM,GASZ,YARkBT,IAAlBZ,EAAQsiB,QAAwBjhB,EAAIihB,MAAQtiB,EAAQsiB,YAC/B1hB,IAArBZ,EAAQ0jB,WAA2BriB,EAAIqiB,SAAW1jB,EAAQ0jB,UACtD1jB,EAAQ2jB,QACRtiB,EAAIsiB,QAAU3jB,EAAQ2jB,QAAQ/d,KAAI,SAACD,GAAD,OAAOA,KAGzCtE,EAAIsiB,QAAU,GAEXtiB,GAEXC,YAvEqB,SAuETlC,GACR,IAAMY,EAAU,kBAAKyjB,IAcrB,GAbAzjB,EAAQ2jB,QAAU,QACG/iB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQljB,EAAOkjB,MAGvBtiB,EAAQsiB,MAAQ,QAEI1hB,IAApBxB,EAAOskB,UAA8C,OAApBtkB,EAAOskB,SACxC1jB,EAAQ0jB,SAAWtkB,EAAOskB,SAG1B1jB,EAAQ0jB,SAAW,OAEA9iB,IAAnBxB,EAAOukB,SAA4C,OAAnBvkB,EAAOukB,QAAkB,yBACzCvkB,EAAOukB,SADkC,IACzD,2BAAgC,KAArBhe,EAAqB,QAC5B3F,EAAQ2jB,QAAQ/mB,KAAK+I,IAFgC,+BAK7D,OAAO3F,IAGT6jB,GAAe,CAAEtgB,YAAa,GAAIugB,KAAM,GAAIC,QAAS,IAC9CC,GAAW,CACpBjkB,OADoB,SACbC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACA,KAAxBgB,EAAQuD,aACRtD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQuD,aAFC,wBAItBvD,EAAQikB,YAJc,IAItC,2BAAoC,KAAzB3e,EAAyB,QAChCse,GAAU7jB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALZ,8BAatC,MANqB,KAAjBzF,EAAQ8jB,MACR7jB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ8jB,MAEb,KAApB9jB,EAAQ+jB,SACR9jB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+jB,SAE9B9jB,GAEXK,OAhBoB,SAgBbC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6jB,IACrB7jB,EAAQikB,WAAa,GACrB,MAAOzjB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQuD,YAAc/C,EAAO6B,SAC7B,MACJ,KAAK,EACDrC,EAAQikB,WAAWrnB,KAAKgnB,GAAUtjB,OAAOE,EAAQA,EAAOL,WACxD,MACJ,KAAK,EACDH,EAAQ8jB,KAAOtjB,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQ+jB,QAAUvjB,EAAO6B,SACzB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA3CoB,SA2CX9B,GACL,IAAMY,EAAU,kBAAK6jB,IAQrB,GAPA7jB,EAAQikB,WAAa,QACMrjB,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcjB,OAAOlD,EAAOmE,aAGpCvD,EAAQuD,YAAc,QAEA3C,IAAtBxB,EAAO6kB,YAAkD,OAAtB7kB,EAAO6kB,WAAqB,yBAC/C7kB,EAAO6kB,YADwC,IAC/D,2BAAmC,KAAxBte,EAAwB,QAC/B3F,EAAQikB,WAAWrnB,KAAKgnB,GAAU1iB,SAASyE,KAFgB,+BAiBnE,YAZoB/E,IAAhBxB,EAAO0kB,MAAsC,OAAhB1kB,EAAO0kB,KACpC9jB,EAAQ8jB,KAAOxhB,OAAOlD,EAAO0kB,MAG7B9jB,EAAQ8jB,KAAO,QAEIljB,IAAnBxB,EAAO2kB,SAA4C,OAAnB3kB,EAAO2kB,QACvC/jB,EAAQ+jB,QAAUzhB,OAAOlD,EAAO2kB,SAGhC/jB,EAAQ+jB,QAAU,GAEf/jB,GAEXoB,OAvEoB,SAuEbpB,GACH,IAAMqB,EAAM,GAUZ,YATwBT,IAAxBZ,EAAQuD,cAA8BlC,EAAIkC,YAAcvD,EAAQuD,aAC5DvD,EAAQikB,WACR5iB,EAAI4iB,WAAajkB,EAAQikB,WAAWre,KAAI,SAACD,GAAD,OAAOA,EAAIie,GAAUxiB,OAAOuE,QAAK/E,KAGzES,EAAI4iB,WAAa,QAEJrjB,IAAjBZ,EAAQ8jB,OAAuBziB,EAAIyiB,KAAO9jB,EAAQ8jB,WAC9BljB,IAApBZ,EAAQ+jB,UAA0B1iB,EAAI0iB,QAAU/jB,EAAQ+jB,SACjD1iB,GAEXC,YApFoB,SAoFRlC,GACR,IAAMY,EAAU,kBAAK6jB,IAQrB,GAPA7jB,EAAQikB,WAAa,QACMrjB,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcnE,EAAOmE,YAG7BvD,EAAQuD,YAAc,QAEA3C,IAAtBxB,EAAO6kB,YAAkD,OAAtB7kB,EAAO6kB,WAAqB,yBAC/C7kB,EAAO6kB,YADwC,IAC/D,2BAAmC,KAAxBte,EAAwB,QAC/B3F,EAAQikB,WAAWrnB,KAAKgnB,GAAUtiB,YAAYqE,KAFa,+BAiBnE,YAZoB/E,IAAhBxB,EAAO0kB,MAAsC,OAAhB1kB,EAAO0kB,KACpC9jB,EAAQ8jB,KAAO1kB,EAAO0kB,KAGtB9jB,EAAQ8jB,KAAO,QAEIljB,IAAnBxB,EAAO2kB,SAA4C,OAAnB3kB,EAAO2kB,QACvC/jB,EAAQ+jB,QAAU3kB,EAAO2kB,QAGzB/jB,EAAQ+jB,QAAU,GAEf/jB,ICnjBTkkB,GAAc,CAAEC,YAAa,GAAIC,UAAW,IACrCC,GAAU,CACnBtkB,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACA,KAAxBgB,EAAQmkB,aACRlkB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmkB,aAEX,KAAtBnkB,EAAQokB,WACRnkB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQokB,WALC,wBAOtBpkB,EAAQ0M,QAPc,IAOtC,2BAAgC,KAArBpH,EAAqB,QAC5ByG,GAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UARP,8BAUtC,OAAOxF,GAEXK,OAbmB,SAaZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkkB,IACrBlkB,EAAQ0M,OAAS,GACjB,MAAOlM,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmkB,YAAc3jB,EAAO6B,SAC7B,MACJ,KAAK,EACDrC,EAAQokB,UAAY5jB,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQ0M,OAAO9P,KAAKmP,GAAKzL,OAAOE,EAAQA,EAAOL,WAC/C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SArCmB,SAqCV9B,GACL,IAAMY,EAAU,kBAAKkkB,IAcrB,GAbAlkB,EAAQ0M,OAAS,QACU9L,IAAvBxB,EAAO+kB,aAAoD,OAAvB/kB,EAAO+kB,YAC3CnkB,EAAQmkB,YAAc7hB,OAAOlD,EAAO+kB,aAGpCnkB,EAAQmkB,YAAc,QAEDvjB,IAArBxB,EAAOglB,WAAgD,OAArBhlB,EAAOglB,UACzCpkB,EAAQokB,UAAY9hB,OAAOlD,EAAOglB,WAGlCpkB,EAAQokB,UAAY,QAEFxjB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,yBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,GAAK7K,SAASyE,KAFiB,+BAK3D,OAAO3F,GAEXoB,OA3DmB,SA2DZpB,GACH,IAAMqB,EAAM,GASZ,YARwBT,IAAxBZ,EAAQmkB,cAA8B9iB,EAAI8iB,YAAcnkB,EAAQmkB,kBAC1CvjB,IAAtBZ,EAAQokB,YAA4B/iB,EAAI+iB,UAAYpkB,EAAQokB,WACxDpkB,EAAQ0M,OACRrL,EAAIqL,OAAS1M,EAAQ0M,OAAO9G,KAAI,SAACD,GAAD,OAAQA,EAAIoG,GAAK3K,OAAOuE,QAAK/E,KAG7DS,EAAIqL,OAAS,GAEVrL,GAEXC,YAvEmB,SAuEPlC,GACR,IAAMY,EAAU,kBAAKkkB,IAcrB,GAbAlkB,EAAQ0M,OAAS,QACU9L,IAAvBxB,EAAO+kB,aAAoD,OAAvB/kB,EAAO+kB,YAC3CnkB,EAAQmkB,YAAc/kB,EAAO+kB,YAG7BnkB,EAAQmkB,YAAc,QAEDvjB,IAArBxB,EAAOglB,WAAgD,OAArBhlB,EAAOglB,UACzCpkB,EAAQokB,UAAYhlB,EAAOglB,UAG3BpkB,EAAQokB,UAAY,QAEFxjB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,yBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,GAAKzK,YAAYqE,KAFc,+BAK3D,OAAO3F,IAmCTskB,GAAmB,GACZC,GAAe,CACxBxkB,OADwB,SACjBC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,kBACtBgB,EAAQwkB,QADc,IACtC,2BAAgC,KAArBlf,EAAqB,QAC5B6d,GAAMpjB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFR,sDAItBzF,EAAQykB,SAJc,IAItC,2BAAiC,KAAtBnf,EAAsB,QAC7Bge,GAAOvjB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALT,8BAOtC,OAAOxF,GAEXK,OAVwB,SAUjBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKskB,IACrBtkB,EAAQwkB,OAAS,GACjBxkB,EAAQykB,QAAU,GAClB,MAAOjkB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQwkB,OAAO5nB,KAAKumB,GAAM7iB,OAAOE,EAAQA,EAAOL,WAChD,MACJ,KAAK,EACDH,EAAQykB,QAAQ7nB,KAAK0mB,GAAOhjB,OAAOE,EAAQA,EAAOL,WAClD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhCwB,SAgCf9B,GACL,IAAMY,EAAU,kBAAKskB,IAGrB,GAFAtkB,EAAQwkB,OAAS,GACjBxkB,EAAQykB,QAAU,QACI7jB,IAAlBxB,EAAOolB,QAA0C,OAAlBplB,EAAOolB,OAAiB,yBACvCplB,EAAOolB,QADgC,IACvD,2BAA+B,KAApB7e,EAAoB,QAC3B3F,EAAQwkB,OAAO5nB,KAAKumB,GAAMjiB,SAASyE,KAFgB,+BAK3D,QAAuB/E,IAAnBxB,EAAOqlB,SAA4C,OAAnBrlB,EAAOqlB,QAAkB,yBACzCrlB,EAAOqlB,SADkC,IACzD,2BAAgC,KAArB9e,EAAqB,QAC5B3F,EAAQykB,QAAQ7nB,KAAK0mB,GAAOpiB,SAASyE,KAFgB,+BAK7D,OAAO3F,GAEXoB,OAhDwB,SAgDjBpB,GACH,IAAMqB,EAAM,GAaZ,OAZIrB,EAAQwkB,OACRnjB,EAAImjB,OAASxkB,EAAQwkB,OAAO5e,KAAI,SAACD,GAAD,OAAQA,EAAIwd,GAAM/hB,OAAOuE,QAAK/E,KAG9DS,EAAImjB,OAAS,GAEbxkB,EAAQykB,QACRpjB,EAAIojB,QAAUzkB,EAAQykB,QAAQ7e,KAAI,SAACD,GAAD,OAAOA,EAAI2d,GAAOliB,OAAOuE,QAAK/E,KAGhES,EAAIojB,QAAU,GAEXpjB,GAEXC,YAhEwB,SAgEZlC,GACR,IAAMY,EAAU,kBAAKskB,IAGrB,GAFAtkB,EAAQwkB,OAAS,GACjBxkB,EAAQykB,QAAU,QACI7jB,IAAlBxB,EAAOolB,QAA0C,OAAlBplB,EAAOolB,OAAiB,yBACvCplB,EAAOolB,QADgC,IACvD,2BAA+B,KAApB7e,EAAoB,QAC3B3F,EAAQwkB,OAAO5nB,KAAKumB,GAAM7hB,YAAYqE,KAFa,+BAK3D,QAAuB/E,IAAnBxB,EAAOqlB,SAA4C,OAAnBrlB,EAAOqlB,QAAkB,yBACzCrlB,EAAOqlB,SADkC,IACzD,2BAAgC,KAArB9e,EAAqB,QAC5B3F,EAAQykB,QAAQ7nB,KAAK0mB,GAAOhiB,YAAYqE,KAFa,+BAK7D,OAAO3F,IC7MT2b,GAAQ,CACV,CAAC,+BAAgC0I,IACjC,CAAC,oCAAqCE,KAE7B3I,GAAqB,IAAI/Z,MAAM,sBACtCga,GAAW,IAAIC,cAASH,IACxBI,GAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,GAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,GAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,cAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,GAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvH+H,QAAS,SAAC5oB,GAAD,MAAW,CAAEqN,QAAS,+BAAgCxK,MAAO7C,IACtE6oB,aAAc,SAAC7oB,GAAD,MAAW,CAAEqN,QAAS,oCAAqCxK,MAAO7C,MARvE,4CAAH,sDAWRqhB,GAAW,yDAAG,0JAAwB,CAAEhB,KAAM,yBAAjBA,EAAf,EAASA,KAAT,kBACT,IAAItB,GAAI,CAAExD,QAAS8E,KADV,2CAAH,qDCyGXyI,GAAc,CAAE5e,QAAS,IAClB6e,GAAU,CACnB9kB,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACJ,KAApBgB,EAAQgG,SACR/F,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgG,SAFC,wBAItBhG,EAAQojB,OAJc,IAItC,2BAA+B,KAApB9d,EAAoB,QAC3ByG,GAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALP,8BAOtC,OAAOxF,GAEXK,OAVmB,SAUZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4kB,IACrB5kB,EAAQojB,MAAQ,GAChB,MAAO5iB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgG,QAAUxF,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQojB,MAAMxmB,KAAKmP,GAAKzL,OAAOE,EAAQA,EAAOL,WAC9C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/BmB,SA+BV9B,GACL,IAAMY,EAAU,kBAAK4kB,IAQrB,GAPA5kB,EAAQojB,MAAQ,QACOxiB,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU1D,OAAOlD,EAAO4G,SAGhChG,EAAQgG,QAAU,QAEDpF,IAAjBxB,EAAOgkB,OAAwC,OAAjBhkB,EAAOgkB,MAAgB,yBACrChkB,EAAOgkB,OAD8B,IACrD,2BAA8B,KAAnBzd,EAAmB,QAC1B3F,EAAQojB,MAAMxmB,KAAKmP,GAAK7K,SAASyE,KAFgB,+BAKzD,OAAO3F,GAEXoB,OA/CmB,SA+CZpB,GACH,IAAMqB,EAAM,GAQZ,YAPoBT,IAApBZ,EAAQgG,UAA0B3E,EAAI2E,QAAUhG,EAAQgG,SACpDhG,EAAQojB,MACR/hB,EAAI+hB,MAAQpjB,EAAQojB,MAAMxd,KAAI,SAACD,GAAD,OAAQA,EAAIoG,GAAK3K,OAAOuE,QAAK/E,KAG3DS,EAAI+hB,MAAQ,GAET/hB,GAEXC,YA1DmB,SA0DPlC,GACR,IAAMY,EAAU,kBAAK4kB,IAQrB,GAPA5kB,EAAQojB,MAAQ,QACOxiB,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU5G,EAAO4G,QAGzBhG,EAAQgG,QAAU,QAEDpF,IAAjBxB,EAAOgkB,OAAwC,OAAjBhkB,EAAOgkB,MAAgB,yBACrChkB,EAAOgkB,OAD8B,IACrD,2BAA8B,KAAnBzd,EAAmB,QAC1B3F,EAAQojB,MAAMxmB,KAAKmP,GAAKzK,YAAYqE,KAFa,+BAKzD,OAAO3F,I,SCjMAud,G,mGAAf,WAA4BC,GAA5B,iGACiBvB,GAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,kCAKeC,G,mGAAf,WAA+BD,GAA/B,iGACiBL,GAAY,CACrBhB,KAAMqB,EAAY,0BAF1B,mF,yBAKA,SAASE,GAAa/e,EAAOgf,GACzB,cAAiBphB,OAAO8b,KAAKsF,GAA7B,eAA2C,CAAtC,IAAIC,EAAI,KACLtD,MAAMC,QAAQoD,EAAYC,IAC1Bjf,EAAMif,GAAN,yBAAkBjf,EAAMif,IAAxB,eAAkCD,EAAYC,KAG9Cjf,EAAMif,GAAQD,EAAYC,GAGlC,OAAOjf,EAEX,SAASkf,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,ICjCW7G,GDiCLgH,GAAkB,WACpB,MAAO,CACH2G,QAAS,GACTC,YAAa,GACbC,YAAa,GACbC,SAAU,GACV1Q,OAAQ,GACR2Q,cAAe,GACfC,eAAgB,GAChBtG,WAAY,CACRtK,OAAQuJ,GAAavJ,GAAOhT,YAAY,KACxCyhB,YAAalF,GAAakF,GAAYzhB,YAAY,KAClD6hB,MAAOtF,GAAasF,GAAM7hB,YAAY,KACtCgiB,OAAQzF,GAAayF,GAAOhiB,YAAY,KACxCkiB,OAAQ3F,GAAa2F,GAAOliB,YAAY,KACxCsiB,UAAW/F,GAAa+F,GAAUtiB,YAAY,KAC9C0iB,SAAUnG,GAAamG,GAAS1iB,YAAY,KAC5CujB,QAAShH,GAAagH,GAAQvjB,YAAY,MAE9Cud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACL4F,WAAY,SAACjX,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIvC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM2W,QAAQ3M,KAAKC,UAAUsB,WAApC,QAAgD,KAEpD2L,eAAgB,SAAClX,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI3C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM4W,YAAY5M,KAAKC,UAAUsB,WAAxC,QAAoD,KAExD4L,eAAgB,SAACnX,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI3C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM6W,YAAY7M,KAAKC,UAAUsB,WAAxC,QAAoD,KAExD6L,YAAa,SAACpX,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIxC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM8W,SAAS9M,KAAKC,UAAUsB,WAArC,QAAiD,KAErD8L,UAAW,SAACrX,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAItC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMoG,OAAO4D,KAAKC,UAAUsB,WAAnC,QAA+C,KAEnD+L,iBAAkB,SAACtX,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI7C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM+W,cAAc/M,KAAKC,UAAUsB,WAA1C,QAAsD,KAE1DgM,kBAAmB,SAACvX,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI9C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMgX,eAAehN,KAAKC,UAAUsB,WAA3C,QAAuD,KAE3DwG,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,iDACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjC0lB,aAzBD,cAyBsJ,gLAAtInF,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEzHkE,GAAgB2C,GAFyG,cAE7IjD,EAF6I,iBAGhIA,EAAYkF,aAAapjB,EAAI+G,QAAS/G,EAAIqjB,OAHsF,eAG/I3jB,EAH+I,OAG9E7C,KACrEykB,EAAO,QAAS,CAAEhH,MAAO,UAAWta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACpEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,eAAgBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO5IgG,EAAQ,cAAc,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU7I,IAAIsH,iBAAY,2BAA4B,kDAAoD,KAAE7gB,SAV2C,6DAarJ2lB,iBAtCD,cAsC0J,kLAAtIpF,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE7HkE,GAAgB2C,GAF6G,cAEjJjD,EAFiJ,iBAGpIA,EAAYiF,iBAAiBnjB,EAAI+G,QAASuT,GAH0F,QAGnJ5a,EAHmJ,OAGlF7C,KAHkF,YAIhJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJoG,kCAK1HlE,EAAYiF,iBAAiBnjB,EAAI+G,QAAjC,iCAA+CuT,GAA/C,IAAsD,iBAAkB5a,EAAMyiB,WAAWC,WALiC,QAK/I1D,EAL+I,OAKrB7hB,KAC9H6C,EAAQ+e,GAAa/e,EAAOgf,GANuH,+BAQvJ4C,EAAO,QAAS,CAAEhH,MAAO,cAAeta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACxEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,mBAAoBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWhJgG,EAAQ,kBAAkB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAcjJ,IAAIsH,iBAAY,+BAAgC,kDAAoD,KAAE7gB,SAd2C,6DAiBzJ4lB,iBAvDD,cAuD0J,gLAAtIrF,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE7HkE,GAAgB2C,GAF6G,cAEjJjD,EAFiJ,iBAGpIA,EAAYuF,mBAHwH,eAGnJ/jB,EAHmJ,OAGpG7C,KACnDykB,EAAO,QAAS,CAAEhH,MAAO,cAAeta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACxEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,mBAAoBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOhJgG,EAAQ,kBAAkB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUjJ,IAAIsH,iBAAY,+BAAgC,kDAAoD,KAAE7gB,SAV2C,6DAazJ6lB,cApED,cAoEuJ,gLAAtItF,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE1HkE,GAAgB2C,GAF0G,cAE9IjD,EAF8I,iBAGjIA,EAAYwF,cAAc1jB,EAAIqjB,OAHmG,eAGhJ3jB,EAHgJ,OAG3F7C,KACzDykB,EAAO,QAAS,CAAEhH,MAAO,WAAYta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACrEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,gBAAiBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO7IgG,EAAQ,eAAe,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU9I,IAAIsH,iBAAY,4BAA6B,kDAAoD,KAAE7gB,SAV2C,6DAatJ8lB,YAjFD,cAiFqJ,gLAAtIvF,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAExHkE,GAAgB2C,GAFwG,cAE5IjD,EAF4I,iBAG/HA,EAAYsF,cAHmH,eAG9I9jB,EAH8I,OAGpG7C,KAC9CykB,EAAO,QAAS,CAAEhH,MAAO,SAAUta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACnEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,cAAeC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO3IgG,EAAQ,aAAa,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU5I,IAAIsH,iBAAY,0BAA2B,kDAAoD,KAAE7gB,SAV2C,6DAapJ+lB,mBA9FD,cA8F4J,gLAAtIxF,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE/HkE,GAAgB2C,GAF+G,cAEnJjD,EAFmJ,iBAGtIA,EAAYqF,mBAAmBvjB,EAAIqjB,OAHmG,eAGrJ3jB,EAHqJ,OAG3F7C,KAC9DykB,EAAO,QAAS,CAAEhH,MAAO,gBAAiBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC1EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,qBAAsBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOlJgG,EAAQ,oBAAoB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUnJ,IAAIsH,iBAAY,iCAAkC,kDAAoD,KAAE7gB,SAV2C,6DAa3JgmB,oBA3GD,cA2G6J,kLAAtIzF,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEhIkE,GAAgB2C,GAFgH,cAEpJjD,EAFoJ,iBAGvIA,EAAYoF,oBAAoBhJ,GAHuG,QAGtJ5a,EAHsJ,OAG/F7C,KAH+F,YAInJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJuG,kCAK7HlE,EAAYoF,oBAAZ,iCAAqChJ,GAArC,IAA4C,iBAAkB5a,EAAMyiB,WAAWC,WAL8C,QAKlJ1D,EALkJ,OAKlC7hB,KACpH6C,EAAQ+e,GAAa/e,EAAOgf,GAN0H,+BAQ1J4C,EAAO,QAAS,CAAEhH,MAAO,iBAAkBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC3EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,sBAAuBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWnJgG,EAAQ,qBAAqB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAcpJ,IAAIsH,iBAAY,kCAAmC,kDAAoD,KAAE7gB,SAd2C,6DAiB5JimB,YA5HD,cA4H8D,0KAA/C7F,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEpCY,GAAa6C,GAFuB,cAErDnE,EAFqD,gBAGzCA,EAASyI,QAAQ/lB,GAHwB,cAGrDkjB,EAHqD,iBAItC5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALkC,eAIrDxf,EAJqD,yBAMpDA,GANoD,wCASvD,MAAKye,GATkD,uBAUjD,IAAIiF,iBAAY,wBAAyB,4DAVQ,cAajD,IAAIA,iBAAY,wBAAyB,2BAA6B,KAAE7gB,SAbvB,6DAiB7DkmB,iBA7ID,cA6ImE,0KAA/C9F,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEzCY,GAAa6C,GAF4B,cAE1DnE,EAF0D,gBAG9CA,EAAS0I,aAAahmB,GAHwB,cAG1DkjB,EAH0D,iBAI3C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALuC,eAI1Dxf,EAJ0D,yBAMzDA,GANyD,wCAS5D,MAAKye,GATuD,uBAUtD,IAAIiF,iBAAY,6BAA8B,4DAVQ,cAatD,IAAIA,iBAAY,6BAA8B,2BAA6B,KAAE7gB,SAbvB,6DAiBlEqkB,QA9JD,cA8JqC,gKAA1BjE,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEX4e,GAAa6C,GAFF,cAE5BnE,EAF4B,gBAGhBA,EAASyI,QAAQ/lB,GAHD,cAG5BkjB,EAH4B,yBAI3BA,GAJ2B,wCAO9B,MAAKjG,GAPyB,uBAQxB,IAAIiF,iBAAY,wBAAyB,4DARjB,cAWxB,IAAIA,iBAAY,0BAA2B,6BAA+B,KAAE7gB,SAXpD,6DAepCukB,aA7KD,cA6K0C,gKAA1BnE,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEhB4e,GAAa6C,GAFG,cAEjCnE,EAFiC,gBAGrBA,EAAS0I,aAAahmB,GAHD,cAGjCkjB,EAHiC,yBAIhCA,GAJgC,wCAOnC,MAAKjG,GAP8B,uBAQ7B,IAAIiF,iBAAY,6BAA8B,4DARjB,cAW7B,IAAIA,iBAAY,+BAAgC,6BAA+B,KAAE7gB,SAXpD,gECrSvD,SAAWkX,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,ICZDyE,GAAQ,G,IACoB,IAAI9Z,MAAM,sBAC3B,IAAIia,cAASH,I,WC6B9B,SAASkC,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,ICnCW7G,GDmCLgH,GAAkB,WACpB,MAAO,CACHU,WAAY,CACRuH,WAAYtI,GAAasI,QAAW7kB,YAAY,KAChD8kB,eAAgBvI,GAAauI,QAAe9kB,YAAY,KACxD+kB,YAAaxI,GAAawI,QAAY/kB,YAAY,KAClDglB,UAAWzI,GAAayI,QAAUhlB,YAAY,KAC9CilB,QAAS1I,GAAa0I,QAAQjlB,YAAY,KAC1CklB,OAAQ3I,GAAa2I,QAAOllB,YAAY,KACxCmlB,mBAAoB5I,GAAa4I,QAAmBnlB,YAAY,KAChEolB,QAAS7I,GAAa6I,QAAQplB,YAAY,KAC1CqlB,UAAW9I,GAAa8I,QAAUrlB,YAAY,KAC9CslB,gBAAiB/I,GAAa+I,QAAgBtlB,YAAY,MAE9Dud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACLU,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,sDACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,iDC1F/C,SAAWkX,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,ICZDyE,GAAQ,GCDRiH,IDE4B,IAAI/gB,MAAM,sBAC3B,IAAIia,cAASH,ICHb,CAAE2G,MAAO,GAAI5V,OAAQ,KACzBX,GAAO,CAChBhM,OADgB,SACTC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANsB,KAAlBgB,EAAQsiB,OACRriB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsiB,OAEd,KAAnBtiB,EAAQ0M,QACRzM,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0M,QAE9BzM,GAEXK,OAVgB,SAUTC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4iB,IACrB,MAAOpiB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsiB,MAAQ9hB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0M,OAASlM,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BgB,SA8BP9B,GACL,IAAMY,EAAU,kBAAK4iB,IAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQhgB,OAAOlD,EAAOkjB,OAG9BtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASpK,OAAOlD,EAAOsN,QAG/B1M,EAAQ0M,OAAS,GAEd1M,GAEXoB,OA9CgB,SA8CTpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQsiB,QAAwBjhB,EAAIihB,MAAQtiB,EAAQsiB,YACjC1hB,IAAnBZ,EAAQ0M,SAAyBrL,EAAIqL,OAAS1M,EAAQ0M,QAC/CrL,GAEXC,YApDgB,SAoDJlC,GACR,IAAMY,EAAU,kBAAK4iB,IAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQljB,EAAOkjB,MAGvBtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAAStN,EAAOsN,OAGxB1M,EAAQ0M,OAAS,GAEd1M,IAGT6mB,GAAc,CAAEvE,MAAO,GAAI5V,OAAQ,IAC5Boa,GAAU,CACnB/mB,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANsB,KAAlBgB,EAAQsiB,OACRriB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsiB,OAEd,KAAnBtiB,EAAQ0M,QACRzM,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0M,QAE9BzM,GAEXK,OAVmB,SAUZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6mB,IACrB,MAAOrmB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsiB,MAAQ9hB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0M,OAASlM,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BmB,SA8BV9B,GACL,IAAMY,EAAU,kBAAK6mB,IAarB,YAZqBjmB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQhgB,OAAOlD,EAAOkjB,OAG9BtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASpK,OAAOlD,EAAOsN,QAG/B1M,EAAQ0M,OAAS,GAEd1M,GAEXoB,OA9CmB,SA8CZpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQsiB,QAAwBjhB,EAAIihB,MAAQtiB,EAAQsiB,YACjC1hB,IAAnBZ,EAAQ0M,SAAyBrL,EAAIqL,OAAS1M,EAAQ0M,QAC/CrL,GAEXC,YApDmB,SAoDPlC,GACR,IAAMY,EAAU,kBAAK6mB,IAarB,YAZqBjmB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQljB,EAAOkjB,MAGvBtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAAStN,EAAOsN,OAGxB1M,EAAQ0M,OAAS,GAEd1M,IAGT+mB,GAAe,CAAEC,IAAK,IACfC,GAAW,CACpBlnB,OADoB,SACbC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,MAHoB,KAAhBgB,EAAQgnB,KACR/mB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgnB,KAE9B/mB,GAEXK,OAPoB,SAObC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK+mB,IACrB,MAAOvmB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgnB,IAAMxmB,EAAO6B,SACrB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAxBoB,SAwBX9B,GACL,IAAMY,EAAU,kBAAK+mB,IAOrB,YANmBnmB,IAAfxB,EAAO4nB,KAAoC,OAAf5nB,EAAO4nB,IACnChnB,EAAQgnB,IAAM1kB,OAAOlD,EAAO4nB,KAG5BhnB,EAAQgnB,IAAM,GAEXhnB,GAEXoB,OAlCoB,SAkCbpB,GACH,IAAMqB,EAAM,GAEZ,YADgBT,IAAhBZ,EAAQgnB,MAAsB3lB,EAAI2lB,IAAMhnB,EAAQgnB,KACzC3lB,GAEXC,YAvCoB,SAuCRlC,GACR,IAAMY,EAAU,kBAAK+mB,IAOrB,YANmBnmB,IAAfxB,EAAO4nB,KAAoC,OAAf5nB,EAAO4nB,IACnChnB,EAAQgnB,IAAM5nB,EAAO4nB,IAGrBhnB,EAAQgnB,IAAM,GAEXhnB,IAGTknB,GAAe,CAAEC,IAAK,IACfC,GAAW,CACpBrnB,OADoB,SACbC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,MAHoB,KAAhBgB,EAAQmnB,KACRlnB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmnB,KAE9BlnB,GAEXK,OAPoB,SAObC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKknB,IACrB,MAAO1mB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmnB,IAAM3mB,EAAO6B,SACrB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAxBoB,SAwBX9B,GACL,IAAMY,EAAU,kBAAKknB,IAOrB,YANmBtmB,IAAfxB,EAAO+nB,KAAoC,OAAf/nB,EAAO+nB,IACnCnnB,EAAQmnB,IAAM7kB,OAAOlD,EAAO+nB,KAG5BnnB,EAAQmnB,IAAM,GAEXnnB,GAEXoB,OAlCoB,SAkCbpB,GACH,IAAMqB,EAAM,GAEZ,YADgBT,IAAhBZ,EAAQmnB,MAAsB9lB,EAAI8lB,IAAMnnB,EAAQmnB,KACzC9lB,GAEXC,YAvCoB,SAuCRlC,GACR,IAAMY,EAAU,kBAAKknB,IAOrB,YANmBtmB,IAAfxB,EAAO+nB,KAAoC,OAAf/nB,EAAO+nB,IACnCnnB,EAAQmnB,IAAM/nB,EAAO+nB,IAGrBnnB,EAAQmnB,IAAM,GAEXnnB,ICrNf,SAAS6d,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,IC7BW7G,GD6BLgH,GAAkB,WACpB,MAAO,CACHU,WAAY,CACR7S,KAAM8R,GAAa9R,GAAKzK,YAAY,KACpCwlB,QAASjJ,GAAaiJ,GAAQxlB,YAAY,KAC1C2lB,SAAUpJ,GAAaoJ,GAAS3lB,YAAY,KAC5C8lB,SAAUvJ,GAAauJ,GAAS9lB,YAAY,MAEhDud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACLU,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,iDACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,iDC9E/C,SAAWkX,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,ICbDmQ,GAAyB,CAC3BC,OAAQ,GACRC,oBAAqB,GACrBC,eAAgB,IAEPC,GAAqB,CAC9B1nB,OAD8B,SACvBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATuB,KAAnBgB,EAAQsnB,QACRrnB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsnB,QAED,KAAhCtnB,EAAQunB,qBACRtnB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQunB,qBAEN,KAA3BvnB,EAAQwnB,gBACRvnB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQwnB,gBAE9BvnB,GAEXK,OAb8B,SAavBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKqnB,IACrB,MAAO7mB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsnB,OAAS9mB,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQunB,oBAAsB/mB,EAAO6B,SACrC,MACJ,KAAK,EACDrC,EAAQwnB,eAAiBhnB,EAAO6B,SAChC,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApC8B,SAoCrB9B,GACL,IAAMY,EAAU,kBAAKqnB,IAoBrB,YAnBsBzmB,IAAlBxB,EAAOkoB,QAA0C,OAAlBloB,EAAOkoB,OACtCtnB,EAAQsnB,OAAShlB,OAAOlD,EAAOkoB,QAG/BtnB,EAAQsnB,OAAS,QAEc1mB,IAA/BxB,EAAOmoB,qBACwB,OAA/BnoB,EAAOmoB,oBACPvnB,EAAQunB,oBAAsBjlB,OAAOlD,EAAOmoB,qBAG5CvnB,EAAQunB,oBAAsB,QAEJ3mB,IAA1BxB,EAAOooB,gBAA0D,OAA1BpoB,EAAOooB,eAC9CxnB,EAAQwnB,eAAiBllB,OAAOlD,EAAOooB,gBAGvCxnB,EAAQwnB,eAAiB,GAEtBxnB,GAEXoB,OA3D8B,SA2DvBpB,GACH,IAAMqB,EAAM,GAMZ,YALmBT,IAAnBZ,EAAQsnB,SAAyBjmB,EAAIimB,OAAStnB,EAAQsnB,aACtB1mB,IAAhCZ,EAAQunB,sBACHlmB,EAAIkmB,oBAAsBvnB,EAAQunB,0BACZ3mB,IAA3BZ,EAAQwnB,iBACHnmB,EAAImmB,eAAiBxnB,EAAQwnB,gBAC3BnmB,GAEXC,YApE8B,SAoElBlC,GACR,IAAMY,EAAU,kBAAKqnB,IAoBrB,YAnBsBzmB,IAAlBxB,EAAOkoB,QAA0C,OAAlBloB,EAAOkoB,OACtCtnB,EAAQsnB,OAASloB,EAAOkoB,OAGxBtnB,EAAQsnB,OAAS,QAEc1mB,IAA/BxB,EAAOmoB,qBACwB,OAA/BnoB,EAAOmoB,oBACPvnB,EAAQunB,oBAAsBnoB,EAAOmoB,oBAGrCvnB,EAAQunB,oBAAsB,QAEJ3mB,IAA1BxB,EAAOooB,gBAA0D,OAA1BpoB,EAAOooB,eAC9CxnB,EAAQwnB,eAAiBpoB,EAAOooB,eAGhCxnB,EAAQwnB,eAAiB,GAEtBxnB,IC5FT2b,GAAQ,CACV,CAAC,4CAA6C8L,KAErC7L,GAAqB,IAAI/Z,MAAM,sBACtCga,GAAW,IAAIC,cAASH,IACxBI,GAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,GAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,GAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,cAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,GAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvH+K,mBAAoB,SAAC5rB,GAAD,MAAW,CAAEqN,QAAS,4CAA6CxK,MAAO7C,MAPrF,4CAAH,sD,SCXCyhB,G,mGAAf,WAA4BC,GAA5B,iGACiBvB,GAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,yBA+BA,ICxBWtG,GDwBLgH,GAAkB,WACpB,MAAO,CACHU,WAAY,GACZC,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACLU,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,mDACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjC2nB,uBAzBD,cAyByE,0KAA/CvH,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE/CY,GAAa6C,GAFkC,cAEhEnE,EAFgE,gBAGpDA,EAASyL,mBAAmB/oB,GAHwB,cAGhEkjB,EAHgE,iBAIjD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL6C,eAIhExf,EAJgE,yBAM/DA,GAN+D,wCASlE,MAAKye,GAT6D,uBAU5D,IAAIiF,iBAAY,mCAAoC,4DAVQ,cAa5D,IAAIA,iBAAY,mCAAoC,2BAA6B,KAAE7gB,SAbvB,6DAiBxEynB,mBA1CD,cA0CgD,gKAA1BrH,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEtB4e,GAAa6C,GAFS,cAEvCnE,EAFuC,gBAG3BA,EAASyL,mBAAmB/oB,GAHD,cAGvCkjB,EAHuC,yBAItCA,GAJsC,wCAOzC,MAAKjG,GAPoC,uBAQnC,IAAIiF,iBAAY,mCAAoC,4DARjB,cAWnC,IAAIA,iBAAY,qCAAsC,6BAA+B,KAAE7gB,SAXpD,+D,6EC/F7D,SAAWkX,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,IAAMC,GAAb,WACI,aAA4B,aAAhBC,EAAgB,uDAAJ,GAAI,uBACxBd,KAAKe,QAAU,GACff,KAAKgB,aAAe,KACpBhB,KAAKiB,eAAiB,KACtBjB,KAAKkB,iBAAmB,IAAIC,IAC5BnB,KAAKoB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpBxB,KAAKyB,gBAAkB,SAACjc,GACpB,EAAKwb,aAAexb,GAExBwa,KAAK0B,mBAAL,sBACKd,GAAYe,MAAO,SAAC1X,GAAD,OAAqB,OAAVA,GAAoC,WAAjB,eAAOA,IAAuC,kBAAVA,EAA8CA,EAAxB2X,KAAKC,UAAU5X,MAD/H,iBAEK2W,GAAYkB,UAAW,SAAC7X,GAAD,OAAWhE,OAAO8b,KAAK9X,GAAS,IAAI+X,QAAO,SAACxc,EAAMmD,GAEtE,OADAnD,EAAKyc,OAAOtZ,EAAKsB,EAAMtB,IAChBnD,IACR,IAAIsc,aALX,iBAMKlB,GAAYsB,YAAa,SAACjY,GAAD,OAAW,EAAKkY,cAAclY,MAN5D,GAQA+V,KAAKoC,kBAAoB,SAACC,GACtB,GAAI,EAAKnB,iBAAiBoB,IAAID,GAAc,CACxC,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAClD,OAAIE,EACOA,EAAgBC,YAE3B,EAEJ,IAAMD,EAAkB,IAAIE,gBAE5B,OADA,EAAKvB,iBAAiBwB,IAAIL,EAAaE,GAChCA,EAAgBC,QAE3BxC,KAAK2C,aAAe,SAACN,GACjB,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAC9CE,IACAA,EAAgBK,QAChB,EAAK1B,iBAAiB2B,OAAOR,KAGrCrC,KAAK8C,QAAU,YAA2F,IAAxFC,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQpV,EAA0E,EAA1EA,KAAMuD,EAAoE,EAApEA,KAAM8R,EAA8D,EAA9DA,MAA8D,IAAvDC,cAAuD,MAA9C,OAA8C,EAAtCnC,EAAsC,EAAtCA,QAASsB,EAA6B,EAA7BA,YAAgBc,EAAa,qBAChGC,EAAgBJ,GAAU,EAAK/B,gBAAkB,EAAKA,eAAe,EAAKD,eAAkB,GAC5FqC,EAAgB,EAAKC,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS,EAAKd,cAAcc,GAC1CO,EAAmB,EAAK9B,kBAAkBvQ,GAAQyP,GAAYe,MACpE,OAAO8B,MAAM,GAAD,OAAI1C,GAAW,EAAKA,SAAW,IAA/B,OAAoCnT,GAApC,OAA2C2V,EAAc,IAAH,OAAOA,GAAgB,IAA7E,eAAC,kBACNF,GADK,IAER/B,QAAS,iCACDnQ,GAAQA,IAASyP,GAAYkB,SAAW,CAAE,eAAgB3Q,GAAS,IACnEkS,EAAc/B,SAAW,IAEjCkB,OAAQH,EAAc,EAAKD,kBAAkBC,QAAe,EAC5DU,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOS,EAAiBT,MAC9EW,KARI,yDAQC,WAAOC,GAAP,gGACEzb,EAAIyb,EACVzb,EAAE1C,KAAO,KACT0C,EAAEkR,MAAQ,KAHN,SAIeuK,EAAST,KACvBQ,MAAK,SAACle,GAOP,OANI0C,EAAE0b,GACF1b,EAAE1C,KAAOA,EAGT0C,EAAEkR,MAAQ5T,EAEP0C,KAEN2b,OAAM,SAACxU,GAER,OADAnH,EAAEkR,MAAQ/J,EACHnH,KAhBP,UAIE1C,EAJF,OAkBA6c,GACA,EAAKnB,iBAAiB2B,OAAOR,GAE5BsB,EAASC,GArBV,sBAsBMpe,EAtBN,gCAuBGA,GAvBH,4CARD,wDAkCXS,OAAO6d,OAAO9D,KAAMc,GAjF5B,oDAmFI,SAAcmC,EAAOta,GACjB,IAAMN,EAAQ4a,EAAMta,GACpB,OAAQob,mBAAmBpb,GACvB,IACAob,mBAAmBC,MAAMC,QAAQ5b,GAASA,EAAMsG,KAAK,KAAwB,kBAAVtG,EAAqBA,EAA5B,UAAuCA,MAvF/G,2BAyFI,SAAc6b,GAAU,WACdjB,EAAQiB,GAAY,GACpBnC,EAAO9b,OAAO8b,KAAKkB,GAAOkB,QAAO,SAACxb,GAAD,MAAS,qBAAuBsa,EAAMta,MAC7E,OAAOoZ,EACFzS,KAAI,SAAC3G,GAAD,MAA+B,WAAtB,eAAOsa,EAAMta,KAAsBqb,MAAMC,QAAQhB,EAAMta,IAEnE,EAAKyb,cAAcnB,EAAOta,GAD1B,EAAKwZ,cAAcc,EAAMta,OAE1BgG,KAAK,OAhGlB,4BAkGI,SAAeuV,GACX,IAAMX,EAAcvD,KAAKmC,cAAc+B,GACvC,OAAOX,EAAc,IAAH,OAAOA,GAAgB,KApGjD,gCAsGI,SAAmBc,EAASC,GACxB,sEACOtE,KAAKoB,eACLiD,GACCC,GAAW,IAHnB,IAIIhD,QAAS,gDACDtB,KAAKoB,cAAcE,SAAW,IAC9B+C,EAAQ/C,SAAW,IAClBgD,GAAWA,EAAQhD,SAAY,UA9GpD,KAuHaiD,GAAb,wDACI,aAAc,oCACV,eAASC,WAST,EAAK8M,mBAAqB,eAACnO,EAAD,uDAAU,GAAV,OAAiB,EAAKL,QAAL,gBACvClV,KAAM,8CACN+W,OAAQ,MACRzB,OAAQ,QACLC,KAWP,EAAKoO,4BAA8B,SAAC1V,GAAD,IAAmBsH,EAAnB,uDAA4B,GAA5B,OAAmC,EAAKL,QAAL,gBAClElV,KAAM,2CAAF,OAA6CiO,EAA7C,YACJ8I,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKqO,uBAAyB,SAAC3V,EAAkBC,GAAnB,IAAqCqH,EAArC,uDAA8C,GAA9C,OAAqD,EAAKL,QAAL,gBAC/ElV,KAAM,2CAAF,OAA6CiO,EAA7C,oBAAyEC,GAC7E6I,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKsO,yBAA2B,SAAC5V,GAAD,IAAmBsH,EAAnB,uDAA4B,GAA5B,OAAmC,EAAKL,QAAL,gBAC/DlV,KAAM,2CAAF,OAA6CiO,EAA7C,eACJ8I,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKuO,8BAAgC,SAAC7V,GAAD,IAAmBsH,EAAnB,uDAA4B,GAA5B,OAAmC,EAAKL,QAAL,gBACpElV,KAAM,2CAAF,OAA6CiO,EAA7C,qBACJ8I,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKgJ,YAAc,eAAChJ,EAAD,uDAAU,GAAV,OAAiB,EAAKL,QAAL,gBAChClV,KAAM,sCACN+W,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKwO,yBAA2B,SAAC7V,GAAD,IAAmBqH,EAAnB,uDAA4B,GAA5B,OAAmC,EAAKL,QAAL,gBAC/DlV,KAAM,2CAAF,OAA6CkO,EAA7C,eACJ6I,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKyO,iCAAmC,SAAC9V,GAAD,IAAmBqH,EAAnB,uDAA4B,GAA5B,OAAmC,EAAKL,QAAL,gBACvElV,KAAM,2CAAF,OAA6CkO,EAA7C,wBACJ6I,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK0O,sBAAwB,SAAC/V,EAAkBmH,GAAnB,IAA0BE,EAA1B,uDAAmC,GAAnC,OAA0C,EAAKL,QAAL,gBACnElV,KAAM,2CAAF,OAA6CkO,EAA7C,YACJ6I,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAhIG,EADlB,UAAyBtC,I,aCnInBiR,GAA4B,CAC9BjW,iBAAkB,GAClBkW,gBAAiB,IAERC,GAAwB,CACjCvoB,OADiC,SAC1BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANiC,KAA7BgB,EAAQmS,kBACRlS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmS,kBAEL,KAA5BnS,EAAQqoB,iBACRpoB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQqoB,iBAE9BpoB,GAEXK,OAViC,SAU1BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKooB,IACrB,MAAO5nB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmS,iBAAmB3R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQqoB,gBAAkB7nB,EAAO6B,SACjC,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BiC,SA8BxB9B,GACL,IAAMY,EAAU,kBAAKooB,IAerB,YAdgCxnB,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB7P,OAAOlD,EAAO+S,kBAGzCnS,EAAQmS,iBAAmB,QAEAvR,IAA3BxB,EAAOipB,iBACoB,OAA3BjpB,EAAOipB,gBACProB,EAAQqoB,gBAAkB/lB,OAAOlD,EAAOipB,iBAGxCroB,EAAQqoB,gBAAkB,GAEvBroB,GAEXoB,OAhDiC,SAgD1BpB,GACH,IAAMqB,EAAM,GAKZ,YAJ6BT,IAA7BZ,EAAQmS,mBACH9Q,EAAI8Q,iBAAmBnS,EAAQmS,uBACRvR,IAA5BZ,EAAQqoB,kBACHhnB,EAAIgnB,gBAAkBroB,EAAQqoB,iBAC5BhnB,GAEXC,YAxDiC,SAwDrBlC,GACR,IAAMY,EAAU,kBAAKooB,IAerB,YAdgCxnB,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB/S,EAAO+S,iBAGlCnS,EAAQmS,iBAAmB,QAEAvR,IAA3BxB,EAAOipB,iBACoB,OAA3BjpB,EAAOipB,gBACProB,EAAQqoB,gBAAkBjpB,EAAOipB,gBAGjCroB,EAAQqoB,gBAAkB,GAEvBroB,IAyCTuoB,GAAiC,CACnCpW,iBAAkB,GAClBC,iBAAkB,IAEToW,GAA6B,CACtCzoB,OADsC,SAC/BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANiC,KAA7BgB,EAAQmS,kBACRlS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmS,kBAEJ,KAA7BnS,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,kBAE9BnS,GAEXK,OAVsC,SAU/BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTuoB,IAEP,MAAO/nB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmS,iBAAmB3R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhCsC,SAgC7B9B,GACL,IAAMY,EAAU,kBACTuoB,IAgBP,YAdgC3nB,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB7P,OAAOlD,EAAO+S,kBAGzCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,GAExBpS,GAEXoB,OApDsC,SAoD/BpB,GACH,IAAMqB,EAAM,GAKZ,YAJ6BT,IAA7BZ,EAAQmS,mBACH9Q,EAAI8Q,iBAAmBnS,EAAQmS,uBACPvR,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,kBAC7B/Q,GAEXC,YA5DsC,SA4D1BlC,GACR,IAAMY,EAAU,kBACTuoB,IAgBP,YAdgC3nB,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB/S,EAAO+S,iBAGlCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,GAExBpS,IAyCTyoB,GAAqC,CAAErW,iBAAkB,IAClDsW,GAAiC,CAC1C3oB,OAD0C,SACnCC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,MAHiC,KAA7BgB,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,kBAE9BnS,GAEXK,OAP0C,SAOnCC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTyoB,IAEP,MAAOjoB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1B0C,SA0BjC9B,GACL,IAAMY,EAAU,kBACTyoB,IASP,YAPgC7nB,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,GAExBpS,GAEXoB,OAvC0C,SAuCnCpB,GACH,IAAMqB,EAAM,GAGZ,YAF6BT,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,kBAC7B/Q,GAEXC,YA7C0C,SA6C9BlC,GACR,IAAMY,EAAU,kBACTyoB,IASP,YAPgC7nB,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,GAExBpS,IAyCT2oB,GAA2B,CAAEC,UAAW,IACjCC,GAAuB,CAChC9oB,OADgC,SACzBC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,kBACtBgB,EAAQ0M,QADc,IACtC,2BAAgC,KAArBpH,EAAqB,QAC5ByG,QAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFP,8BAOtC,MAH0B,KAAtBzF,EAAQ4oB,WACR3oB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ4oB,WAE9B3oB,GAEXK,OAVgC,SAUzBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK2oB,IACrB3oB,EAAQ0M,OAAS,GACjB,MAAOlM,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0M,OAAO9P,KAAKmP,QAAKzL,OAAOE,EAAQA,EAAOL,WAC/C,MACJ,KAAK,EACDH,EAAQ4oB,UAAYpoB,EAAO6B,SAC3B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/BgC,SA+BvB9B,GACL,IAAMY,EAAU,kBAAK2oB,IAErB,GADA3oB,EAAQ0M,OAAS,QACK9L,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,yBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,QAAK7K,SAASyE,KAFiB,+BAW3D,YANyB/E,IAArBxB,EAAOwpB,WAAgD,OAArBxpB,EAAOwpB,UACzC5oB,EAAQ4oB,UAAYtmB,OAAOlD,EAAOwpB,WAGlC5oB,EAAQ4oB,UAAY,GAEjB5oB,GAEXoB,OA/CgC,SA+CzBpB,GACH,IAAMqB,EAAM,GAQZ,OAPIrB,EAAQ0M,OACRrL,EAAIqL,OAAS1M,EAAQ0M,OAAO9G,KAAI,SAACD,GAAD,OAAQA,EAAIoG,QAAK3K,OAAOuE,QAAK/E,KAG7DS,EAAIqL,OAAS,QAEK9L,IAAtBZ,EAAQ4oB,YAA4BvnB,EAAIunB,UAAY5oB,EAAQ4oB,WACrDvnB,GAEXC,YA1DgC,SA0DpBlC,GACR,IAAMY,EAAU,kBAAK2oB,IAErB,GADA3oB,EAAQ0M,OAAS,QACK9L,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,yBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,QAAKzK,YAAYqE,KAFc,+BAW3D,YANyB/E,IAArBxB,EAAOwpB,WAAgD,OAArBxpB,EAAOwpB,UACzC5oB,EAAQ4oB,UAAYxpB,EAAOwpB,UAG3B5oB,EAAQ4oB,UAAY,GAEjB5oB,ICvZT2b,GAAQ,CACV,CAAC,8DAA+D+M,IAChE,CAAC,qDAAsDJ,IACvD,CAAC,oDAAqDO,IACtD,CAAC,0DAA2DL,KAEnD5M,GAAqB,IAAI/Z,MAAM,sBACtCga,GAAW,IAAIC,cAASH,IACxBI,GAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,GAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,GAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,cAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,GAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvHmM,+BAAgC,SAAChtB,GAAD,MAAW,CAAEqN,QAAS,8DAA+DxK,MAAO7C,IAC5HitB,sBAAuB,SAACjtB,GAAD,MAAW,CAAEqN,QAAS,qDAAsDxK,MAAO7C,IAC1GktB,qBAAsB,SAACltB,GAAD,MAAW,CAAEqN,QAAS,oDAAqDxK,MAAO7C,IACxGmtB,2BAA4B,SAACntB,GAAD,MAAW,CAAEqN,QAAS,0DAA2DxK,MAAO7C,MAV3G,4CAAH,sDAaRqhB,GAAW,yDAAG,0JAAwB,CAAEhB,KAAM,yBAAjBA,EAAf,EAASA,KAAT,kBACT,IAAItB,GAAI,CAAExD,QAAS8E,KADV,2CAAH,qD,mCCVFoB,G,mGAAf,WAA4BC,GAA5B,iGACiBvB,GAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,kCAKeC,G,mGAAf,WAA+BD,GAA/B,iGACiBL,GAAY,CACrBhB,KAAMqB,EAAY,0BAF1B,mF,yBAKA,SAASE,GAAa/e,EAAOgf,GACzB,cAAiBphB,OAAO8b,KAAKsF,GAA7B,eAA2C,CAAtC,IAAIC,EAAI,KACLtD,MAAMC,QAAQoD,EAAYC,IAC1Bjf,EAAMif,GAAN,yBAAkBjf,EAAMif,IAAxB,eAAkCD,EAAYC,KAG9Cjf,EAAMif,GAAQD,EAAYC,GAGlC,OAAOjf,EAEX,SAASkf,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,IC5CW7G,GD4CLgH,GAAkB,WACpB,MAAO,CACH5J,OAAQ,GACR4U,4BAA6B,GAC7BC,oBAAqB,GACrBC,iBAAkB,GAClBC,kBAAmB,GACnBC,uBAAwB,GACxBC,oBAAqB,GACrBC,yBAA0B,GAC1BC,cAAe,GACf7K,WAAY,CACRtK,OAAQuJ,GAAavJ,QAAOhT,YAAY,KACxCooB,2BAA4B7L,GAAa6L,QAA2BpoB,YAAY,KAChFqoB,wBAAyB9L,GAAa8L,QAAwBroB,YAAY,KAC1EsoB,+BAAgC/L,GAAa+L,QAA+BtoB,YAAY,KACxF4nB,4BAA6BrL,GAAaqL,QAA4B5nB,YAAY,KAClFuoB,oBAAqBhM,GAAagM,QAAoBvoB,YAAY,KAClEwoB,qBAAsBjM,GAAaiM,QAAqBxoB,YAAY,KACpEyoB,QAASlM,GAAakM,QAAQzoB,YAAY,KAC1C0oB,2BAA4BnM,GAAamM,QAA2B1oB,YAAY,KAChF2oB,sBAAuBpM,GAAaoM,QAAsB3oB,YAAY,KACtE4oB,0BAA2BrM,GAAaqM,QAA0B5oB,YAAY,KAC9E6oB,sCAAuCtM,GAAasM,QAAsC7oB,YAAY,KACtG8oB,sBAAuBvM,GAAauM,QAAsB9oB,YAAY,KACtE+oB,kCAAmCxM,GAAawM,QAAkC/oB,YAAY,KAC9FgpB,qCAAsCzM,GAAayM,QAAqChpB,YAAY,KACpGipB,iCAAkC1M,GAAa0M,QAAiCjpB,YAAY,KAC5FkpB,8BAA+B3M,GAAa2M,QAA8BlpB,YAAY,KACtFmpB,4BAA6B5M,GAAa4M,QAA4BnpB,YAAY,KAClFopB,0BAA2B7M,GAAa6M,QAA0BppB,YAAY,MAElFud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACLgG,UAAW,SAACrX,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAItC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMoG,OAAO4D,KAAKC,UAAUsB,WAAnC,QAA+C,KAEnDkR,+BAAgC,SAACzc,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI3D,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMgb,4BAA4BhR,KAAKC,UAAUsB,WAAxD,QAAoE,KAExEmR,uBAAwB,SAAC1c,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAInD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMib,oBAAoBjR,KAAKC,UAAUsB,WAAhD,QAA4D,KAEhEoR,oBAAqB,SAAC3c,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIhD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMkb,iBAAiBlR,KAAKC,UAAUsB,WAA7C,QAAyD,KAE7DqR,qBAAsB,SAAC5c,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIjD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMmb,kBAAkBnR,KAAKC,UAAUsB,WAA9C,QAA0D,KAE9DsR,0BAA2B,SAAC7c,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAItD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMob,uBAAuBpR,KAAKC,UAAUsB,WAAnD,QAA+D,KAEnEuR,uBAAwB,SAAC9c,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAInD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMqb,oBAAoBrR,KAAKC,UAAUsB,WAAhD,QAA4D,KAEhEwR,4BAA6B,SAAC/c,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIxD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMsb,yBAAyBtR,KAAKC,UAAUsB,WAArD,QAAiE,KAErEyR,iBAAkB,SAAChd,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI7C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMub,cAAcvR,KAAKC,UAAUsB,WAA1C,QAAsD,KAE1DwG,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,yDACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjC8lB,YAzBD,cAyBqJ,gLAAtIvF,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAExHkE,GAAgB2C,GAFwG,cAE5IjD,EAF4I,iBAG/HA,EAAYsF,cAHmH,eAG9I9jB,EAH8I,OAGpG7C,KAC9CykB,EAAO,QAAS,CAAEhH,MAAO,SAAUta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACnEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,cAAeC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO3IgG,EAAQ,aAAa,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU5I,IAAIsH,iBAAY,0BAA2B,kDAAoD,KAAE7gB,SAV2C,6DAapJmrB,iCAtCD,cAsC0K,gLAAtI5K,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE7IkE,GAAgB2C,GAF6H,cAEjKjD,EAFiK,iBAGpJA,EAAY+K,iCAAiCjpB,EAAImsB,mBAHmG,eAGnKzsB,EAHmK,OAG/E7C,KACxFykB,EAAO,QAAS,CAAEhH,MAAO,8BAA+Bta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACxFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,mCAAoCC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOhKgG,EAAQ,kCAAkC,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUjK,IAAIsH,iBAAY,+CAAgD,kDAAoD,KAAE7gB,SAV2C,6DAazKqrB,yBAnDD,cAmDkK,gLAAtI9K,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAErIkE,GAAgB2C,GAFqH,cAEzJjD,EAFyJ,iBAG5IA,EAAY8K,yBAAyBhpB,EAAImsB,mBAHmG,eAG3JzsB,EAH2J,OAG/E7C,KAChFykB,EAAO,QAAS,CAAEhH,MAAO,sBAAuBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAChFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,2BAA4BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOxJgG,EAAQ,0BAA0B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUzJ,IAAIsH,iBAAY,uCAAwC,kDAAoD,KAAE7gB,SAV2C,6DAajKsrB,sBAhED,cAgE+J,kLAAtI/K,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAElIkE,GAAgB2C,GAFkH,cAEtJjD,EAFsJ,iBAGzIA,EAAYgL,sBAAsBlpB,EAAImsB,kBAAmB7R,GAHgF,QAGxJ5a,EAHwJ,OAGxE7C,KAHwE,YAIrJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJyG,kCAK/HlE,EAAYgL,sBAAsBlpB,EAAImsB,kBAAtC,iCAA8D7R,GAA9D,IAAqE,iBAAkB5a,EAAMyiB,WAAWC,WALuB,QAKpJ1D,EALoJ,OAKX7hB,KAC7I6C,EAAQ+e,GAAa/e,EAAOgf,GAN4H,+BAQ5J4C,EAAO,QAAS,CAAEhH,MAAO,mBAAoBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC7EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,wBAAyBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWrJgG,EAAQ,uBAAuB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CActJ,IAAIsH,iBAAY,oCAAqC,kDAAoD,KAAE7gB,SAd2C,6DAiB9JurB,uBAjFD,cAiFgK,gLAAtIhL,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEnIkE,GAAgB2C,GAFmH,cAEvJjD,EAFuJ,iBAG1IA,EAAY2K,uBAAuB7oB,EAAIusB,kBAAmBvsB,EAAImsB,mBAH4E,eAGzJzsB,EAHyJ,OAGxD7C,KACrGykB,EAAO,QAAS,CAAEhH,MAAO,oBAAqBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC9EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,yBAA0BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOtJgG,EAAQ,wBAAwB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUvJ,IAAIsH,iBAAY,qCAAsC,kDAAoD,KAAE7gB,SAV2C,6DAa/JyrB,4BA9FD,cA8FqK,gLAAtIlL,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAExIkE,GAAgB2C,GAFwH,cAE5JjD,EAF4J,iBAG/IA,EAAY0K,4BAA4B5oB,EAAIusB,mBAHmG,eAG9J7sB,EAH8J,OAG/E7C,KACnFykB,EAAO,QAAS,CAAEhH,MAAO,yBAA0Bta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACnFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,8BAA+BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO3JgG,EAAQ,6BAA6B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU5J,IAAIsH,iBAAY,0CAA2C,kDAAoD,KAAE7gB,SAV2C,6DAapK0rB,yBA3GD,cA2GkK,gLAAtInL,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAErIkE,GAAgB2C,GAFqH,cAEzJjD,EAFyJ,iBAG5IA,EAAY4K,yBAAyB9oB,EAAIusB,mBAHmG,eAG3J7sB,EAH2J,OAG/E7C,KAChFykB,EAAO,QAAS,CAAEhH,MAAO,sBAAuBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAChFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,2BAA4BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOxJgG,EAAQ,0BAA0B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUzJ,IAAIsH,iBAAY,uCAAwC,kDAAoD,KAAE7gB,SAV2C,6DAajK2rB,8BAxHD,cAwHuK,gLAAtIpL,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE1IkE,GAAgB2C,GAF0H,cAE9JjD,EAF8J,iBAGjJA,EAAY6K,8BAA8B/oB,EAAIusB,mBAHmG,eAGhK7sB,EAHgK,OAG/E7C,KACrFykB,EAAO,QAAS,CAAEhH,MAAO,2BAA4Bta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACrFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,gCAAiCC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO7JgG,EAAQ,+BAA+B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU9J,IAAIsH,iBAAY,4CAA6C,kDAAoD,KAAE7gB,SAV2C,6DAatK4rB,mBArID,cAqI4J,gLAAtIrL,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE/HkE,GAAgB2C,GAF+G,cAEnJjD,EAFmJ,iBAGtIA,EAAYyK,qBAH0H,eAGrJjpB,EAHqJ,OAGpG7C,KACrDykB,EAAO,QAAS,CAAEhH,MAAO,gBAAiBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC1EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,qBAAsBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOlJgG,EAAQ,oBAAoB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUnJ,IAAIsH,iBAAY,iCAAkC,kDAAoD,KAAE7gB,SAV2C,6DAa3J6rB,mCAlJD,cAkJqF,0KAA/CzL,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE3DY,GAAa6C,GAF8C,cAE5EnE,EAF4E,gBAGhEA,EAAS6M,+BAA+BnqB,GAHwB,cAG5EkjB,EAH4E,iBAI7D5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALyD,eAI5Exf,EAJ4E,yBAM3EA,GAN2E,wCAS9E,MAAKye,GATyE,uBAUxE,IAAIiF,iBAAY,+CAAgD,4DAVQ,cAaxE,IAAIA,iBAAY,+CAAgD,2BAA6B,KAAE7gB,SAbvB,6DAiBpF8rB,0BAnKD,cAmK4E,0KAA/C1L,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAElDY,GAAa6C,GAFqC,cAEnEnE,EAFmE,gBAGvDA,EAAS8M,sBAAsBpqB,GAHwB,cAGnEkjB,EAHmE,iBAIpD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALgD,eAInExf,EAJmE,yBAMlEA,GANkE,wCASrE,MAAKye,GATgE,uBAU/D,IAAIiF,iBAAY,sCAAuC,4DAVQ,cAa/D,IAAIA,iBAAY,sCAAuC,2BAA6B,KAAE7gB,SAbvB,6DAiB3E+rB,yBApLD,cAoL2E,0KAA/C3L,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEjDY,GAAa6C,GAFoC,cAElEnE,EAFkE,gBAGtDA,EAAS+M,qBAAqBrqB,GAHwB,cAGlEkjB,EAHkE,iBAInD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL+C,eAIlExf,EAJkE,yBAMjEA,GANiE,wCASpE,MAAKye,GAT+D,uBAU9D,IAAIiF,iBAAY,qCAAsC,4DAVQ,cAa9D,IAAIA,iBAAY,qCAAsC,2BAA6B,KAAE7gB,SAbvB,6DAiB1EgsB,+BArMD,cAqMiF,0KAA/C5L,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEvDY,GAAa6C,GAF0C,cAExEnE,EAFwE,gBAG5DA,EAASgN,2BAA2BtqB,GAHwB,cAGxEkjB,EAHwE,iBAIzD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALqD,eAIxExf,EAJwE,yBAMvEA,GANuE,wCAS1E,MAAKye,GATqE,uBAUpE,IAAIiF,iBAAY,2CAA4C,4DAVQ,cAapE,IAAIA,iBAAY,2CAA4C,2BAA6B,KAAE7gB,SAbvB,6DAiBhF0oB,+BAtND,cAsN4D,gKAA1BtI,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAElC4e,GAAa6C,GAFqB,cAEnDnE,EAFmD,gBAGvCA,EAAS6M,+BAA+BnqB,GAHD,cAGnDkjB,EAHmD,yBAIlDA,GAJkD,wCAOrD,MAAKjG,GAPgD,uBAQ/C,IAAIiF,iBAAY,+CAAgD,4DARjB,cAW/C,IAAIA,iBAAY,iDAAkD,6BAA+B,KAAE7gB,SAXpD,6DAe3DsoB,sBArOD,cAqOmD,gKAA1BlI,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEzB4e,GAAa6C,GAFY,cAE1CnE,EAF0C,gBAG9BA,EAAS8M,sBAAsBpqB,GAHD,cAG1CkjB,EAH0C,yBAIzCA,GAJyC,wCAO5C,MAAKjG,GAPuC,uBAQtC,IAAIiF,iBAAY,sCAAuC,4DARjB,cAWtC,IAAIA,iBAAY,wCAAyC,6BAA+B,KAAE7gB,SAXpD,6DAelD6oB,qBApPD,cAoPkD,gKAA1BzI,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAExB4e,GAAa6C,GAFW,cAEzCnE,EAFyC,gBAG7BA,EAAS+M,qBAAqBrqB,GAHD,cAGzCkjB,EAHyC,yBAIxCA,GAJwC,wCAO3C,MAAKjG,GAPsC,uBAQrC,IAAIiF,iBAAY,qCAAsC,4DARjB,cAWrC,IAAIA,iBAAY,uCAAwC,6BAA+B,KAAE7gB,SAXpD,6DAejDwoB,2BAnQD,cAmQwD,gKAA1BpI,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAE9B4e,GAAa6C,GAFiB,cAE/CnE,EAF+C,gBAGnCA,EAASgN,2BAA2BtqB,GAHD,cAG/CkjB,EAH+C,yBAI9CA,GAJ8C,wCAOjD,MAAKjG,GAP4C,uBAQ3C,IAAIiF,iBAAY,2CAA4C,4DARjB,cAW3C,IAAIA,iBAAY,6CAA8C,6BAA+B,KAAE7gB,SAXpD,+D,6EC/ZrE,SAAWkX,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,IAAMC,GAAb,WACI,aAA4B,aAAhBC,EAAgB,uDAAJ,GAAI,uBACxBd,KAAKe,QAAU,GACff,KAAKgB,aAAe,KACpBhB,KAAKiB,eAAiB,KACtBjB,KAAKkB,iBAAmB,IAAIC,IAC5BnB,KAAKoB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpBxB,KAAKyB,gBAAkB,SAACjc,GACpB,EAAKwb,aAAexb,GAExBwa,KAAK0B,mBAAL,sBACKd,GAAYe,MAAO,SAAC1X,GAAD,OAAqB,OAAVA,GAAoC,WAAjB,eAAOA,IAAuC,kBAAVA,EAA8CA,EAAxB2X,KAAKC,UAAU5X,MAD/H,iBAEK2W,GAAYkB,UAAW,SAAC7X,GAAD,OAAWhE,OAAO8b,KAAK9X,GAAS,IAAI+X,QAAO,SAACxc,EAAMmD,GAEtE,OADAnD,EAAKyc,OAAOtZ,EAAKsB,EAAMtB,IAChBnD,IACR,IAAIsc,aALX,iBAMKlB,GAAYsB,YAAa,SAACjY,GAAD,OAAW,EAAKkY,cAAclY,MAN5D,GAQA+V,KAAKoC,kBAAoB,SAACC,GACtB,GAAI,EAAKnB,iBAAiBoB,IAAID,GAAc,CACxC,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAClD,OAAIE,EACOA,EAAgBC,YAE3B,EAEJ,IAAMD,EAAkB,IAAIE,gBAE5B,OADA,EAAKvB,iBAAiBwB,IAAIL,EAAaE,GAChCA,EAAgBC,QAE3BxC,KAAK2C,aAAe,SAACN,GACjB,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAC9CE,IACAA,EAAgBK,QAChB,EAAK1B,iBAAiB2B,OAAOR,KAGrCrC,KAAK8C,QAAU,YAA2F,IAAxFC,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQpV,EAA0E,EAA1EA,KAAMuD,EAAoE,EAApEA,KAAM8R,EAA8D,EAA9DA,MAA8D,IAAvDC,cAAuD,MAA9C,OAA8C,EAAtCnC,EAAsC,EAAtCA,QAASsB,EAA6B,EAA7BA,YAAgBc,EAAa,qBAChGC,EAAgBJ,GAAU,EAAK/B,gBAAkB,EAAKA,eAAe,EAAKD,eAAkB,GAC5FqC,EAAgB,EAAKC,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS,EAAKd,cAAcc,GAC1CO,EAAmB,EAAK9B,kBAAkBvQ,GAAQyP,GAAYe,MACpE,OAAO8B,MAAM,GAAD,OAAI1C,GAAW,EAAKA,SAAW,IAA/B,OAAoCnT,GAApC,OAA2C2V,EAAc,IAAH,OAAOA,GAAgB,IAA7E,eAAC,kBACNF,GADK,IAER/B,QAAS,iCACDnQ,GAAQA,IAASyP,GAAYkB,SAAW,CAAE,eAAgB3Q,GAAS,IACnEkS,EAAc/B,SAAW,IAEjCkB,OAAQH,EAAc,EAAKD,kBAAkBC,QAAe,EAC5DU,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOS,EAAiBT,MAC9EW,KARI,yDAQC,WAAOC,GAAP,gGACEzb,EAAIyb,EACVzb,EAAE1C,KAAO,KACT0C,EAAEkR,MAAQ,KAHN,SAIeuK,EAAST,KACvBQ,MAAK,SAACle,GAOP,OANI0C,EAAE0b,GACF1b,EAAE1C,KAAOA,EAGT0C,EAAEkR,MAAQ5T,EAEP0C,KAEN2b,OAAM,SAACxU,GAER,OADAnH,EAAEkR,MAAQ/J,EACHnH,KAhBP,UAIE1C,EAJF,OAkBA6c,GACA,EAAKnB,iBAAiB2B,OAAOR,GAE5BsB,EAASC,GArBV,sBAsBMpe,EAtBN,gCAuBGA,GAvBH,4CARD,wDAkCXS,OAAO6d,OAAO9D,KAAMc,GAjF5B,oDAmFI,SAAcmC,EAAOta,GACjB,IAAMN,EAAQ4a,EAAMta,GACpB,OAAQob,mBAAmBpb,GACvB,IACAob,mBAAmBC,MAAMC,QAAQ5b,GAASA,EAAMsG,KAAK,KAAwB,kBAAVtG,EAAqBA,EAA5B,UAAuCA,MAvF/G,2BAyFI,SAAc6b,GAAU,WACdjB,EAAQiB,GAAY,GACpBnC,EAAO9b,OAAO8b,KAAKkB,GAAOkB,QAAO,SAACxb,GAAD,MAAS,qBAAuBsa,EAAMta,MAC7E,OAAOoZ,EACFzS,KAAI,SAAC3G,GAAD,MAA+B,WAAtB,eAAOsa,EAAMta,KAAsBqb,MAAMC,QAAQhB,EAAMta,IAEnE,EAAKyb,cAAcnB,EAAOta,GAD1B,EAAKwZ,cAAcc,EAAMta,OAE1BgG,KAAK,OAhGlB,4BAkGI,SAAeuV,GACX,IAAMX,EAAcvD,KAAKmC,cAAc+B,GACvC,OAAOX,EAAc,IAAH,OAAOA,GAAgB,KApGjD,gCAsGI,SAAmBc,EAASC,GACxB,sEACOtE,KAAKoB,eACLiD,GACCC,GAAW,IAHnB,IAIIhD,QAAS,gDACDtB,KAAKoB,cAAcE,SAAW,IAC9B+C,EAAQ/C,SAAW,IAClBgD,GAAWA,EAAQhD,SAAY,UA9GpD,KAuHaiD,GAAb,wDACI,aAAc,oCACV,eAASC,WAST,EAAKmR,iBAAmB,SAAC1S,GAAD,IAAQE,EAAR,uDAAiB,GAAjB,OAAwB,EAAKL,QAAL,gBAC5ClV,KAAM,oCACN+W,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAKyS,cAAgB,SAACvhB,GAAD,IAAe8O,EAAf,uDAAwB,GAAxB,OAA+B,EAAKL,QAAL,gBAChDlV,KAAM,qCAAF,OAAuCyG,GAC3CsQ,OAAQ,MACRzB,OAAQ,QACLC,KA7BG,EADlB,UAAyBtC,I,aClInBwE,GAAQ,CACV,CAAC,6CAA8CwQ,UAEtCvQ,GAAqB,IAAI/Z,MAAM,sBACtCga,GAAW,IAAIC,cAASH,IACxBI,GAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,GAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,GAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,cAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,GAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvHyP,kBAAmB,SAACtwB,GAAD,MAAW,CAAEqN,QAAS,6CAA8CxK,MAAO7C,MAPrF,4CAAH,sDAURqhB,GAAW,yDAAG,0JAAwB,CAAEhB,KAAM,yBAAjBA,EAAf,EAASA,KAAT,kBACT,IAAItB,GAAI,CAAExD,QAAS8E,KADV,2CAAH,qD,sBCnBFoB,G,mGAAf,WAA4BC,GAA5B,iGACiBvB,GAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,kCAKeC,G,mGAAf,WAA+BD,GAA/B,iGACiBL,GAAY,CACrBhB,KAAMqB,EAAY,0BAF1B,mF,yBAKA,SAASE,GAAa/e,EAAOgf,GACzB,cAAiBphB,OAAO8b,KAAKsF,GAA7B,eAA2C,CAAtC,IAAIC,EAAI,KACLtD,MAAMC,QAAQoD,EAAYC,IAC1Bjf,EAAMif,GAAN,yBAAkBjf,EAAMif,IAAxB,eAAkCD,EAAYC,KAG9Cjf,EAAMif,GAAQD,EAAYC,GAGlC,OAAOjf,EAEX,SAASkf,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,ICXWsO,GAkBAC,GAQApV,GDfLgH,GAAkB,WACpB,MAAO,CACHqO,SAAU,GACVC,YAAa,GACb5N,WAAY,CACRrT,aAAcsS,GAAatS,QAAajK,YAAY,MAExDud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACLkN,YAAa,SAACve,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIxC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMqe,SAASrU,KAAKC,UAAUsB,WAArC,QAAiD,KAErDiT,eAAgB,SAACxe,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI3C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMse,YAAYtU,KAAKC,UAAUsB,WAAxC,QAAoD,KAExDwG,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,qDACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjC2sB,cAzBD,cAyBuJ,gLAAtIpM,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE1HkE,GAAgB2C,GAF0G,cAE9IjD,EAF8I,iBAGjIA,EAAY+O,cAAcjtB,EAAI2tB,eAHmG,eAGhJjuB,EAHgJ,OAGnF7C,KACjEykB,EAAO,QAAS,CAAEhH,MAAO,WAAYta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACrEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,gBAAiBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO7IgG,EAAQ,eAAe,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU9I,IAAIsH,iBAAY,4BAA6B,kDAAoD,KAAE7gB,SAV2C,6DAatJ6sB,iBAtCD,cAsC0J,kLAAtItM,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE7HkE,GAAgB2C,GAF6G,cAEjJjD,EAFiJ,iBAGpIA,EAAY8O,iBAAiB1S,GAHuG,QAGnJ5a,EAHmJ,OAG/F7C,KAH+F,YAIhJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJoG,kCAK1HlE,EAAY8O,iBAAZ,iCAAkC1S,GAAlC,IAAyC,iBAAkB5a,EAAMyiB,WAAWC,WAL8C,QAK/I1D,EAL+I,OAKlC7hB,KACjH6C,EAAQ+e,GAAa/e,EAAOgf,GANuH,+BAQvJ4C,EAAO,QAAS,CAAEhH,MAAO,cAAeta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACxEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,mBAAoBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWhJgG,EAAQ,kBAAkB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAcjJ,IAAIsH,iBAAY,+BAAgC,kDAAoD,KAAE7gB,SAd2C,6DAiBzJ8sB,sBAvDD,cAuDwE,0KAA/C1M,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE9CY,GAAa6C,GAFiC,cAE/DnE,EAF+D,gBAGnDA,EAASmQ,kBAAkBztB,GAHwB,cAG/DkjB,EAH+D,iBAIhD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL4C,eAI/Dxf,EAJ+D,yBAM9DA,GAN8D,wCASjE,MAAKye,GAT4D,uBAU3D,IAAIiF,iBAAY,kCAAmC,4DAVQ,cAa3D,IAAIA,iBAAY,kCAAmC,2BAA6B,KAAE7gB,SAbvB,6DAiBvEmsB,kBAxED,cAwE+C,gKAA1B/L,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAErB4e,GAAa6C,GAFQ,cAEtCnE,EAFsC,gBAG1BA,EAASmQ,kBAAkBztB,GAHD,cAGtCkjB,EAHsC,yBAIrCA,GAJqC,wCAOxC,MAAKjG,GAPmC,uBAQlC,IAAIiF,iBAAY,kCAAmC,4DARjB,cAWlC,IAAIA,iBAAY,oCAAqC,6BAA+B,KAAE7gB,SAXpD,+D,6EChI5D,SAAWqsB,GACPA,EAAsB,+BAAiC,8BACvDA,EAAsB,kCAAoC,iCAC1DA,EAAsB,iCAAmC,gCACzDA,EAAsB,0BAA4B,yBAClDA,EAAsB,4BAA8B,2BACpDA,EAAsB,0BAA4B,0BANtD,CAOGA,KAA0BA,GAAwB,KAWrD,SAAWC,GACPA,EAAkB,2BAA6B,0BAC/CA,EAAkB,mBAAqB,kBACvCA,EAAkB,uBAAyB,sBAC3CA,EAAkB,kBAAoB,iBACtCA,EAAkB,4BAA8B,2BALpD,CAMGA,KAAsBA,GAAoB,KAE7C,SAAWpV,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,oCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,IAAMC,GAAb,WACI,aAA4B,aAAhBC,EAAgB,uDAAJ,GAAI,uBACxBd,KAAKe,QAAU,GACff,KAAKgB,aAAe,KACpBhB,KAAKiB,eAAiB,KACtBjB,KAAKkB,iBAAmB,IAAIC,IAC5BnB,KAAKoB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpBxB,KAAKyB,gBAAkB,SAACjc,GACpB,EAAKwb,aAAexb,GAExBwa,KAAK0B,mBAAL,sBACKd,GAAYe,MAAO,SAAC1X,GAAD,OAAqB,OAAVA,GAAoC,WAAjB,eAAOA,IAAuC,kBAAVA,EAA8CA,EAAxB2X,KAAKC,UAAU5X,MAD/H,iBAEK2W,GAAYkB,UAAW,SAAC7X,GAAD,OAAWhE,OAAO8b,KAAK9X,GAAS,IAAI+X,QAAO,SAACxc,EAAMmD,GAEtE,OADAnD,EAAKyc,OAAOtZ,EAAKsB,EAAMtB,IAChBnD,IACR,IAAIsc,aALX,iBAMKlB,GAAYsB,YAAa,SAACjY,GAAD,OAAW,EAAKkY,cAAclY,MAN5D,GAQA+V,KAAKoC,kBAAoB,SAACC,GACtB,GAAI,EAAKnB,iBAAiBoB,IAAID,GAAc,CACxC,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAClD,OAAIE,EACOA,EAAgBC,YAE3B,EAEJ,IAAMD,EAAkB,IAAIE,gBAE5B,OADA,EAAKvB,iBAAiBwB,IAAIL,EAAaE,GAChCA,EAAgBC,QAE3BxC,KAAK2C,aAAe,SAACN,GACjB,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAC9CE,IACAA,EAAgBK,QAChB,EAAK1B,iBAAiB2B,OAAOR,KAGrCrC,KAAK8C,QAAU,YAA2F,IAAxFC,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQpV,EAA0E,EAA1EA,KAAMuD,EAAoE,EAApEA,KAAM8R,EAA8D,EAA9DA,MAA8D,IAAvDC,cAAuD,MAA9C,OAA8C,EAAtCnC,EAAsC,EAAtCA,QAASsB,EAA6B,EAA7BA,YAAgBc,EAAa,qBAChGC,EAAgBJ,GAAU,EAAK/B,gBAAkB,EAAKA,eAAe,EAAKD,eAAkB,GAC5FqC,EAAgB,EAAKC,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS,EAAKd,cAAcc,GAC1CO,EAAmB,EAAK9B,kBAAkBvQ,GAAQyP,GAAYe,MACpE,OAAO8B,MAAM,GAAD,OAAI1C,GAAW,EAAKA,SAAW,IAA/B,OAAoCnT,GAApC,OAA2C2V,EAAc,IAAH,OAAOA,GAAgB,IAA7E,eAAC,kBACNF,GADK,IAER/B,QAAS,iCACDnQ,GAAQA,IAASyP,GAAYkB,SAAW,CAAE,eAAgB3Q,GAAS,IACnEkS,EAAc/B,SAAW,IAEjCkB,OAAQH,EAAc,EAAKD,kBAAkBC,QAAe,EAC5DU,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOS,EAAiBT,MAC9EW,KARI,yDAQC,WAAOC,GAAP,gGACEzb,EAAIyb,EACVzb,EAAE1C,KAAO,KACT0C,EAAEkR,MAAQ,KAHN,SAIeuK,EAAST,KACvBQ,MAAK,SAACle,GAOP,OANI0C,EAAE0b,GACF1b,EAAE1C,KAAOA,EAGT0C,EAAEkR,MAAQ5T,EAEP0C,KAEN2b,OAAM,SAACxU,GAER,OADAnH,EAAEkR,MAAQ/J,EACHnH,KAhBP,UAIE1C,EAJF,OAkBA6c,GACA,EAAKnB,iBAAiB2B,OAAOR,GAE5BsB,EAASC,GArBV,sBAsBMpe,EAtBN,gCAuBGA,GAvBH,4CARD,wDAkCXS,OAAO6d,OAAO9D,KAAMc,GAjF5B,oDAmFI,SAAcmC,EAAOta,GACjB,IAAMN,EAAQ4a,EAAMta,GACpB,OAAQob,mBAAmBpb,GACvB,IACAob,mBAAmBC,MAAMC,QAAQ5b,GAASA,EAAMsG,KAAK,KAAwB,kBAAVtG,EAAqBA,EAA5B,UAAuCA,MAvF/G,2BAyFI,SAAc6b,GAAU,WACdjB,EAAQiB,GAAY,GACpBnC,EAAO9b,OAAO8b,KAAKkB,GAAOkB,QAAO,SAACxb,GAAD,MAAS,qBAAuBsa,EAAMta,MAC7E,OAAOoZ,EACFzS,KAAI,SAAC3G,GAAD,MAA+B,WAAtB,eAAOsa,EAAMta,KAAsBqb,MAAMC,QAAQhB,EAAMta,IAEnE,EAAKyb,cAAcnB,EAAOta,GAD1B,EAAKwZ,cAAcc,EAAMta,OAE1BgG,KAAK,OAhGlB,4BAkGI,SAAeuV,GACX,IAAMX,EAAcvD,KAAKmC,cAAc+B,GACvC,OAAOX,EAAc,IAAH,OAAOA,GAAgB,KApGjD,gCAsGI,SAAmBc,EAASC,GACxB,sEACOtE,KAAKoB,eACLiD,GACCC,GAAW,IAHnB,IAIIhD,QAAS,gDACDtB,KAAKoB,cAAcE,SAAW,IAC9B+C,EAAQ/C,SAAW,IAClBgD,GAAWA,EAAQhD,SAAY,UA9GpD,KAuHaiD,GAAb,wDACI,aAAc,oCACV,eAASC,WAST,EAAK2H,YAAc,SAACsK,GAAD,IAAatT,EAAb,uDAAsB,GAAtB,OAA6B,EAAKL,QAAL,gBAC5ClV,KAAM,8BAAF,OAAgC6oB,GACpC9R,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKuT,eAAiB,SAACzT,GAAD,IAAQE,EAAR,uDAAiB,GAAjB,OAAwB,EAAKL,QAAL,gBAC1ClV,KAAM,gCACN+W,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAKwT,cAAgB,SAACC,GAAD,IAAazT,EAAb,uDAAsB,GAAtB,OAA6B,EAAKL,QAAL,gBAC9ClV,KAAM,iCAAF,OAAmCgpB,GACvCjS,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK0T,cAAgB,SAACD,EAAY3T,GAAb,IAAoBE,EAApB,uDAA6B,GAA7B,OAAoC,EAAKL,QAAL,gBACrDlV,KAAM,iCAAF,OAAmCgpB,EAAnC,aACJjS,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAK2T,aAAe,SAACF,EAAYtE,GAAb,IAAwBnP,EAAxB,uDAAiC,GAAjC,OAAwC,EAAKL,QAAL,gBACxDlV,KAAM,iCAAF,OAAmCgpB,EAAnC,qBAA0DtE,GAC9D3N,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK4T,iBAAmB,SAACH,GAAD,IAAazT,EAAb,uDAAsB,GAAtB,OAA6B,EAAKL,QAAL,gBACjDlV,KAAM,iCAAF,OAAmCgpB,EAAnC,UACJjS,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK6T,WAAa,SAACJ,EAAY3T,GAAb,IAAoBE,EAApB,uDAA6B,GAA7B,OAAoC,EAAKL,QAAL,gBAClDlV,KAAM,iCAAF,OAAmCgpB,EAAnC,UACJjS,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAK8T,UAAY,SAACL,EAAYM,GAAb,IAAoB/T,EAApB,uDAA6B,GAA7B,OAAoC,EAAKL,QAAL,gBACjDlV,KAAM,iCAAF,OAAmCgpB,EAAnC,kBAAuDM,GAC3DvS,OAAQ,MACRzB,OAAQ,QACLC,KAnHG,EADlB,UAAyBtC,I,aCzKnBwE,GAAQ,CACV,CAAC,8BAA+B8R,SAChC,CAAC,iCAAkCC,SACnC,CAAC,wCAAyCC,UAEjC/R,GAAqB,IAAI/Z,MAAM,sBACtCga,GAAW,IAAIC,cAASH,IACxBI,GAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,GAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,GAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,cAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,GAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvHiR,QAAS,SAAC9xB,GAAD,MAAW,CAAEqN,QAAS,8BAA+BxK,MAAO7C,IACrE+xB,WAAY,SAAC/xB,GAAD,MAAW,CAAEqN,QAAS,iCAAkCxK,MAAO7C,IAC3EgyB,kBAAmB,SAAChyB,GAAD,MAAW,CAAEqN,QAAS,wCAAyCxK,MAAO7C,MAThF,4CAAH,sDAYRqhB,GAAW,yDAAG,0JAAwB,CAAEhB,KAAM,yBAAjBA,EAAf,EAASA,KAAT,kBACT,IAAItB,GAAI,CAAExD,QAAS8E,KADV,2CAAH,qD,sBClBFoB,G,mGAAf,WAA4BC,GAA5B,iGACiBvB,GAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,kCAKeC,G,mGAAf,WAA+BD,GAA/B,iGACiBL,GAAY,CACrBhB,KAAMqB,EAAY,0BAF1B,mF,yBAKA,SAASE,GAAa/e,EAAOgf,GACzB,cAAiBphB,OAAO8b,KAAKsF,GAA7B,eAA2C,CAAtC,IAAIC,EAAI,KACLtD,MAAMC,QAAQoD,EAAYC,IAC1Bjf,EAAMif,GAAN,yBAAkBjf,EAAMif,IAAxB,eAAkCD,EAAYC,KAG9Cjf,EAAMif,GAAQD,EAAYC,GAGlC,OAAOjf,EAEX,SAASkf,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,ICjCW7G,GDiCLgH,GAAkB,WACpB,MAAO,CACH6P,SAAU,GACVC,UAAW,GACXC,KAAM,GACNC,MAAO,GACP5Z,OAAQ,GACR6Z,QAAS,GACTC,SAAU,GACVC,YAAa,GACbzP,WAAY,CACR0P,aAAczQ,GAAayQ,QAAahtB,YAAY,KACpD6sB,QAAStQ,GAAasQ,QAAQ7sB,YAAY,KAC1CysB,SAAUlQ,GAAakQ,QAASzsB,YAAY,KAC5C+sB,YAAaxQ,GAAawQ,QAAY/sB,YAAY,KAClD2sB,KAAMpQ,GAAaoQ,QAAK3sB,YAAY,KACpCitB,cAAe1Q,GAAa0Q,QAAcjtB,YAAY,KACtDktB,aAAc3Q,GAAa2Q,QAAaltB,YAAY,KACpDmtB,YAAa5Q,GAAa4Q,QAAYntB,YAAY,MAEtDud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACLmP,YAAa,SAACxgB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIxC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM6f,SAAS7V,KAAKC,UAAUsB,WAArC,QAAiD,KAErDkV,aAAc,SAACzgB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIzC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM8f,UAAU9V,KAAKC,UAAUsB,WAAtC,QAAkD,KAEtDmV,QAAS,SAAC1gB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIpC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM+f,KAAK/V,KAAKC,UAAUsB,WAAjC,QAA6C,KAEjDoV,SAAU,SAAC3gB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIrC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMggB,MAAMhW,KAAKC,UAAUsB,WAAlC,QAA8C,KAElD8L,UAAW,SAACrX,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAItC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMoG,OAAO4D,KAAKC,UAAUsB,WAAnC,QAA+C,KAEnDqV,WAAY,SAAC5gB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIvC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMigB,QAAQjW,KAAKC,UAAUsB,WAApC,QAAgD,KAEpDsV,YAAa,SAAC7gB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIxC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMkgB,SAASlW,KAAKC,UAAUsB,WAArC,QAAiD,KAErDuV,eAAgB,SAAC9gB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI3C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMmgB,YAAYnW,KAAKC,UAAUsB,WAAxC,QAAoD,KAExDwG,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,gDACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjCivB,cAzBD,cAyBuJ,gLAAtI1O,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE1HkE,GAAgB2C,GAF0G,cAE9IjD,EAF8I,iBAGjIA,EAAY8P,cAAchuB,EAAIiwB,aAHmG,eAGhJvwB,EAHgJ,OAGrF7C,KAC/DykB,EAAO,QAAS,CAAEhH,MAAO,WAAYta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACrEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,gBAAiBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO7IgG,EAAQ,eAAe,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU9I,IAAIsH,iBAAY,4BAA6B,kDAAoD,KAAE7gB,SAV2C,6DAatJmvB,eAtCD,cAsCwJ,kLAAtI5O,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE3HkE,GAAgB2C,GAF2G,cAE/IjD,EAF+I,iBAGlIA,EAAY6P,eAAezT,GAHuG,QAGjJ5a,EAHiJ,OAG/F7C,KAH+F,YAI9ImlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJkG,kCAKxHlE,EAAY6P,eAAZ,iCAAgCzT,GAAhC,IAAuC,iBAAkB5a,EAAMyiB,WAAWC,WAL8C,QAK7I1D,EAL6I,OAKlC7hB,KAC/G6C,EAAQ+e,GAAa/e,EAAOgf,GANqH,+BAQrJ4C,EAAO,QAAS,CAAEhH,MAAO,YAAata,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACtEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,iBAAkBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAW9IgG,EAAQ,gBAAgB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAc/I,IAAIsH,iBAAY,6BAA8B,kDAAoD,KAAE7gB,SAd2C,6DAiBvJovB,UAvDD,cAuDmJ,gLAAtI7O,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEtHkE,GAAgB2C,GAFsG,cAE1IjD,EAF0I,iBAG7HA,EAAYoQ,UAAUtuB,EAAIiwB,YAAajwB,EAAIuuB,OAHkF,eAG5I7uB,EAH4I,OAG1E7C,KACtEykB,EAAO,QAAS,CAAEhH,MAAO,OAAQta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACjEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,YAAaC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOzIgG,EAAQ,WAAW,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU1I,IAAIsH,iBAAY,wBAAyB,kDAAoD,KAAE7gB,SAV2C,6DAalJqvB,WApED,cAoEoJ,kLAAtI9O,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEvHkE,GAAgB2C,GAFuG,cAE3IjD,EAF2I,iBAG9HA,EAAYmQ,WAAWruB,EAAIiwB,YAAa3V,GAHsF,QAG7I5a,EAH6I,OAG9E7C,KAH8E,YAI1ImlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJ8F,kCAKpHlE,EAAYmQ,WAAWruB,EAAIiwB,YAA3B,iCAA6C3V,GAA7C,IAAoD,iBAAkB5a,EAAMyiB,WAAWC,WAL6B,QAKzI1D,EALyI,OAKjB7hB,KAC5H6C,EAAQ+e,GAAa/e,EAAOgf,GANiH,+BAQjJ4C,EAAO,QAAS,CAAEhH,MAAO,QAASta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAClEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,aAAcC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAW1IgG,EAAQ,YAAY,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAc3I,IAAIsH,iBAAY,yBAA0B,kDAAoD,KAAE7gB,SAd2C,6DAiBnJ8lB,YArFD,cAqFqJ,gLAAtIvF,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAExHkE,GAAgB2C,GAFwG,cAE5IjD,EAF4I,iBAG/HA,EAAYsF,YAAYxjB,EAAIqwB,aAHmG,eAG9I3wB,EAH8I,OAGrF7C,KAC7DykB,EAAO,QAAS,CAAEhH,MAAO,SAAUta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACnEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,cAAeC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO3IgG,EAAQ,aAAa,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU5I,IAAIsH,iBAAY,0BAA2B,kDAAoD,KAAE7gB,SAV2C,6DAapJuvB,aAlGD,cAkGsJ,gLAAtIhP,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEzHkE,GAAgB2C,GAFyG,cAE7IjD,EAF6I,iBAGhIA,EAAYiQ,aAAanuB,EAAIiwB,YAAajwB,EAAI2pB,WAHkF,eAG/IjqB,EAH+I,OAGtE7C,KAC7EykB,EAAO,QAAS,CAAEhH,MAAO,UAAWta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACpEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,eAAgBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO5IgG,EAAQ,cAAc,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU7I,IAAIsH,iBAAY,2BAA4B,kDAAoD,KAAE7gB,SAV2C,6DAarJwvB,cA/GD,cA+GuJ,kLAAtIjP,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE1HkE,GAAgB2C,GAF0G,cAE9IjD,EAF8I,iBAGjIA,EAAYgQ,cAAcluB,EAAIiwB,YAAa3V,GAHsF,QAGhJ5a,EAHgJ,OAG9E7C,KAH8E,YAI7ImlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJiG,kCAKvHlE,EAAYgQ,cAAcluB,EAAIiwB,YAA9B,iCAAgD3V,GAAhD,IAAuD,iBAAkB5a,EAAMyiB,WAAWC,WAL6B,QAK5I1D,EAL4I,OAKjB7hB,KAC/H6C,EAAQ+e,GAAa/e,EAAOgf,GANoH,+BAQpJ4C,EAAO,QAAS,CAAEhH,MAAO,WAAYta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACrEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,gBAAiBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAW7IgG,EAAQ,eAAe,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAc9I,IAAIsH,iBAAY,4BAA6B,kDAAoD,KAAE7gB,SAd2C,6DAiBtJyvB,iBAhID,cAgI0J,gLAAtIlP,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE7HkE,GAAgB2C,GAF6G,cAEjJjD,EAFiJ,iBAGpIA,EAAYkQ,iBAAiBpuB,EAAIiwB,aAHmG,eAGnJvwB,EAHmJ,OAGrF7C,KAClEykB,EAAO,QAAS,CAAEhH,MAAO,cAAeta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACxEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,mBAAoBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOhJgG,EAAQ,kBAAkB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUjJ,IAAIsH,iBAAY,+BAAgC,kDAAoD,KAAE7gB,SAV2C,6DAazJ0vB,YA7ID,cA6I8D,0KAA/CtP,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEpCY,GAAa6C,GAFuB,cAErDnE,EAFqD,gBAGzCA,EAAS2R,QAAQjvB,GAHwB,cAGrDkjB,EAHqD,iBAItC5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALkC,eAIrDxf,EAJqD,yBAMpDA,GANoD,wCASvD,MAAKye,GATkD,uBAUjD,IAAIiF,iBAAY,wBAAyB,4DAVQ,cAajD,IAAIA,iBAAY,wBAAyB,2BAA6B,KAAE7gB,SAbvB,6DAiB7D2vB,eA9JD,cA8JiE,0KAA/CvP,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEvCY,GAAa6C,GAF0B,cAExDnE,EAFwD,gBAG5CA,EAAS4R,WAAWlvB,GAHwB,cAGxDkjB,EAHwD,iBAIzC5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALqC,eAIxDxf,EAJwD,yBAMvDA,GANuD,wCAS1D,MAAKye,GATqD,uBAUpD,IAAIiF,iBAAY,2BAA4B,4DAVQ,cAapD,IAAIA,iBAAY,2BAA4B,2BAA6B,KAAE7gB,SAbvB,6DAiBhE4vB,sBA/KD,cA+KwE,0KAA/CxP,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE9CY,GAAa6C,GAFiC,cAE/DnE,EAF+D,gBAGnDA,EAAS6R,kBAAkBnvB,GAHwB,cAG/DkjB,EAH+D,iBAIhD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL4C,eAI/Dxf,EAJ+D,yBAM9DA,GAN8D,wCASjE,MAAKye,GAT4D,uBAU3D,IAAIiF,iBAAY,kCAAmC,4DAVQ,cAa3D,IAAIA,iBAAY,kCAAmC,2BAA6B,KAAE7gB,SAbvB,6DAiBvEytB,QAhMD,cAgMqC,gKAA1BrN,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEX4e,GAAa6C,GAFF,cAE5BnE,EAF4B,gBAGhBA,EAAS2R,QAAQjvB,GAHD,cAG5BkjB,EAH4B,yBAI3BA,GAJ2B,wCAO9B,MAAKjG,GAPyB,uBAQxB,IAAIiF,iBAAY,wBAAyB,4DARjB,cAWxB,IAAIA,iBAAY,0BAA2B,6BAA+B,KAAE7gB,SAXpD,6DAepC0tB,WA/MD,cA+MwC,gKAA1BtN,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEd4e,GAAa6C,GAFC,cAE/BnE,EAF+B,gBAGnBA,EAAS4R,WAAWlvB,GAHD,cAG/BkjB,EAH+B,yBAI9BA,GAJ8B,wCAOjC,MAAKjG,GAP4B,uBAQ3B,IAAIiF,iBAAY,2BAA4B,4DARjB,cAW3B,IAAIA,iBAAY,6BAA8B,6BAA+B,KAAE7gB,SAXpD,6DAevC2tB,kBA9ND,cA8N+C,gKAA1BvN,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAErB4e,GAAa6C,GAFQ,cAEtCnE,EAFsC,gBAG1BA,EAAS6R,kBAAkBnvB,GAHD,cAGtCkjB,EAHsC,yBAIrCA,GAJqC,wCAOxC,MAAKjG,GAPmC,uBAQlC,IAAIiF,iBAAY,kCAAmC,4DARjB,cAWlC,IAAIA,iBAAY,oCAAqC,6BAA+B,KAAE7gB,SAXpD,+D,6EC7V5D,SAAWkX,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,IAAMC,GAAb,WACI,aAA4B,aAAhBC,EAAgB,uDAAJ,GAAI,uBACxBd,KAAKe,QAAU,GACff,KAAKgB,aAAe,KACpBhB,KAAKiB,eAAiB,KACtBjB,KAAKkB,iBAAmB,IAAIC,IAC5BnB,KAAKoB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpBxB,KAAKyB,gBAAkB,SAACjc,GACpB,EAAKwb,aAAexb,GAExBwa,KAAK0B,mBAAL,sBACKd,GAAYe,MAAO,SAAC1X,GAAD,OAAqB,OAAVA,GAAoC,WAAjB,eAAOA,IAAuC,kBAAVA,EAA8CA,EAAxB2X,KAAKC,UAAU5X,MAD/H,iBAEK2W,GAAYkB,UAAW,SAAC7X,GAAD,OAAWhE,OAAO8b,KAAK9X,GAAS,IAAI+X,QAAO,SAACxc,EAAMmD,GAEtE,OADAnD,EAAKyc,OAAOtZ,EAAKsB,EAAMtB,IAChBnD,IACR,IAAIsc,aALX,iBAMKlB,GAAYsB,YAAa,SAACjY,GAAD,OAAW,EAAKkY,cAAclY,MAN5D,GAQA+V,KAAKoC,kBAAoB,SAACC,GACtB,GAAI,EAAKnB,iBAAiBoB,IAAID,GAAc,CACxC,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAClD,OAAIE,EACOA,EAAgBC,YAE3B,EAEJ,IAAMD,EAAkB,IAAIE,gBAE5B,OADA,EAAKvB,iBAAiBwB,IAAIL,EAAaE,GAChCA,EAAgBC,QAE3BxC,KAAK2C,aAAe,SAACN,GACjB,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAC9CE,IACAA,EAAgBK,QAChB,EAAK1B,iBAAiB2B,OAAOR,KAGrCrC,KAAK8C,QAAU,YAA2F,IAAxFC,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQpV,EAA0E,EAA1EA,KAAMuD,EAAoE,EAApEA,KAAM8R,EAA8D,EAA9DA,MAA8D,IAAvDC,cAAuD,MAA9C,OAA8C,EAAtCnC,EAAsC,EAAtCA,QAASsB,EAA6B,EAA7BA,YAAgBc,EAAa,qBAChGC,EAAgBJ,GAAU,EAAK/B,gBAAkB,EAAKA,eAAe,EAAKD,eAAkB,GAC5FqC,EAAgB,EAAKC,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS,EAAKd,cAAcc,GAC1CO,EAAmB,EAAK9B,kBAAkBvQ,GAAQyP,GAAYe,MACpE,OAAO8B,MAAM,GAAD,OAAI1C,GAAW,EAAKA,SAAW,IAA/B,OAAoCnT,GAApC,OAA2C2V,EAAc,IAAH,OAAOA,GAAgB,IAA7E,eAAC,kBACNF,GADK,IAER/B,QAAS,iCACDnQ,GAAQA,IAASyP,GAAYkB,SAAW,CAAE,eAAgB3Q,GAAS,IACnEkS,EAAc/B,SAAW,IAEjCkB,OAAQH,EAAc,EAAKD,kBAAkBC,QAAe,EAC5DU,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOS,EAAiBT,MAC9EW,KARI,yDAQC,WAAOC,GAAP,gGACEzb,EAAIyb,EACVzb,EAAE1C,KAAO,KACT0C,EAAEkR,MAAQ,KAHN,SAIeuK,EAAST,KACvBQ,MAAK,SAACle,GAOP,OANI0C,EAAE0b,GACF1b,EAAE1C,KAAOA,EAGT0C,EAAEkR,MAAQ5T,EAEP0C,KAEN2b,OAAM,SAACxU,GAER,OADAnH,EAAEkR,MAAQ/J,EACHnH,KAhBP,UAIE1C,EAJF,OAkBA6c,GACA,EAAKnB,iBAAiB2B,OAAOR,GAE5BsB,EAASC,GArBV,sBAsBMpe,EAtBN,gCAuBGA,GAvBH,4CARD,wDAkCXS,OAAO6d,OAAO9D,KAAMc,GAjF5B,oDAmFI,SAAcmC,EAAOta,GACjB,IAAMN,EAAQ4a,EAAMta,GACpB,OAAQob,mBAAmBpb,GACvB,IACAob,mBAAmBC,MAAMC,QAAQ5b,GAASA,EAAMsG,KAAK,KAAwB,kBAAVtG,EAAqBA,EAA5B,UAAuCA,MAvF/G,2BAyFI,SAAc6b,GAAU,WACdjB,EAAQiB,GAAY,GACpBnC,EAAO9b,OAAO8b,KAAKkB,GAAOkB,QAAO,SAACxb,GAAD,MAAS,qBAAuBsa,EAAMta,MAC7E,OAAOoZ,EACFzS,KAAI,SAAC3G,GAAD,MAA+B,WAAtB,eAAOsa,EAAMta,KAAsBqb,MAAMC,QAAQhB,EAAMta,IAEnE,EAAKyb,cAAcnB,EAAOta,GAD1B,EAAKwZ,cAAcc,EAAMta,OAE1BgG,KAAK,OAhGlB,4BAkGI,SAAeuV,GACX,IAAMX,EAAcvD,KAAKmC,cAAc+B,GACvC,OAAOX,EAAc,IAAH,OAAOA,GAAgB,KApGjD,gCAsGI,SAAmBc,EAASC,GACxB,sEACOtE,KAAKoB,eACLiD,GACCC,GAAW,IAHnB,IAIIhD,QAAS,gDACDtB,KAAKoB,cAAcE,SAAW,IAC9B+C,EAAQ/C,SAAW,IAClBgD,GAAWA,EAAQhD,SAAY,UA9GpD,KAuHaiD,GAAb,wDACI,aAAc,oCACV,eAASC,WAST,EAAK2H,YAAc,eAAChJ,EAAD,uDAAU,GAAV,OAAiB,EAAKL,QAAL,gBAChClV,KAAM,kCACN+W,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKoW,kBAAoB,SAACtW,GAAD,IAAQE,EAAR,uDAAiB,GAAjB,OAAwB,EAAKL,QAAL,gBAC7ClV,KAAM,yCACN+W,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAKqW,iBAAmB,SAACC,GAAD,IAActW,EAAd,uDAAuB,GAAvB,OAA8B,EAAKL,QAAL,gBAClDlV,KAAM,0CAAF,OAA4C6rB,GAChD9U,OAAQ,MACRzB,OAAQ,QACLC,KA3CG,EADlB,UAAyBtC,ICpInB6Y,GAAgB,CAAEC,cAAe,IAC1BC,GAAY,CACrBnwB,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,MAH8B,KAA1BgB,EAAQiwB,eACRhwB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQiwB,eAE9BhwB,GAEXK,OAPqB,SAOdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKgwB,IACrB,MAAOxvB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQiwB,cAAgBzvB,EAAO6B,SAC/B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAxBqB,SAwBZ9B,GACL,IAAMY,EAAU,kBAAKgwB,IAOrB,YAN6BpvB,IAAzBxB,EAAO6wB,eAAwD,OAAzB7wB,EAAO6wB,cAC7CjwB,EAAQiwB,cAAgB3tB,OAAOlD,EAAO6wB,eAGtCjwB,EAAQiwB,cAAgB,GAErBjwB,GAEXoB,OAlCqB,SAkCdpB,GACH,IAAMqB,EAAM,GAGZ,YAF0BT,IAA1BZ,EAAQiwB,gBACH5uB,EAAI4uB,cAAgBjwB,EAAQiwB,eAC1B5uB,GAEXC,YAxCqB,SAwCTlC,GACR,IAAMY,EAAU,kBAAKgwB,IAOrB,YAN6BpvB,IAAzBxB,EAAO6wB,eAAwD,OAAzB7wB,EAAO6wB,cAC7CjwB,EAAQiwB,cAAgB7wB,EAAO6wB,cAG/BjwB,EAAQiwB,cAAgB,GAErBjwB,IC/CT2b,GAAQ,CACV,CAAC,qCAAsCuU,KAE9BtU,GAAqB,IAAI/Z,MAAM,sBACtCga,GAAW,IAAIC,cAASH,IACxBI,GAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,GAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,GAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,cAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,GAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvHwT,UAAW,SAACr0B,GAAD,MAAW,CAAEqN,QAAS,qCAAsCxK,MAAO7C,MAPrE,4CAAH,sDAURqhB,GAAW,yDAAG,0JAAwB,CAAEhB,KAAM,yBAAjBA,EAAf,EAASA,KAAT,kBACT,IAAItB,GAAI,CAAExD,QAAS8E,KADV,2CAAH,qD,mCCfFoB,G,mGAAf,WAA4BC,GAA5B,iGACiBvB,GAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,kCAKeC,G,mGAAf,WAA+BD,GAA/B,iGACiBL,GAAY,CACrBhB,KAAMqB,EAAY,0BAF1B,mF,yBAKA,SAASE,GAAa/e,EAAOgf,GACzB,cAAiBphB,OAAO8b,KAAKsF,GAA7B,eAA2C,CAAtC,IAAIC,EAAI,KACLtD,MAAMC,QAAQoD,EAAYC,IAC1Bjf,EAAMif,GAAN,yBAAkBjf,EAAMif,IAAxB,eAAkCD,EAAYC,KAG9Cjf,EAAMif,GAAQD,EAAYC,GAGlC,OAAOjf,EAEX,SAASkf,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,ICtBWqS,GAOAlZ,GDeLgH,GAAkB,WACpB,MAAO,CACH5J,OAAQ,GACR+b,YAAa,GACbC,aAAc,GACd1R,WAAY,CACRyR,YAAaxS,GAAawS,QAAY/uB,YAAY,KAClDivB,sBAAuB1S,GAAa0S,QAAsBjvB,YAAY,KACtEkvB,YAAa3S,GAAa2S,QAAYlvB,YAAY,KAClDmvB,qBAAsB5S,GAAa4S,QAAqBnvB,YAAY,KACpEgT,OAAQuJ,GAAavJ,QAAOhT,YAAY,MAE5Cud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACLgG,UAAW,SAACrX,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAItC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMoG,OAAO4D,KAAKC,UAAUsB,WAAnC,QAA+C,KAEnDiX,eAAgB,SAACxiB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI3C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMmiB,YAAYnY,KAAKC,UAAUsB,WAAxC,QAAoD,KAExDkX,gBAAiB,SAACziB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI5C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMoiB,aAAapY,KAAKC,UAAUsB,WAAzC,QAAqD,KAEzDwG,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,qDACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjC8lB,YAzBD,cAyBqJ,gLAAtIvF,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAExHkE,GAAgB2C,GAFwG,cAE5IjD,EAF4I,iBAG/HA,EAAYsF,cAHmH,eAG9I9jB,EAH8I,OAGpG7C,KAC9CykB,EAAO,QAAS,CAAEhH,MAAO,SAAUta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACnEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,cAAeC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO3IgG,EAAQ,aAAa,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU5I,IAAIsH,iBAAY,0BAA2B,kDAAoD,KAAE7gB,SAV2C,6DAapJ4wB,iBAtCD,cAsC0J,gLAAtIrQ,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE7HkE,GAAgB2C,GAF6G,cAEjJjD,EAFiJ,iBAGpIA,EAAY2S,iBAAiB7wB,EAAI4xB,cAHmG,eAGnJlyB,EAHmJ,OAGpF7C,KACnEykB,EAAO,QAAS,CAAEhH,MAAO,cAAeta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACxEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,mBAAoBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOhJgG,EAAQ,kBAAkB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUjJ,IAAIsH,iBAAY,+BAAgC,kDAAoD,KAAE7gB,SAV2C,6DAazJ8wB,kBAnDD,cAmD2J,kLAAtIvQ,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE9HkE,GAAgB2C,GAF8G,cAElJjD,EAFkJ,iBAGrIA,EAAY0S,kBAAkBtW,GAHuG,QAGpJ5a,EAHoJ,OAG/F7C,KAH+F,YAIjJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJqG,kCAK3HlE,EAAY0S,kBAAZ,iCAAmCtW,GAAnC,IAA0C,iBAAkB5a,EAAMyiB,WAAWC,WAL8C,QAKhJ1D,EALgJ,OAKlC7hB,KAClH6C,EAAQ+e,GAAa/e,EAAOgf,GANwH,+BAQxJ4C,EAAO,QAAS,CAAEhH,MAAO,eAAgBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACzEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,oBAAqBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWjJgG,EAAQ,mBAAmB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAclJ,IAAIsH,iBAAY,gCAAiC,kDAAoD,KAAE7gB,SAd2C,6DAiB1J+wB,cApED,cAoEgE,0KAA/C3Q,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEtCY,GAAa6C,GAFyB,cAEvDnE,EAFuD,gBAG3CA,EAASkU,UAAUxxB,GAHwB,cAGvDkjB,EAHuD,iBAIxC5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALoC,eAIvDxf,EAJuD,yBAMtDA,GANsD,wCASzD,MAAKye,GAToD,uBAUnD,IAAIiF,iBAAY,0BAA2B,4DAVQ,cAanD,IAAIA,iBAAY,0BAA2B,2BAA6B,KAAE7gB,SAbvB,6DAiB/DkwB,UArFD,cAqFuC,gKAA1B9P,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEb4e,GAAa6C,GAFA,cAE9BnE,EAF8B,gBAGlBA,EAASkU,UAAUxxB,GAHD,cAG9BkjB,EAH8B,yBAI7BA,GAJ6B,wCAOhC,MAAKjG,GAP2B,uBAQ1B,IAAIiF,iBAAY,0BAA2B,4DARjB,cAW1B,IAAIA,iBAAY,4BAA6B,6BAA+B,KAAE7gB,SAXpD,+D,6ECnKpD,SAAWowB,GACPA,EAAkB,2BAA6B,0BAC/CA,EAAkB,wBAA0B,uBAC5CA,EAAkB,yBAA2B,wBAC7CA,EAAkB,sBAAwB,sBAJ9C,CAKGA,KAAsBA,GAAoB,KAE7C,SAAWlZ,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,oCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,IAAMC,GAAb,WACI,aAA4B,aAAhBC,EAAgB,uDAAJ,GAAI,uBACxBd,KAAKe,QAAU,GACff,KAAKgB,aAAe,KACpBhB,KAAKiB,eAAiB,KACtBjB,KAAKkB,iBAAmB,IAAIC,IAC5BnB,KAAKoB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpBxB,KAAKyB,gBAAkB,SAACjc,GACpB,EAAKwb,aAAexb,GAExBwa,KAAK0B,mBAAL,sBACKd,GAAYe,MAAO,SAAC1X,GAAD,OAAqB,OAAVA,GAAoC,WAAjB,eAAOA,IAAuC,kBAAVA,EAA8CA,EAAxB2X,KAAKC,UAAU5X,MAD/H,iBAEK2W,GAAYkB,UAAW,SAAC7X,GAAD,OAAWhE,OAAO8b,KAAK9X,GAAS,IAAI+X,QAAO,SAACxc,EAAMmD,GAEtE,OADAnD,EAAKyc,OAAOtZ,EAAKsB,EAAMtB,IAChBnD,IACR,IAAIsc,aALX,iBAMKlB,GAAYsB,YAAa,SAACjY,GAAD,OAAW,EAAKkY,cAAclY,MAN5D,GAQA+V,KAAKoC,kBAAoB,SAACC,GACtB,GAAI,EAAKnB,iBAAiBoB,IAAID,GAAc,CACxC,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAClD,OAAIE,EACOA,EAAgBC,YAE3B,EAEJ,IAAMD,EAAkB,IAAIE,gBAE5B,OADA,EAAKvB,iBAAiBwB,IAAIL,EAAaE,GAChCA,EAAgBC,QAE3BxC,KAAK2C,aAAe,SAACN,GACjB,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAC9CE,IACAA,EAAgBK,QAChB,EAAK1B,iBAAiB2B,OAAOR,KAGrCrC,KAAK8C,QAAU,YAA2F,IAAxFC,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQpV,EAA0E,EAA1EA,KAAMuD,EAAoE,EAApEA,KAAM8R,EAA8D,EAA9DA,MAA8D,IAAvDC,cAAuD,MAA9C,OAA8C,EAAtCnC,EAAsC,EAAtCA,QAASsB,EAA6B,EAA7BA,YAAgBc,EAAa,qBAChGC,EAAgBJ,GAAU,EAAK/B,gBAAkB,EAAKA,eAAe,EAAKD,eAAkB,GAC5FqC,EAAgB,EAAKC,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS,EAAKd,cAAcc,GAC1CO,EAAmB,EAAK9B,kBAAkBvQ,GAAQyP,GAAYe,MACpE,OAAO8B,MAAM,GAAD,OAAI1C,GAAW,EAAKA,SAAW,IAA/B,OAAoCnT,GAApC,OAA2C2V,EAAc,IAAH,OAAOA,GAAgB,IAA7E,eAAC,kBACNF,GADK,IAER/B,QAAS,iCACDnQ,GAAQA,IAASyP,GAAYkB,SAAW,CAAE,eAAgB3Q,GAAS,IACnEkS,EAAc/B,SAAW,IAEjCkB,OAAQH,EAAc,EAAKD,kBAAkBC,QAAe,EAC5DU,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOS,EAAiBT,MAC9EW,KARI,yDAQC,WAAOC,GAAP,gGACEzb,EAAIyb,EACVzb,EAAE1C,KAAO,KACT0C,EAAEkR,MAAQ,KAHN,SAIeuK,EAAST,KACvBQ,MAAK,SAACle,GAOP,OANI0C,EAAE0b,GACF1b,EAAE1C,KAAOA,EAGT0C,EAAEkR,MAAQ5T,EAEP0C,KAEN2b,OAAM,SAACxU,GAER,OADAnH,EAAEkR,MAAQ/J,EACHnH,KAhBP,UAIE1C,EAJF,OAkBA6c,GACA,EAAKnB,iBAAiB2B,OAAOR,GAE5BsB,EAASC,GArBV,sBAsBMpe,EAtBN,gCAuBGA,GAvBH,4CARD,wDAkCXS,OAAO6d,OAAO9D,KAAMc,GAjF5B,oDAmFI,SAAcmC,EAAOta,GACjB,IAAMN,EAAQ4a,EAAMta,GACpB,OAAQob,mBAAmBpb,GACvB,IACAob,mBAAmBC,MAAMC,QAAQ5b,GAASA,EAAMsG,KAAK,KAAwB,kBAAVtG,EAAqBA,EAA5B,UAAuCA,MAvF/G,2BAyFI,SAAc6b,GAAU,WACdjB,EAAQiB,GAAY,GACpBnC,EAAO9b,OAAO8b,KAAKkB,GAAOkB,QAAO,SAACxb,GAAD,MAAS,qBAAuBsa,EAAMta,MAC7E,OAAOoZ,EACFzS,KAAI,SAAC3G,GAAD,MAA+B,WAAtB,eAAOsa,EAAMta,KAAsBqb,MAAMC,QAAQhB,EAAMta,IAEnE,EAAKyb,cAAcnB,EAAOta,GAD1B,EAAKwZ,cAAcc,EAAMta,OAE1BgG,KAAK,OAhGlB,4BAkGI,SAAeuV,GACX,IAAMX,EAAcvD,KAAKmC,cAAc+B,GACvC,OAAOX,EAAc,IAAH,OAAOA,GAAgB,KApGjD,gCAsGI,SAAmBc,EAASC,GACxB,sEACOtE,KAAKoB,eACLiD,GACCC,GAAW,IAHnB,IAIIhD,QAAS,gDACDtB,KAAKoB,cAAcE,SAAW,IAC9B+C,EAAQ/C,SAAW,IAClBgD,GAAWA,EAAQhD,SAAY,UA9GpD,KAuHaiD,GAAb,wDACI,aAAc,oCACV,eAASC,WAST,EAAKkW,0BAA4B,SAACC,EAAe1X,GAAhB,IAAuBE,EAAvB,uDAAgC,GAAhC,OAAuC,EAAKL,QAAL,gBACpElV,KAAM,uCAAF,OAAyC+sB,GAC7ChW,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAKyX,mBAAqB,SAACD,EAAe1X,GAAhB,IAAuBE,EAAvB,uDAAgC,GAAhC,OAAuC,EAAKL,QAAL,gBAC7DlV,KAAM,sCAAF,OAAwC+sB,EAAxC,kBACJhW,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAWP,EAAK0X,mCAAqC,SAACF,EAAe1X,GAAhB,IAAuBE,EAAvB,uDAAgC,GAAhC,OAAuC,EAAKL,QAAL,gBAC7ElV,KAAM,sCAAF,OAAwC+sB,EAAxC,0BACJhW,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAWP,EAAKsO,yBAA2B,SAACkJ,EAAe1X,GAAhB,IAAuBE,EAAvB,uDAAgC,GAAhC,OAAuC,EAAKL,QAAL,gBACnElV,KAAM,sCAAF,OAAwC+sB,EAAxC,eACJhW,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAWP,EAAK2X,wBAA0B,SAACH,EAAehB,GAAhB,IAA+BxW,EAA/B,uDAAwC,GAAxC,OAA+C,EAAKL,QAAL,gBAC1ElV,KAAM,sCAAF,OAAwC+sB,EAAxC,uBAAoEhB,GACxEhV,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK4X,oBAAsB,SAACvnB,GAAD,IAAS2P,EAAT,uDAAkB,GAAlB,OAAyB,EAAKL,QAAL,gBAChDlV,KAAM,2CAAF,OAA6C4F,GACjDmR,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKgJ,YAAc,eAAChJ,EAAD,uDAAU,GAAV,OAAiB,EAAKL,QAAL,gBAChClV,KAAM,iCACN+W,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK6X,UAAY,eAAC7X,EAAD,uDAAU,GAAV,OAAiB,EAAKL,QAAL,gBAC9BlV,KAAM,+BACN+W,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK8X,gBAAkB,SAAChY,GAAD,IAAQE,EAAR,uDAAiB,GAAjB,OAAwB,EAAKL,QAAL,gBAC3ClV,KAAM,qCACN+W,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAK+X,eAAiB,SAACvB,GAAD,IAAgBxW,EAAhB,uDAAyB,GAAzB,OAAgC,EAAKL,QAAL,gBAClDlV,KAAM,sCAAF,OAAwC+rB,GAC5ChV,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKgY,0BAA4B,SAACxB,EAAe1W,GAAhB,IAAuBE,EAAvB,uDAAgC,GAAhC,OAAuC,EAAKL,QAAL,gBACpElV,KAAM,sCAAF,OAAwC+rB,EAAxC,gBACJhV,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAKiY,gBAAkB,SAACzB,EAAegB,GAAhB,IAA+BxX,EAA/B,uDAAwC,GAAxC,OAA+C,EAAKL,QAAL,gBAClElV,KAAM,sCAAF,OAAwC+rB,EAAxC,wBAAqEgB,GACzEhW,OAAQ,MACRzB,OAAQ,QACLC,KAWP,EAAKkY,yBAA2B,SAAC1B,EAAegB,GAAhB,IAA+BxX,EAA/B,uDAAwC,GAAxC,OAA+C,EAAKL,QAAL,gBAC3ElV,KAAM,sCAAF,OAAwC+rB,EAAxC,wBAAqEgB,EAArE,yBACJhW,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKmY,mCAAqC,SAAC3B,EAAe1W,GAAhB,IAAuBE,EAAvB,uDAAgC,GAAhC,OAAuC,EAAKL,QAAL,gBAC7ElV,KAAM,sCAAF,OAAwC+rB,EAAxC,0BACJhV,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KA/MG,EADlB,UAAyBtC,I,mDC/InB0a,GAAyB,CAC3BlgB,kBAAmB,GACnBQ,iBAAkB,GAClBC,iBAAkB,IAET0f,GAAqB,CAC9B/xB,OAD8B,SACvBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAsB5B,YArB4B4B,IAAxBZ,EAAQuD,aACR6N,QAAYrR,OAAOC,EAAQuD,YAAatD,EAAOE,OAAO,IAAIqF,QAAQC,cAE3C7E,IAAvBZ,EAAQ8R,YACRrB,QAAgB1Q,OAAOC,EAAQ8R,WAAY7R,EAAOE,OAAO,IAAIqF,QAAQC,SAEvC,KAA9BzF,EAAQ2R,mBACR1R,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ2R,mBAEJ,KAA7B3R,EAAQmS,kBACRlS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmS,kBAEJ,KAA7BnS,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,uBAEdxR,IAAnBZ,EAAQ+xB,QACRxrB,QAAIxG,OAAOC,EAAQ+xB,OAAQ9xB,EAAOE,OAAO,IAAIqF,QAAQC,cAEnC7E,IAAlBZ,EAAQrB,OACRoN,QAAKhM,OAAOC,EAAQrB,MAAOsB,EAAOE,OAAO,IAAIqF,QAAQC,SAElDxF,GAEXK,OAzB8B,SAyBvBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6xB,IACrB,MAAOrxB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQuD,YAAc6N,QAAY9Q,OAAOE,EAAQA,EAAOL,UACxD,MACJ,KAAK,EACDH,EAAQ8R,WAAarB,QAAgBnQ,OAAOE,EAAQA,EAAOL,UAC3D,MACJ,KAAK,EACDH,EAAQ2R,kBAAoBnR,EAAO6B,SACnC,MACJ,KAAK,EACDrC,EAAQmS,iBAAmB3R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQ+xB,OAASxrB,QAAIjG,OAAOE,EAAQA,EAAOL,UAC3C,MACJ,KAAK,EACDH,EAAQrB,MAAQoN,QAAKzL,OAAOE,EAAQA,EAAOL,UAC3C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA5D8B,SA4DrB9B,GACL,IAAMY,EAAU,kBAAK6xB,IA8CrB,YA7C2BjxB,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAc6N,QAAYlQ,SAAS9B,EAAOmE,aAGlDvD,EAAQuD,iBAAc3C,OAEAA,IAAtBxB,EAAO0S,YAAkD,OAAtB1S,EAAO0S,WAC1C9R,EAAQ8R,WAAarB,QAAgBvP,SAAS9B,EAAO0S,YAGrD9R,EAAQ8R,gBAAalR,OAEQA,IAA7BxB,EAAOuS,mBACsB,OAA7BvS,EAAOuS,kBACP3R,EAAQ2R,kBAAoBrP,OAAOlD,EAAOuS,mBAG1C3R,EAAQ2R,kBAAoB,QAEA/Q,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB7P,OAAOlD,EAAO+S,kBAGzCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAO2yB,QAA0C,OAAlB3yB,EAAO2yB,OACtC/xB,EAAQ+xB,OAASxrB,QAAIrF,SAAS9B,EAAO2yB,QAGrC/xB,EAAQ+xB,YAASnxB,OAEAA,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQoN,QAAK7K,SAAS9B,EAAOT,OAGrCqB,EAAQrB,WAAQiC,EAEbZ,GAEXoB,OA7G8B,SA6GvBpB,GACH,IAAMqB,EAAM,GAmBZ,YAlBwBT,IAAxBZ,EAAQuD,cACHlC,EAAIkC,YAAcvD,EAAQuD,YACrB6N,QAAYhQ,OAAOpB,EAAQuD,kBAC3B3C,QACaA,IAAvBZ,EAAQ8R,aACHzQ,EAAIyQ,WAAa9R,EAAQ8R,WACpBrB,QAAgBrP,OAAOpB,EAAQ8R,iBAC/BlR,QACoBA,IAA9BZ,EAAQ2R,oBACHtQ,EAAIsQ,kBAAoB3R,EAAQ2R,wBACR/Q,IAA7BZ,EAAQmS,mBACH9Q,EAAI8Q,iBAAmBnS,EAAQmS,uBACPvR,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,uBACjBxR,IAAnBZ,EAAQ+xB,SACH1wB,EAAI0wB,OAAS/xB,EAAQ+xB,OAASxrB,QAAInF,OAAOpB,EAAQ+xB,aAAUnxB,QAC9CA,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQqB,EAAQrB,MAAQoN,QAAK3K,OAAOpB,EAAQrB,YAASiC,GACvDS,GAEXC,YAnI8B,SAmIlBlC,GACR,IAAMY,EAAU,kBAAK6xB,IA8CrB,YA7C2BjxB,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAc6N,QAAY9P,YAAYlC,EAAOmE,aAGrDvD,EAAQuD,iBAAc3C,OAEAA,IAAtBxB,EAAO0S,YAAkD,OAAtB1S,EAAO0S,WAC1C9R,EAAQ8R,WAAarB,QAAgBnP,YAAYlC,EAAO0S,YAGxD9R,EAAQ8R,gBAAalR,OAEQA,IAA7BxB,EAAOuS,mBACsB,OAA7BvS,EAAOuS,kBACP3R,EAAQ2R,kBAAoBvS,EAAOuS,kBAGnC3R,EAAQ2R,kBAAoB,QAEA/Q,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB/S,EAAO+S,iBAGlCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAO2yB,QAA0C,OAAlB3yB,EAAO2yB,OACtC/xB,EAAQ+xB,OAASxrB,QAAIjF,YAAYlC,EAAO2yB,QAGxC/xB,EAAQ+xB,YAASnxB,OAEAA,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQoN,QAAKzK,YAAYlC,EAAOT,OAGxCqB,EAAQrB,WAAQiC,EAEbZ,IAyCTgyB,GAAuB,CACzB5f,iBAAkB,GAClB6f,eAAgB,GAChBtgB,kBAAmB,IAEVugB,GAAmB,CAC5BnyB,OAD4B,SACrBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,YAZ4B4B,IAAxBZ,EAAQuD,aACR6N,QAAYrR,OAAOC,EAAQuD,YAAatD,EAAOE,OAAO,IAAIqF,QAAQC,SAErC,KAA7BzF,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,kBAEN,KAA3BpS,EAAQiyB,gBACRhyB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQiyB,gBAEH,KAA9BjyB,EAAQ2R,mBACR1R,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ2R,mBAE9B1R,GAEXK,OAhB4B,SAgBrBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKgyB,IACrB,MAAOxxB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQuD,YAAc6N,QAAY9Q,OAAOE,EAAQA,EAAOL,UACxD,MACJ,KAAK,EACDH,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQiyB,eAAiBzxB,EAAO6B,SAChC,MACJ,KAAK,EACDrC,EAAQ2R,kBAAoBnR,EAAO6B,SACnC,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1C4B,SA0CnB9B,GACL,IAAMY,EAAU,kBAAKgyB,IA2BrB,YA1B2BpxB,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAc6N,QAAYlQ,SAAS9B,EAAOmE,aAGlDvD,EAAQuD,iBAAc3C,OAEMA,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,QAEDxR,IAA1BxB,EAAO6yB,gBAA0D,OAA1B7yB,EAAO6yB,eAC9CjyB,EAAQiyB,eAAiB3vB,OAAOlD,EAAO6yB,gBAGvCjyB,EAAQiyB,eAAiB,QAEIrxB,IAA7BxB,EAAOuS,mBACsB,OAA7BvS,EAAOuS,kBACP3R,EAAQ2R,kBAAoBrP,OAAOlD,EAAOuS,mBAG1C3R,EAAQ2R,kBAAoB,GAEzB3R,GAEXoB,OAxE4B,SAwErBpB,GACH,IAAMqB,EAAM,GAWZ,YAVwBT,IAAxBZ,EAAQuD,cACHlC,EAAIkC,YAAcvD,EAAQuD,YACrB6N,QAAYhQ,OAAOpB,EAAQuD,kBAC3B3C,QACmBA,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,uBACTxR,IAA3BZ,EAAQiyB,iBACH5wB,EAAI4wB,eAAiBjyB,EAAQiyB,qBACJrxB,IAA9BZ,EAAQ2R,oBACHtQ,EAAIsQ,kBAAoB3R,EAAQ2R,mBAC9BtQ,GAEXC,YAtF4B,SAsFhBlC,GACR,IAAMY,EAAU,kBAAKgyB,IA2BrB,YA1B2BpxB,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAc6N,QAAY9P,YAAYlC,EAAOmE,aAGrDvD,EAAQuD,iBAAc3C,OAEMA,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,QAEDxR,IAA1BxB,EAAO6yB,gBAA0D,OAA1B7yB,EAAO6yB,eAC9CjyB,EAAQiyB,eAAiB7yB,EAAO6yB,eAGhCjyB,EAAQiyB,eAAiB,QAEIrxB,IAA7BxB,EAAOuS,mBACsB,OAA7BvS,EAAOuS,kBACP3R,EAAQ2R,kBAAoBvS,EAAOuS,kBAGnC3R,EAAQ2R,kBAAoB,GAEzB3R,IAyCTmyB,GAAkB,CAAEhgB,iBAAkB,GAAIC,iBAAkB,IACrDggB,GAAc,CACvBryB,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATiC,KAA7BgB,EAAQmS,kBACRlS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmS,kBAEJ,KAA7BnS,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,uBAEdxR,IAAnBZ,EAAQ0M,QACRX,QAAKhM,OAAOC,EAAQ0M,OAAQzM,EAAOE,OAAO,IAAIqF,QAAQC,SAEnDxF,GAEXK,OAbuB,SAahBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKmyB,IACrB,MAAO3xB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmS,iBAAmB3R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQ0M,OAASX,QAAKzL,OAAOE,EAAQA,EAAOL,UAC5C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApCuB,SAoCd9B,GACL,IAAMY,EAAU,kBAAKmyB,IAqBrB,YApBgCvxB,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB7P,OAAOlD,EAAO+S,kBAGzCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASX,QAAK7K,SAAS9B,EAAOsN,QAGtC1M,EAAQ0M,YAAS9L,EAEdZ,GAEXoB,OA5DuB,SA4DhBpB,GACH,IAAMqB,EAAM,GAOZ,YAN6BT,IAA7BZ,EAAQmS,mBACH9Q,EAAI8Q,iBAAmBnS,EAAQmS,uBACPvR,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,uBACjBxR,IAAnBZ,EAAQ0M,SACHrL,EAAIqL,OAAS1M,EAAQ0M,OAASX,QAAK3K,OAAOpB,EAAQ0M,aAAU9L,GAC1DS,GAEXC,YAtEuB,SAsEXlC,GACR,IAAMY,EAAU,kBAAKmyB,IAqBrB,YApBgCvxB,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB/S,EAAO+S,iBAGlCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASX,QAAKzK,YAAYlC,EAAOsN,QAGzC1M,EAAQ0M,YAAS9L,EAEdZ,IAmCTqyB,GAAyB,CAC3BlgB,iBAAkB,GAClBO,oBAAqB,GACrBC,oBAAqB,IAEZ2f,GAAqB,CAC9BvyB,OAD8B,SACvBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,MAZiC,KAA7BgB,EAAQmS,kBACRlS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmS,kBAED,KAAhCnS,EAAQ0S,qBACRzS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0S,qBAED,KAAhC1S,EAAQ2S,qBACR1S,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ2S,0BAEd/R,IAAnBZ,EAAQ0M,QACRX,QAAKhM,OAAOC,EAAQ0M,OAAQzM,EAAOE,OAAO,IAAIqF,QAAQC,SAEnDxF,GAEXK,OAhB8B,SAgBvBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKqyB,IACrB,MAAO7xB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmS,iBAAmB3R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQ0S,oBAAsBlS,EAAO6B,SACrC,MACJ,KAAK,EACDrC,EAAQ2S,oBAAsBnS,EAAO6B,SACrC,MACJ,KAAK,EACDrC,EAAQ0M,OAASX,QAAKzL,OAAOE,EAAQA,EAAOL,UAC5C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1C8B,SA0CrB9B,GACL,IAAMY,EAAU,kBAAKqyB,IA4BrB,YA3BgCzxB,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB7P,OAAOlD,EAAO+S,kBAGzCnS,EAAQmS,iBAAmB,QAEIvR,IAA/BxB,EAAOsT,qBACwB,OAA/BtT,EAAOsT,oBACP1S,EAAQ0S,oBAAsBpQ,OAAOlD,EAAOsT,qBAG5C1S,EAAQ0S,oBAAsB,QAEC9R,IAA/BxB,EAAOuT,qBACwB,OAA/BvT,EAAOuT,oBACP3S,EAAQ2S,oBAAsBrQ,OAAOlD,EAAOuT,qBAG5C3S,EAAQ2S,oBAAsB,QAEZ/R,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASX,QAAK7K,SAAS9B,EAAOsN,QAGtC1M,EAAQ0M,YAAS9L,EAEdZ,GAEXoB,OAzE8B,SAyEvBpB,GACH,IAAMqB,EAAM,GASZ,YAR6BT,IAA7BZ,EAAQmS,mBACH9Q,EAAI8Q,iBAAmBnS,EAAQmS,uBACJvR,IAAhCZ,EAAQ0S,sBACHrR,EAAIqR,oBAAsB1S,EAAQ0S,0BACP9R,IAAhCZ,EAAQ2S,sBACHtR,EAAIsR,oBAAsB3S,EAAQ2S,0BACpB/R,IAAnBZ,EAAQ0M,SACHrL,EAAIqL,OAAS1M,EAAQ0M,OAASX,QAAK3K,OAAOpB,EAAQ0M,aAAU9L,GAC1DS,GAEXC,YArF8B,SAqFlBlC,GACR,IAAMY,EAAU,kBAAKqyB,IA4BrB,YA3BgCzxB,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB/S,EAAO+S,iBAGlCnS,EAAQmS,iBAAmB,QAEIvR,IAA/BxB,EAAOsT,qBACwB,OAA/BtT,EAAOsT,oBACP1S,EAAQ0S,oBAAsBtT,EAAOsT,oBAGrC1S,EAAQ0S,oBAAsB,QAEC9R,IAA/BxB,EAAOuT,qBACwB,OAA/BvT,EAAOuT,oBACP3S,EAAQ2S,oBAAsBvT,EAAOuT,oBAGrC3S,EAAQ2S,oBAAsB,QAEZ/R,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASX,QAAKzK,YAAYlC,EAAOsN,QAGzC1M,EAAQ0M,YAAS9L,EAEdZ,IAgETuyB,GAAoB,CAAEpgB,iBAAkB,GAAIC,iBAAkB,IACvDogB,GAAgB,CACzBzyB,OADyB,SAClBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATiC,KAA7BgB,EAAQmS,kBACRlS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmS,kBAEJ,KAA7BnS,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,uBAEdxR,IAAnBZ,EAAQ0M,QACRX,QAAKhM,OAAOC,EAAQ0M,OAAQzM,EAAOE,OAAO,IAAIqF,QAAQC,SAEnDxF,GAEXK,OAbyB,SAalBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKuyB,IACrB,MAAO/xB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmS,iBAAmB3R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQ0M,OAASX,QAAKzL,OAAOE,EAAQA,EAAOL,UAC5C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApCyB,SAoChB9B,GACL,IAAMY,EAAU,kBAAKuyB,IAqBrB,YApBgC3xB,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB7P,OAAOlD,EAAO+S,kBAGzCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASX,QAAK7K,SAAS9B,EAAOsN,QAGtC1M,EAAQ0M,YAAS9L,EAEdZ,GAEXoB,OA5DyB,SA4DlBpB,GACH,IAAMqB,EAAM,GAOZ,YAN6BT,IAA7BZ,EAAQmS,mBACH9Q,EAAI8Q,iBAAmBnS,EAAQmS,uBACPvR,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,uBACjBxR,IAAnBZ,EAAQ0M,SACHrL,EAAIqL,OAAS1M,EAAQ0M,OAASX,QAAK3K,OAAOpB,EAAQ0M,aAAU9L,GAC1DS,GAEXC,YAtEyB,SAsEblC,GACR,IAAMY,EAAU,kBAAKuyB,IAqBrB,YApBgC3xB,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB/S,EAAO+S,iBAGlCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASX,QAAKzK,YAAYlC,EAAOsN,QAGzC1M,EAAQ0M,YAAS9L,EAEdZ,IClxBf,IAAM2b,GAAQ,CACV,CAAC,wCAAyC6W,IAC1C,CAAC,6CAA8CV,IAC/C,CAAC,sCAAuCM,IACxC,CAAC,6CAA8CE,IAC/C,CAAC,2CAA4CJ,KAEpCtW,GAAqB,IAAI/Z,MAAM,sBACtCga,GAAW,IAAIC,cAASH,IACxBI,GAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,GAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,GAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,cAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,GAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvH8V,cAAe,SAAC32B,GAAD,MAAW,CAAEqN,QAAS,wCAAyCxK,MAAO7C,IACrF42B,mBAAoB,SAAC52B,GAAD,MAAW,CAAEqN,QAAS,6CAA8CxK,MAAO7C,IAC/F62B,YAAa,SAAC72B,GAAD,MAAW,CAAEqN,QAAS,sCAAuCxK,MAAO7C,IACjF82B,mBAAoB,SAAC92B,GAAD,MAAW,CAAEqN,QAAS,6CAA8CxK,MAAO7C,IAC/F+2B,iBAAkB,SAAC/2B,GAAD,MAAW,CAAEqN,QAAS,2CAA4CxK,MAAO7C,MAXlF,4CAAH,sDAcRqhB,GAAW,yDAAG,0JAAwB,CAAEhB,KAAM,yBAAjBA,EAAf,EAASA,KAAT,kBACT,IAAItB,GAAI,CAAExD,QAAS8E,KADV,2CAAH,qD,sBCXFoB,G,mGAAf,WAA4BC,GAA5B,iGACiBvB,GAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,kCAKeC,G,mGAAf,WAA+BD,GAA/B,iGACiBL,GAAY,CACrBhB,KAAMqB,EAAY,0BAF1B,mF,yBAKA,SAASE,GAAa/e,EAAOgf,GACzB,cAAiBphB,OAAO8b,KAAKsF,GAA7B,eAA2C,CAAtC,IAAIC,EAAI,KACLtD,MAAMC,QAAQoD,EAAYC,IAC1Bjf,EAAMif,GAAN,yBAAkBjf,EAAMif,IAAxB,eAAkCD,EAAYC,KAG9Cjf,EAAMif,GAAQD,EAAYC,GAGlC,OAAOjf,EAEX,SAASkf,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,IC9CW7G,GD8CLgH,GAAkB,WACpB,MAAO,CACH4U,WAAY,GACZvtB,UAAW,GACXwtB,qBAAsB,GACtBC,8BAA+B,GAC/B9f,WAAY,GACZE,oBAAqB,GACrB6f,qBAAsB,GACtBC,8BAA+B,GAC/BC,cAAe,GACf5J,oBAAqB,GACrB6J,mBAAoB,GACpBjjB,eAAgB,GAChBgF,KAAM,GACNb,OAAQ,GACRsK,WAAY,CACRyU,mBAAoBxV,GAAawV,QAAmB/xB,YAAY,KAChE6O,eAAgB0N,GAAa1N,QAAe7O,YAAY,KACxDmP,gBAAiBoN,GAAapN,QAAgBnP,YAAY,KAC1DqP,WAAYkN,GAAalN,QAAWrP,YAAY,KAChD8P,YAAayM,GAAazM,QAAY9P,YAAY,KAClDiE,UAAWsY,GAAatY,QAAUjE,YAAY,KAC9C2Q,aAAc4L,GAAa5L,QAAa3Q,YAAY,KACpD+Q,OAAQwL,GAAaxL,QAAO/Q,YAAY,KACxCiR,QAASsL,GAAatL,QAAQjR,YAAY,KAC1CsR,WAAYiL,GAAajL,QAAWtR,YAAY,KAChDwR,YAAa+K,GAAa/K,QAAYxR,YAAY,KAClD4R,WAAY2K,GAAa3K,QAAW5R,YAAY,KAChD8R,oBAAqByK,GAAazK,QAAoB9R,YAAY,KAClEgS,yBAA0BuK,GAAavK,QAAyBhS,YAAY,KAC5EwS,kBAAmB+J,GAAa/J,QAAkBxS,YAAY,KAC9D0S,aAAc6J,GAAa7J,QAAa1S,YAAY,KACpDgT,OAAQuJ,GAAavJ,QAAOhT,YAAY,KACxCkT,mBAAoBqJ,GAAarJ,QAAmBlT,YAAY,KAChEqT,0BAA2BkJ,GAAalJ,QAA0BrT,YAAY,KAC9EwT,qBAAsB+I,GAAa/I,QAAqBxT,YAAY,KACpE6T,KAAM0I,GAAa1I,QAAK7T,YAAY,MAExCud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACL+T,cAAe,SAACplB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI1C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM4kB,WAAW5a,KAAKC,UAAUsB,WAAvC,QAAmD,KAEvD8Z,aAAc,SAACrlB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIzC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM3I,UAAU2S,KAAKC,UAAUsB,WAAtC,QAAkD,KAEtD+Z,wBAAyB,SAACtlB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIpD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM6kB,qBAAqB7a,KAAKC,UAAUsB,WAAjD,QAA6D,KAEjEga,iCAAkC,SAACvlB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI7D,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM8kB,8BAA8B9a,KAAKC,UAAUsB,WAA1D,QAAsE,KAE1Eia,cAAe,SAACxlB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI1C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMgF,WAAWgF,KAAKC,UAAUsB,WAAvC,QAAmD,KAEvDka,uBAAwB,SAACzlB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAInD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMkF,oBAAoB8E,KAAKC,UAAUsB,WAAhD,QAA4D,KAEhEma,wBAAyB,SAAC1lB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIpD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM+kB,qBAAqB/a,KAAKC,UAAUsB,WAAjD,QAA6D,KAEjEoa,iCAAkC,SAAC3lB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI7D,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMglB,8BAA8Bhb,KAAKC,UAAUsB,WAA1D,QAAsE,KAE1Eqa,iBAAkB,SAAC5lB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI7C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMilB,cAAcjb,KAAKC,UAAUsB,WAA1C,QAAsD,KAE1DuR,uBAAwB,SAAC9c,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAInD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMqb,oBAAoBrR,KAAKC,UAAUsB,WAAhD,QAA4D,KAEhEsa,sBAAuB,SAAC7lB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIlD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMklB,mBAAmBlb,KAAKC,UAAUsB,WAA/C,QAA2D,KAE/Dua,kBAAmB,SAAC9lB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI9C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMiC,eAAe+H,KAAKC,UAAUsB,WAA3C,QAAuD,KAE3Dwa,QAAS,SAAC/lB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIpC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMiH,KAAK+C,KAAKC,UAAUsB,WAAjC,QAA6C,KAEjD8L,UAAW,SAACrX,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAItC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMoG,OAAO4D,KAAKC,UAAUsB,WAAnC,QAA+C,KAEnDwG,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,oDACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjCk0B,gBAzBD,cAyByJ,kLAAtI3T,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE5HkE,GAAgB2C,GAF4G,cAEhJjD,EAFgJ,iBAGnIA,EAAYoU,gBAAgBhY,GAHuG,QAGlJ5a,EAHkJ,OAG/F7C,KAH+F,YAI/ImlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJmG,kCAKzHlE,EAAYoU,gBAAZ,iCAAiChY,GAAjC,IAAwC,iBAAkB5a,EAAMyiB,WAAWC,WAL8C,QAK9I1D,EAL8I,OAKlC7hB,KAChH6C,EAAQ+e,GAAa/e,EAAOgf,GANsH,+BAQtJ4C,EAAO,QAAS,CAAEhH,MAAO,aAActa,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACvEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,kBAAmBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAW/IgG,EAAQ,iBAAiB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAchJ,IAAIsH,iBAAY,8BAA+B,kDAAoD,KAAE7gB,SAd2C,6DAiBxJm0B,eA1CD,cA0CwJ,gLAAtI5T,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE3HkE,GAAgB2C,GAF2G,cAE/IjD,EAF+I,iBAGlIA,EAAYqU,eAAevyB,EAAIm1B,gBAHmG,eAGjJz1B,EAHiJ,OAGlF7C,KACnEykB,EAAO,QAAS,CAAEhH,MAAO,YAAata,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACtEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,iBAAkBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO9IgG,EAAQ,gBAAgB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU/I,IAAIsH,iBAAY,6BAA8B,kDAAoD,KAAE7gB,SAV2C,6DAavJq0B,0BAvDD,cAuDmK,kLAAtI9T,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEtIkE,GAAgB2C,GAFsH,cAE1JjD,EAF0J,iBAG7IA,EAAYsU,0BAA0BxyB,EAAIm1B,eAAgB7a,GAHmF,QAG5J5a,EAH4J,OAG3E7C,KAH2E,YAIzJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJ6G,kCAKnIlE,EAAYsU,0BAA0BxyB,EAAIm1B,eAA1C,iCAA+D7a,GAA/D,IAAsE,iBAAkB5a,EAAMyiB,WAAWC,WAL0B,QAKxJ1D,EALwJ,OAKd7hB,KAC9I6C,EAAQ+e,GAAa/e,EAAOgf,GANgI,+BAQhK4C,EAAO,QAAS,CAAEhH,MAAO,uBAAwBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACjFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,4BAA6BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWzJgG,EAAQ,2BAA2B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAc1J,IAAIsH,iBAAY,wCAAyC,kDAAoD,KAAE7gB,SAd2C,6DAiBlKs0B,mCAxED,cAwE4K,kLAAtI/T,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE/IkE,GAAgB2C,GAF+H,cAEnKjD,EAFmK,iBAGtJA,EAAYyU,mCAAmC3yB,EAAIm1B,eAAgB7a,GAHmF,QAGrK5a,EAHqK,OAG3E7C,KAH2E,YAIlKmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJsH,kCAK5IlE,EAAYyU,mCAAmC3yB,EAAIm1B,eAAnD,iCAAwE7a,GAAxE,IAA+E,iBAAkB5a,EAAMyiB,WAAWC,WAL0B,QAKjK1D,EALiK,OAKd7hB,KACvJ6C,EAAQ+e,GAAa/e,EAAOgf,GANyI,+BAQzK4C,EAAO,QAAS,CAAEhH,MAAO,gCAAiCta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC1FqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,qCAAsCC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWlKgG,EAAQ,oCAAoC,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAcnK,IAAIsH,iBAAY,iDAAkD,kDAAoD,KAAE7gB,SAd2C,6DAiB3Ku0B,gBAzFD,cAyFyJ,gLAAtIhU,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE5HkE,GAAgB2C,GAF4G,cAEhJjD,EAFgJ,iBAGnIA,EAAYuU,gBAAgBzyB,EAAIm1B,eAAgBn1B,EAAIu1B,gBAH+E,eAGlJ71B,EAHkJ,OAG9D7C,KACxFykB,EAAO,QAAS,CAAEhH,MAAO,aAActa,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACvEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,kBAAmBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO/IgG,EAAQ,iBAAiB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUhJ,IAAIsH,iBAAY,8BAA+B,kDAAoD,KAAE7gB,SAV2C,6DAaxJy0B,yBAtGD,cAsGkK,gLAAtIlU,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAErIkE,GAAgB2C,GAFqH,cAEzJjD,EAFyJ,iBAG5IA,EAAYwU,yBAAyB1yB,EAAIm1B,eAAgBn1B,EAAIu1B,gBAH+E,eAG3J71B,EAH2J,OAG9D7C,KACjGykB,EAAO,QAAS,CAAEhH,MAAO,sBAAuBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAChFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,2BAA4BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOxJgG,EAAQ,0BAA0B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUzJ,IAAIsH,iBAAY,uCAAwC,kDAAoD,KAAE7gB,SAV2C,6DAajK00B,0BAnHD,cAmHmK,kLAAtInU,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEtIkE,GAAgB2C,GAFsH,cAE1JjD,EAF0J,iBAG7IA,EAAY6T,0BAA0B/xB,EAAIu1B,eAAgBjb,GAHmF,QAG5J5a,EAH4J,OAG3E7C,KAH2E,YAIzJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJ6G,kCAKnIlE,EAAY6T,0BAA0B/xB,EAAIu1B,eAA1C,iCAA+Djb,GAA/D,IAAsE,iBAAkB5a,EAAMyiB,WAAWC,WAL0B,QAKxJ1D,EALwJ,OAKd7hB,KAC9I6C,EAAQ+e,GAAa/e,EAAOgf,GANgI,+BAQhK4C,EAAO,QAAS,CAAEhH,MAAO,uBAAwBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACjFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,4BAA6BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWzJgG,EAAQ,2BAA2B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAc1J,IAAIsH,iBAAY,wCAAyC,kDAAoD,KAAE7gB,SAd2C,6DAiBlK20B,mCApID,cAoI4K,kLAAtIpU,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE/IkE,GAAgB2C,GAF+H,cAEnKjD,EAFmK,iBAGtJA,EAAYgU,mCAAmClyB,EAAIu1B,eAAgBjb,GAHmF,QAGrK5a,EAHqK,OAG3E7C,KAH2E,YAIlKmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJsH,kCAK5IlE,EAAYgU,mCAAmClyB,EAAIu1B,eAAnD,iCAAwEjb,GAAxE,IAA+E,iBAAkB5a,EAAMyiB,WAAWC,WAL0B,QAKjK1D,EALiK,OAKd7hB,KACvJ6C,EAAQ+e,GAAa/e,EAAOgf,GANyI,+BAQzK4C,EAAO,QAAS,CAAEhH,MAAO,gCAAiCta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC1FqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,qCAAsCC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWlKgG,EAAQ,oCAAoC,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAcnK,IAAIsH,iBAAY,iDAAkD,kDAAoD,KAAE7gB,SAd2C,6DAiB3K40B,mBArJD,cAqJ4J,kLAAtIrU,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE/HkE,GAAgB2C,GAF+G,cAEnJjD,EAFmJ,iBAGtIA,EAAY+T,mBAAmBjyB,EAAIu1B,eAAgBjb,GAHmF,QAGrJ5a,EAHqJ,OAG3E7C,KAH2E,YAIlJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJsG,kCAK5HlE,EAAY+T,mBAAmBjyB,EAAIu1B,eAAnC,iCAAwDjb,GAAxD,IAA+D,iBAAkB5a,EAAMyiB,WAAWC,WAL0B,QAKjJ1D,EALiJ,OAKd7hB,KACvI6C,EAAQ+e,GAAa/e,EAAOgf,GANyH,+BAQzJ4C,EAAO,QAAS,CAAEhH,MAAO,gBAAiBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC1EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,qBAAsBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWlJgG,EAAQ,oBAAoB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAcnJ,IAAIsH,iBAAY,iCAAkC,kDAAoD,KAAE7gB,SAd2C,6DAiB3J0rB,yBAtKD,cAsKkK,kLAAtInL,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAErIkE,GAAgB2C,GAFqH,cAEzJjD,EAFyJ,iBAG5IA,EAAY4K,yBAAyB9oB,EAAIu1B,eAAgBjb,GAHmF,QAG3J5a,EAH2J,OAG3E7C,KAH2E,YAIxJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJ4G,kCAKlIlE,EAAY4K,yBAAyB9oB,EAAIu1B,eAAzC,iCAA8Djb,GAA9D,IAAqE,iBAAkB5a,EAAMyiB,WAAWC,WAL0B,QAKvJ1D,EALuJ,OAKd7hB,KAC7I6C,EAAQ+e,GAAa/e,EAAOgf,GAN+H,+BAQ/J4C,EAAO,QAAS,CAAEhH,MAAO,sBAAuBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAChFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,2BAA4BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWxJgG,EAAQ,0BAA0B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAczJ,IAAIsH,iBAAY,uCAAwC,kDAAoD,KAAE7gB,SAd2C,6DAiBjK60B,wBAvLD,cAuLiK,gLAAtItU,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEpIkE,GAAgB2C,GAFoH,cAExJjD,EAFwJ,iBAG3IA,EAAYiU,wBAAwBnyB,EAAIu1B,eAAgBv1B,EAAIm1B,gBAH+E,eAG1Jz1B,EAH0J,OAG9D7C,KAChGykB,EAAO,QAAS,CAAEhH,MAAO,qBAAsBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC/EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,0BAA2BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOvJgG,EAAQ,yBAAyB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUxJ,IAAIsH,iBAAY,sCAAuC,kDAAoD,KAAE7gB,SAV2C,6DAahK80B,oBApMD,cAoM6J,gLAAtIvU,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEhIkE,GAAgB2C,GAFgH,cAEpJjD,EAFoJ,iBAGvIA,EAAYkU,oBAAoBpyB,EAAI6K,QAHmG,eAGtJnL,EAHsJ,OAG1F7C,KAChEykB,EAAO,QAAS,CAAEhH,MAAO,iBAAkBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC3EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,sBAAuBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOnJgG,EAAQ,qBAAqB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUpJ,IAAIsH,iBAAY,kCAAmC,kDAAoD,KAAE7gB,SAV2C,6DAa5J+0B,UAjND,cAiNmJ,gLAAtIxU,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEtHkE,GAAgB2C,GAFsG,cAE1IjD,EAF0I,iBAG7HA,EAAYmU,YAHiH,eAG5I3yB,EAH4I,OAGpG7C,KAC5CykB,EAAO,QAAS,CAAEhH,MAAO,OAAQta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACjEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,YAAaC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOzIgG,EAAQ,WAAW,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU1I,IAAIsH,iBAAY,wBAAyB,kDAAoD,KAAE7gB,SAV2C,6DAalJ8lB,YA9ND,cA8NqJ,gLAAtIvF,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAExHkE,GAAgB2C,GAFwG,cAE5IjD,EAF4I,iBAG/HA,EAAYsF,cAHmH,eAG9I9jB,EAH8I,OAGpG7C,KAC9CykB,EAAO,QAAS,CAAEhH,MAAO,SAAUta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACnEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,cAAeC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO3IgG,EAAQ,aAAa,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU5I,IAAIsH,iBAAY,0BAA2B,kDAAoD,KAAE7gB,SAV2C,6DAapJg1B,kBA3OD,cA2OoE,0KAA/C5U,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE1CY,GAAa6C,GAF6B,cAE3DnE,EAF2D,gBAG/CA,EAASwW,cAAc9zB,GAHwB,cAG3DkjB,EAH2D,iBAI5C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALwC,eAI3Dxf,EAJ2D,yBAM1DA,GAN0D,wCAS7D,MAAKye,GATwD,uBAUvD,IAAIiF,iBAAY,8BAA+B,4DAVQ,cAavD,IAAIA,iBAAY,8BAA+B,2BAA6B,KAAE7gB,SAbvB,6DAiBnEi1B,uBA5PD,cA4PyE,0KAA/C7U,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE/CY,GAAa6C,GAFkC,cAEhEnE,EAFgE,gBAGpDA,EAASyW,mBAAmB/zB,GAHwB,cAGhEkjB,EAHgE,iBAIjD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL6C,eAIhExf,EAJgE,yBAM/DA,GAN+D,wCASlE,MAAKye,GAT6D,uBAU5D,IAAIiF,iBAAY,mCAAoC,4DAVQ,cAa5D,IAAIA,iBAAY,mCAAoC,2BAA6B,KAAE7gB,SAbvB,6DAiBxEk1B,gBA7QD,cA6QkE,0KAA/C9U,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAExCY,GAAa6C,GAF2B,cAEzDnE,EAFyD,gBAG7CA,EAAS0W,YAAYh0B,GAHwB,cAGzDkjB,EAHyD,iBAI1C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALsC,eAIzDxf,EAJyD,yBAMxDA,GANwD,wCAS3D,MAAKye,GATsD,uBAUrD,IAAIiF,iBAAY,4BAA6B,4DAVQ,cAarD,IAAIA,iBAAY,4BAA6B,2BAA6B,KAAE7gB,SAbvB,6DAiBjEm1B,uBA9RD,cA8RyE,0KAA/C/U,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE/CY,GAAa6C,GAFkC,cAEhEnE,EAFgE,gBAGpDA,EAAS2W,mBAAmBj0B,GAHwB,cAGhEkjB,EAHgE,iBAIjD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL6C,eAIhExf,EAJgE,yBAM/DA,GAN+D,wCASlE,MAAKye,GAT6D,uBAU5D,IAAIiF,iBAAY,mCAAoC,4DAVQ,cAa5D,IAAIA,iBAAY,mCAAoC,2BAA6B,KAAE7gB,SAbvB,6DAiBxEo1B,qBA/SD,cA+SuE,0KAA/ChV,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE7CY,GAAa6C,GAFgC,cAE9DnE,EAF8D,gBAGlDA,EAAS4W,iBAAiBl0B,GAHwB,cAG9DkjB,EAH8D,iBAI/C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL2C,eAI9Dxf,EAJ8D,yBAM7DA,GAN6D,wCAShE,MAAKye,GAT2D,uBAU1D,IAAIiF,iBAAY,iCAAkC,4DAVQ,cAa1D,IAAIA,iBAAY,iCAAkC,2BAA6B,KAAE7gB,SAbvB,6DAiBtEwyB,cAhUD,cAgU2C,gKAA1BpS,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEjB4e,GAAa6C,GAFI,cAElCnE,EAFkC,gBAGtBA,EAASwW,cAAc9zB,GAHD,cAGlCkjB,EAHkC,yBAIjCA,GAJiC,wCAOpC,MAAKjG,GAP+B,uBAQ9B,IAAIiF,iBAAY,8BAA+B,4DARjB,cAW9B,IAAIA,iBAAY,gCAAiC,6BAA+B,KAAE7gB,SAXpD,6DAe1C8xB,mBA/UD,cA+UgD,gKAA1B1R,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEtB4e,GAAa6C,GAFS,cAEvCnE,EAFuC,gBAG3BA,EAASyW,mBAAmB/zB,GAHD,cAGvCkjB,EAHuC,yBAItCA,GAJsC,wCAOzC,MAAKjG,GAPoC,uBAQnC,IAAIiF,iBAAY,mCAAoC,4DARjB,cAWnC,IAAIA,iBAAY,qCAAsC,6BAA+B,KAAE7gB,SAXpD,6DAe/CoyB,YA9VD,cA8VyC,gKAA1BhS,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEf4e,GAAa6C,GAFE,cAEhCnE,EAFgC,gBAGpBA,EAAS0W,YAAYh0B,GAHD,cAGhCkjB,EAHgC,yBAI/BA,GAJ+B,wCAOlC,MAAKjG,GAP6B,uBAQ5B,IAAIiF,iBAAY,4BAA6B,4DARjB,cAW5B,IAAIA,iBAAY,8BAA+B,6BAA+B,KAAE7gB,SAXpD,6DAexCsyB,mBA7WD,cA6WgD,gKAA1BlS,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEtB4e,GAAa6C,GAFS,cAEvCnE,EAFuC,gBAG3BA,EAAS2W,mBAAmBj0B,GAHD,cAGvCkjB,EAHuC,yBAItCA,GAJsC,wCAOzC,MAAKjG,GAPoC,uBAQnC,IAAIiF,iBAAY,mCAAoC,4DARjB,cAWnC,IAAIA,iBAAY,qCAAsC,6BAA+B,KAAE7gB,SAXpD,6DAe/CkyB,iBA5XD,cA4X8C,gKAA1B9R,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEpB4e,GAAa6C,GAFO,cAErCnE,EAFqC,gBAGzBA,EAAS4W,iBAAiBl0B,GAHD,cAGrCkjB,EAHqC,yBAIpCA,GAJoC,wCAOvC,MAAKjG,GAPkC,uBAQjC,IAAIiF,iBAAY,iCAAkC,4DARjB,cAWjC,IAAIA,iBAAY,mCAAoC,6BAA+B,KAAE7gB,SAXpD,gEC/jB3D,SAAWkX,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,I,aCXDyE,GAAQ,CACV,CAAC,kDAAmD0Z,UAE3CzZ,GAAqB,IAAI/Z,MAAM,sBACtCga,GAAW,IAAIC,cAASH,IACxBI,GAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,GAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,GAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,cAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,GAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvH2Y,wBAAyB,SAACx5B,GAAD,MAAW,CAAEqN,QAAS,kDAAmDxK,MAAO7C,MAPhG,4CAAH,sD,sBCLCyhB,G,mGAAf,WAA4BC,GAA5B,iGACiBvB,GAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,yBAqBA,SAASK,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,IC9BW7G,GD8BLgH,GAAkB,WACpB,MAAO,CACHU,WAAY,CACRjT,mBAAoBkS,GAAalS,QAAmBrK,YAAY,KAChE8K,yBAA0ByR,GAAazR,QAAyB9K,YAAY,KAC5EiL,sBAAuBsR,GAAatR,QAAsBjL,YAAY,KACtEmL,OAAQoR,GAAapR,QAAOnL,YAAY,KACxCsL,uBAAwBiR,GAAajR,QAAuBtL,YAAY,MAE5Eud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACLU,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,oDACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjCu1B,4BAzBD,cAyB8E,0KAA/CnV,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEpDY,GAAa6C,GAFuC,cAErEnE,EAFqE,gBAGzDA,EAASqZ,wBAAwB32B,GAHwB,cAGrEkjB,EAHqE,iBAItD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALkD,eAIrExf,EAJqE,yBAMpEA,GANoE,wCASvE,MAAKye,GATkE,uBAUjE,IAAIiF,iBAAY,wCAAyC,4DAVQ,cAajE,IAAIA,iBAAY,wCAAyC,2BAA6B,KAAE7gB,SAbvB,6DAiB7Eq1B,wBA1CD,cA0CqD,gKAA1BjV,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAE3B4e,GAAa6C,GAFc,cAE5CnE,EAF4C,gBAGhCA,EAASqZ,wBAAwB32B,GAHD,cAG5CkjB,EAH4C,yBAI3CA,GAJ2C,wCAO9C,MAAKjG,GAPyC,uBAQxC,IAAIiF,iBAAY,wCAAyC,4DARjB,cAWxC,IAAIA,iBAAY,0CAA2C,6BAA+B,KAAE7gB,SAXpD,+D,6EC3GlE,SAAWkX,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,IAAMC,GAAb,WACI,aAA4B,aAAhBC,EAAgB,uDAAJ,GAAI,uBACxBd,KAAKe,QAAU,GACff,KAAKgB,aAAe,KACpBhB,KAAKiB,eAAiB,KACtBjB,KAAKkB,iBAAmB,IAAIC,IAC5BnB,KAAKoB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpBxB,KAAKyB,gBAAkB,SAACjc,GACpB,EAAKwb,aAAexb,GAExBwa,KAAK0B,mBAAL,sBACKd,GAAYe,MAAO,SAAC1X,GAAD,OAAqB,OAAVA,GAAoC,WAAjB,eAAOA,IAAuC,kBAAVA,EAA8CA,EAAxB2X,KAAKC,UAAU5X,MAD/H,iBAEK2W,GAAYkB,UAAW,SAAC7X,GAAD,OAAWhE,OAAO8b,KAAK9X,GAAS,IAAI+X,QAAO,SAACxc,EAAMmD,GAEtE,OADAnD,EAAKyc,OAAOtZ,EAAKsB,EAAMtB,IAChBnD,IACR,IAAIsc,aALX,iBAMKlB,GAAYsB,YAAa,SAACjY,GAAD,OAAW,EAAKkY,cAAclY,MAN5D,GAQA+V,KAAKoC,kBAAoB,SAACC,GACtB,GAAI,EAAKnB,iBAAiBoB,IAAID,GAAc,CACxC,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAClD,OAAIE,EACOA,EAAgBC,YAE3B,EAEJ,IAAMD,EAAkB,IAAIE,gBAE5B,OADA,EAAKvB,iBAAiBwB,IAAIL,EAAaE,GAChCA,EAAgBC,QAE3BxC,KAAK2C,aAAe,SAACN,GACjB,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAC9CE,IACAA,EAAgBK,QAChB,EAAK1B,iBAAiB2B,OAAOR,KAGrCrC,KAAK8C,QAAU,YAA2F,IAAxFC,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQpV,EAA0E,EAA1EA,KAAMuD,EAAoE,EAApEA,KAAM8R,EAA8D,EAA9DA,MAA8D,IAAvDC,cAAuD,MAA9C,OAA8C,EAAtCnC,EAAsC,EAAtCA,QAASsB,EAA6B,EAA7BA,YAAgBc,EAAa,qBAChGC,EAAgBJ,GAAU,EAAK/B,gBAAkB,EAAKA,eAAe,EAAKD,eAAkB,GAC5FqC,EAAgB,EAAKC,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS,EAAKd,cAAcc,GAC1CO,EAAmB,EAAK9B,kBAAkBvQ,GAAQyP,GAAYe,MACpE,OAAO8B,MAAM,GAAD,OAAI1C,GAAW,EAAKA,SAAW,IAA/B,OAAoCnT,GAApC,OAA2C2V,EAAc,IAAH,OAAOA,GAAgB,IAA7E,eAAC,kBACNF,GADK,IAER/B,QAAS,iCACDnQ,GAAQA,IAASyP,GAAYkB,SAAW,CAAE,eAAgB3Q,GAAS,IACnEkS,EAAc/B,SAAW,IAEjCkB,OAAQH,EAAc,EAAKD,kBAAkBC,QAAe,EAC5DU,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOS,EAAiBT,MAC9EW,KARI,yDAQC,WAAOC,GAAP,gGACEzb,EAAIyb,EACVzb,EAAE1C,KAAO,KACT0C,EAAEkR,MAAQ,KAHN,SAIeuK,EAAST,KACvBQ,MAAK,SAACle,GAOP,OANI0C,EAAE0b,GACF1b,EAAE1C,KAAOA,EAGT0C,EAAEkR,MAAQ5T,EAEP0C,KAEN2b,OAAM,SAACxU,GAER,OADAnH,EAAEkR,MAAQ/J,EACHnH,KAhBP,UAIE1C,EAJF,OAkBA6c,GACA,EAAKnB,iBAAiB2B,OAAOR,GAE5BsB,EAASC,GArBV,sBAsBMpe,EAtBN,gCAuBGA,GAvBH,4CARD,wDAkCXS,OAAO6d,OAAO9D,KAAMc,GAjF5B,oDAmFI,SAAcmC,EAAOta,GACjB,IAAMN,EAAQ4a,EAAMta,GACpB,OAAQob,mBAAmBpb,GACvB,IACAob,mBAAmBC,MAAMC,QAAQ5b,GAASA,EAAMsG,KAAK,KAAwB,kBAAVtG,EAAqBA,EAA5B,UAAuCA,MAvF/G,2BAyFI,SAAc6b,GAAU,WACdjB,EAAQiB,GAAY,GACpBnC,EAAO9b,OAAO8b,KAAKkB,GAAOkB,QAAO,SAACxb,GAAD,MAAS,qBAAuBsa,EAAMta,MAC7E,OAAOoZ,EACFzS,KAAI,SAAC3G,GAAD,MAA+B,WAAtB,eAAOsa,EAAMta,KAAsBqb,MAAMC,QAAQhB,EAAMta,IAEnE,EAAKyb,cAAcnB,EAAOta,GAD1B,EAAKwZ,cAAcc,EAAMta,OAE1BgG,KAAK,OAhGlB,4BAkGI,SAAeuV,GACX,IAAMX,EAAcvD,KAAKmC,cAAc+B,GACvC,OAAOX,EAAc,IAAH,OAAOA,GAAgB,KApGjD,gCAsGI,SAAmBc,EAASC,GACxB,sEACOtE,KAAKoB,eACLiD,GACCC,GAAW,IAHnB,IAIIhD,QAAS,gDACDtB,KAAKoB,cAAcE,SAAW,IAC9B+C,EAAQ/C,SAAW,IAClBgD,GAAWA,EAAQhD,SAAY,UA9GpD,KAuHaiD,GAAb,wDACI,aAAc,oCACV,eAASC,WAST,EAAK0a,iBAAmB,SAACjc,GAAD,IAAQE,EAAR,uDAAiB,GAAjB,OAAwB,EAAKL,QAAL,gBAC5ClV,KAAM,kDACN+W,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAKgc,gBAAkB,SAAC1yB,GAAD,IAAO0W,EAAP,uDAAgB,GAAhB,OAAuB,EAAKL,QAAL,gBAC1ClV,KAAM,mDAAF,OAAqDnB,GACzDkY,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKgJ,YAAc,eAAChJ,EAAD,uDAAU,GAAV,OAAiB,EAAKL,QAAL,gBAChClV,KAAM,4CACN+W,OAAQ,MACRzB,OAAQ,QACLC,KA3CG,EADlB,UAAyBtC,I,aClInBwE,GAAQ,CACV,CAAC,4CAA6C+Z,UAErC9Z,GAAqB,IAAI/Z,MAAM,sBACtCga,GAAW,IAAIC,cAASH,IACxBI,GAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,GAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,GAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,cAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,GAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvHgZ,YAAa,SAAC75B,GAAD,MAAW,CAAEqN,QAAS,4CAA6CxK,MAAO7C,MAP9E,4CAAH,sDAURqhB,GAAW,yDAAG,0JAAwB,CAAEhB,KAAM,yBAAjBA,EAAf,EAASA,KAAT,kBACT,IAAItB,GAAI,CAAExD,QAAS8E,KADV,2CAAH,qD,sBCjBFoB,G,mGAAf,WAA4BC,GAA5B,iGACiBvB,GAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,kCAKeC,G,mGAAf,WAA+BD,GAA/B,iGACiBL,GAAY,CACrBhB,KAAMqB,EAAY,0BAF1B,mF,yBAKA,SAASE,GAAa/e,EAAOgf,GACzB,cAAiBphB,OAAO8b,KAAKsF,GAA7B,eAA2C,CAAtC,IAAIC,EAAI,KACLtD,MAAMC,QAAQoD,EAAYC,IAC1Bjf,EAAMif,GAAN,yBAAkBjf,EAAMif,IAAxB,eAAkCD,EAAYC,KAG9Cjf,EAAMif,GAAQD,EAAYC,GAGlC,OAAOjf,EAEX,SAASkf,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,ICtBW6X,GAkBAC,GAQA3e,GDJLgH,GAAkB,WACpB,MAAO,CACH4X,WAAY,GACZC,YAAa,GACbzhB,OAAQ,GACRsK,WAAY,CACRoX,wBAAyBnY,GAAamY,QAAwB10B,YAAY,KAC1Ew0B,WAAYjY,GAAaiY,QAAWx0B,YAAY,KAChDgT,OAAQuJ,GAAavJ,QAAOhT,YAAY,MAE5Cud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACL0W,cAAe,SAAC/nB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI1C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM4nB,WAAW5d,KAAKC,UAAUsB,WAAvC,QAAmD,KAEvDyc,eAAgB,SAAChoB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI3C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM6nB,YAAY7d,KAAKC,UAAUsB,WAAxC,QAAoD,KAExD8L,UAAW,SAACrX,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAItC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMoG,OAAO4D,KAAKC,UAAUsB,WAAnC,QAA+C,KAEnDwG,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,0DACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjCm2B,gBAzBD,cAyByJ,gLAAtI5V,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE5HkE,GAAgB2C,GAF4G,cAEhJjD,EAFgJ,iBAGnIA,EAAYsY,gBAAgBx2B,EAAI8D,MAHmG,eAGlJpE,EAHkJ,OAG5F7C,KAC1DykB,EAAO,QAAS,CAAEhH,MAAO,aAActa,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACvEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,kBAAmBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO/IgG,EAAQ,iBAAiB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUhJ,IAAIsH,iBAAY,8BAA+B,kDAAoD,KAAE7gB,SAV2C,6DAaxJo2B,iBAtCD,cAsC0J,kLAAtI7V,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE7HkE,GAAgB2C,GAF6G,cAEjJjD,EAFiJ,iBAGpIA,EAAYqY,iBAAiBjc,GAHuG,QAGnJ5a,EAHmJ,OAG/F7C,KAH+F,YAIhJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJoG,kCAK1HlE,EAAYqY,iBAAZ,iCAAkCjc,GAAlC,IAAyC,iBAAkB5a,EAAMyiB,WAAWC,WAL8C,QAK/I1D,EAL+I,OAKlC7hB,KACjH6C,EAAQ+e,GAAa/e,EAAOgf,GANuH,+BAQvJ4C,EAAO,QAAS,CAAEhH,MAAO,cAAeta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACxEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,mBAAoBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWhJgG,EAAQ,kBAAkB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAcjJ,IAAIsH,iBAAY,+BAAgC,kDAAoD,KAAE7gB,SAd2C,6DAiBzJ8lB,YAvDD,cAuDqJ,gLAAtIvF,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAExHkE,GAAgB2C,GAFwG,cAE5IjD,EAF4I,iBAG/HA,EAAYsF,cAHmH,eAG9I9jB,EAH8I,OAGpG7C,KAC9CykB,EAAO,QAAS,CAAEhH,MAAO,SAAUta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACnEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,cAAeC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO3IgG,EAAQ,aAAa,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU5I,IAAIsH,iBAAY,0BAA2B,kDAAoD,KAAE7gB,SAV2C,6DAapJq2B,gBApED,cAoEkE,0KAA/CjW,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAExCY,GAAa6C,GAF2B,cAEzDnE,EAFyD,gBAG7CA,EAAS0Z,YAAYh3B,GAHwB,cAGzDkjB,EAHyD,iBAI1C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALsC,eAIzDxf,EAJyD,yBAMxDA,GANwD,wCAS3D,MAAKye,GATsD,uBAUrD,IAAIiF,iBAAY,4BAA6B,4DAVQ,cAarD,IAAIA,iBAAY,4BAA6B,2BAA6B,KAAE7gB,SAbvB,6DAiBjE01B,YArFD,cAqFyC,gKAA1BtV,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEf4e,GAAa6C,GAFE,cAEhCnE,EAFgC,gBAGpBA,EAAS0Z,YAAYh3B,GAHD,cAGhCkjB,EAHgC,yBAI/BA,GAJ+B,wCAOlC,MAAKjG,GAP6B,uBAQ5B,IAAIiF,iBAAY,4BAA6B,4DARjB,cAW5B,IAAIA,iBAAY,8BAA+B,6BAA+B,KAAE7gB,SAXpD,+D,6ECjKtD,SAAW41B,GACPA,EAAQ,0BAA4B,yBACpCA,EAAQ,mBAAqB,kBAC7BA,EAAQ,iBAAmB,iBAH/B,CAIGA,KAAYA,GAAU,KAczB,SAAWC,GACPA,EAAQ,mCAAqC,kCAC7CA,EAAQ,cAAgB,aACxBA,EAAQ,iBAAmB,gBAC3BA,EAAQ,cAAgB,aACxBA,EAAQ,gBAAkB,eAL9B,CAMGA,KAAYA,GAAU,KAEzB,SAAW3e,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,oCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,IAAMC,GAAb,WACI,aAA4B,aAAhBC,EAAgB,uDAAJ,GAAI,uBACxBd,KAAKe,QAAU,GACff,KAAKgB,aAAe,KACpBhB,KAAKiB,eAAiB,KACtBjB,KAAKkB,iBAAmB,IAAIC,IAC5BnB,KAAKoB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpBxB,KAAKyB,gBAAkB,SAACjc,GACpB,EAAKwb,aAAexb,GAExBwa,KAAK0B,mBAAL,sBACKd,GAAYe,MAAO,SAAC1X,GAAD,OAAqB,OAAVA,GAAoC,WAAjB,eAAOA,IAAuC,kBAAVA,EAA8CA,EAAxB2X,KAAKC,UAAU5X,MAD/H,iBAEK2W,GAAYkB,UAAW,SAAC7X,GAAD,OAAWhE,OAAO8b,KAAK9X,GAAS,IAAI+X,QAAO,SAACxc,EAAMmD,GAEtE,OADAnD,EAAKyc,OAAOtZ,EAAKsB,EAAMtB,IAChBnD,IACR,IAAIsc,aALX,iBAMKlB,GAAYsB,YAAa,SAACjY,GAAD,OAAW,EAAKkY,cAAclY,MAN5D,GAQA+V,KAAKoC,kBAAoB,SAACC,GACtB,GAAI,EAAKnB,iBAAiBoB,IAAID,GAAc,CACxC,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAClD,OAAIE,EACOA,EAAgBC,YAE3B,EAEJ,IAAMD,EAAkB,IAAIE,gBAE5B,OADA,EAAKvB,iBAAiBwB,IAAIL,EAAaE,GAChCA,EAAgBC,QAE3BxC,KAAK2C,aAAe,SAACN,GACjB,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAC9CE,IACAA,EAAgBK,QAChB,EAAK1B,iBAAiB2B,OAAOR,KAGrCrC,KAAK8C,QAAU,YAA2F,IAAxFC,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQpV,EAA0E,EAA1EA,KAAMuD,EAAoE,EAApEA,KAAM8R,EAA8D,EAA9DA,MAA8D,IAAvDC,cAAuD,MAA9C,OAA8C,EAAtCnC,EAAsC,EAAtCA,QAASsB,EAA6B,EAA7BA,YAAgBc,EAAa,qBAChGC,EAAgBJ,GAAU,EAAK/B,gBAAkB,EAAKA,eAAe,EAAKD,eAAkB,GAC5FqC,EAAgB,EAAKC,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS,EAAKd,cAAcc,GAC1CO,EAAmB,EAAK9B,kBAAkBvQ,GAAQyP,GAAYe,MACpE,OAAO8B,MAAM,GAAD,OAAI1C,GAAW,EAAKA,SAAW,IAA/B,OAAoCnT,GAApC,OAA2C2V,EAAc,IAAH,OAAOA,GAAgB,IAA7E,eAAC,kBACNF,GADK,IAER/B,QAAS,iCACDnQ,GAAQA,IAASyP,GAAYkB,SAAW,CAAE,eAAgB3Q,GAAS,IACnEkS,EAAc/B,SAAW,IAEjCkB,OAAQH,EAAc,EAAKD,kBAAkBC,QAAe,EAC5DU,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOS,EAAiBT,MAC9EW,KARI,yDAQC,WAAOC,GAAP,gGACEzb,EAAIyb,EACVzb,EAAE1C,KAAO,KACT0C,EAAEkR,MAAQ,KAHN,SAIeuK,EAAST,KACvBQ,MAAK,SAACle,GAOP,OANI0C,EAAE0b,GACF1b,EAAE1C,KAAOA,EAGT0C,EAAEkR,MAAQ5T,EAEP0C,KAEN2b,OAAM,SAACxU,GAER,OADAnH,EAAEkR,MAAQ/J,EACHnH,KAhBP,UAIE1C,EAJF,OAkBA6c,GACA,EAAKnB,iBAAiB2B,OAAOR,GAE5BsB,EAASC,GArBV,sBAsBMpe,EAtBN,gCAuBGA,GAvBH,4CARD,wDAkCXS,OAAO6d,OAAO9D,KAAMc,GAjF5B,oDAmFI,SAAcmC,EAAOta,GACjB,IAAMN,EAAQ4a,EAAMta,GACpB,OAAQob,mBAAmBpb,GACvB,IACAob,mBAAmBC,MAAMC,QAAQ5b,GAASA,EAAMsG,KAAK,KAAwB,kBAAVtG,EAAqBA,EAA5B,UAAuCA,MAvF/G,2BAyFI,SAAc6b,GAAU,WACdjB,EAAQiB,GAAY,GACpBnC,EAAO9b,OAAO8b,KAAKkB,GAAOkB,QAAO,SAACxb,GAAD,MAAS,qBAAuBsa,EAAMta,MAC7E,OAAOoZ,EACFzS,KAAI,SAAC3G,GAAD,MAA+B,WAAtB,eAAOsa,EAAMta,KAAsBqb,MAAMC,QAAQhB,EAAMta,IAEnE,EAAKyb,cAAcnB,EAAOta,GAD1B,EAAKwZ,cAAcc,EAAMta,OAE1BgG,KAAK,OAhGlB,4BAkGI,SAAeuV,GACX,IAAMX,EAAcvD,KAAKmC,cAAc+B,GACvC,OAAOX,EAAc,IAAH,OAAOA,GAAgB,KApGjD,gCAsGI,SAAmBc,EAASC,GACxB,sEACOtE,KAAKoB,eACLiD,GACCC,GAAW,IAHnB,IAIIhD,QAAS,gDACDtB,KAAKoB,cAAcE,SAAW,IAC9B+C,EAAQ/C,SAAW,IAClBgD,GAAWA,EAAQhD,SAAY,UA9GpD,KAuHaiD,GAAb,wDACI,aAAc,oCACV,eAASC,WAST,EAAKwb,cAAgB,SAAC/c,GAAD,IAAQE,EAAR,uDAAiB,GAAjB,OAAwB,EAAKL,QAAL,gBACzClV,KAAM,qCACN+W,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAK8c,aAAe,SAAC7nB,EAAWD,GAAZ,IAAoBgL,EAApB,uDAA6B,GAA7B,OAAoC,EAAKL,QAAL,gBACpDlV,KAAM,sCAAF,OAAwCwK,EAAxC,kBAA2DD,GAC/DwM,OAAQ,MACRzB,OAAQ,QACLC,KAWP,EAAK+c,wBAA0B,SAAC9nB,EAAWD,GAAZ,IAAoBgL,EAApB,uDAA6B,GAA7B,OAAoC,EAAKL,QAAL,gBAC/DlV,KAAM,sCAAF,OAAwCwK,EAAxC,kBAA2DD,EAA3D,iBACJwM,OAAQ,MACRzB,OAAQ,QACLC,KAWP,EAAKgd,2BAA6B,SAAC/nB,EAAWD,EAAQvG,EAAgBC,GAApC,IAAoDsR,EAApD,uDAA6D,GAA7D,OAAoE,EAAKL,QAAL,gBAClGlV,KAAM,sCAAF,OAAwCwK,EAAxC,kBAA2DD,EAA3D,qCAA8FvG,EAA9F,mBAAuHC,GAC3H8S,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKid,yBAA2B,SAAChoB,EAAWD,GAAZ,IAAoBgL,EAApB,uDAA6B,GAA7B,OAAoC,EAAKL,QAAL,gBAChElV,KAAM,sCAAF,OAAwCwK,EAAxC,kBAA2DD,EAA3D,kBACJwM,OAAQ,MACRzB,OAAQ,QACLC,KAWP,EAAKkd,4BAA8B,SAACjoB,EAAWD,EAAQ8K,GAApB,IAA2BE,EAA3B,uDAAoC,GAApC,OAA2C,EAAKL,QAAL,gBAC1ElV,KAAM,sCAAF,OAAwCwK,EAAxC,kBAA2DD,EAA3D,4BACJwM,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAKmd,2BAA6B,SAACloB,EAAWD,EAAQK,GAApB,IAA8B2K,EAA9B,uDAAuC,GAAvC,OAA8C,EAAKL,QAAL,gBAC5ElV,KAAM,sCAAF,OAAwCwK,EAAxC,kBAA2DD,EAA3D,wBAAiFK,GACrFmM,OAAQ,MACRzB,OAAQ,QACLC,KAWP,EAAKod,uBAAyB,SAACnoB,EAAWD,EAAQ8K,GAApB,IAA2BE,EAA3B,uDAAoC,GAApC,OAA2C,EAAKL,QAAL,gBACrElV,KAAM,sCAAF,OAAwCwK,EAAxC,kBAA2DD,EAA3D,uBACJwM,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAWP,EAAKqd,oBAAsB,SAACpoB,EAAWD,EAAQsoB,GAApB,IAAwCtd,EAAxC,uDAAiD,GAAjD,OAAwD,EAAKL,QAAL,gBAC/ElV,KAAM,sCAAF,OAAwCwK,EAAxC,kBAA2DD,EAA3D,+BAAwFsoB,EAAxF,oBACJ9b,OAAQ,MACRzB,OAAQ,QACLC,KAWP,EAAKud,uBAAyB,SAACtoB,EAAWD,EAAQwoB,GAApB,IAA+Cxd,EAA/C,uDAAwD,GAAxD,OAA+D,EAAKL,QAAL,gBACzFlV,KAAM,sCAAF,OAAwCwK,EAAxC,kBAA2DD,EAA3D,+BAAwFwoB,EAAxF,uBACJhc,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKyd,sBAAwB,SAACxoB,EAAWD,EAAQK,GAApB,IAA8B2K,EAA9B,uDAAuC,GAAvC,OAA8C,EAAKL,QAAL,gBACvElV,KAAM,sCAAF,OAAwCwK,EAAxC,kBAA2DD,EAA3D,+BAAwFK,GAC5FmM,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK0d,mBAAqB,SAACzoB,EAAWD,EAAQK,GAApB,IAA8B2K,EAA9B,uDAAuC,GAAvC,OAA8C,EAAKL,QAAL,gBACpElV,KAAM,sCAAF,OAAwCwK,EAAxC,kBAA2DD,EAA3D,4BAAqFK,GACzFmM,OAAQ,MACRzB,OAAQ,QACLC,KAWP,EAAK2d,wBAA0B,SAACC,EAAY9d,GAAb,IAAoBE,EAApB,uDAA6B,GAA7B,OAAoC,EAAKL,QAAL,gBAC/DlV,KAAM,yCAAF,OAA2CmzB,EAA3C,aACJpc,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAjMG,EADlB,UAAyBtC,I,aCzJnBwE,GAAQ,CACV,CAAC,yCAA0C2b,SAC3C,CAAC,2CAA4CC,SAC7C,CAAC,yCAA0CC,SAC3C,CAAC,6CAA8CC,SAC/C,CAAC,yCAA0CC,SAC3C,CAAC,8CAA+CC,SAChD,CAAC,0CAA2CC,SAC5C,CAAC,qCAAsCC,SACvC,CAAC,kCAAmCC,SACpC,CAAC,0CAA2CC,UAEnCnc,GAAqB,IAAI/Z,MAAM,sBACtCga,GAAW,IAAIC,cAASH,IACxBI,GAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,GAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,GAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,cAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,GAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvHqb,kBAAmB,SAACl8B,GAAD,MAAW,CAAEqN,QAAS,yCAA0CxK,MAAO7C,IAC1Fm8B,oBAAqB,SAACn8B,GAAD,MAAW,CAAEqN,QAAS,2CAA4CxK,MAAO7C,IAC9Fo8B,kBAAmB,SAACp8B,GAAD,MAAW,CAAEqN,QAAS,yCAA0CxK,MAAO7C,IAC1Fq8B,sBAAuB,SAACr8B,GAAD,MAAW,CAAEqN,QAAS,6CAA8CxK,MAAO7C,IAClGs8B,kBAAmB,SAACt8B,GAAD,MAAW,CAAEqN,QAAS,yCAA0CxK,MAAO7C,IAC1Fu8B,uBAAwB,SAACv8B,GAAD,MAAW,CAAEqN,QAAS,8CAA+CxK,MAAO7C,IACpGw8B,mBAAoB,SAACx8B,GAAD,MAAW,CAAEqN,QAAS,0CAA2CxK,MAAO7C,IAC5Fy8B,cAAe,SAACz8B,GAAD,MAAW,CAAEqN,QAAS,qCAAsCxK,MAAO7C,IAClF08B,WAAY,SAAC18B,GAAD,MAAW,CAAEqN,QAAS,kCAAmCxK,MAAO7C,IAC5E28B,mBAAoB,SAAC38B,GAAD,MAAW,CAAEqN,QAAS,0CAA2CxK,MAAO7C,MAhBnF,4CAAH,sDAmBRqhB,GAAW,yDAAG,0JAAwB,CAAEhB,KAAM,yBAAjBA,EAAf,EAASA,KAAT,kBACT,IAAItB,GAAI,CAAExD,QAAS8E,KADV,2CAAH,qD,mCCxCFoB,G,mGAAf,WAA4BC,GAA5B,iGACiBvB,GAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,kCAKeC,G,mGAAf,WAA+BD,GAA/B,iGACiBL,GAAY,CACrBhB,KAAMqB,EAAY,0BAF1B,mF,yBAKA,SAASE,GAAa/e,EAAOgf,GACzB,cAAiBphB,OAAO8b,KAAKsF,GAA7B,eAA2C,CAAtC,IAAIC,EAAI,KACLtD,MAAMC,QAAQoD,EAAYC,IAC1Bjf,EAAMif,GAAN,yBAAkBjf,EAAMif,IAAxB,eAAkCD,EAAYC,KAG9Cjf,EAAMif,GAAQD,EAAYC,GAGlC,OAAOjf,EAEX,SAASkf,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,IChCW7G,GDgCLgH,GAAkB,WACpB,MAAO,CACH7P,QAAS,GACTqqB,SAAU,GACVC,mBAAoB,GACpBC,mBAAoB,GACpBC,sBAAuB,GACvBC,iBAAkB,GAClBC,kBAAmB,GACnBC,cAAe,GACfC,sBAAuB,GACvBC,uBAAwB,GACxBC,kBAAmB,GACnBC,eAAgB,GAChBC,oBAAqB,GACrBza,WAAY,CACRvQ,QAASwP,GAAaxP,QAAQ/M,YAAY,KAC1CqN,kBAAmBkP,GAAalP,QAAkBrN,YAAY,KAC9DiN,aAAcsP,GAAatP,QAAajN,YAAY,KACpD8N,OAAQyO,GAAazO,QAAO9N,YAAY,KACxCiO,YAAasO,GAAatO,QAAYjO,YAAY,KAClDmO,gBAAiBoO,GAAapO,QAAgBnO,YAAY,KAC1Dg4B,eAAgBzb,GAAayb,QAAeh4B,YAAY,MAE5Dud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACLga,WAAY,SAACrrB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIvC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMG,QAAQ6J,KAAKC,UAAUsB,WAApC,QAAgD,KAEpD+f,YAAa,SAACtrB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIxC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMwqB,SAASxgB,KAAKC,UAAUsB,WAArC,QAAiD,KAErDggB,sBAAuB,SAACvrB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIlD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMyqB,mBAAmBzgB,KAAKC,UAAUsB,WAA/C,QAA2D,KAE/DigB,sBAAuB,SAACxrB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIlD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM0qB,mBAAmB1gB,KAAKC,UAAUsB,WAA/C,QAA2D,KAE/DkgB,yBAA0B,SAACzrB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIrD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM2qB,sBAAsB3gB,KAAKC,UAAUsB,WAAlD,QAA8D,KAElEmgB,oBAAqB,SAAC1rB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIhD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM4qB,iBAAiB5gB,KAAKC,UAAUsB,WAA7C,QAAyD,KAE7DogB,qBAAsB,SAAC3rB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIjD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM6qB,kBAAkB7gB,KAAKC,UAAUsB,WAA9C,QAA0D,KAE9DqgB,iBAAkB,SAAC5rB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI7C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM8qB,cAAc9gB,KAAKC,UAAUsB,WAA1C,QAAsD,KAE1DsgB,yBAA0B,SAAC7rB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIrD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM+qB,sBAAsB/gB,KAAKC,UAAUsB,WAAlD,QAA8D,KAElEugB,0BAA2B,SAAC9rB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAItD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMgrB,uBAAuBhhB,KAAKC,UAAUsB,WAAnD,QAA+D,KAEnEwgB,qBAAsB,SAAC/rB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIjD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMirB,kBAAkBjhB,KAAKC,UAAUsB,WAA9C,QAA0D,KAE9DygB,kBAAmB,SAAChsB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI9C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMkrB,eAAelhB,KAAKC,UAAUsB,WAA3C,QAAuD,KAE3D0gB,uBAAwB,SAACjsB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAInD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMmrB,oBAAoBnhB,KAAKC,UAAUsB,WAAhD,QAA4D,KAEhEwG,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,iDACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjCo6B,aAzBD,cAyBsJ,gLAAtI7Z,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEzHkE,GAAgB2C,GAFyG,cAE7IjD,EAF6I,iBAGhIA,EAAYoZ,aAAat3B,EAAIo7B,WAAYp7B,EAAIq7B,SAHmF,eAG/I37B,EAH+I,OAGzE7C,KAC1EykB,EAAO,QAAS,CAAEhH,MAAO,UAAWta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACpEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,eAAgBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO5IgG,EAAQ,cAAc,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU7I,IAAIsH,iBAAY,2BAA4B,kDAAoD,KAAE7gB,SAV2C,6DAarJu6B,cAtCD,cAsCuJ,kLAAtIha,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE1HkE,GAAgB2C,GAF0G,cAE9IjD,EAF8I,iBAGjIA,EAAYmZ,cAAc/c,GAHuG,QAGhJ5a,EAHgJ,OAG/F7C,KAH+F,YAI7ImlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJiG,kCAKvHlE,EAAYmZ,cAAZ,iCAA+B/c,GAA/B,IAAsC,iBAAkB5a,EAAMyiB,WAAWC,WAL8C,QAK5I1D,EAL4I,OAKlC7hB,KAC9G6C,EAAQ+e,GAAa/e,EAAOgf,GANoH,+BAQpJ4C,EAAO,QAAS,CAAEhH,MAAO,WAAYta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACrEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,gBAAiBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAW7IgG,EAAQ,eAAe,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAc9I,IAAIsH,iBAAY,4BAA6B,kDAAoD,KAAE7gB,SAd2C,6DAiBtJw6B,wBAvDD,cAuDiK,kLAAtIja,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEpIkE,GAAgB2C,GAFoH,cAExJjD,EAFwJ,iBAG3IA,EAAYia,wBAAwBn4B,EAAIo4B,WAAY9d,GAHuF,QAG1J5a,EAH0J,OAG/E7C,KAH+E,YAIvJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJ2G,kCAKjIlE,EAAYia,wBAAwBn4B,EAAIo4B,WAAxC,iCAAyD9d,GAAzD,IAAgE,iBAAkB5a,EAAMyiB,WAAWC,WAL8B,QAKtJ1D,EALsJ,OAKlB7hB,KACxI6C,EAAQ+e,GAAa/e,EAAOgf,GAN8H,+BAQ9J4C,EAAO,QAAS,CAAEhH,MAAO,qBAAsBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC/EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,0BAA2BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWvJgG,EAAQ,yBAAyB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAcxJ,IAAIsH,iBAAY,sCAAuC,kDAAoD,KAAE7gB,SAd2C,6DAiBhKy6B,wBAxED,cAwEiK,gLAAtIla,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEpIkE,GAAgB2C,GAFoH,cAExJjD,EAFwJ,iBAG3IA,EAAYqZ,wBAAwBv3B,EAAIo7B,WAAYp7B,EAAIq7B,SAHmF,eAG1J37B,EAH0J,OAGzE7C,KACrFykB,EAAO,QAAS,CAAEhH,MAAO,qBAAsBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC/EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,0BAA2BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOvJgG,EAAQ,yBAAyB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUxJ,IAAIsH,iBAAY,sCAAuC,kDAAoD,KAAE7gB,SAV2C,6DAahK06B,2BArFD,cAqFoK,gLAAtIna,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEvIkE,GAAgB2C,GAFuH,cAE3JjD,EAF2J,iBAG9IA,EAAYsZ,2BAA2Bx3B,EAAIo7B,WAAYp7B,EAAIq7B,QAASr7B,EAAI07B,gBAAiB17B,EAAI27B,iBAHiD,eAG7Jj8B,EAH6J,OAG/B7C,KAClIykB,EAAO,QAAS,CAAEhH,MAAO,wBAAyBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAClFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,6BAA8BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO1JgG,EAAQ,4BAA4B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU3J,IAAIsH,iBAAY,yCAA0C,kDAAoD,KAAE7gB,SAV2C,6DAanK66B,sBAlGD,cAkG+J,gLAAtIta,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAElIkE,GAAgB2C,GAFkH,cAEtJjD,EAFsJ,iBAGzIA,EAAY+Z,sBAAsBj4B,EAAIo7B,WAAYp7B,EAAIq7B,QAASr7B,EAAI6P,UAHsE,eAGxJnQ,EAHwJ,OAG3D7C,KACjGykB,EAAO,QAAS,CAAEhH,MAAO,mBAAoBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC7EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,wBAAyBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOrJgG,EAAQ,uBAAuB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUtJ,IAAIsH,iBAAY,oCAAqC,kDAAoD,KAAE7gB,SAV2C,6DAa9J86B,uBA/GD,cA+GgK,kLAAtIva,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEnIkE,GAAgB2C,GAFmH,cAEvJjD,EAFuJ,iBAG1IA,EAAY0Z,uBAAuB53B,EAAIo7B,WAAYp7B,EAAIq7B,QAAS/gB,GAH0E,QAGzJ5a,EAHyJ,OAGlE7C,KAHkE,YAItJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJ0G,kCAKhIlE,EAAY0Z,uBAAuB53B,EAAIo7B,WAAYp7B,EAAIq7B,QAAvD,iCAAqE/gB,GAArE,IAA4E,iBAAkB5a,EAAMyiB,WAAWC,WALiB,QAKrJ1D,EALqJ,OAKL7hB,KACpJ6C,EAAQ+e,GAAa/e,EAAOgf,GAN6H,+BAQ7J4C,EAAO,QAAS,CAAEhH,MAAO,oBAAqBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC9EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,yBAA0BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWtJgG,EAAQ,wBAAwB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAcvJ,IAAIsH,iBAAY,qCAAsC,kDAAoD,KAAE7gB,SAd2C,6DAiB/J+6B,mBAhID,cAgI4J,gLAAtIxa,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE/HkE,GAAgB2C,GAF+G,cAEnJjD,EAFmJ,iBAGtIA,EAAYga,mBAAmBl4B,EAAIo7B,WAAYp7B,EAAIq7B,QAASr7B,EAAI6P,UAHsE,eAGrJnQ,EAHqJ,OAG3D7C,KAC9FykB,EAAO,QAAS,CAAEhH,MAAO,gBAAiBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC1EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,qBAAsBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOlJgG,EAAQ,oBAAoB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUnJ,IAAIsH,iBAAY,iCAAkC,kDAAoD,KAAE7gB,SAV2C,6DAa3Jg7B,2BA7ID,cA6IoK,gLAAtIza,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEvIkE,GAAgB2C,GAFuH,cAE3JjD,EAF2J,iBAG9IA,EAAYyZ,2BAA2B33B,EAAIo7B,WAAYp7B,EAAIq7B,QAASr7B,EAAI6P,UAHsE,eAG7JnQ,EAH6J,OAG3D7C,KACtGykB,EAAO,QAAS,CAAEhH,MAAO,wBAAyBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAClFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,6BAA8BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO1JgG,EAAQ,4BAA4B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU3J,IAAIsH,iBAAY,yCAA0C,kDAAoD,KAAE7gB,SAV2C,6DAanKi7B,4BA1JD,cA0JqK,kLAAtI1a,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAExIkE,GAAgB2C,GAFwH,cAE5JjD,EAF4J,iBAG/IA,EAAYwZ,4BAA4B13B,EAAIo7B,WAAYp7B,EAAIq7B,QAAS/gB,GAH0E,QAG9J5a,EAH8J,OAGlE7C,KAHkE,YAI3JmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJ+G,kCAKrIlE,EAAYwZ,4BAA4B13B,EAAIo7B,WAAYp7B,EAAIq7B,QAA5D,iCAA0E/gB,GAA1E,IAAiF,iBAAkB5a,EAAMyiB,WAAWC,WALiB,QAK1J1D,EAL0J,OAKL7hB,KACzJ6C,EAAQ+e,GAAa/e,EAAOgf,GANkI,+BAQlK4C,EAAO,QAAS,CAAEhH,MAAO,yBAA0Bta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACnFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,8BAA+BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAW3JgG,EAAQ,6BAA6B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAc5J,IAAIsH,iBAAY,0CAA2C,kDAAoD,KAAE7gB,SAd2C,6DAiBpKk7B,uBA3KD,cA2KgK,gLAAtI3a,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEnIkE,GAAgB2C,GAFmH,cAEvJjD,EAFuJ,iBAG1IA,EAAY6Z,uBAAuB/3B,EAAIo7B,WAAYp7B,EAAIq7B,QAASr7B,EAAIk8B,6BAHsE,eAGzJx8B,EAHyJ,OAGxC7C,KACrHykB,EAAO,QAAS,CAAEhH,MAAO,oBAAqBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC9EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,yBAA0BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOtJgG,EAAQ,wBAAwB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUvJ,IAAIsH,iBAAY,qCAAsC,kDAAoD,KAAE7gB,SAV2C,6DAa/Jo7B,oBAxLD,cAwL6J,gLAAtI7a,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEhIkE,GAAgB2C,GAFgH,cAEpJjD,EAFoJ,iBAGvIA,EAAY2Z,oBAAoB73B,EAAIo7B,WAAYp7B,EAAIq7B,QAASr7B,EAAIo8B,sBAHsE,eAGtJ18B,EAHsJ,OAG/C7C,KAC3GykB,EAAO,QAAS,CAAEhH,MAAO,iBAAkBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC3EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,sBAAuBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOnJgG,EAAQ,qBAAqB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUpJ,IAAIsH,iBAAY,kCAAmC,kDAAoD,KAAE7gB,SAV2C,6DAa5Js7B,yBArMD,cAqMkK,gLAAtI/a,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAErIkE,GAAgB2C,GAFqH,cAEzJjD,EAFyJ,iBAG5IA,EAAYuZ,yBAAyBz3B,EAAIo7B,WAAYp7B,EAAIq7B,SAHmF,eAG3J37B,EAH2J,OAGzE7C,KACtFykB,EAAO,QAAS,CAAEhH,MAAO,sBAAuBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAChFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,2BAA4BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOxJgG,EAAQ,0BAA0B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUzJ,IAAIsH,iBAAY,uCAAwC,kDAAoD,KAAE7gB,SAV2C,6DAajKu7B,sBAlND,cAkNwE,0KAA/Cnb,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE9CY,GAAa6C,GAFiC,cAE/DnE,EAF+D,gBAGnDA,EAAS+b,kBAAkBr5B,GAHwB,cAG/DkjB,EAH+D,iBAIhD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL4C,eAI/Dxf,EAJ+D,yBAM9DA,GAN8D,wCASjE,MAAKye,GAT4D,uBAU3D,IAAIiF,iBAAY,kCAAmC,4DAVQ,cAa3D,IAAIA,iBAAY,kCAAmC,2BAA6B,KAAE7gB,SAbvB,6DAiBvEw7B,wBAnOD,cAmO0E,0KAA/Cpb,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEhDY,GAAa6C,GAFmC,cAEjEnE,EAFiE,gBAGrDA,EAASgc,oBAAoBt5B,GAHwB,cAGjEkjB,EAHiE,iBAIlD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL8C,eAIjExf,EAJiE,yBAMhEA,GANgE,wCASnE,MAAKye,GAT8D,uBAU7D,IAAIiF,iBAAY,oCAAqC,4DAVQ,cAa7D,IAAIA,iBAAY,oCAAqC,2BAA6B,KAAE7gB,SAbvB,6DAiBzEy7B,sBApPD,cAoPwE,0KAA/Crb,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE9CY,GAAa6C,GAFiC,cAE/DnE,EAF+D,gBAGnDA,EAASic,kBAAkBv5B,GAHwB,cAG/DkjB,EAH+D,iBAIhD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL4C,eAI/Dxf,EAJ+D,yBAM9DA,GAN8D,wCASjE,MAAKye,GAT4D,uBAU3D,IAAIiF,iBAAY,kCAAmC,4DAVQ,cAa3D,IAAIA,iBAAY,kCAAmC,2BAA6B,KAAE7gB,SAbvB,6DAiBvE07B,0BArQD,cAqQ4E,0KAA/Ctb,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAElDY,GAAa6C,GAFqC,cAEnEnE,EAFmE,gBAGvDA,EAASkc,sBAAsBx5B,GAHwB,cAGnEkjB,EAHmE,iBAIpD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALgD,eAInExf,EAJmE,yBAMlEA,GANkE,wCASrE,MAAKye,GATgE,uBAU/D,IAAIiF,iBAAY,sCAAuC,4DAVQ,cAa/D,IAAIA,iBAAY,sCAAuC,2BAA6B,KAAE7gB,SAbvB,6DAiB3E27B,sBAtRD,cAsRwE,0KAA/Cvb,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE9CY,GAAa6C,GAFiC,cAE/DnE,EAF+D,gBAGnDA,EAASmc,kBAAkBz5B,GAHwB,cAG/DkjB,EAH+D,iBAIhD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL4C,eAI/Dxf,EAJ+D,yBAM9DA,GAN8D,wCASjE,MAAKye,GAT4D,uBAU3D,IAAIiF,iBAAY,kCAAmC,4DAVQ,cAa3D,IAAIA,iBAAY,kCAAmC,2BAA6B,KAAE7gB,SAbvB,6DAiBvE47B,2BAvSD,cAuS6E,0KAA/Cxb,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEnDY,GAAa6C,GAFsC,cAEpEnE,EAFoE,gBAGxDA,EAASoc,uBAAuB15B,GAHwB,cAGpEkjB,EAHoE,iBAIrD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALiD,eAIpExf,EAJoE,yBAMnEA,GANmE,wCAStE,MAAKye,GATiE,uBAUhE,IAAIiF,iBAAY,uCAAwC,4DAVQ,cAahE,IAAIA,iBAAY,uCAAwC,2BAA6B,KAAE7gB,SAbvB,6DAiB5E67B,uBAxTD,cAwTyE,0KAA/Czb,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE/CY,GAAa6C,GAFkC,cAEhEnE,EAFgE,gBAGpDA,EAASqc,mBAAmB35B,GAHwB,cAGhEkjB,EAHgE,iBAIjD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL6C,eAIhExf,EAJgE,yBAM/DA,GAN+D,wCASlE,MAAKye,GAT6D,uBAU5D,IAAIiF,iBAAY,mCAAoC,4DAVQ,cAa5D,IAAIA,iBAAY,mCAAoC,2BAA6B,KAAE7gB,SAbvB,6DAiBxE87B,kBAzUD,cAyUoE,0KAA/C1b,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE1CY,GAAa6C,GAF6B,cAE3DnE,EAF2D,gBAG/CA,EAASsc,cAAc55B,GAHwB,cAG3DkjB,EAH2D,iBAI5C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALwC,eAI3Dxf,EAJ2D,yBAM1DA,GAN0D,wCAS7D,MAAKye,GATwD,uBAUvD,IAAIiF,iBAAY,8BAA+B,4DAVQ,cAavD,IAAIA,iBAAY,8BAA+B,2BAA6B,KAAE7gB,SAbvB,6DAiBnE+7B,eA1VD,cA0ViE,0KAA/C3b,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEvCY,GAAa6C,GAF0B,cAExDnE,EAFwD,gBAG5CA,EAASuc,WAAW75B,GAHwB,cAGxDkjB,EAHwD,iBAIzC5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALqC,eAIxDxf,EAJwD,yBAMvDA,GANuD,wCAS1D,MAAKye,GATqD,uBAUpD,IAAIiF,iBAAY,2BAA4B,4DAVQ,cAapD,IAAIA,iBAAY,2BAA4B,2BAA6B,KAAE7gB,SAbvB,6DAiBhEg8B,uBA3WD,cA2WyE,0KAA/C5b,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE/CY,GAAa6C,GAFkC,cAEhEnE,EAFgE,gBAGpDA,EAASwc,mBAAmB95B,GAHwB,cAGhEkjB,EAHgE,iBAIjD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL6C,eAIhExf,EAJgE,yBAM/DA,GAN+D,wCASlE,MAAKye,GAT6D,uBAU5D,IAAIiF,iBAAY,mCAAoC,4DAVQ,cAa5D,IAAIA,iBAAY,mCAAoC,2BAA6B,KAAE7gB,SAbvB,6DAiBxEs3B,kBA5XD,cA4X+C,gKAA1BlX,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAErB4e,GAAa6C,GAFQ,cAEtCnE,EAFsC,gBAG1BA,EAAS+b,kBAAkBr5B,GAHD,cAGtCkjB,EAHsC,yBAIrCA,GAJqC,wCAOxC,MAAKjG,GAPmC,uBAQlC,IAAIiF,iBAAY,kCAAmC,4DARjB,cAWlC,IAAIA,iBAAY,oCAAqC,6BAA+B,KAAE7gB,SAXpD,6DAe9Cu3B,oBA3YD,cA2YiD,gKAA1BnX,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEvB4e,GAAa6C,GAFU,cAExCnE,EAFwC,gBAG5BA,EAASgc,oBAAoBt5B,GAHD,cAGxCkjB,EAHwC,yBAIvCA,GAJuC,wCAO1C,MAAKjG,GAPqC,uBAQpC,IAAIiF,iBAAY,oCAAqC,4DARjB,cAWpC,IAAIA,iBAAY,sCAAuC,6BAA+B,KAAE7gB,SAXpD,6DAehDw3B,kBA1ZD,cA0Z+C,gKAA1BpX,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAErB4e,GAAa6C,GAFQ,cAEtCnE,EAFsC,gBAG1BA,EAASic,kBAAkBv5B,GAHD,cAGtCkjB,EAHsC,yBAIrCA,GAJqC,wCAOxC,MAAKjG,GAPmC,uBAQlC,IAAIiF,iBAAY,kCAAmC,4DARjB,cAWlC,IAAIA,iBAAY,oCAAqC,6BAA+B,KAAE7gB,SAXpD,6DAe9Cy3B,sBAzaD,cAyamD,gKAA1BrX,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEzB4e,GAAa6C,GAFY,cAE1CnE,EAF0C,gBAG9BA,EAASkc,sBAAsBx5B,GAHD,cAG1CkjB,EAH0C,yBAIzCA,GAJyC,wCAO5C,MAAKjG,GAPuC,uBAQtC,IAAIiF,iBAAY,sCAAuC,4DARjB,cAWtC,IAAIA,iBAAY,wCAAyC,6BAA+B,KAAE7gB,SAXpD,6DAelD03B,kBAxbD,cAwb+C,gKAA1BtX,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAErB4e,GAAa6C,GAFQ,cAEtCnE,EAFsC,gBAG1BA,EAASmc,kBAAkBz5B,GAHD,cAGtCkjB,EAHsC,yBAIrCA,GAJqC,wCAOxC,MAAKjG,GAPmC,uBAQlC,IAAIiF,iBAAY,kCAAmC,4DARjB,cAWlC,IAAIA,iBAAY,oCAAqC,6BAA+B,KAAE7gB,SAXpD,6DAe9C23B,uBAvcD,cAucoD,gKAA1BvX,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAE1B4e,GAAa6C,GAFa,cAE3CnE,EAF2C,gBAG/BA,EAASoc,uBAAuB15B,GAHD,cAG3CkjB,EAH2C,yBAI1CA,GAJ0C,wCAO7C,MAAKjG,GAPwC,uBAQvC,IAAIiF,iBAAY,uCAAwC,4DARjB,cAWvC,IAAIA,iBAAY,yCAA0C,6BAA+B,KAAE7gB,SAXpD,6DAenD43B,mBAtdD,cAsdgD,gKAA1BxX,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEtB4e,GAAa6C,GAFS,cAEvCnE,EAFuC,gBAG3BA,EAASqc,mBAAmB35B,GAHD,cAGvCkjB,EAHuC,yBAItCA,GAJsC,wCAOzC,MAAKjG,GAPoC,uBAQnC,IAAIiF,iBAAY,mCAAoC,4DARjB,cAWnC,IAAIA,iBAAY,qCAAsC,6BAA+B,KAAE7gB,SAXpD,6DAe/C63B,cAreD,cAqe2C,gKAA1BzX,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEjB4e,GAAa6C,GAFI,cAElCnE,EAFkC,gBAGtBA,EAASsc,cAAc55B,GAHD,cAGlCkjB,EAHkC,yBAIjCA,GAJiC,wCAOpC,MAAKjG,GAP+B,uBAQ9B,IAAIiF,iBAAY,8BAA+B,4DARjB,cAW9B,IAAIA,iBAAY,gCAAiC,6BAA+B,KAAE7gB,SAXpD,6DAe1C83B,WApfD,cAofwC,gKAA1B1X,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEd4e,GAAa6C,GAFC,cAE/BnE,EAF+B,gBAGnBA,EAASuc,WAAW75B,GAHD,cAG/BkjB,EAH+B,yBAI9BA,GAJ8B,wCAOjC,MAAKjG,GAP4B,uBAQ3B,IAAIiF,iBAAY,2BAA4B,4DARjB,cAW3B,IAAIA,iBAAY,6BAA8B,6BAA+B,KAAE7gB,SAXpD,6DAevC+3B,mBAngBD,cAmgBgD,gKAA1B3X,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEtB4e,GAAa6C,GAFS,cAEvCnE,EAFuC,gBAG3BA,EAASwc,mBAAmB95B,GAHD,cAGvCkjB,EAHuC,yBAItCA,GAJsC,wCAOzC,MAAKjG,GAPoC,uBAQnC,IAAIiF,iBAAY,mCAAoC,4DARjB,cAWnC,IAAIA,iBAAY,qCAAsC,6BAA+B,KAAE7gB,SAXpD,+D,6ECnqB7D,SAAWkX,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,IAAMC,GAAb,WACI,aAA4B,aAAhBC,EAAgB,uDAAJ,GAAI,uBACxBd,KAAKe,QAAU,GACff,KAAKgB,aAAe,KACpBhB,KAAKiB,eAAiB,KACtBjB,KAAKkB,iBAAmB,IAAIC,IAC5BnB,KAAKoB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpBxB,KAAKyB,gBAAkB,SAACjc,GACpB,EAAKwb,aAAexb,GAExBwa,KAAK0B,mBAAL,sBACKd,GAAYe,MAAO,SAAC1X,GAAD,OAAqB,OAAVA,GAAoC,WAAjB,eAAOA,IAAuC,kBAAVA,EAA8CA,EAAxB2X,KAAKC,UAAU5X,MAD/H,iBAEK2W,GAAYkB,UAAW,SAAC7X,GAAD,OAAWhE,OAAO8b,KAAK9X,GAAS,IAAI+X,QAAO,SAACxc,EAAMmD,GAEtE,OADAnD,EAAKyc,OAAOtZ,EAAKsB,EAAMtB,IAChBnD,IACR,IAAIsc,aALX,iBAMKlB,GAAYsB,YAAa,SAACjY,GAAD,OAAW,EAAKkY,cAAclY,MAN5D,GAQA+V,KAAKoC,kBAAoB,SAACC,GACtB,GAAI,EAAKnB,iBAAiBoB,IAAID,GAAc,CACxC,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAClD,OAAIE,EACOA,EAAgBC,YAE3B,EAEJ,IAAMD,EAAkB,IAAIE,gBAE5B,OADA,EAAKvB,iBAAiBwB,IAAIL,EAAaE,GAChCA,EAAgBC,QAE3BxC,KAAK2C,aAAe,SAACN,GACjB,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAC9CE,IACAA,EAAgBK,QAChB,EAAK1B,iBAAiB2B,OAAOR,KAGrCrC,KAAK8C,QAAU,YAA2F,IAAxFC,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQpV,EAA0E,EAA1EA,KAAMuD,EAAoE,EAApEA,KAAM8R,EAA8D,EAA9DA,MAA8D,IAAvDC,cAAuD,MAA9C,OAA8C,EAAtCnC,EAAsC,EAAtCA,QAASsB,EAA6B,EAA7BA,YAAgBc,EAAa,qBAChGC,EAAgBJ,GAAU,EAAK/B,gBAAkB,EAAKA,eAAe,EAAKD,eAAkB,GAC5FqC,EAAgB,EAAKC,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS,EAAKd,cAAcc,GAC1CO,EAAmB,EAAK9B,kBAAkBvQ,GAAQyP,GAAYe,MACpE,OAAO8B,MAAM,GAAD,OAAI1C,GAAW,EAAKA,SAAW,IAA/B,OAAoCnT,GAApC,OAA2C2V,EAAc,IAAH,OAAOA,GAAgB,IAA7E,eAAC,kBACNF,GADK,IAER/B,QAAS,iCACDnQ,GAAQA,IAASyP,GAAYkB,SAAW,CAAE,eAAgB3Q,GAAS,IACnEkS,EAAc/B,SAAW,IAEjCkB,OAAQH,EAAc,EAAKD,kBAAkBC,QAAe,EAC5DU,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOS,EAAiBT,MAC9EW,KARI,yDAQC,WAAOC,GAAP,gGACEzb,EAAIyb,EACVzb,EAAE1C,KAAO,KACT0C,EAAEkR,MAAQ,KAHN,SAIeuK,EAAST,KACvBQ,MAAK,SAACle,GAOP,OANI0C,EAAE0b,GACF1b,EAAE1C,KAAOA,EAGT0C,EAAEkR,MAAQ5T,EAEP0C,KAEN2b,OAAM,SAACxU,GAER,OADAnH,EAAEkR,MAAQ/J,EACHnH,KAhBP,UAIE1C,EAJF,OAkBA6c,GACA,EAAKnB,iBAAiB2B,OAAOR,GAE5BsB,EAASC,GArBV,sBAsBMpe,EAtBN,gCAuBGA,GAvBH,4CARD,wDAkCXS,OAAO6d,OAAO9D,KAAMc,GAjF5B,oDAmFI,SAAcmC,EAAOta,GACjB,IAAMN,EAAQ4a,EAAMta,GACpB,OAAQob,mBAAmBpb,GACvB,IACAob,mBAAmBC,MAAMC,QAAQ5b,GAASA,EAAMsG,KAAK,KAAwB,kBAAVtG,EAAqBA,EAA5B,UAAuCA,MAvF/G,2BAyFI,SAAc6b,GAAU,WACdjB,EAAQiB,GAAY,GACpBnC,EAAO9b,OAAO8b,KAAKkB,GAAOkB,QAAO,SAACxb,GAAD,MAAS,qBAAuBsa,EAAMta,MAC7E,OAAOoZ,EACFzS,KAAI,SAAC3G,GAAD,MAA+B,WAAtB,eAAOsa,EAAMta,KAAsBqb,MAAMC,QAAQhB,EAAMta,IAEnE,EAAKyb,cAAcnB,EAAOta,GAD1B,EAAKwZ,cAAcc,EAAMta,OAE1BgG,KAAK,OAhGlB,4BAkGI,SAAeuV,GACX,IAAMX,EAAcvD,KAAKmC,cAAc+B,GACvC,OAAOX,EAAc,IAAH,OAAOA,GAAgB,KApGjD,gCAsGI,SAAmBc,EAASC,GACxB,sEACOtE,KAAKoB,eACLiD,GACCC,GAAW,IAHnB,IAIIhD,QAAS,gDACDtB,KAAKoB,cAAcE,SAAW,IAC9B+C,EAAQ/C,SAAW,IAClBgD,GAAWA,EAAQhD,SAAY,UA9GpD,KAuHaiD,GAAb,wDACI,aAAc,oCACV,eAASC,WAST,EAAKmhB,kBAAoB,eAACxiB,EAAD,uDAAU,GAAV,OAAiB,EAAKL,QAAL,gBACtClV,KAAM,6BACN+W,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKyiB,kBAAoB,SAAC3iB,GAAD,IAAQE,EAAR,uDAAiB,GAAjB,OAAwB,EAAKL,QAAL,gBAC7ClV,KAAM,yCACN+W,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAK0iB,iBAAmB,SAACz1B,GAAD,IAAW+S,EAAX,uDAAoB,GAApB,OAA2B,EAAKL,QAAL,gBAC/ClV,KAAM,0CAAF,OAA4CwC,GAChDuU,OAAQ,MACRzB,OAAQ,QACLC,KAWP,EAAK2iB,qBAAuB,SAAC11B,EAAU6S,GAAX,IAAkBE,EAAlB,uDAA2B,GAA3B,OAAkC,EAAKL,QAAL,gBAC1DlV,KAAM,6CAAF,OAA+CwC,GACnDuU,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAWP,EAAK4iB,oBAAsB,SAAC31B,EAAUwB,EAAgBC,EAAgBoR,GAA3C,IAAkDE,EAAlD,uDAA2D,GAA3D,OAAkE,EAAKL,QAAL,gBACzFlV,KAAM,6CAAF,OAA+CwC,EAA/C,qBAAoEwB,EAApE,mBAA6FC,GACjG8S,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KA3EG,EADlB,UAAyBtC,I,aC/HnBwE,GAAQ,CACV,CAAC,sCAAuChV,SACxC,CAAC,4CAA6CO,SAC9C,CAAC,sCAAuCb,SACxC,CAAC,uCAAwCS,UAEhC8U,GAAqB,IAAI/Z,MAAM,sBACtCga,GAAW,IAAIC,cAASH,IACxBI,GAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,GAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,GAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,cAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,GAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvH2f,gBAAiB,SAACxgC,GAAD,MAAW,CAAEqN,QAAS,sCAAuCxK,MAAO7C,IACrFygC,sBAAuB,SAACzgC,GAAD,MAAW,CAAEqN,QAAS,4CAA6CxK,MAAO7C,IACjG0gC,gBAAiB,SAAC1gC,GAAD,MAAW,CAAEqN,QAAS,sCAAuCxK,MAAO7C,IACrF2gC,iBAAkB,SAAC3gC,GAAD,MAAW,CAAEqN,QAAS,uCAAwCxK,MAAO7C,MAV9E,4CAAH,sDAaRqhB,GAAW,yDAAG,0JAAwB,CAAEhB,KAAM,yBAAjBA,EAAf,EAASA,KAAT,kBACT,IAAItB,GAAI,CAAExD,QAAS8E,KADV,2CAAH,qD,mCCrBFoB,G,mGAAf,WAA4BC,GAA5B,iGACiBvB,GAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,kCAKeC,G,mGAAf,WAA+BD,GAA/B,iGACiBL,GAAY,CACrBhB,KAAMqB,EAAY,0BAF1B,mF,yBAKA,SAASE,GAAa/e,EAAOgf,GACzB,cAAiBphB,OAAO8b,KAAKsF,GAA7B,eAA2C,CAAtC,IAAIC,EAAI,KACLtD,MAAMC,QAAQoD,EAAYC,IAC1Bjf,EAAMif,GAAN,yBAAkBjf,EAAMif,IAAxB,eAAkCD,EAAYC,KAG9Cjf,EAAMif,GAAQD,EAAYC,GAGlC,OAAOjf,EAEX,SAASkf,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,ICvBW8X,GAOA3e,GDgBLgH,GAAkB,WACpB,MAAO,CACHwe,YAAa,GACbC,aAAc,GACdC,eAAgB,GAChBC,gBAAiB,GACjBC,aAAc,GACdle,WAAY,CACRme,sBAAuBlf,GAAakf,QAAsBz7B,YAAY,KACtE07B,yBAA0Bnf,GAAamf,QAAyB17B,YAAY,KAC5E27B,sBAAuBpf,GAAaof,QAAsB37B,YAAY,KACtE47B,qBAAsBrf,GAAaqf,QAAqB57B,YAAY,KACpE8G,OAAQyV,GAAazV,QAAO9G,YAAY,KACxCgT,OAAQuJ,GAAavJ,QAAOhT,YAAY,KACxC67B,gBAAiBtf,GAAasf,QAAgB77B,YAAY,KAC1D87B,0BAA2Bvf,GAAauf,QAA0B97B,YAAY,MAElFud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACL8d,eAAgB,SAACnvB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI3C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMwuB,YAAYxkB,KAAKC,UAAUsB,WAAxC,QAAoD,KAExD6jB,gBAAiB,SAACpvB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI5C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMyuB,aAAazkB,KAAKC,UAAUsB,WAAzC,QAAqD,KAEzD8jB,kBAAmB,SAACrvB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI9C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM0uB,eAAe1kB,KAAKC,UAAUsB,WAA3C,QAAuD,KAE3D+jB,mBAAoB,SAACtvB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI/C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM2uB,gBAAgB3kB,KAAKC,UAAUsB,WAA5C,QAAwD,KAE5DgkB,gBAAiB,SAACvvB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI5C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAM4uB,aAAa5kB,KAAKC,UAAUsB,WAAzC,QAAqD,KAEzDwG,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,gDACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjC09B,iBAzBD,cAyB0J,gLAAtInd,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE7HkE,GAAgB2C,GAF6G,cAEjJjD,EAFiJ,iBAGpIA,EAAYgf,iBAAiBl9B,EAAI0+B,WAHmG,eAGnJh/B,EAHmJ,OAGvF7C,KAChEykB,EAAO,QAAS,CAAEhH,MAAO,cAAeta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACxEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,mBAAoBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOhJgG,EAAQ,kBAAkB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUjJ,IAAIsH,iBAAY,+BAAgC,kDAAoD,KAAE7gB,SAV2C,6DAazJ49B,kBAtCD,cAsC2J,kLAAtIrd,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE9HkE,GAAgB2C,GAF8G,cAElJjD,EAFkJ,iBAGrIA,EAAY+e,kBAAkB3iB,GAHuG,QAGpJ5a,EAHoJ,OAG/F7C,KAH+F,YAIjJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJqG,kCAK3HlE,EAAY+e,kBAAZ,iCAAmC3iB,GAAnC,IAA0C,iBAAkB5a,EAAMyiB,WAAWC,WAL8C,QAKhJ1D,EALgJ,OAKlC7hB,KAClH6C,EAAQ+e,GAAa/e,EAAOgf,GANwH,+BAQxJ4C,EAAO,QAAS,CAAEhH,MAAO,eAAgBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACzEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,oBAAqBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWjJgG,EAAQ,mBAAmB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAclJ,IAAIsH,iBAAY,gCAAiC,kDAAoD,KAAE7gB,SAd2C,6DAiB1J69B,oBAvDD,cAuD6J,kLAAtItd,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEhIkE,GAAgB2C,GAFgH,cAEpJjD,EAFoJ,iBAGvIA,EAAYkf,oBAAoBp9B,EAAI0+B,UAAW1+B,EAAI07B,gBAAiB17B,EAAI27B,gBAAiBrhB,GAH8C,QAGtJ5a,EAHsJ,OAGtC7C,KAHsC,YAInJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJuG,kCAK7HlE,EAAYkf,oBAAoBp9B,EAAI0+B,UAAW1+B,EAAI07B,gBAAiB17B,EAAI27B,gBAAxE,iCAA8FrhB,GAA9F,IAAqG,iBAAkB5a,EAAMyiB,WAAWC,WALX,QAKlJ1D,EALkJ,OAKuB7hB,KAC7K6C,EAAQ+e,GAAa/e,EAAOgf,GAN0H,+BAQ1J4C,EAAO,QAAS,CAAEhH,MAAO,iBAAkBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC3EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,sBAAuBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWnJgG,EAAQ,qBAAqB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAcpJ,IAAIsH,iBAAY,kCAAmC,kDAAoD,KAAE7gB,SAd2C,6DAiB5J89B,qBAxED,cAwE8J,kLAAtIvd,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEjIkE,GAAgB2C,GAFiH,cAErJjD,EAFqJ,iBAGxIA,EAAYif,qBAAqBn9B,EAAI0+B,UAAWpkB,GAHwF,QAGvJ5a,EAHuJ,OAGhF7C,KAHgF,YAIpJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJwG,kCAK9HlE,EAAYif,qBAAqBn9B,EAAI0+B,UAArC,iCAAqDpkB,GAArD,IAA4D,iBAAkB5a,EAAMyiB,WAAWC,WAL+B,QAKnJ1D,EALmJ,OAKnB7hB,KACpI6C,EAAQ+e,GAAa/e,EAAOgf,GAN2H,+BAQ3J4C,EAAO,QAAS,CAAEhH,MAAO,kBAAmBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC5EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,uBAAwBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWpJgG,EAAQ,sBAAsB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAcrJ,IAAIsH,iBAAY,mCAAoC,kDAAoD,KAAE7gB,SAd2C,6DAiB7J+9B,kBAzFD,cAyF2J,gLAAtIxd,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE9HkE,GAAgB2C,GAF8G,cAElJjD,EAFkJ,iBAGrIA,EAAY8e,oBAHyH,eAGpJt9B,EAHoJ,OAGpG7C,KACpDykB,EAAO,QAAS,CAAEhH,MAAO,eAAgBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACzEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,oBAAqBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOjJgG,EAAQ,mBAAmB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUlJ,IAAIsH,iBAAY,gCAAiC,kDAAoD,KAAE7gB,SAV2C,6DAa1Jg+B,oBAtGD,cAsGsE,0KAA/C5d,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE5CY,GAAa6C,GAF+B,cAE7DnE,EAF6D,gBAGjDA,EAASqgB,gBAAgB39B,GAHwB,cAG7DkjB,EAH6D,iBAI9C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL0C,eAI7Dxf,EAJ6D,yBAM5DA,GAN4D,wCAS/D,MAAKye,GAT0D,uBAUzD,IAAIiF,iBAAY,gCAAiC,4DAVQ,cAazD,IAAIA,iBAAY,gCAAiC,2BAA6B,KAAE7gB,SAbvB,6DAiBrEi+B,0BAvHD,cAuH4E,0KAA/C7d,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAElDY,GAAa6C,GAFqC,cAEnEnE,EAFmE,gBAGvDA,EAASsgB,sBAAsB59B,GAHwB,cAGnEkjB,EAHmE,iBAIpD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALgD,eAInExf,EAJmE,yBAMlEA,GANkE,wCASrE,MAAKye,GATgE,uBAU/D,IAAIiF,iBAAY,sCAAuC,4DAVQ,cAa/D,IAAIA,iBAAY,sCAAuC,2BAA6B,KAAE7gB,SAbvB,6DAiB3Ek+B,oBAxID,cAwIsE,0KAA/C9d,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE5CY,GAAa6C,GAF+B,cAE7DnE,EAF6D,gBAGjDA,EAASugB,gBAAgB79B,GAHwB,cAG7DkjB,EAH6D,iBAI9C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL0C,eAI7Dxf,EAJ6D,yBAM5DA,GAN4D,wCAS/D,MAAKye,GAT0D,uBAUzD,IAAIiF,iBAAY,gCAAiC,4DAVQ,cAazD,IAAIA,iBAAY,gCAAiC,2BAA6B,KAAE7gB,SAbvB,6DAiBrEm+B,qBAzJD,cAyJuE,0KAA/C/d,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE7CY,GAAa6C,GAFgC,cAE9DnE,EAF8D,gBAGlDA,EAASwgB,iBAAiB99B,GAHwB,cAG9DkjB,EAH8D,iBAI/C5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL2C,eAI9Dxf,EAJ8D,yBAM7DA,GAN6D,wCAShE,MAAKye,GAT2D,uBAU1D,IAAIiF,iBAAY,iCAAkC,4DAVQ,cAa1D,IAAIA,iBAAY,iCAAkC,2BAA6B,KAAE7gB,SAbvB,6DAiBtE2G,gBA1KD,cA0K6C,gKAA1ByZ,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEnB4e,GAAa6C,GAFM,cAEpCnE,EAFoC,gBAGxBA,EAASqgB,gBAAgB39B,GAHD,cAGpCkjB,EAHoC,yBAInCA,GAJmC,wCAOtC,MAAKjG,GAPiC,uBAQhC,IAAIiF,iBAAY,gCAAiC,4DARjB,cAWhC,IAAIA,iBAAY,kCAAmC,6BAA+B,KAAE7gB,SAXpD,6DAe5CkH,sBAzLD,cAyLmD,gKAA1BkZ,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEzB4e,GAAa6C,GAFY,cAE1CnE,EAF0C,gBAG9BA,EAASsgB,sBAAsB59B,GAHD,cAG1CkjB,EAH0C,yBAIzCA,GAJyC,wCAO5C,MAAKjG,GAPuC,uBAQtC,IAAIiF,iBAAY,sCAAuC,4DARjB,cAWtC,IAAIA,iBAAY,wCAAyC,6BAA+B,KAAE7gB,SAXpD,6DAelDqG,gBAxMD,cAwM6C,gKAA1B+Z,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEnB4e,GAAa6C,GAFM,cAEpCnE,EAFoC,gBAGxBA,EAASugB,gBAAgB79B,GAHD,cAGpCkjB,EAHoC,yBAInCA,GAJmC,wCAOtC,MAAKjG,GAPiC,uBAQhC,IAAIiF,iBAAY,gCAAiC,4DARjB,cAWhC,IAAIA,iBAAY,kCAAmC,6BAA+B,KAAE7gB,SAXpD,6DAe5C8G,iBAvND,cAuN8C,gKAA1BsZ,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEpB4e,GAAa6C,GAFO,cAErCnE,EAFqC,gBAGzBA,EAASwgB,iBAAiB99B,GAHD,cAGrCkjB,EAHqC,yBAIpCA,GAJoC,wCAOvC,MAAKjG,GAPkC,uBAQjC,IAAIiF,iBAAY,iCAAkC,4DARjB,cAWjC,IAAIA,iBAAY,mCAAoC,6BAA+B,KAAE7gB,SAXpD,+D,6ECvT3D,SAAW61B,GACPA,EAAQ,mCAAqC,kCAC7CA,EAAQ,cAAgB,aACxBA,EAAQ,iBAAmB,gBAC3BA,EAAQ,cAAgB,cAJ5B,CAKGA,KAAYA,GAAU,KAEzB,SAAW3e,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,oCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,IAAMC,GAAb,WACI,aAA4B,aAAhBC,EAAgB,uDAAJ,GAAI,uBACxBd,KAAKe,QAAU,GACff,KAAKgB,aAAe,KACpBhB,KAAKiB,eAAiB,KACtBjB,KAAKkB,iBAAmB,IAAIC,IAC5BnB,KAAKoB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpBxB,KAAKyB,gBAAkB,SAACjc,GACpB,EAAKwb,aAAexb,GAExBwa,KAAK0B,mBAAL,sBACKd,GAAYe,MAAO,SAAC1X,GAAD,OAAqB,OAAVA,GAAoC,WAAjB,eAAOA,IAAuC,kBAAVA,EAA8CA,EAAxB2X,KAAKC,UAAU5X,MAD/H,iBAEK2W,GAAYkB,UAAW,SAAC7X,GAAD,OAAWhE,OAAO8b,KAAK9X,GAAS,IAAI+X,QAAO,SAACxc,EAAMmD,GAEtE,OADAnD,EAAKyc,OAAOtZ,EAAKsB,EAAMtB,IAChBnD,IACR,IAAIsc,aALX,iBAMKlB,GAAYsB,YAAa,SAACjY,GAAD,OAAW,EAAKkY,cAAclY,MAN5D,GAQA+V,KAAKoC,kBAAoB,SAACC,GACtB,GAAI,EAAKnB,iBAAiBoB,IAAID,GAAc,CACxC,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAClD,OAAIE,EACOA,EAAgBC,YAE3B,EAEJ,IAAMD,EAAkB,IAAIE,gBAE5B,OADA,EAAKvB,iBAAiBwB,IAAIL,EAAaE,GAChCA,EAAgBC,QAE3BxC,KAAK2C,aAAe,SAACN,GACjB,IAAME,EAAkB,EAAKrB,iBAAiBjZ,IAAIoa,GAC9CE,IACAA,EAAgBK,QAChB,EAAK1B,iBAAiB2B,OAAOR,KAGrCrC,KAAK8C,QAAU,YAA2F,IAAxFC,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQpV,EAA0E,EAA1EA,KAAMuD,EAAoE,EAApEA,KAAM8R,EAA8D,EAA9DA,MAA8D,IAAvDC,cAAuD,MAA9C,OAA8C,EAAtCnC,EAAsC,EAAtCA,QAASsB,EAA6B,EAA7BA,YAAgBc,EAAa,qBAChGC,EAAgBJ,GAAU,EAAK/B,gBAAkB,EAAKA,eAAe,EAAKD,eAAkB,GAC5FqC,EAAgB,EAAKC,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS,EAAKd,cAAcc,GAC1CO,EAAmB,EAAK9B,kBAAkBvQ,GAAQyP,GAAYe,MACpE,OAAO8B,MAAM,GAAD,OAAI1C,GAAW,EAAKA,SAAW,IAA/B,OAAoCnT,GAApC,OAA2C2V,EAAc,IAAH,OAAOA,GAAgB,IAA7E,eAAC,kBACNF,GADK,IAER/B,QAAS,iCACDnQ,GAAQA,IAASyP,GAAYkB,SAAW,CAAE,eAAgB3Q,GAAS,IACnEkS,EAAc/B,SAAW,IAEjCkB,OAAQH,EAAc,EAAKD,kBAAkBC,QAAe,EAC5DU,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOS,EAAiBT,MAC9EW,KARI,yDAQC,WAAOC,GAAP,gGACEzb,EAAIyb,EACVzb,EAAE1C,KAAO,KACT0C,EAAEkR,MAAQ,KAHN,SAIeuK,EAAST,KACvBQ,MAAK,SAACle,GAOP,OANI0C,EAAE0b,GACF1b,EAAE1C,KAAOA,EAGT0C,EAAEkR,MAAQ5T,EAEP0C,KAEN2b,OAAM,SAACxU,GAER,OADAnH,EAAEkR,MAAQ/J,EACHnH,KAhBP,UAIE1C,EAJF,OAkBA6c,GACA,EAAKnB,iBAAiB2B,OAAOR,GAE5BsB,EAASC,GArBV,sBAsBMpe,EAtBN,gCAuBGA,GAvBH,4CARD,wDAkCXS,OAAO6d,OAAO9D,KAAMc,GAjF5B,oDAmFI,SAAcmC,EAAOta,GACjB,IAAMN,EAAQ4a,EAAMta,GACpB,OAAQob,mBAAmBpb,GACvB,IACAob,mBAAmBC,MAAMC,QAAQ5b,GAASA,EAAMsG,KAAK,KAAwB,kBAAVtG,EAAqBA,EAA5B,UAAuCA,MAvF/G,2BAyFI,SAAc6b,GAAU,WACdjB,EAAQiB,GAAY,GACpBnC,EAAO9b,OAAO8b,KAAKkB,GAAOkB,QAAO,SAACxb,GAAD,MAAS,qBAAuBsa,EAAMta,MAC7E,OAAOoZ,EACFzS,KAAI,SAAC3G,GAAD,MAA+B,WAAtB,eAAOsa,EAAMta,KAAsBqb,MAAMC,QAAQhB,EAAMta,IAEnE,EAAKyb,cAAcnB,EAAOta,GAD1B,EAAKwZ,cAAcc,EAAMta,OAE1BgG,KAAK,OAhGlB,4BAkGI,SAAeuV,GACX,IAAMX,EAAcvD,KAAKmC,cAAc+B,GACvC,OAAOX,EAAc,IAAH,OAAOA,GAAgB,KApGjD,gCAsGI,SAAmBc,EAASC,GACxB,sEACOtE,KAAKoB,eACLiD,GACCC,GAAW,IAHnB,IAIIhD,QAAS,gDACDtB,KAAKoB,cAAcE,SAAW,IAC9B+C,EAAQ/C,SAAW,IAClBgD,GAAWA,EAAQhD,SAAY,UA9GpD,KAuHaiD,GAAb,wDACI,aAAc,oCACV,eAASC,WAUT,EAAKsjB,uBAAyB,SAAC13B,GAAD,IAAW+S,EAAX,uDAAoB,GAApB,OAA2B,EAAKL,QAAL,gBACrDlV,KAAM,mDAAF,OAAqDwC,GACzDuU,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK4kB,iBAAmB,SAAC9kB,GAAD,IAAQE,EAAR,uDAAiB,GAAjB,OAAwB,EAAKL,QAAL,gBAC5ClV,KAAM,2CACN+W,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAK6kB,gBAAkB,SAACC,GAAD,IAAe9kB,EAAf,uDAAwB,GAAxB,OAA+B,EAAKL,QAAL,gBAClDlV,KAAM,4CAAF,OAA8Cq6B,GAClDtjB,OAAQ,MACRzB,OAAQ,QACLC,KAWP,EAAK+kB,2BAA6B,SAACD,GAAD,IAAe9kB,EAAf,uDAAwB,GAAxB,OAA+B,EAAKL,QAAL,gBAC7DlV,KAAM,4CAAF,OAA8Cq6B,EAA9C,iBACJtjB,OAAQ,MACRzB,OAAQ,QACLC,KAWP,EAAKglB,8BAAgC,SAACF,EAAcr2B,EAAgBC,GAA/B,IAA+CsR,EAA/C,uDAAwD,GAAxD,OAA+D,EAAKL,QAAL,gBAChGlV,KAAM,4CAAF,OAA8Cq6B,EAA9C,qCAAuFr2B,EAAvF,mBAAgHC,GACpH8S,OAAQ,MACRzB,OAAQ,QACLC,KA1EG,EADlB,UAAyBtC,I,aChJnBwE,GAAQ,CACV,CAAC,+CAAgD+iB,SACjD,CAAC,mDAAoDC,SACrD,CAAC,gDAAiDC,SAClD,CAAC,+CAAgDC,UAExCjjB,GAAqB,IAAI/Z,MAAM,sBACtCga,GAAW,IAAIC,cAASH,IACxBI,GAAa,CACfrP,OAAQ,GACRsP,IAAK,UAEHC,GAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHN,GAFG,uBAGQQ,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEL,cAHhE,cAGPS,EAHO,gBAIcJ,EAAOK,cAJrB,cAILvW,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACHwW,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKX,GAAYY,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiBxW,EAASyW,EAAMC,EAAKC,IACvHmiB,qBAAsB,SAAChjC,GAAD,MAAW,CAAEqN,QAAS,+CAAgDxK,MAAO7C,IACnGijC,yBAA0B,SAACjjC,GAAD,MAAW,CAAEqN,QAAS,mDAAoDxK,MAAO7C,IAC3GkjC,sBAAuB,SAACljC,GAAD,MAAW,CAAEqN,QAAS,gDAAiDxK,MAAO7C,IACrGmjC,qBAAsB,SAACnjC,GAAD,MAAW,CAAEqN,QAAS,+CAAgDxK,MAAO7C,MAV1F,4CAAH,sDAaRqhB,GAAW,yDAAG,0JAAwB,CAAEhB,KAAM,yBAAjBA,EAAf,EAASA,KAAT,kBACT,IAAItB,GAAI,CAAExD,QAAS8E,KADV,2CAAH,qD,sBCvBFoB,G,mGAAf,WAA4BC,GAA5B,iGACiBvB,GAASuB,EAAY,wBAAyB,CACvDrB,KAAMqB,EAAY,8BAF1B,mF,kCAKeC,G,mGAAf,WAA+BD,GAA/B,iGACiBL,GAAY,CACrBhB,KAAMqB,EAAY,0BAF1B,mF,yBAKA,SAASE,GAAa/e,EAAOgf,GACzB,cAAiBphB,OAAO8b,KAAKsF,GAA7B,eAA2C,CAAtC,IAAIC,EAAI,KACLtD,MAAMC,QAAQoD,EAAYC,IAC1Bjf,EAAMif,GAAN,yBAAkBjf,EAAMif,IAAxB,eAAkCD,EAAYC,KAG9Cjf,EAAMif,GAAQD,EAAYC,GAGlC,OAAOjf,EAEX,SAASkf,GAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2BzhB,OAAO8W,QAAQyK,GAA1C,eAAqD,CAAhD,6BAAO7e,EAAP,KAAYN,EAAZ,KACGsf,EAAQ,GACZA,EAAM/f,KAAOe,EACbgf,EAAMxW,KAAN,eAAoB9I,GACpBof,EAAUC,OAAOphB,KAAKqhB,GAE1B,OAAOF,EAEX,IAAMG,GAAkB,WACpB,MAAO,CACHghB,WAAY,GACZC,YAAa,GACbC,kBAAmB,GACnBC,sBAAuB,GACvBC,yBAA0B,GAC1B1gB,WAAY,CACR2gB,cAAe1hB,GAAa0hB,QAAcj+B,YAAY,KACtDk+B,qBAAsB3hB,GAAa2hB,QAAqBl+B,YAAY,KACpEiN,aAAcsP,GAAatP,QAAajN,YAAY,KACpDm+B,YAAa5hB,GAAa4hB,QAAYn+B,YAAY,KAClDo+B,gBAAiB7hB,GAAa6hB,QAAgBp+B,YAAY,KAC1Dq+B,QAAS9hB,GAAa8hB,QAAQr+B,YAAY,MAE9Cud,eAAgB,IAAIC,MAItB5Q,GAAQgQ,KACC,IACXa,YAAY,EACZ7Q,SACA8Q,UAAW,CACPC,YADO,SACK/Q,GACR3R,OAAO6d,OAAOlM,EAAOgQ,OAEzBgB,MAJO,SAIDhR,EAJC,GAI6B,IAArBqL,EAAqB,EAArBA,MAAOta,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvBuP,EAAMqL,GAAOrB,KAAKC,UAAUlZ,IAAQN,GAExCwgB,UAPO,SAOGjR,EAAOkR,GACblR,EAAM2Q,eAAeQ,IAAID,IAE7BE,YAVO,SAUKpR,EAAOkR,GACflR,EAAM2Q,eAAe1F,OAAOiG,KAGpCG,QAAS,CACLqgB,cAAe,SAAC1xB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI1C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMgxB,WAAWhnB,KAAKC,UAAUsB,WAAvC,QAAmD,KAEvDomB,eAAgB,SAAC3xB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAI3C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMixB,YAAYjnB,KAAKC,UAAUsB,WAAxC,QAAoD,KAExDqmB,qBAAsB,SAAC5xB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIjD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMkxB,kBAAkBlnB,KAAKC,UAAUsB,WAA9C,QAA0D,KAE9DsmB,yBAA0B,SAAC7xB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIrD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMmxB,sBAAsBnnB,KAAKC,UAAUsB,WAAlD,QAA8D,KAElEumB,4BAA6B,SAAC9xB,GAAD,OAAW,WAA6B,MAA5BuL,EAA4B,uDAAnB,CAAEA,OAAQ,IAIxD,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAOrL,EAAMoxB,yBAAyBpnB,KAAKC,UAAUsB,WAArD,QAAiE,KAErEwG,iBAAkB,SAAC/R,GAAD,OAAW,SAACzG,GAC1B,OAAOyG,EAAM0Q,WAAWnX,GAAMuW,UAGtCkC,QAAS,CACLC,KADK,YAC2B,IAAzBtJ,EAAyB,EAAzBA,SAAUuJ,EAAe,EAAfA,YACbpJ,QAAQC,IAAI,oDACRmJ,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CxJ,EAAS,mBAIrByJ,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBpB,GAAc,IAAxBmB,EAAwB,EAAxBA,OACVA,EAAO,cAAenB,IAEpBqB,YAfD,YAekC,qJAAnBvS,EAAmB,EAAnBA,MAAO2I,EAAY,EAAZA,SACvB3I,EAAM2Q,eAAe6B,QAArB,yDAA6B,WAAOtB,GAAP,0GAEfvI,EAASuI,EAAauB,OAAQvB,EAAawB,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAE7gB,SALvB,wDAA7B,uDADmC,8CAUjCigC,gBAzBD,cAyByJ,gLAAtI1f,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE5HkE,GAAgB2C,GAF4G,cAEhJjD,EAFgJ,iBAGnIA,EAAYmhB,gBAAgBr/B,EAAIihC,eAHmG,eAGlJvhC,EAHkJ,OAGnF7C,KACnEykB,EAAO,QAAS,CAAEhH,MAAO,aAActa,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACvEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,kBAAmBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO/IgG,EAAQ,iBAAiB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUhJ,IAAIsH,iBAAY,8BAA+B,kDAAoD,KAAE7gB,SAV2C,6DAaxJmgC,iBAtCD,cAsC0J,kLAAtI5f,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE7HkE,GAAgB2C,GAF6G,cAEjJjD,EAFiJ,iBAGpIA,EAAYkhB,iBAAiB9kB,GAHuG,QAGnJ5a,EAHmJ,OAG/F7C,KAH+F,YAIhJmlB,IAAOtiB,EAAMyiB,YAA0C,MAA5BziB,EAAMyiB,WAAWC,QAJoG,kCAK1HlE,EAAYkhB,iBAAZ,iCAAkC9kB,GAAlC,IAAyC,iBAAkB5a,EAAMyiB,WAAWC,WAL8C,QAK/I1D,EAL+I,OAKlC7hB,KACjH6C,EAAQ+e,GAAa/e,EAAOgf,GANuH,+BAQvJ4C,EAAO,QAAS,CAAEhH,MAAO,cAAeta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACxEqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,mBAAoBC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WAVgD,4BAWhJgG,EAAQ,kBAAkB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAXgG,QAWpF,IAXoF,2CAcjJ,IAAIsH,iBAAY,+BAAgC,kDAAoD,KAAE7gB,SAd2C,6DAiBzJogC,uBAvDD,cAuDgK,gLAAtI7f,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEnIkE,GAAgB2C,GAFmH,cAEvJjD,EAFuJ,iBAG1IA,EAAYihB,uBAAuBn/B,EAAI0+B,WAHmG,eAGzJh/B,EAHyJ,OAGvF7C,KACtEykB,EAAO,QAAS,CAAEhH,MAAO,oBAAqBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAC9EqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,yBAA0BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAOtJgG,EAAQ,wBAAwB,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAUvJ,IAAIsH,iBAAY,qCAAsC,kDAAoD,KAAE7gB,SAV2C,6DAa/JqgC,2BApED,cAoEoK,gLAAtI9f,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEvIkE,GAAgB2C,GAFuH,cAE3JjD,EAF2J,iBAG9IA,EAAYqhB,2BAA2Bv/B,EAAIihC,eAHmG,eAG7JvhC,EAH6J,OAGnF7C,KAC9EykB,EAAO,QAAS,CAAEhH,MAAO,wBAAyBta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UAClFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,6BAA8BC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO1JgG,EAAQ,4BAA4B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU3J,IAAIsH,iBAAY,yCAA0C,kDAAoD,KAAE7gB,SAV2C,6DAanKsgC,8BAjFD,cAiFuK,gLAAtI/f,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAab,EAAiH,EAAjHA,QAAiH,IAApGwB,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuDhiB,EAAuB,mBAApCwa,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE1IkE,GAAgB2C,GAF0H,cAE9JjD,EAF8J,iBAGjJA,EAAYshB,8BAA8Bx/B,EAAIihC,cAAejhC,EAAI07B,gBAAiB17B,EAAI27B,iBAH2D,eAGhKj8B,EAHgK,OAGzC7C,KAC3HykB,EAAO,QAAS,CAAEhH,MAAO,2BAA4Bta,IAAK,CAAEwa,OAAQ,kBAAKxa,GAAOsa,SAAS5a,UACrFqiB,GACAT,EAAO,YAAa,CAAEI,OAAQ,gCAAiCC,QAAS,CAAEG,QAAS,CAAEE,OAAOxH,OAAQ,kBAAKxa,GAAOsa,WANgD,4BAO7JgG,EAAQ,+BAA+B,CAAE9F,OAAQ,kBAAKxa,GAAOsa,iBAPgG,QAOpF,IAPoF,2CAU9J,IAAIsH,iBAAY,4CAA6C,kDAAoD,KAAE7gB,SAV2C,6DAatKugC,yBA9FD,cA8F2E,0KAA/CngB,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEjDY,GAAa6C,GAFoC,cAElEnE,EAFkE,gBAGtDA,EAAS6iB,qBAAqBngC,GAHwB,cAGlEkjB,EAHkE,iBAInD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL+C,eAIlExf,EAJkE,yBAMjEA,GANiE,wCASpE,MAAKye,GAT+D,uBAU9D,IAAIiF,iBAAY,qCAAsC,4DAVQ,cAa9D,IAAIA,iBAAY,qCAAsC,2BAA6B,KAAE7gB,SAbvB,6DAiB1EwgC,6BA/GD,cA+G+E,0KAA/CpgB,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAErDY,GAAa6C,GAFwC,cAEtEnE,EAFsE,gBAG1DA,EAAS8iB,yBAAyBpgC,GAHwB,cAGtEkjB,EAHsE,iBAIvD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALmD,eAItExf,EAJsE,yBAMrEA,GANqE,wCASxE,MAAKye,GATmE,uBAUlE,IAAIiF,iBAAY,yCAA0C,4DAVQ,cAalE,IAAIA,iBAAY,yCAA0C,2BAA6B,KAAE7gB,SAbvB,6DAiB9EygC,0BAhID,cAgI4E,0KAA/CrgB,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAElDY,GAAa6C,GAFqC,cAEnEnE,EAFmE,gBAGvDA,EAAS+iB,sBAAsBrgC,GAHwB,cAGnEkjB,EAHmE,iBAIpD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SALgD,eAInExf,EAJmE,yBAMlEA,GANkE,wCASrE,MAAKye,GATgE,uBAU/D,IAAIiF,iBAAY,sCAAuC,4DAVQ,cAa/D,IAAIA,iBAAY,sCAAuC,2BAA6B,KAAE7gB,SAbvB,6DAiB3E0gC,yBAjJD,cAiJ2E,0KAA/CtgB,EAA+C,EAA/CA,YAAiBzhB,EAA8B,EAA9BA,MAA8B,IAAvB+d,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEjDY,GAAa6C,GAFoC,cAElEnE,EAFkE,gBAGtDA,EAASgjB,qBAAqBtgC,GAHwB,cAGlEkjB,EAHkE,iBAInD5F,EAASO,iBAAiB,CAACqF,GAAM,CAAEnF,IAAK,CAAEhQ,OAAQgQ,EAC/DV,IAAK,UAAYW,SAL+C,eAIlExf,EAJkE,yBAMjEA,GANiE,wCASpE,MAAKye,GAT+D,uBAU9D,IAAIiF,iBAAY,qCAAsC,4DAVQ,cAa9D,IAAIA,iBAAY,qCAAsC,2BAA6B,KAAE7gB,SAbvB,6DAiB1E0+B,qBAlKD,cAkKkD,gKAA1Bte,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAExB4e,GAAa6C,GAFW,cAEzCnE,EAFyC,gBAG7BA,EAAS6iB,qBAAqBngC,GAHD,cAGzCkjB,EAHyC,yBAIxCA,GAJwC,wCAO3C,MAAKjG,GAPsC,uBAQrC,IAAIiF,iBAAY,qCAAsC,4DARjB,cAWrC,IAAIA,iBAAY,uCAAwC,6BAA+B,KAAE7gB,SAXpD,6DAejD2+B,yBAjLD,cAiLsD,gKAA1Bve,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAE5B4e,GAAa6C,GAFe,cAE7CnE,EAF6C,gBAGjCA,EAAS8iB,yBAAyBpgC,GAHD,cAG7CkjB,EAH6C,yBAI5CA,GAJ4C,wCAO/C,MAAKjG,GAP0C,uBAQzC,IAAIiF,iBAAY,yCAA0C,4DARjB,cAWzC,IAAIA,iBAAY,2CAA4C,6BAA+B,KAAE7gB,SAXpD,6DAerD4+B,sBAhMD,cAgMmD,gKAA1Bxe,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAEzB4e,GAAa6C,GAFY,cAE1CnE,EAF0C,gBAG9BA,EAAS+iB,sBAAsBrgC,GAHD,cAG1CkjB,EAH0C,yBAIzCA,GAJyC,wCAO5C,MAAKjG,GAPuC,uBAQtC,IAAIiF,iBAAY,sCAAuC,4DARjB,cAWtC,IAAIA,iBAAY,wCAAyC,6BAA+B,KAAE7gB,SAXpD,6DAelD6+B,qBA/MD,cA+MkD,gKAA1Bze,EAA0B,EAA1BA,YAAiBzhB,EAAS,EAATA,MAAS,kBAExB4e,GAAa6C,GAFW,cAEzCnE,EAFyC,gBAG7BA,EAASgjB,qBAAqBtgC,GAHD,cAGzCkjB,EAHyC,yBAIxCA,GAJwC,wCAO3C,MAAKjG,GAPsC,uBAQrC,IAAIiF,iBAAY,qCAAsC,4DARjB,cAWrC,IAAIA,iBAAY,uCAAwC,6BAA+B,KAAE7gB,SAXpD,+DC/ShD,IACX2gC,oGAAqGC,GAAKD,EAAqG,8DAC/ME,yDAA0DD,GAAKC,GAA0D,iBACzHC,iCAAkCF,GAAKE,GAAkC,uBACzEC,qCAAsCH,GAAKG,GAAsC,4BACjFC,iCAAkCJ,GAAKI,GAAkC,uBACzEC,mCAAoCL,GAAKK,GAAoC,yBAC7EC,yCAA0CN,GAAKM,GAA0C,+BACzFC,qCAAsCP,GAAKO,GAAsC,2BACjFC,gCAAiCR,GAAKQ,GAAiC,sBACvEC,qCAAsCT,GAAKS,GAAsC,2BACjFC,oCAAqCV,GAAKU,GAAqC,0BAC/EC,oCAAqCX,GAAKW,GAAqC,0BAC/EC,yCAA0CZ,GAAKY,GAA0C,gCACzFC,gCAAiCb,GAAKa,GAAiC,uBACvEC,+BAAgCd,GAAKc,GAAgC,sBACrEC,mCAAoCf,GAAKe,GAAoC,2BAEjF,SAASf,GAAKgB,EAAKC,GACf,OAAO,SAAcC,GACjB,GAAIA,EAAMtrB,UAAU,CAACqrB,IACjB,MAAM,IAAIhgC,MAAM,mCAAqCggC,GAGrDC,EAAMC,eAAe,CAACF,GAASD,GAC/BE,EAAM9gB,WAAU,SAACghB,GACQ,qCAAjBA,EAASv6B,MACTq6B,EAAMjrB,SAASgrB,EAAS,QAAS,KAAM,CACnCI,MAAM,QC3Cf,SAAS9hB,GAAK2hB,GAC5B,cAAyBvlC,OAAO2lC,OAAOC,IAAvC,eAAmD,CAA9C,IAAMC,EAAU,KACpBA,EAAWN,GAEZO,uBAAUP,GACVQ,oBAAOR,GACPS,iBAAIT,GACJ5lB,oBAAO4lB,GACPU,sBAASV,GCPV,IAAMA,GAAQW,eAAY,CACzBv0B,MADyB,WAExB,MAAO,IAER8Q,UAAW,GACXkB,QAAS,KAEVC,GAAK2hB,IACUA,U,iBCTRpsB,MAAM,a,2MADZ,gCAMM,YALL,gCAIM,MAJN,GAIM,CAHL,yBAAa,GACb,yBAAkC,GAApB1P,QAAS,EAAAA,SAAO,oBAC9B,yBAAqC,GAApBA,QAAS,EAAAA,SAAO,wBAMrB,QACd9H,KAAM,QACNkY,SAAU,CACTpQ,QADS,WAER,OAAOsQ,KAAKC,OAAOgJ,QAAQ,4BCZ9B,GAAO9I,OAAS,GAED,U,GCHb,gCAEM,OAFDf,MAAM,aAAW,S,IAAtB,I,yDADD,gCAIM,eAIQ,QACdxX,KAAM,SCPP,GAAOuY,OAAS,GAED,U,ICHRf,MAAM,a,2GADZ,gCAIM,YAHL,gCAEM,MAFN,GAEM,CADL,yBAAc,OAMF,QACdxX,KAAM,YCPP,GAAOuY,OAAS,GAED,UCATisB,GAAgBC,kBAChBC,GAAS,CACd,CACC1+B,KAAM,IACN2+B,UAAWC,IAEZ,CAAE5+B,KAAM,SAAU2+B,UAAWE,IAC7B,CAAE7+B,KAAM,YAAa2+B,UAAWG,KAG3BC,GAASC,gBAAa,CAC3BC,QAAST,GACTE,YAGcK,M,wBCdTG,GAAMC,uBAAUC,GACtBF,GAAIG,OAAOC,iBAAiBC,aAAc,EAC1CL,GAAIM,IAAI5B,IAAO4B,IAAIT,IAAQS,IAAIC,MAAQC,MAAM,S,yaCoOvCC,G,UAAqB,CAAEp1B,OAAQ,GAAIC,UAAW,GAAII,SAAU,IACrDwqB,EAAiB,CAC1Bv5B,OAD0B,SACnBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATuB,KAAnBgB,EAAQyO,QACRxO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyO,QAEX,KAAtBzO,EAAQ0O,WACRzO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0O,WAEZ,IAArB1O,EAAQ8O,UACR7O,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQ8O,UAE9B7O,GAEXK,OAb0B,SAanBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6jC,GACrB,MAAOrjC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyO,OAASjO,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQ0O,UAAYlO,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQ8O,SAAW9N,EAAaR,EAAO6H,UACvC,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApC0B,SAoCjB9B,GACL,IAAMY,EAAU,kBAAK6jC,GAmBrB,YAlBsBjjC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASnM,OAAOlD,EAAOqP,QAG/BzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYpM,OAAOlD,EAAOsP,WAGlC1O,EAAQ0O,UAAY,QAEA9N,IAApBxB,EAAO0P,UAA8C,OAApB1P,EAAO0P,SACxC9O,EAAQ8O,SAAW3N,OAAO/B,EAAO0P,UAGjC9O,EAAQ8O,SAAW,EAEhB9O,GAEXoB,OA1D0B,SA0DnBpB,GACH,IAAMqB,EAAM,GAIZ,YAHmBT,IAAnBZ,EAAQyO,SAAyBpN,EAAIoN,OAASzO,EAAQyO,aAChC7N,IAAtBZ,EAAQ0O,YAA4BrN,EAAIqN,UAAY1O,EAAQ0O,gBACvC9N,IAArBZ,EAAQ8O,WAA2BzN,EAAIyN,SAAW9O,EAAQ8O,UACnDzN,GAEXC,YAjE0B,SAiEdlC,GACR,IAAMY,EAAU,kBAAK6jC,GAmBrB,YAlBsBjjC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASrP,EAAOqP,OAGxBzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYtP,EAAOsP,UAG3B1O,EAAQ0O,UAAY,QAEA9N,IAApBxB,EAAO0P,UAA8C,OAApB1P,EAAO0P,SACxC9O,EAAQ8O,SAAW1P,EAAO0P,SAG1B9O,EAAQ8O,SAAW,EAEhB9O,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,ueCpVE6hC,EAAY,CAAEv6B,MAAO,EAAGzB,MAAO,GACxBi8B,EAAQ,CACjBhkC,OADiB,SACVC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACN,IAAlBgB,EAAQuJ,OACRtJ,EAAOE,OAAO,GAAGC,MAAMJ,EAAQuJ,OAEb,IAAlBvJ,EAAQ8H,OACR7H,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ8H,OAEJ,IAA5B9H,EAAQgkC,SAAS1nC,QACjB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQgkC,UARE,uBAUtBhkC,EAAQikC,OAVc,IAUtC,2BAA+B,KAApB3+B,EAAoB,QAC3BrF,EAAOE,OAAO,IAAI6C,MAAMsC,IAXU,8BAatC,OAAOrF,GAEXK,OAhBiB,SAgBVC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK8jC,GACrB9jC,EAAQikC,MAAQ,GAChB,MAAOzjC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQuJ,MAAQvI,EAAaR,EAAOJ,SACpC,MACJ,KAAK,EACDJ,EAAQ8H,MAAQ9G,EAAaR,EAAOJ,SACpC,MACJ,KAAK,EACDJ,EAAQgkC,SAAWxjC,EAAOwC,QAC1B,MACJ,KAAK,EACDhD,EAAQikC,MAAMrnC,KAAK4D,EAAOwC,SAC1B,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA3CiB,SA2CR9B,GACL,IAAMY,EAAU,kBAAK8jC,GAiBrB,GAhBA9jC,EAAQikC,MAAQ,QACKrjC,IAAjBxB,EAAOmK,OAAwC,OAAjBnK,EAAOmK,MACrCvJ,EAAQuJ,MAAQpI,OAAO/B,EAAOmK,OAG9BvJ,EAAQuJ,MAAQ,OAEC3I,IAAjBxB,EAAO0I,OAAwC,OAAjB1I,EAAO0I,MACrC9H,EAAQ8H,MAAQ3G,OAAO/B,EAAO0I,OAG9B9H,EAAQ8H,MAAQ,OAEIlH,IAApBxB,EAAO4kC,UAA8C,OAApB5kC,EAAO4kC,WACxChkC,EAAQgkC,SAAW/gC,EAAgB7D,EAAO4kC,gBAEzBpjC,IAAjBxB,EAAO6kC,OAAwC,OAAjB7kC,EAAO6kC,MAAgB,wBACrC7kC,EAAO6kC,OAD8B,IACrD,2BAA8B,KAAnBt+B,EAAmB,QAC1B3F,EAAQikC,MAAMrnC,KAAKqG,EAAgB0C,KAFc,+BAKzD,OAAO3F,GAEXoB,OApEiB,SAoEVpB,GACH,IAAMqB,EAAM,GAWZ,YAVkBT,IAAlBZ,EAAQuJ,QAAwBlI,EAAIkI,MAAQvJ,EAAQuJ,YAClC3I,IAAlBZ,EAAQ8H,QAAwBzG,EAAIyG,MAAQ9H,EAAQ8H,YAC/BlH,IAArBZ,EAAQgkC,WACH3iC,EAAI2iC,SAAW9gC,OAAqCtC,IAArBZ,EAAQgkC,SAAyBhkC,EAAQgkC,SAAW,IAAIvjC,aACxFT,EAAQikC,MACR5iC,EAAI4iC,MAAQjkC,EAAQikC,MAAMr+B,KAAI,SAACD,GAAD,OAAOzC,OAAsBtC,IAAN+E,EAAkBA,EAAI,IAAIlF,eAG/EY,EAAI4iC,MAAQ,GAET5iC,GAEXC,YAlFiB,SAkFLlC,GACR,IAAMY,EAAU,kBAAK8jC,GAoBrB,GAnBA9jC,EAAQikC,MAAQ,QACKrjC,IAAjBxB,EAAOmK,OAAwC,OAAjBnK,EAAOmK,MACrCvJ,EAAQuJ,MAAQnK,EAAOmK,MAGvBvJ,EAAQuJ,MAAQ,OAEC3I,IAAjBxB,EAAO0I,OAAwC,OAAjB1I,EAAO0I,MACrC9H,EAAQ8H,MAAQ1I,EAAO0I,MAGvB9H,EAAQ8H,MAAQ,OAEIlH,IAApBxB,EAAO4kC,UAA8C,OAApB5kC,EAAO4kC,SACxChkC,EAAQgkC,SAAW5kC,EAAO4kC,SAG1BhkC,EAAQgkC,SAAW,IAAIvjC,gBAENG,IAAjBxB,EAAO6kC,OAAwC,OAAjB7kC,EAAO6kC,MAAgB,wBACrC7kC,EAAO6kC,OAD8B,IACrD,2BAA8B,KAAnBt+B,EAAmB,QAC1B3F,EAAQikC,MAAMrnC,KAAK+I,IAF8B,+BAKzD,OAAO3F,IA+SXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAEzB,SAASjE,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,+gBC3VEiiC,EAAkB,CAAEl+B,QAAS,IACtBqqB,EAAc,CACvBtwB,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANwB,KAApBgB,EAAQgG,SACR/F,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgG,cAEApF,IAAjCZ,EAAQmkC,sBACR1T,OAAqB1wB,OAAOC,EAAQmkC,qBAAsBlkC,EAAOE,OAAO,IAAIqF,QAAQC,SAEjFxF,GAEXK,OAVuB,SAUhBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkkC,GACrB,MAAO1jC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgG,QAAUxF,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQmkC,qBAAuB1T,OAAqBnwB,OAAOE,EAAQA,EAAOL,UAC1E,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BuB,SA8Bd9B,GACL,IAAMY,EAAU,kBAAKkkC,GAcrB,YAbuBtjC,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU1D,OAAOlD,EAAO4G,SAGhChG,EAAQgG,QAAU,QAEcpF,IAAhCxB,EAAO+kC,sBACyB,OAAhC/kC,EAAO+kC,qBACPnkC,EAAQmkC,qBAAuB1T,OAAqBvvB,SAAS9B,EAAO+kC,sBAGpEnkC,EAAQmkC,0BAAuBvjC,EAE5BZ,GAEXoB,OA/CuB,SA+ChBpB,GACH,IAAMqB,EAAM,GAMZ,YALoBT,IAApBZ,EAAQgG,UAA0B3E,EAAI2E,QAAUhG,EAAQgG,cACvBpF,IAAjCZ,EAAQmkC,uBACH9iC,EAAI8iC,qBAAuBnkC,EAAQmkC,qBAC9B1T,OAAqBrvB,OAAOpB,EAAQmkC,2BACpCvjC,GACHS,GAEXC,YAxDuB,SAwDXlC,GACR,IAAMY,EAAU,kBAAKkkC,GAcrB,YAbuBtjC,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU5G,EAAO4G,QAGzBhG,EAAQgG,QAAU,QAEcpF,IAAhCxB,EAAO+kC,sBACyB,OAAhC/kC,EAAO+kC,qBACPnkC,EAAQmkC,qBAAuB1T,OAAqBnvB,YAAYlC,EAAO+kC,sBAGvEnkC,EAAQmkC,0BAAuBvjC,EAE5BZ,IAGTokC,EAA4B,CAAEp+B,QAAS,IAChCuqB,EAAwB,CACjCxwB,OADiC,SAC1BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACJ,KAApBgB,EAAQgG,SACR/F,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgG,SAFC,uBAItBhG,EAAQqkC,cAJc,IAItC,2BAAsC,KAA3B/+B,EAA2B,QAClCkrB,EAAYzwB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALd,8BAOtC,OAAOxF,GAEXK,OAViC,SAU1BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKokC,GACrBpkC,EAAQqkC,aAAe,GACvB,MAAO7jC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgG,QAAUxF,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQqkC,aAAaznC,KAAK4zB,EAAYlwB,OAAOE,EAAQA,EAAOL,WAC5D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/BiC,SA+BxB9B,GACL,IAAMY,EAAU,kBAAKokC,GAQrB,GAPApkC,EAAQqkC,aAAe,QACAzjC,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU1D,OAAOlD,EAAO4G,SAGhChG,EAAQgG,QAAU,QAEMpF,IAAxBxB,EAAOilC,cAAsD,OAAxBjlC,EAAOilC,aAAuB,wBACnDjlC,EAAOilC,cAD4C,IACnE,2BAAqC,KAA1B1+B,EAA0B,QACjC3F,EAAQqkC,aAAaznC,KAAK4zB,EAAYtvB,SAASyE,KAFgB,+BAKvE,OAAO3F,GAEXoB,OA/CiC,SA+C1BpB,GACH,IAAMqB,EAAM,GAQZ,YAPoBT,IAApBZ,EAAQgG,UAA0B3E,EAAI2E,QAAUhG,EAAQgG,SACpDhG,EAAQqkC,aACRhjC,EAAIgjC,aAAerkC,EAAQqkC,aAAaz+B,KAAI,SAACD,GAAD,OAAOA,EAAI6qB,EAAYpvB,OAAOuE,QAAK/E,KAG/ES,EAAIgjC,aAAe,GAEhBhjC,GAEXC,YA1DiC,SA0DrBlC,GACR,IAAMY,EAAU,kBAAKokC,GAQrB,GAPApkC,EAAQqkC,aAAe,QACAzjC,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU5G,EAAO4G,QAGzBhG,EAAQgG,QAAU,QAEMpF,IAAxBxB,EAAOilC,cAAsD,OAAxBjlC,EAAOilC,aAAuB,wBACnDjlC,EAAOilC,cAD4C,IACnE,2BAAqC,KAA1B1+B,EAA0B,QACjC3F,EAAQqkC,aAAaznC,KAAK4zB,EAAYlvB,YAAYqE,KAFa,+BAKvE,OAAO3F,IAGTskC,EAAkB,CAAEx8B,MAAO,EAAGy8B,QAAQ,GAC/B/T,EAAc,CACvBzwB,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANsB,IAAlBgB,EAAQ8H,OACR7H,EAAOE,OAAO,GAAGC,MAAMJ,EAAQ8H,QAEZ,IAAnB9H,EAAQukC,QACRtkC,EAAOE,OAAO,IAAI4H,KAAK/H,EAAQukC,QAE5BtkC,GAEXK,OAVuB,SAUhBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKskC,GACrB,MAAO9jC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8H,MAAQ9G,EAAaR,EAAOJ,SACpC,MACJ,KAAK,EACDJ,EAAQukC,OAAS/jC,EAAOuH,OACxB,MACJ,QACIvH,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BuB,SA8Bd9B,GACL,IAAMY,EAAU,kBAAKskC,GAarB,YAZqB1jC,IAAjBxB,EAAO0I,OAAwC,OAAjB1I,EAAO0I,MACrC9H,EAAQ8H,MAAQ3G,OAAO/B,EAAO0I,OAG9B9H,EAAQ8H,MAAQ,OAEElH,IAAlBxB,EAAOmlC,QAA0C,OAAlBnlC,EAAOmlC,OACtCvkC,EAAQukC,OAASv8B,QAAQ5I,EAAOmlC,QAGhCvkC,EAAQukC,QAAS,EAEdvkC,GAEXoB,OA9CuB,SA8ChBpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQ8H,QAAwBzG,EAAIyG,MAAQ9H,EAAQ8H,YACjClH,IAAnBZ,EAAQukC,SAAyBljC,EAAIkjC,OAASvkC,EAAQukC,QAC/CljC,GAEXC,YApDuB,SAoDXlC,GACR,IAAMY,EAAU,kBAAKskC,GAarB,YAZqB1jC,IAAjBxB,EAAO0I,OAAwC,OAAjB1I,EAAO0I,MACrC9H,EAAQ8H,MAAQ1I,EAAO0I,MAGvB9H,EAAQ8H,MAAQ,OAEElH,IAAlBxB,EAAOmlC,QAA0C,OAAlBnlC,EAAOmlC,OACtCvkC,EAAQukC,OAASnlC,EAAOmlC,OAGxBvkC,EAAQukC,QAAS,EAEdvkC,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,uRClVOiL,E,gWAeJ,SAASE,EAAchO,GAC1B,OAAQA,GACJ,KAAK,EACL,IAAK,kCACD,OAAO8N,EAAMG,gCACjB,KAAK,EACL,IAAK,aACD,OAAOH,EAAMI,WACjB,KAAK,EACL,IAAK,gBACD,OAAOJ,EAAMK,cACjB,KAAK,EACL,IAAK,aACD,OAAOL,EAAMM,WACjB,KAAM,EACN,IAAK,eACL,QACI,OAAON,EAAMQ,cAGlB,SAASC,EAAYvO,GACxB,OAAQA,GACJ,KAAK8N,EAAMG,gCACP,MAAO,kCACX,KAAKH,EAAMI,WACP,MAAO,aACX,KAAKJ,EAAMK,cACP,MAAO,gBACX,KAAKL,EAAMM,WACP,MAAO,aACX,QACI,MAAO,YA7CnB,SAAWN,GAEPA,EAAMA,EAAM,mCAAqC,GAAK,kCAEtDA,EAAMA,EAAM,cAAgB,GAAK,aAKjCA,EAAMA,EAAM,iBAAmB,GAAK,gBAEpCA,EAAMA,EAAM,cAAgB,GAAK,aACjCA,EAAMA,EAAM,iBAAmB,GAAK,gBAZxC,CAaGA,IAAUA,EAAQ,KAmCrB,IAAMs3B,EAAoB,CAAE99B,SAAU,GAAIwH,MAAO,EAAGu2B,YAAa,GACpDlF,EAAgB,CACzBx/B,OADyB,SAClBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACH,KAArBgB,EAAQ0G,UACRzG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0G,UAFC,uBAItB1G,EAAQ0kC,UAJc,IAItC,2BAAkC,KAAvBp/B,EAAuB,QAC9Bq6B,EAAQ5/B,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALV,8BAgBtC,OATsB,IAAlBzF,EAAQkO,OACRjO,EAAOE,OAAO,IAAIE,MAAML,EAAQkO,YAEPtN,IAAzBZ,EAAQsO,cACRC,EAAaxO,OAAOC,EAAQsO,aAAcrO,EAAOE,OAAO,IAAIqF,QAAQC,SAE5C,IAAxBzF,EAAQykC,aACRxkC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQykC,aAE9BxkC,GAEXK,OAnByB,SAmBlBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKwkC,GACrBxkC,EAAQ0kC,SAAW,GACnB,MAAOlkC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0G,SAAWlG,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQ0kC,SAAS9nC,KAAK+iC,EAAQr/B,OAAOE,EAAQA,EAAOL,WACpD,MACJ,KAAK,EACDH,EAAQkO,MAAQ1N,EAAOH,QACvB,MACJ,KAAK,EACDL,EAAQsO,aAAeC,EAAajO,OAAOE,EAAQA,EAAOL,UAC1D,MACJ,KAAK,EACDH,EAAQykC,YAAczjC,EAAaR,EAAO6H,UAC1C,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAjDyB,SAiDhB9B,GACL,IAAMY,EAAU,kBAAKwkC,GAQrB,GAPAxkC,EAAQ0kC,SAAW,QACK9jC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWpE,OAAOlD,EAAOsH,UAGjC1G,EAAQ0G,SAAW,QAEC9F,IAApBxB,EAAOslC,UAA8C,OAApBtlC,EAAOslC,SAAmB,wBAC3CtlC,EAAOslC,UADoC,IAC3D,2BAAiC,KAAtB/+B,EAAsB,QAC7B3F,EAAQ0kC,SAAS9nC,KAAK+iC,EAAQz+B,SAASyE,KAFgB,+BAuB/D,YAlBqB/E,IAAjBxB,EAAO8O,OAAwC,OAAjB9O,EAAO8O,MACrClO,EAAQkO,MAAQd,EAAchO,EAAO8O,OAGrClO,EAAQkO,MAAQ,OAEQtN,IAAxBxB,EAAOkP,cAAsD,OAAxBlP,EAAOkP,aAC5CtO,EAAQsO,aAAeC,EAAarN,SAAS9B,EAAOkP,cAGpDtO,EAAQsO,kBAAe1N,OAEAA,IAAvBxB,EAAOqlC,aAAoD,OAAvBrlC,EAAOqlC,YAC3CzkC,EAAQykC,YAActjC,OAAO/B,EAAOqlC,aAGpCzkC,EAAQykC,YAAc,EAEnBzkC,GAEXoB,OAnFyB,SAmFlBpB,GACH,IAAMqB,EAAM,GAcZ,YAbqBT,IAArBZ,EAAQ0G,WAA2BrF,EAAIqF,SAAW1G,EAAQ0G,UACtD1G,EAAQ0kC,SACRrjC,EAAIqjC,SAAW1kC,EAAQ0kC,SAAS9+B,KAAI,SAACD,GAAD,OAAOA,EAAIg6B,EAAQv+B,OAAOuE,QAAK/E,KAGnES,EAAIqjC,SAAW,QAED9jC,IAAlBZ,EAAQkO,QAAwB7M,EAAI6M,MAAQP,EAAY3N,EAAQkO,aACvCtN,IAAzBZ,EAAQsO,eACHjN,EAAIiN,aAAetO,EAAQsO,aACtBC,EAAanN,OAAOpB,EAAQsO,mBAC5B1N,QACcA,IAAxBZ,EAAQykC,cAA8BpjC,EAAIojC,YAAczkC,EAAQykC,aACzDpjC,GAEXC,YApGyB,SAoGblC,GACR,IAAMY,EAAU,kBAAKwkC,GAQrB,GAPAxkC,EAAQ0kC,SAAW,QACK9jC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWtH,EAAOsH,SAG1B1G,EAAQ0G,SAAW,QAEC9F,IAApBxB,EAAOslC,UAA8C,OAApBtlC,EAAOslC,SAAmB,wBAC3CtlC,EAAOslC,UADoC,IAC3D,2BAAiC,KAAtB/+B,EAAsB,QAC7B3F,EAAQ0kC,SAAS9nC,KAAK+iC,EAAQr+B,YAAYqE,KAFa,+BAuB/D,YAlBqB/E,IAAjBxB,EAAO8O,OAAwC,OAAjB9O,EAAO8O,MACrClO,EAAQkO,MAAQ9O,EAAO8O,MAGvBlO,EAAQkO,MAAQ,OAEQtN,IAAxBxB,EAAOkP,cAAsD,OAAxBlP,EAAOkP,aAC5CtO,EAAQsO,aAAeC,EAAajN,YAAYlC,EAAOkP,cAGvDtO,EAAQsO,kBAAe1N,OAEAA,IAAvBxB,EAAOqlC,aAAoD,OAAvBrlC,EAAOqlC,YAC3CzkC,EAAQykC,YAAcrlC,EAAOqlC,YAG7BzkC,EAAQykC,YAAc,EAEnBzkC,IAGT2kC,EAA2B,CAC7B3pB,GAAI,GACJtU,SAAU,GACVwH,MAAO,EACPu2B,YAAa,GAEJjF,EAAuB,CAChCz/B,OADgC,SACzBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACT,KAAfgB,EAAQgb,IACR/a,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgb,IAEZ,KAArBhb,EAAQ0G,UACRzG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0G,UALC,uBAOtB1G,EAAQ0kC,UAPc,IAOtC,2BAAkC,KAAvBp/B,EAAuB,QAC9Bq6B,EAAQ5/B,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UARV,8BAmBtC,OATsB,IAAlBzF,EAAQkO,OACRjO,EAAOE,OAAO,IAAIE,MAAML,EAAQkO,YAEPtN,IAAzBZ,EAAQsO,cACRC,EAAaxO,OAAOC,EAAQsO,aAAcrO,EAAOE,OAAO,IAAIqF,QAAQC,SAE5C,IAAxBzF,EAAQykC,aACRxkC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQykC,aAE9BxkC,GAEXK,OAtBgC,SAsBzBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK2kC,GACrB3kC,EAAQ0kC,SAAW,GACnB,MAAOlkC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgb,GAAKxa,EAAO6B,SACpB,MACJ,KAAK,EACDrC,EAAQ0G,SAAWlG,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQ0kC,SAAS9nC,KAAK+iC,EAAQr/B,OAAOE,EAAQA,EAAOL,WACpD,MACJ,KAAK,EACDH,EAAQkO,MAAQ1N,EAAOH,QACvB,MACJ,KAAK,EACDL,EAAQsO,aAAeC,EAAajO,OAAOE,EAAQA,EAAOL,UAC1D,MACJ,KAAK,EACDH,EAAQykC,YAAczjC,EAAaR,EAAO6H,UAC1C,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAvDgC,SAuDvB9B,GACL,IAAMY,EAAU,kBAAK2kC,GAcrB,GAbA3kC,EAAQ0kC,SAAW,QACD9jC,IAAdxB,EAAO4b,IAAkC,OAAd5b,EAAO4b,GAClChb,EAAQgb,GAAK1Y,OAAOlD,EAAO4b,IAG3Bhb,EAAQgb,GAAK,QAEOpa,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWpE,OAAOlD,EAAOsH,UAGjC1G,EAAQ0G,SAAW,QAEC9F,IAApBxB,EAAOslC,UAA8C,OAApBtlC,EAAOslC,SAAmB,wBAC3CtlC,EAAOslC,UADoC,IAC3D,2BAAiC,KAAtB/+B,EAAsB,QAC7B3F,EAAQ0kC,SAAS9nC,KAAK+iC,EAAQz+B,SAASyE,KAFgB,+BAuB/D,YAlBqB/E,IAAjBxB,EAAO8O,OAAwC,OAAjB9O,EAAO8O,MACrClO,EAAQkO,MAAQd,EAAchO,EAAO8O,OAGrClO,EAAQkO,MAAQ,OAEQtN,IAAxBxB,EAAOkP,cAAsD,OAAxBlP,EAAOkP,aAC5CtO,EAAQsO,aAAeC,EAAarN,SAAS9B,EAAOkP,cAGpDtO,EAAQsO,kBAAe1N,OAEAA,IAAvBxB,EAAOqlC,aAAoD,OAAvBrlC,EAAOqlC,YAC3CzkC,EAAQykC,YAActjC,OAAO/B,EAAOqlC,aAGpCzkC,EAAQykC,YAAc,EAEnBzkC,GAEXoB,OA/FgC,SA+FzBpB,GACH,IAAMqB,EAAM,GAeZ,YAdeT,IAAfZ,EAAQgb,KAAqB3Z,EAAI2Z,GAAKhb,EAAQgb,SACzBpa,IAArBZ,EAAQ0G,WAA2BrF,EAAIqF,SAAW1G,EAAQ0G,UACtD1G,EAAQ0kC,SACRrjC,EAAIqjC,SAAW1kC,EAAQ0kC,SAAS9+B,KAAI,SAACD,GAAD,OAAOA,EAAIg6B,EAAQv+B,OAAOuE,QAAK/E,KAGnES,EAAIqjC,SAAW,QAED9jC,IAAlBZ,EAAQkO,QAAwB7M,EAAI6M,MAAQP,EAAY3N,EAAQkO,aACvCtN,IAAzBZ,EAAQsO,eACHjN,EAAIiN,aAAetO,EAAQsO,aACtBC,EAAanN,OAAOpB,EAAQsO,mBAC5B1N,QACcA,IAAxBZ,EAAQykC,cAA8BpjC,EAAIojC,YAAczkC,EAAQykC,aACzDpjC,GAEXC,YAjHgC,SAiHpBlC,GACR,IAAMY,EAAU,kBAAK2kC,GAcrB,GAbA3kC,EAAQ0kC,SAAW,QACD9jC,IAAdxB,EAAO4b,IAAkC,OAAd5b,EAAO4b,GAClChb,EAAQgb,GAAK5b,EAAO4b,GAGpBhb,EAAQgb,GAAK,QAEOpa,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWtH,EAAOsH,SAG1B1G,EAAQ0G,SAAW,QAEC9F,IAApBxB,EAAOslC,UAA8C,OAApBtlC,EAAOslC,SAAmB,wBAC3CtlC,EAAOslC,UADoC,IAC3D,2BAAiC,KAAtB/+B,EAAsB,QAC7B3F,EAAQ0kC,SAAS9nC,KAAK+iC,EAAQr+B,YAAYqE,KAFa,+BAuB/D,YAlBqB/E,IAAjBxB,EAAO8O,OAAwC,OAAjB9O,EAAO8O,MACrClO,EAAQkO,MAAQ9O,EAAO8O,MAGvBlO,EAAQkO,MAAQ,OAEQtN,IAAxBxB,EAAOkP,cAAsD,OAAxBlP,EAAOkP,aAC5CtO,EAAQsO,aAAeC,EAAajN,YAAYlC,EAAOkP,cAGvDtO,EAAQsO,kBAAe1N,OAEAA,IAAvBxB,EAAOqlC,aAAoD,OAAvBrlC,EAAOqlC,YAC3CzkC,EAAQykC,YAAcrlC,EAAOqlC,YAG7BzkC,EAAQykC,YAAc,EAEnBzkC,IAGT4O,EAAmB,CAAElI,SAAU,GAAI63B,aAAc,IAC1ChwB,EAAe,CACxBxO,OADwB,SACjBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATyB,KAArBgB,EAAQ0G,UACRzG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0G,UAER,KAAzB1G,EAAQu+B,cACRt+B,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQu+B,mBAEd39B,IAAnBZ,EAAQ4kC,QACRC,OAAa9kC,OAAOC,EAAQ4kC,OAAQ3kC,EAAOE,OAAO,IAAIqF,QAAQC,SAE3DxF,GAEXK,OAbwB,SAajBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4O,GACrB,MAAOpO,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0G,SAAWlG,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQu+B,aAAe/9B,EAAO6B,SAC9B,MACJ,KAAK,EACDrC,EAAQ4kC,OAASC,OAAavkC,OAAOE,EAAQA,EAAOL,UACpD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApCwB,SAoCf9B,GACL,IAAMY,EAAU,kBAAK4O,GAmBrB,YAlBwBhO,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWpE,OAAOlD,EAAOsH,UAGjC1G,EAAQ0G,SAAW,QAEK9F,IAAxBxB,EAAOm/B,cAAsD,OAAxBn/B,EAAOm/B,aAC5Cv+B,EAAQu+B,aAAej8B,OAAOlD,EAAOm/B,cAGrCv+B,EAAQu+B,aAAe,QAEL39B,IAAlBxB,EAAOwlC,QAA0C,OAAlBxlC,EAAOwlC,OACtC5kC,EAAQ4kC,OAASC,OAAa3jC,SAAS9B,EAAOwlC,QAG9C5kC,EAAQ4kC,YAAShkC,EAEdZ,GAEXoB,OA1DwB,SA0DjBpB,GACH,IAAMqB,EAAM,GAQZ,YAPqBT,IAArBZ,EAAQ0G,WAA2BrF,EAAIqF,SAAW1G,EAAQ0G,eACjC9F,IAAzBZ,EAAQu+B,eACHl9B,EAAIk9B,aAAev+B,EAAQu+B,mBACb39B,IAAnBZ,EAAQ4kC,SACHvjC,EAAIujC,OAAS5kC,EAAQ4kC,OAChBC,OAAazjC,OAAOpB,EAAQ4kC,aAC5BhkC,GACHS,GAEXC,YArEwB,SAqEZlC,GACR,IAAMY,EAAU,kBAAK4O,GAmBrB,YAlBwBhO,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWtH,EAAOsH,SAG1B1G,EAAQ0G,SAAW,QAEK9F,IAAxBxB,EAAOm/B,cAAsD,OAAxBn/B,EAAOm/B,aAC5Cv+B,EAAQu+B,aAAen/B,EAAOm/B,aAG9Bv+B,EAAQu+B,aAAe,QAEL39B,IAAlBxB,EAAOwlC,QAA0C,OAAlBxlC,EAAOwlC,OACtC5kC,EAAQ4kC,OAASC,OAAavjC,YAAYlC,EAAOwlC,QAGjD5kC,EAAQ4kC,YAAShkC,EAEdZ,IAGT8kC,EAAkB,CAAEC,MAAO,IACpBtF,EAAc,CACvB1/B,OADuB,SAChBC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQ+kC,OADc,IACtC,2BAA+B,KAApBz/B,EAAoB,QAC3BrF,EAAOE,OAAO,IAAIkC,OAAOiD,IAFS,8BAItC,OAAOrF,GAEXK,OAPuB,SAOhBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK8kC,GACrB9kC,EAAQ+kC,MAAQ,GAChB,MAAOvkC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+kC,MAAMnoC,KAAK4D,EAAO6B,UAC1B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAzBuB,SAyBd9B,GACL,IAAMY,EAAU,kBAAK8kC,GAErB,GADA9kC,EAAQ+kC,MAAQ,QACKnkC,IAAjBxB,EAAO2lC,OAAwC,OAAjB3lC,EAAO2lC,MAAgB,wBACrC3lC,EAAO2lC,OAD8B,IACrD,2BAA8B,KAAnBp/B,EAAmB,QAC1B3F,EAAQ+kC,MAAMnoC,KAAK0F,OAAOqD,KAFuB,+BAKzD,OAAO3F,GAEXoB,OAnCuB,SAmChBpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQ+kC,MACR1jC,EAAI0jC,MAAQ/kC,EAAQ+kC,MAAMn/B,KAAI,SAACD,GAAD,OAAOA,KAGrCtE,EAAI0jC,MAAQ,GAET1jC,GAEXC,YA7CuB,SA6CXlC,GACR,IAAMY,EAAU,kBAAK8kC,GAErB,GADA9kC,EAAQ+kC,MAAQ,QACKnkC,IAAjBxB,EAAO2lC,OAAwC,OAAjB3lC,EAAO2lC,MAAgB,wBACrC3lC,EAAO2lC,OAD8B,IACrD,2BAA8B,KAAnBp/B,EAAmB,QAC1B3F,EAAQ+kC,MAAMnoC,KAAK+I,IAF8B,+BAKzD,OAAO3F,IAGTglC,EAAsB,CAAEt+B,SAAU,GAAIq+B,MAAO,IACtCrF,EAAkB,CAC3B3/B,OAD2B,SACpBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACH,KAArBgB,EAAQ0G,UACRzG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0G,UAFC,uBAItB1G,EAAQ+kC,OAJc,IAItC,2BAA+B,KAApBz/B,EAAoB,QAC3BrF,EAAOE,OAAO,IAAIkC,OAAOiD,IALS,8BAOtC,OAAOrF,GAEXK,OAV2B,SAUpBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKglC,GACrBhlC,EAAQ+kC,MAAQ,GAChB,MAAOvkC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0G,SAAWlG,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQ+kC,MAAMnoC,KAAK4D,EAAO6B,UAC1B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/B2B,SA+BlB9B,GACL,IAAMY,EAAU,kBAAKglC,GAQrB,GAPAhlC,EAAQ+kC,MAAQ,QACQnkC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWpE,OAAOlD,EAAOsH,UAGjC1G,EAAQ0G,SAAW,QAEF9F,IAAjBxB,EAAO2lC,OAAwC,OAAjB3lC,EAAO2lC,MAAgB,wBACrC3lC,EAAO2lC,OAD8B,IACrD,2BAA8B,KAAnBp/B,EAAmB,QAC1B3F,EAAQ+kC,MAAMnoC,KAAK0F,OAAOqD,KAFuB,+BAKzD,OAAO3F,GAEXoB,OA/C2B,SA+CpBpB,GACH,IAAMqB,EAAM,GAQZ,YAPqBT,IAArBZ,EAAQ0G,WAA2BrF,EAAIqF,SAAW1G,EAAQ0G,UACtD1G,EAAQ+kC,MACR1jC,EAAI0jC,MAAQ/kC,EAAQ+kC,MAAMn/B,KAAI,SAACD,GAAD,OAAOA,KAGrCtE,EAAI0jC,MAAQ,GAET1jC,GAEXC,YA1D2B,SA0DflC,GACR,IAAMY,EAAU,kBAAKglC,GAQrB,GAPAhlC,EAAQ+kC,MAAQ,QACQnkC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWtH,EAAOsH,SAG1B1G,EAAQ0G,SAAW,QAEF9F,IAAjBxB,EAAO2lC,OAAwC,OAAjB3lC,EAAO2lC,MAAgB,wBACrC3lC,EAAO2lC,OAD8B,IACrD,2BAA8B,KAAnBp/B,EAAmB,QAC1B3F,EAAQ+kC,MAAMnoC,KAAK+I,IAF8B,+BAKzD,OAAO3F,IAGTilC,EAAc,CAAEC,WAAY,GAAIC,SAAU,IACnCxF,EAAU,CACnB5/B,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACD,KAAvBgB,EAAQklC,YACRjlC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQklC,YAFC,uBAItBllC,EAAQmlC,UAJc,IAItC,2BAAkC,KAAvB7/B,EAAuB,QAC9BrF,EAAOE,OAAO,IAAIkC,OAAOiD,IALS,8BAOtC,OAAOrF,GAEXK,OAVmB,SAUZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKilC,GACrBjlC,EAAQmlC,SAAW,GACnB,MAAO3kC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQklC,WAAa1kC,EAAO6B,SAC5B,MACJ,KAAK,EACDrC,EAAQmlC,SAASvoC,KAAK4D,EAAO6B,UAC7B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/BmB,SA+BV9B,GACL,IAAMY,EAAU,kBAAKilC,GAQrB,GAPAjlC,EAAQmlC,SAAW,QACOvkC,IAAtBxB,EAAO8lC,YAAkD,OAAtB9lC,EAAO8lC,WAC1CllC,EAAQklC,WAAa5iC,OAAOlD,EAAO8lC,YAGnCllC,EAAQklC,WAAa,QAEDtkC,IAApBxB,EAAO+lC,UAA8C,OAApB/lC,EAAO+lC,SAAmB,wBAC3C/lC,EAAO+lC,UADoC,IAC3D,2BAAiC,KAAtBx/B,EAAsB,QAC7B3F,EAAQmlC,SAASvoC,KAAK0F,OAAOqD,KAF0B,+BAK/D,OAAO3F,GAEXoB,OA/CmB,SA+CZpB,GACH,IAAMqB,EAAM,GAQZ,YAPuBT,IAAvBZ,EAAQklC,aAA6B7jC,EAAI6jC,WAAallC,EAAQklC,YAC1DllC,EAAQmlC,SACR9jC,EAAI8jC,SAAWnlC,EAAQmlC,SAASv/B,KAAI,SAACD,GAAD,OAAOA,KAG3CtE,EAAI8jC,SAAW,GAEZ9jC,GAEXC,YA1DmB,SA0DPlC,GACR,IAAMY,EAAU,kBAAKilC,GAQrB,GAPAjlC,EAAQmlC,SAAW,QACOvkC,IAAtBxB,EAAO8lC,YAAkD,OAAtB9lC,EAAO8lC,WAC1CllC,EAAQklC,WAAa9lC,EAAO8lC,WAG5BllC,EAAQklC,WAAa,QAEDtkC,IAApBxB,EAAO+lC,UAA8C,OAApB/lC,EAAO+lC,SAAmB,wBAC3C/lC,EAAO+lC,UADoC,IAC3D,2BAAiC,KAAtBx/B,EAAsB,QAC7B3F,EAAQmlC,SAASvoC,KAAK+I,IAFiC,+BAK/D,OAAO3F,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,ufC/pBE6hC,EAAY,CAAEv6B,MAAO,EAAGzB,MAAO,GACxBi8B,EAAQ,CACjBhkC,OADiB,SACVC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACN,IAAlBgB,EAAQuJ,OACRtJ,EAAOE,OAAO,GAAGC,MAAMJ,EAAQuJ,OAEb,IAAlBvJ,EAAQ8H,OACR7H,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ8H,OAEJ,IAA5B9H,EAAQgkC,SAAS1nC,QACjB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQgkC,UARE,uBAUtBhkC,EAAQikC,OAVc,IAUtC,2BAA+B,KAApB3+B,EAAoB,QAC3BrF,EAAOE,OAAO,IAAI6C,MAAMsC,IAXU,8BAatC,OAAOrF,GAEXK,OAhBiB,SAgBVC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK8jC,GACrB9jC,EAAQikC,MAAQ,GAChB,MAAOzjC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQuJ,MAAQvI,EAAaR,EAAOJ,SACpC,MACJ,KAAK,EACDJ,EAAQ8H,MAAQ9G,EAAaR,EAAOJ,SACpC,MACJ,KAAK,EACDJ,EAAQgkC,SAAWxjC,EAAOwC,QAC1B,MACJ,KAAK,EACDhD,EAAQikC,MAAMrnC,KAAK4D,EAAOwC,SAC1B,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA3CiB,SA2CR9B,GACL,IAAMY,EAAU,kBAAK8jC,GAiBrB,GAhBA9jC,EAAQikC,MAAQ,QACKrjC,IAAjBxB,EAAOmK,OAAwC,OAAjBnK,EAAOmK,MACrCvJ,EAAQuJ,MAAQpI,OAAO/B,EAAOmK,OAG9BvJ,EAAQuJ,MAAQ,OAEC3I,IAAjBxB,EAAO0I,OAAwC,OAAjB1I,EAAO0I,MACrC9H,EAAQ8H,MAAQ3G,OAAO/B,EAAO0I,OAG9B9H,EAAQ8H,MAAQ,OAEIlH,IAApBxB,EAAO4kC,UAA8C,OAApB5kC,EAAO4kC,WACxChkC,EAAQgkC,SAAW/gC,EAAgB7D,EAAO4kC,gBAEzBpjC,IAAjBxB,EAAO6kC,OAAwC,OAAjB7kC,EAAO6kC,MAAgB,wBACrC7kC,EAAO6kC,OAD8B,IACrD,2BAA8B,KAAnBt+B,EAAmB,QAC1B3F,EAAQikC,MAAMrnC,KAAKqG,EAAgB0C,KAFc,+BAKzD,OAAO3F,GAEXoB,OApEiB,SAoEVpB,GACH,IAAMqB,EAAM,GAWZ,YAVkBT,IAAlBZ,EAAQuJ,QAAwBlI,EAAIkI,MAAQvJ,EAAQuJ,YAClC3I,IAAlBZ,EAAQ8H,QAAwBzG,EAAIyG,MAAQ9H,EAAQ8H,YAC/BlH,IAArBZ,EAAQgkC,WACH3iC,EAAI2iC,SAAW9gC,OAAqCtC,IAArBZ,EAAQgkC,SAAyBhkC,EAAQgkC,SAAW,IAAIvjC,aACxFT,EAAQikC,MACR5iC,EAAI4iC,MAAQjkC,EAAQikC,MAAMr+B,KAAI,SAACD,GAAD,OAAOzC,OAAsBtC,IAAN+E,EAAkBA,EAAI,IAAIlF,eAG/EY,EAAI4iC,MAAQ,GAET5iC,GAEXC,YAlFiB,SAkFLlC,GACR,IAAMY,EAAU,kBAAK8jC,GAoBrB,GAnBA9jC,EAAQikC,MAAQ,QACKrjC,IAAjBxB,EAAOmK,OAAwC,OAAjBnK,EAAOmK,MACrCvJ,EAAQuJ,MAAQnK,EAAOmK,MAGvBvJ,EAAQuJ,MAAQ,OAEC3I,IAAjBxB,EAAO0I,OAAwC,OAAjB1I,EAAO0I,MACrC9H,EAAQ8H,MAAQ1I,EAAO0I,MAGvB9H,EAAQ8H,MAAQ,OAEIlH,IAApBxB,EAAO4kC,UAA8C,OAApB5kC,EAAO4kC,SACxChkC,EAAQgkC,SAAW5kC,EAAO4kC,SAG1BhkC,EAAQgkC,SAAW,IAAIvjC,gBAENG,IAAjBxB,EAAO6kC,OAAwC,OAAjB7kC,EAAO6kC,MAAgB,wBACrC7kC,EAAO6kC,OAD8B,IACrD,2BAA8B,KAAnBt+B,EAAmB,QAC1B3F,EAAQikC,MAAMrnC,KAAK+I,IAF8B,+BAKzD,OAAO3F,IAiKTolC,EAAc,CAAE39B,KAAM,IACf49B,EAAU,CACnBtlC,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATqB,KAAjBgB,EAAQyH,MACRxH,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyH,MAEV,IAAvBzH,EAAQf,IAAI3C,QACZ2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQf,KAER,IAAxBe,EAAQlE,KAAKQ,QACb2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQlE,MAE7BmE,GAEXK,OAbmB,SAaZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKolC,GACrB,MAAO5kC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyH,KAAOjH,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQf,IAAMuB,EAAOwC,QACrB,MACJ,KAAK,EACDhD,EAAQlE,KAAO0E,EAAOwC,QACtB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApCmB,SAoCV9B,GACL,IAAMY,EAAU,kBAAKolC,GAarB,YAZoBxkC,IAAhBxB,EAAOqI,MAAsC,OAAhBrI,EAAOqI,KACpCzH,EAAQyH,KAAOnF,OAAOlD,EAAOqI,MAG7BzH,EAAQyH,KAAO,QAEA7G,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,MACnCe,EAAQf,IAAMgE,EAAgB7D,EAAOH,WAErB2B,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,OACpCkE,EAAQlE,KAAOmH,EAAgB7D,EAAOtD,OAEnCkE,GAEXoB,OApDmB,SAoDZpB,GACH,IAAMqB,EAAM,GAMZ,YALiBT,IAAjBZ,EAAQyH,OAAuBpG,EAAIoG,KAAOzH,EAAQyH,WAClC7G,IAAhBZ,EAAQf,MACHoC,EAAIpC,IAAMiE,OAAgCtC,IAAhBZ,EAAQf,IAAoBe,EAAQf,IAAM,IAAIwB,kBAC5DG,IAAjBZ,EAAQlE,OACHuF,EAAIvF,KAAOoH,OAAiCtC,IAAjBZ,EAAQlE,KAAqBkE,EAAQlE,KAAO,IAAI2E,aACzEY,GAEXC,YA7DmB,SA6DPlC,GACR,IAAMY,EAAU,kBAAKolC,GAmBrB,YAlBoBxkC,IAAhBxB,EAAOqI,MAAsC,OAAhBrI,EAAOqI,KACpCzH,EAAQyH,KAAOrI,EAAOqI,KAGtBzH,EAAQyH,KAAO,QAEA7G,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,IACnCe,EAAQf,IAAMG,EAAOH,IAGrBe,EAAQf,IAAM,IAAIwB,gBAEFG,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCkE,EAAQlE,KAAOsD,EAAOtD,KAGtBkE,EAAQlE,KAAO,IAAI2E,WAEhBT,IAGTslC,EAAe,GACRC,EAAW,CACpBxlC,OADoB,SACbC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQwlC,KADc,IACtC,2BAA6B,KAAlBlgC,EAAkB,QACzB+/B,EAAQtlC,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFV,8BAItC,OAAOxF,GAEXK,OAPoB,SAObC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKslC,GACrBtlC,EAAQwlC,IAAM,GACd,MAAOhlC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQwlC,IAAI5oC,KAAKyoC,EAAQ/kC,OAAOE,EAAQA,EAAOL,WAC/C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAzBoB,SAyBX9B,GACL,IAAMY,EAAU,kBAAKslC,GAErB,GADAtlC,EAAQwlC,IAAM,QACK5kC,IAAfxB,EAAOomC,KAAoC,OAAfpmC,EAAOomC,IAAc,wBACjCpmC,EAAOomC,KAD0B,IACjD,2BAA4B,KAAjB7/B,EAAiB,QACxB3F,EAAQwlC,IAAI5oC,KAAKyoC,EAAQnkC,SAASyE,KAFW,+BAKrD,OAAO3F,GAEXoB,OAnCoB,SAmCbpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQwlC,IACRnkC,EAAImkC,IAAMxlC,EAAQwlC,IAAI5/B,KAAI,SAACD,GAAD,OAAQA,EAAI0/B,EAAQjkC,OAAOuE,QAAK/E,KAG1DS,EAAImkC,IAAM,GAEPnkC,GAEXC,YA7CoB,SA6CRlC,GACR,IAAMY,EAAU,kBAAKslC,GAErB,GADAtlC,EAAQwlC,IAAM,QACK5kC,IAAfxB,EAAOomC,KAAoC,OAAfpmC,EAAOomC,IAAc,wBACjCpmC,EAAOomC,KAD0B,IACjD,2BAA4B,KAAjB7/B,EAAiB,QACxB3F,EAAQwlC,IAAI5oC,KAAKyoC,EAAQ/jC,YAAYqE,KAFQ,+BAKrD,OAAO3F,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAEzB,SAASjE,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,iaC5XEwjC,EAAgB,CAAEC,MAAO,EAAGtC,IAAK,GAC1Bn5B,EAAY,CACrBlK,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANsB,IAAlBgB,EAAQ0lC,OACRzlC,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQ0lC,OAEhB,IAAhB1lC,EAAQojC,KACRnjC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQojC,KAE9BnjC,GAEXK,OAVqB,SAUdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKylC,GACrB,MAAOjlC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0lC,MAAQ1kC,EAAaR,EAAO6H,UACpC,MACJ,KAAK,EACDrI,EAAQojC,IAAMpiC,EAAaR,EAAO6H,UAClC,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BqB,SA8BZ9B,GACL,IAAMY,EAAU,kBAAKylC,GAarB,YAZqB7kC,IAAjBxB,EAAOsmC,OAAwC,OAAjBtmC,EAAOsmC,MACrC1lC,EAAQ0lC,MAAQvkC,OAAO/B,EAAOsmC,OAG9B1lC,EAAQ0lC,MAAQ,OAED9kC,IAAfxB,EAAOgkC,KAAoC,OAAfhkC,EAAOgkC,IACnCpjC,EAAQojC,IAAMjiC,OAAO/B,EAAOgkC,KAG5BpjC,EAAQojC,IAAM,EAEXpjC,GAEXoB,OA9CqB,SA8CdpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQ0lC,QAAwBrkC,EAAIqkC,MAAQ1lC,EAAQ0lC,YACpC9kC,IAAhBZ,EAAQojC,MAAsB/hC,EAAI+hC,IAAMpjC,EAAQojC,KACzC/hC,GAEXC,YApDqB,SAoDTlC,GACR,IAAMY,EAAU,kBAAKylC,GAarB,YAZqB7kC,IAAjBxB,EAAOsmC,OAAwC,OAAjBtmC,EAAOsmC,MACrC1lC,EAAQ0lC,MAAQtmC,EAAOsmC,MAGvB1lC,EAAQ0lC,MAAQ,OAED9kC,IAAfxB,EAAOgkC,KAAoC,OAAfhkC,EAAOgkC,IACnCpjC,EAAQojC,IAAMhkC,EAAOgkC,IAGrBpjC,EAAQojC,IAAM,EAEXpjC,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,0ECnKJ,W,i0BCKMgS,EAAa,CACf0xB,aAAc,GACdC,mBAAoB,GACpBC,oBAAqB,GACrBC,qBAAqB,GAEZxxB,EAAS,CAClBvU,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,MAZ6B,KAAzBgB,EAAQ2lC,cACR1lC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ2lC,cAEF,KAA/B3lC,EAAQ4lC,oBACR3lC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ4lC,oBAED,KAAhC5lC,EAAQ6lC,qBACR5lC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ6lC,sBAED,IAAhC7lC,EAAQ8lC,qBACR7lC,EAAOE,OAAO,IAAI4H,KAAK/H,EAAQ8lC,qBAE5B7lC,GAEXK,OAhBkB,SAgBXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiU,GACrB,MAAOzT,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ2lC,aAAenlC,EAAO6B,SAC9B,MACJ,KAAK,EACDrC,EAAQ4lC,mBAAqBplC,EAAO6B,SACpC,MACJ,KAAK,EACDrC,EAAQ6lC,oBAAsBrlC,EAAO6B,SACrC,MACJ,KAAK,EACDrC,EAAQ8lC,oBAAsBtlC,EAAOuH,OACrC,MACJ,QACIvH,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1CkB,SA0CT9B,GACL,IAAMY,EAAU,kBAAKiU,GA4BrB,YA3B4BrT,IAAxBxB,EAAOumC,cAAsD,OAAxBvmC,EAAOumC,aAC5C3lC,EAAQ2lC,aAAerjC,OAAOlD,EAAOumC,cAGrC3lC,EAAQ2lC,aAAe,QAEO/kC,IAA9BxB,EAAOwmC,oBACuB,OAA9BxmC,EAAOwmC,mBACP5lC,EAAQ4lC,mBAAqBtjC,OAAOlD,EAAOwmC,oBAG3C5lC,EAAQ4lC,mBAAqB,QAEEhlC,IAA/BxB,EAAOymC,qBACwB,OAA/BzmC,EAAOymC,oBACP7lC,EAAQ6lC,oBAAsBvjC,OAAOlD,EAAOymC,qBAG5C7lC,EAAQ6lC,oBAAsB,QAECjlC,IAA/BxB,EAAO0mC,qBACwB,OAA/B1mC,EAAO0mC,oBACP9lC,EAAQ8lC,oBAAsB99B,QAAQ5I,EAAO0mC,qBAG7C9lC,EAAQ8lC,qBAAsB,EAE3B9lC,GAEXoB,OAzEkB,SAyEXpB,GACH,IAAMqB,EAAM,GASZ,YARyBT,IAAzBZ,EAAQ2lC,eACHtkC,EAAIskC,aAAe3lC,EAAQ2lC,mBACD/kC,IAA/BZ,EAAQ4lC,qBACHvkC,EAAIukC,mBAAqB5lC,EAAQ4lC,yBACNhlC,IAAhCZ,EAAQ6lC,sBACHxkC,EAAIwkC,oBAAsB7lC,EAAQ6lC,0BACPjlC,IAAhCZ,EAAQ8lC,sBACHzkC,EAAIykC,oBAAsB9lC,EAAQ8lC,qBAChCzkC,GAEXC,YArFkB,SAqFNlC,GACR,IAAMY,EAAU,kBAAKiU,GA4BrB,YA3B4BrT,IAAxBxB,EAAOumC,cAAsD,OAAxBvmC,EAAOumC,aAC5C3lC,EAAQ2lC,aAAevmC,EAAOumC,aAG9B3lC,EAAQ2lC,aAAe,QAEO/kC,IAA9BxB,EAAOwmC,oBACuB,OAA9BxmC,EAAOwmC,mBACP5lC,EAAQ4lC,mBAAqBxmC,EAAOwmC,mBAGpC5lC,EAAQ4lC,mBAAqB,QAEEhlC,IAA/BxB,EAAOymC,qBACwB,OAA/BzmC,EAAOymC,oBACP7lC,EAAQ6lC,oBAAsBzmC,EAAOymC,oBAGrC7lC,EAAQ6lC,oBAAsB,QAECjlC,IAA/BxB,EAAO0mC,qBACwB,OAA/B1mC,EAAO0mC,oBACP9lC,EAAQ8lC,oBAAsB1mC,EAAO0mC,oBAGrC9lC,EAAQ8lC,qBAAsB,EAE3B9lC,IAGT+lC,EAAiC,CAAEC,eAAgB,GAC5Ctc,EAA6B,CACtC3pB,OADsC,SAC/BC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQimC,uBADc,IACtC,2BAA+C,KAApC3gC,EAAoC,QAC3CwhB,OAAQ/mB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFV,8BAOtC,OAH+B,IAA3BzF,EAAQgmC,gBACR/lC,EAAOE,OAAO,IAAIA,OAAOH,EAAQgmC,gBAE9B/lC,GAEXK,OAVsC,SAU/BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACT+lC,GAEP/lC,EAAQimC,sBAAwB,GAChC,MAAOzlC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQimC,sBAAsBrpC,KAAKkqB,OAAQxmB,OAAOE,EAAQA,EAAOL,WACjE,MACJ,KAAK,EACDH,EAAQgmC,eAAiBxlC,EAAOL,SAChC,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAjCsC,SAiC7B9B,GACL,IAAMY,EAAU,kBACT+lC,GAGP,GADA/lC,EAAQimC,sBAAwB,QACKrlC,IAAjCxB,EAAO6mC,uBAC0B,OAAjC7mC,EAAO6mC,sBAAgC,wBACvB7mC,EAAO6mC,uBADgB,IACvC,2BAA8C,KAAnCtgC,EAAmC,QAC1C3F,EAAQimC,sBAAsBrpC,KAAKkqB,OAAQ5lB,SAASyE,KAFjB,+BAW3C,YAN8B/E,IAA1BxB,EAAO4mC,gBAA0D,OAA1B5mC,EAAO4mC,eAC9ChmC,EAAQgmC,eAAiB7kC,OAAO/B,EAAO4mC,gBAGvChmC,EAAQgmC,eAAiB,EAEtBhmC,GAEXoB,OApDsC,SAoD/BpB,GACH,IAAMqB,EAAM,GASZ,OARIrB,EAAQimC,sBACR5kC,EAAI4kC,sBAAwBjmC,EAAQimC,sBAAsBrgC,KAAI,SAACD,GAAD,OAAOA,EAAImhB,OAAQ1lB,OAAOuE,QAAK/E,KAG7FS,EAAI4kC,sBAAwB,QAELrlC,IAA3BZ,EAAQgmC,iBACH3kC,EAAI2kC,eAAiBhmC,EAAQgmC,gBAC3B3kC,GAEXC,YAhEsC,SAgE1BlC,GACR,IAAMY,EAAU,kBACT+lC,GAGP,GADA/lC,EAAQimC,sBAAwB,QACKrlC,IAAjCxB,EAAO6mC,uBAC0B,OAAjC7mC,EAAO6mC,sBAAgC,wBACvB7mC,EAAO6mC,uBADgB,IACvC,2BAA8C,KAAnCtgC,EAAmC,QAC1C3F,EAAQimC,sBAAsBrpC,KAAKkqB,OAAQxlB,YAAYqE,KAFpB,+BAW3C,YAN8B/E,IAA1BxB,EAAO4mC,gBAA0D,OAA1B5mC,EAAO4mC,eAC9ChmC,EAAQgmC,eAAiB5mC,EAAO4mC,eAGhChmC,EAAQgmC,eAAiB,EAEtBhmC,IAGTkmC,EAA8B,CAAEC,OAAQ,GACjCxc,EAA0B,CACnC5pB,OADmC,SAC5BC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQomC,SADc,IACtC,2BAAiC,KAAtB9gC,EAAsB,QAC7BwhB,OAAQ/mB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFV,8BAOtC,OAHuB,IAAnBzF,EAAQmmC,QACRlmC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQmmC,QAE9BlmC,GAEXK,OAVmC,SAU5BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTkmC,GAEPlmC,EAAQomC,QAAU,GAClB,MAAO5lC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQomC,QAAQxpC,KAAKkqB,OAAQxmB,OAAOE,EAAQA,EAAOL,WACnD,MACJ,KAAK,EACDH,EAAQmmC,OAASnlC,EAAaR,EAAO6H,UACrC,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAjCmC,SAiC1B9B,GACL,IAAMY,EAAU,kBACTkmC,GAGP,GADAlmC,EAAQomC,QAAU,QACKxlC,IAAnBxB,EAAOgnC,SAA4C,OAAnBhnC,EAAOgnC,QAAkB,wBACzChnC,EAAOgnC,SADkC,IACzD,2BAAgC,KAArBzgC,EAAqB,QAC5B3F,EAAQomC,QAAQxpC,KAAKkqB,OAAQ5lB,SAASyE,KAFe,+BAW7D,YANsB/E,IAAlBxB,EAAO+mC,QAA0C,OAAlB/mC,EAAO+mC,OACtCnmC,EAAQmmC,OAAShlC,OAAO/B,EAAO+mC,QAG/BnmC,EAAQmmC,OAAS,EAEdnmC,GAEXoB,OAnDmC,SAmD5BpB,GACH,IAAMqB,EAAM,GAQZ,OAPIrB,EAAQomC,QACR/kC,EAAI+kC,QAAUpmC,EAAQomC,QAAQxgC,KAAI,SAACD,GAAD,OAAOA,EAAImhB,OAAQ1lB,OAAOuE,QAAK/E,KAGjES,EAAI+kC,QAAU,QAECxlC,IAAnBZ,EAAQmmC,SAAyB9kC,EAAI8kC,OAASnmC,EAAQmmC,QAC/C9kC,GAEXC,YA9DmC,SA8DvBlC,GACR,IAAMY,EAAU,kBACTkmC,GAGP,GADAlmC,EAAQomC,QAAU,QACKxlC,IAAnBxB,EAAOgnC,SAA4C,OAAnBhnC,EAAOgnC,QAAkB,wBACzChnC,EAAOgnC,SADkC,IACzD,2BAAgC,KAArBzgC,EAAqB,QAC5B3F,EAAQomC,QAAQxpC,KAAKkqB,OAAQxlB,YAAYqE,KAFY,+BAW7D,YANsB/E,IAAlBxB,EAAO+mC,QAA0C,OAAlB/mC,EAAO+mC,OACtCnmC,EAAQmmC,OAAS/mC,EAAO+mC,OAGxBnmC,EAAQmmC,OAAS,EAEdnmC,IAGTqmC,EAAqC,GAC9Bzc,EAAiC,CAC1C7pB,OAD0C,SACnCC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQ8R,YADc,IACtC,2BAAoC,KAAzBxM,EAAyB,QAChCwhB,OAAQ/mB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFV,8BAItC,OAAOxF,GAEXK,OAP0C,SAOnCC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTqmC,GAEPrmC,EAAQ8R,WAAa,GACrB,MAAOtR,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8R,WAAWlV,KAAKkqB,OAAQxmB,OAAOE,EAAQA,EAAOL,WACtD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA3B0C,SA2BjC9B,GACL,IAAMY,EAAU,kBACTqmC,GAGP,GADArmC,EAAQ8R,WAAa,QACKlR,IAAtBxB,EAAO0S,YAAkD,OAAtB1S,EAAO0S,WAAqB,wBAC/C1S,EAAO0S,YADwC,IAC/D,2BAAmC,KAAxBnM,EAAwB,QAC/B3F,EAAQ8R,WAAWlV,KAAKkqB,OAAQ5lB,SAASyE,KAFkB,+BAKnE,OAAO3F,GAEXoB,OAvC0C,SAuCnCpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQ8R,WACRzQ,EAAIyQ,WAAa9R,EAAQ8R,WAAWlM,KAAI,SAACD,GAAD,OAAOA,EAAImhB,OAAQ1lB,OAAOuE,QAAK/E,KAGvES,EAAIyQ,WAAa,GAEdzQ,GAEXC,YAjD0C,SAiD9BlC,GACR,IAAMY,EAAU,kBACTqmC,GAGP,GADArmC,EAAQ8R,WAAa,QACKlR,IAAtBxB,EAAO0S,YAAkD,OAAtB1S,EAAO0S,WAAqB,wBAC/C1S,EAAO0S,YADwC,IAC/D,2BAAmC,KAAxBnM,EAAwB,QAC/B3F,EAAQ8R,WAAWlV,KAAKkqB,OAAQxlB,YAAYqE,KAFe,+BAKnE,OAAO3F,IAGTsmC,EAAkC,GAC3Bpd,EAA8B,CACvCnpB,OADuC,SAChCC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQomC,SADc,IACtC,2BAAiC,KAAtB9gC,EAAsB,QAC7BwhB,OAAQ/mB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFV,8BAItC,OAAOxF,GAEXK,OAPuC,SAOhCC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTsmC,GAEPtmC,EAAQomC,QAAU,GAClB,MAAO5lC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQomC,QAAQxpC,KAAKkqB,OAAQxmB,OAAOE,EAAQA,EAAOL,WACnD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA3BuC,SA2B9B9B,GACL,IAAMY,EAAU,kBACTsmC,GAGP,GADAtmC,EAAQomC,QAAU,QACKxlC,IAAnBxB,EAAOgnC,SAA4C,OAAnBhnC,EAAOgnC,QAAkB,wBACzChnC,EAAOgnC,SADkC,IACzD,2BAAgC,KAArBzgC,EAAqB,QAC5B3F,EAAQomC,QAAQxpC,KAAKkqB,OAAQ5lB,SAASyE,KAFe,+BAK7D,OAAO3F,GAEXoB,OAvCuC,SAuChCpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQomC,QACR/kC,EAAI+kC,QAAUpmC,EAAQomC,QAAQxgC,KAAI,SAACD,GAAD,OAAOA,EAAImhB,OAAQ1lB,OAAOuE,QAAK/E,KAGjES,EAAI+kC,QAAU,GAEX/kC,GAEXC,YAjDuC,SAiD3BlC,GACR,IAAMY,EAAU,kBACTsmC,GAGP,GADAtmC,EAAQomC,QAAU,QACKxlC,IAAnBxB,EAAOgnC,SAA4C,OAAnBhnC,EAAOgnC,QAAkB,wBACzChnC,EAAOgnC,SADkC,IACzD,2BAAgC,KAArBzgC,EAAqB,QAC5B3F,EAAQomC,QAAQxpC,KAAKkqB,OAAQxlB,YAAYqE,KAFY,+BAK7D,OAAO3F,IAGTumC,EAA0B,CAAEC,gBAAiB,EAAGC,SAAU,IACnD5c,EAAsB,CAC/B9pB,OAD+B,SACxBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANgC,IAA5BgB,EAAQwmC,iBACRvmC,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQwmC,iBAEX,KAArBxmC,EAAQymC,UACRxmC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQymC,UAE9BxmC,GAEXK,OAV+B,SAUxBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKumC,GACrB,MAAO/lC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQwmC,gBAAkBxlC,EAAaR,EAAO6H,UAC9C,MACJ,KAAK,EACDrI,EAAQymC,SAAWjmC,EAAO6B,SAC1B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9B+B,SA8BtB9B,GACL,IAAMY,EAAU,kBAAKumC,GAcrB,YAb+B3lC,IAA3BxB,EAAOonC,iBACoB,OAA3BpnC,EAAOonC,gBACPxmC,EAAQwmC,gBAAkBrlC,OAAO/B,EAAOonC,iBAGxCxmC,EAAQwmC,gBAAkB,OAEN5lC,IAApBxB,EAAOqnC,UAA8C,OAApBrnC,EAAOqnC,SACxCzmC,EAAQymC,SAAWnkC,OAAOlD,EAAOqnC,UAGjCzmC,EAAQymC,SAAW,GAEhBzmC,GAEXoB,OA/C+B,SA+CxBpB,GACH,IAAMqB,EAAM,GAIZ,YAH4BT,IAA5BZ,EAAQwmC,kBACHnlC,EAAImlC,gBAAkBxmC,EAAQwmC,sBACd5lC,IAArBZ,EAAQymC,WAA2BplC,EAAIolC,SAAWzmC,EAAQymC,UACnDplC,GAEXC,YAtD+B,SAsDnBlC,GACR,IAAMY,EAAU,kBAAKumC,GAcrB,YAb+B3lC,IAA3BxB,EAAOonC,iBACoB,OAA3BpnC,EAAOonC,gBACPxmC,EAAQwmC,gBAAkBpnC,EAAOonC,gBAGjCxmC,EAAQwmC,gBAAkB,OAEN5lC,IAApBxB,EAAOqnC,UAA8C,OAApBrnC,EAAOqnC,SACxCzmC,EAAQymC,SAAWrnC,EAAOqnC,SAG1BzmC,EAAQymC,SAAW,GAEhBzmC,IAGT0mC,EAA2B,GACpB5c,EAAuB,CAChC/pB,OADgC,SACzBC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQ2mC,sBADc,IACtC,2BAA8C,KAAnCrhC,EAAmC,QAC1CukB,EAAoB9pB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFtB,8BAItC,OAAOxF,GAEXK,OAPgC,SAOzBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK0mC,GACrB1mC,EAAQ2mC,qBAAuB,GAC/B,MAAOnmC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ2mC,qBAAqB/pC,KAAKitB,EAAoBvpB,OAAOE,EAAQA,EAAOL,WAC5E,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAzBgC,SAyBvB9B,GACL,IAAMY,EAAU,kBAAK0mC,GAErB,GADA1mC,EAAQ2mC,qBAAuB,QACK/lC,IAAhCxB,EAAOunC,sBACyB,OAAhCvnC,EAAOunC,qBAA+B,wBACtBvnC,EAAOunC,sBADe,IACtC,2BAA6C,KAAlChhC,EAAkC,QACzC3F,EAAQ2mC,qBAAqB/pC,KAAKitB,EAAoB3oB,SAASyE,KAF7B,+BAK1C,OAAO3F,GAEXoB,OApCgC,SAoCzBpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQ2mC,qBACRtlC,EAAIslC,qBAAuB3mC,EAAQ2mC,qBAAqB/gC,KAAI,SAACD,GAAD,OAAOA,EAAIkkB,EAAoBzoB,OAAOuE,QAAK/E,KAGvGS,EAAIslC,qBAAuB,GAExBtlC,GAEXC,YA9CgC,SA8CpBlC,GACR,IAAMY,EAAU,kBAAK0mC,GAErB,GADA1mC,EAAQ2mC,qBAAuB,QACK/lC,IAAhCxB,EAAOunC,sBACyB,OAAhCvnC,EAAOunC,qBAA+B,wBACtBvnC,EAAOunC,sBADe,IACtC,2BAA6C,KAAlChhC,EAAkC,QACzC3F,EAAQ2mC,qBAAqB/pC,KAAKitB,EAAoBvoB,YAAYqE,KAFhC,+BAK1C,OAAO3F,IAGT4mC,EAAc,GACP7c,EAAU,CACnBhqB,OADmB,SACZC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQ6mC,eADc,IACtC,2BAAuC,KAA5BvhC,EAA4B,QACnCwhB,OAAQ/mB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFV,8BAItC,OAAOxF,GAEXK,OAPmB,SAOZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4mC,GACrB5mC,EAAQ6mC,cAAgB,GACxB,MAAOrmC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6mC,cAAcjqC,KAAKkqB,OAAQxmB,OAAOE,EAAQA,EAAOL,WACzD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAzBmB,SAyBV9B,GACL,IAAMY,EAAU,kBAAK4mC,GAErB,GADA5mC,EAAQ6mC,cAAgB,QACKjmC,IAAzBxB,EAAOynC,eAAwD,OAAzBznC,EAAOynC,cAAwB,wBACrDznC,EAAOynC,eAD8C,IACrE,2BAAsC,KAA3BlhC,EAA2B,QAClC3F,EAAQ6mC,cAAcjqC,KAAKkqB,OAAQ5lB,SAASyE,KAFqB,+BAKzE,OAAO3F,GAEXoB,OAnCmB,SAmCZpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQ6mC,cACRxlC,EAAIwlC,cAAgB7mC,EAAQ6mC,cAAcjhC,KAAI,SAACD,GAAD,OAAOA,EAAImhB,OAAQ1lB,OAAOuE,QAAK/E,KAG7ES,EAAIwlC,cAAgB,GAEjBxlC,GAEXC,YA7CmB,SA6CPlC,GACR,IAAMY,EAAU,kBAAK4mC,GAErB,GADA5mC,EAAQ6mC,cAAgB,QACKjmC,IAAzBxB,EAAOynC,eAAwD,OAAzBznC,EAAOynC,cAAwB,wBACrDznC,EAAOynC,eAD8C,IACrE,2BAAsC,KAA3BlhC,EAA2B,QAClC3F,EAAQ6mC,cAAcjqC,KAAKkqB,OAAQxlB,YAAYqE,KAFkB,+BAKzE,OAAO3F,IAGT8mC,EAAiC,CACnCC,MAAO,GACPxjC,YAAa,GACbyjC,UAAW,IAEFhd,EAA6B,CACtCjqB,OADsC,SAC/BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACN,KAAlBgB,EAAQ+mC,OACR9mC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+mC,OAET,KAAxB/mC,EAAQuD,aACRtD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQuD,aAEX,KAAtBvD,EAAQgnC,WACR/mC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgnC,WARC,uBAUtBhnC,EAAQ0M,QAVc,IAUtC,2BAAgC,KAArBpH,EAAqB,QAC5ByG,OAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAXP,8BAatC,OAAOxF,GAEXK,OAhBsC,SAgB/BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACT8mC,GAEP9mC,EAAQ0M,OAAS,GACjB,MAAOlM,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+mC,MAAQvmC,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQuD,YAAc/C,EAAO6B,SAC7B,MACJ,KAAK,EACDrC,EAAQgnC,UAAYxmC,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQ0M,OAAO9P,KAAKmP,OAAKzL,OAAOE,EAAQA,EAAOL,WAC/C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA7CsC,SA6C7B9B,GACL,IAAMY,EAAU,kBACT8mC,GAqBP,GAnBA9mC,EAAQ0M,OAAS,QACI9L,IAAjBxB,EAAO2nC,OAAwC,OAAjB3nC,EAAO2nC,MACrC/mC,EAAQ+mC,MAAQzkC,OAAOlD,EAAO2nC,OAG9B/mC,EAAQ+mC,MAAQ,QAEOnmC,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcjB,OAAOlD,EAAOmE,aAGpCvD,EAAQuD,YAAc,QAED3C,IAArBxB,EAAO4nC,WAAgD,OAArB5nC,EAAO4nC,UACzChnC,EAAQgnC,UAAY1kC,OAAOlD,EAAO4nC,WAGlChnC,EAAQgnC,UAAY,QAEFpmC,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,wBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,OAAK7K,SAASyE,KAFiB,+BAK3D,OAAO3F,GAEXoB,OA3EsC,SA2E/BpB,GACH,IAAMqB,EAAM,GAUZ,YATkBT,IAAlBZ,EAAQ+mC,QAAwB1lC,EAAI0lC,MAAQ/mC,EAAQ+mC,YAC5BnmC,IAAxBZ,EAAQuD,cAA8BlC,EAAIkC,YAAcvD,EAAQuD,kBAC1C3C,IAAtBZ,EAAQgnC,YAA4B3lC,EAAI2lC,UAAYhnC,EAAQgnC,WACxDhnC,EAAQ0M,OACRrL,EAAIqL,OAAS1M,EAAQ0M,OAAO9G,KAAI,SAACD,GAAD,OAAQA,EAAIoG,OAAK3K,OAAOuE,QAAK/E,KAG7DS,EAAIqL,OAAS,GAEVrL,GAEXC,YAxFsC,SAwF1BlC,GACR,IAAMY,EAAU,kBACT8mC,GAqBP,GAnBA9mC,EAAQ0M,OAAS,QACI9L,IAAjBxB,EAAO2nC,OAAwC,OAAjB3nC,EAAO2nC,MACrC/mC,EAAQ+mC,MAAQ3nC,EAAO2nC,MAGvB/mC,EAAQ+mC,MAAQ,QAEOnmC,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcnE,EAAOmE,YAG7BvD,EAAQuD,YAAc,QAED3C,IAArBxB,EAAO4nC,WAAgD,OAArB5nC,EAAO4nC,UACzChnC,EAAQgnC,UAAY5nC,EAAO4nC,UAG3BhnC,EAAQgnC,UAAY,QAEFpmC,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,wBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,OAAKzK,YAAYqE,KAFc,+BAK3D,OAAO3F,IAGTinC,EAA4B,CAC9BC,eAAgB,EAChBC,MAAO,GACPr9B,OAAQ,GAECmgB,EAAwB,CACjClqB,OADiC,SAC1BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,OAT+B,IAA3BgB,EAAQknC,gBACRjnC,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQknC,gBAEd,KAAlBlnC,EAAQmnC,OACRlnC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmnC,OAEd,IAAnBnnC,EAAQ8J,QACR7J,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQ8J,QAE9B7J,GAEXK,OAbiC,SAa1BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKinC,GACrB,MAAOzmC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQknC,eAAiBlmC,EAAaR,EAAO6H,UAC7C,MACJ,KAAK,EACDrI,EAAQmnC,MAAQ3mC,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ8J,OAAS9I,EAAaR,EAAO6H,UACrC,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApCiC,SAoCxB9B,GACL,IAAMY,EAAU,kBAAKinC,GAmBrB,YAlB8BrmC,IAA1BxB,EAAO8nC,gBAA0D,OAA1B9nC,EAAO8nC,eAC9ClnC,EAAQknC,eAAiB/lC,OAAO/B,EAAO8nC,gBAGvClnC,EAAQknC,eAAiB,OAERtmC,IAAjBxB,EAAO+nC,OAAwC,OAAjB/nC,EAAO+nC,MACrCnnC,EAAQmnC,MAAQ7kC,OAAOlD,EAAO+nC,OAG9BnnC,EAAQmnC,MAAQ,QAEEvmC,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS3I,OAAO/B,EAAO0K,QAG/B9J,EAAQ8J,OAAS,EAEd9J,GAEXoB,OA1DiC,SA0D1BpB,GACH,IAAMqB,EAAM,GAKZ,YAJ2BT,IAA3BZ,EAAQknC,iBACH7lC,EAAI6lC,eAAiBlnC,EAAQknC,qBAChBtmC,IAAlBZ,EAAQmnC,QAAwB9lC,EAAI8lC,MAAQnnC,EAAQmnC,YACjCvmC,IAAnBZ,EAAQ8J,SAAyBzI,EAAIyI,OAAS9J,EAAQ8J,QAC/CzI,GAEXC,YAlEiC,SAkErBlC,GACR,IAAMY,EAAU,kBAAKinC,GAmBrB,YAlB8BrmC,IAA1BxB,EAAO8nC,gBAA0D,OAA1B9nC,EAAO8nC,eAC9ClnC,EAAQknC,eAAiB9nC,EAAO8nC,eAGhClnC,EAAQknC,eAAiB,OAERtmC,IAAjBxB,EAAO+nC,OAAwC,OAAjB/nC,EAAO+nC,MACrCnnC,EAAQmnC,MAAQ/nC,EAAO+nC,MAGvBnnC,EAAQmnC,MAAQ,QAEEvmC,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS1K,EAAO0K,OAGxB9J,EAAQ8J,OAAS,EAEd9J,IAGTonC,EAAgC,CAAEh1B,iBAAkB,IAC7C8X,EAA4B,CACrCnqB,OADqC,SAC9BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACK,KAA7BgB,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,kBAFC,uBAItBpS,EAAQqnC,QAJc,IAItC,2BAAgC,KAArB/hC,EAAqB,QAC5BwhB,OAAQ/mB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALV,8BAOtC,OAAOxF,GAEXK,OAVqC,SAU9BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTonC,GAEPpnC,EAAQqnC,OAAS,GACjB,MAAO7mC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQqnC,OAAOzqC,KAAKkqB,OAAQxmB,OAAOE,EAAQA,EAAOL,WAClD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAjCqC,SAiC5B9B,GACL,IAAMY,EAAU,kBACTonC,GAUP,GARApnC,EAAQqnC,OAAS,QACezmC,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAOioC,QAA0C,OAAlBjoC,EAAOioC,OAAiB,wBACvCjoC,EAAOioC,QADgC,IACvD,2BAA+B,KAApB1hC,EAAoB,QAC3B3F,EAAQqnC,OAAOzqC,KAAKkqB,OAAQ5lB,SAASyE,KAFc,+BAK3D,OAAO3F,GAEXoB,OApDqC,SAoD9BpB,GACH,IAAMqB,EAAM,GASZ,YAR6BT,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,kBAChCpS,EAAQqnC,OACRhmC,EAAIgmC,OAASrnC,EAAQqnC,OAAOzhC,KAAI,SAACD,GAAD,OAAOA,EAAImhB,OAAQ1lB,OAAOuE,QAAK/E,KAG/DS,EAAIgmC,OAAS,GAEVhmC,GAEXC,YAhEqC,SAgEzBlC,GACR,IAAMY,EAAU,kBACTonC,GAUP,GARApnC,EAAQqnC,OAAS,QACezmC,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAOioC,QAA0C,OAAlBjoC,EAAOioC,OAAiB,wBACvCjoC,EAAOioC,QADgC,IACvD,2BAA+B,KAApB1hC,EAAoB,QAC3B3F,EAAQqnC,OAAOzqC,KAAKkqB,OAAQxlB,YAAYqE,KAFW,+BAK3D,OAAO3F,IAGTsnC,EAA4C,CAC9CP,MAAO,GACPxjC,YAAa,GACbyjC,UAAW,GACXt6B,OAAQ,GACR66B,QAAS,IAEApd,EAAwC,CACjDpqB,OADiD,SAC1CC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAgB5B,MAfsB,KAAlBgB,EAAQ+mC,OACR9mC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+mC,OAET,KAAxB/mC,EAAQuD,aACRtD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQuD,aAEX,KAAtBvD,EAAQgnC,WACR/mC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgnC,WAEd,KAAnBhnC,EAAQ0M,QACRzM,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0M,QAEb,KAApB1M,EAAQunC,SACRtnC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQunC,SAE9BtnC,GAEXK,OAnBiD,SAmB1CC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTsnC,GAEP,MAAO9mC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+mC,MAAQvmC,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQuD,YAAc/C,EAAO6B,SAC7B,MACJ,KAAK,EACDrC,EAAQgnC,UAAYxmC,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQ0M,OAASlM,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQunC,QAAU/mC,EAAO6B,SACzB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAlDiD,SAkDxC9B,GACL,IAAMY,EAAU,kBACTsnC,GAgCP,YA9BqB1mC,IAAjBxB,EAAO2nC,OAAwC,OAAjB3nC,EAAO2nC,MACrC/mC,EAAQ+mC,MAAQzkC,OAAOlD,EAAO2nC,OAG9B/mC,EAAQ+mC,MAAQ,QAEOnmC,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcjB,OAAOlD,EAAOmE,aAGpCvD,EAAQuD,YAAc,QAED3C,IAArBxB,EAAO4nC,WAAgD,OAArB5nC,EAAO4nC,UACzChnC,EAAQgnC,UAAY1kC,OAAOlD,EAAO4nC,WAGlChnC,EAAQgnC,UAAY,QAEFpmC,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASpK,OAAOlD,EAAOsN,QAG/B1M,EAAQ0M,OAAS,QAEE9L,IAAnBxB,EAAOmoC,SAA4C,OAAnBnoC,EAAOmoC,QACvCvnC,EAAQunC,QAAUjlC,OAAOlD,EAAOmoC,SAGhCvnC,EAAQunC,QAAU,GAEfvnC,GAEXoB,OAtFiD,SAsF1CpB,GACH,IAAMqB,EAAM,GAMZ,YALkBT,IAAlBZ,EAAQ+mC,QAAwB1lC,EAAI0lC,MAAQ/mC,EAAQ+mC,YAC5BnmC,IAAxBZ,EAAQuD,cAA8BlC,EAAIkC,YAAcvD,EAAQuD,kBAC1C3C,IAAtBZ,EAAQgnC,YAA4B3lC,EAAI2lC,UAAYhnC,EAAQgnC,gBACzCpmC,IAAnBZ,EAAQ0M,SAAyBrL,EAAIqL,OAAS1M,EAAQ0M,aAClC9L,IAApBZ,EAAQunC,UAA0BlmC,EAAIkmC,QAAUvnC,EAAQunC,SACjDlmC,GAEXC,YA/FiD,SA+FrClC,GACR,IAAMY,EAAU,kBACTsnC,GAgCP,YA9BqB1mC,IAAjBxB,EAAO2nC,OAAwC,OAAjB3nC,EAAO2nC,MACrC/mC,EAAQ+mC,MAAQ3nC,EAAO2nC,MAGvB/mC,EAAQ+mC,MAAQ,QAEOnmC,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcnE,EAAOmE,YAG7BvD,EAAQuD,YAAc,QAED3C,IAArBxB,EAAO4nC,WAAgD,OAArB5nC,EAAO4nC,UACzChnC,EAAQgnC,UAAY5nC,EAAO4nC,UAG3BhnC,EAAQgnC,UAAY,QAEFpmC,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAAStN,EAAOsN,OAGxB1M,EAAQ0M,OAAS,QAEE9L,IAAnBxB,EAAOmoC,SAA4C,OAAnBnoC,EAAOmoC,QACvCvnC,EAAQunC,QAAUnoC,EAAOmoC,QAGzBvnC,EAAQunC,QAAU,GAEfvnC,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,yfCziCEulC,EAA2B,CAC7BxhC,QAAS,GACTyhC,YAAa,EACbC,YAAa,EACbC,YAAY,EACZC,oBAAqB,GAEZnX,EAAuB,CAChC1wB,OADgC,SACzBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAmB5B,MAlBwB,KAApBgB,EAAQgG,SACR/F,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgG,SAET,IAAxBhG,EAAQynC,aACRxnC,EAAOE,OAAO,IAAIC,MAAMJ,EAAQynC,aAER,IAAxBznC,EAAQ0nC,aACRznC,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ0nC,kBAER9mC,IAAxBZ,EAAQ6nC,aACR/nC,OAAUC,OAAOmK,EAAYlK,EAAQ6nC,aAAc5nC,EAAOE,OAAO,IAAIqF,QAAQC,UAEtD,IAAvBzF,EAAQ2nC,YACR1nC,EAAOE,OAAO,IAAI4H,KAAK/H,EAAQ2nC,YAEC,IAAhC3nC,EAAQ4nC,qBACR3nC,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ4nC,qBAE7B3nC,GAEXK,OAtBgC,SAsBzBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKwnC,GACrB,MAAOhnC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgG,QAAUxF,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQynC,YAAczmC,EAAaR,EAAOJ,SAC1C,MACJ,KAAK,EACDJ,EAAQ0nC,YAAc1mC,EAAaR,EAAOJ,SAC1C,MACJ,KAAK,EACDJ,EAAQ6nC,YAAch9B,EAAc/K,OAAUQ,OAAOE,EAAQA,EAAOL,WACpE,MACJ,KAAK,EACDH,EAAQ2nC,WAAannC,EAAOuH,OAC5B,MACJ,KAAK,EACD/H,EAAQ4nC,oBAAsB5mC,EAAaR,EAAOJ,SAClD,MACJ,QACII,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAtDgC,SAsDvB9B,GACL,IAAMY,EAAU,kBAAKwnC,GAsCrB,YArCuB5mC,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU1D,OAAOlD,EAAO4G,SAGhChG,EAAQgG,QAAU,QAEKpF,IAAvBxB,EAAOqoC,aAAoD,OAAvBroC,EAAOqoC,YAC3CznC,EAAQynC,YAActmC,OAAO/B,EAAOqoC,aAGpCznC,EAAQynC,YAAc,OAEC7mC,IAAvBxB,EAAOsoC,aAAoD,OAAvBtoC,EAAOsoC,YAC3C1nC,EAAQ0nC,YAAcvmC,OAAO/B,EAAOsoC,aAGpC1nC,EAAQ0nC,YAAc,OAEC9mC,IAAvBxB,EAAOyoC,aAAoD,OAAvBzoC,EAAOyoC,YAC3C7nC,EAAQ6nC,YAAc/8B,EAAkB1L,EAAOyoC,aAG/C7nC,EAAQ6nC,iBAAcjnC,OAEAA,IAAtBxB,EAAOuoC,YAAkD,OAAtBvoC,EAAOuoC,WAC1C3nC,EAAQ2nC,WAAa3/B,QAAQ5I,EAAOuoC,YAGpC3nC,EAAQ2nC,YAAa,OAEU/mC,IAA/BxB,EAAOwoC,qBACwB,OAA/BxoC,EAAOwoC,oBACP5nC,EAAQ4nC,oBAAsBzmC,OAAO/B,EAAOwoC,qBAG5C5nC,EAAQ4nC,oBAAsB,EAE3B5nC,GAEXoB,OA/FgC,SA+FzBpB,GACH,IAAMqB,EAAM,GAYZ,YAXoBT,IAApBZ,EAAQgG,UAA0B3E,EAAI2E,QAAUhG,EAAQgG,cAChCpF,IAAxBZ,EAAQynC,cAA8BpmC,EAAIomC,YAAcznC,EAAQynC,kBACxC7mC,IAAxBZ,EAAQ0nC,cAA8BrmC,EAAIqmC,YAAc1nC,EAAQ0nC,kBACxC9mC,IAAxBZ,EAAQ6nC,cACHxmC,EAAIwmC,iBACuBjnC,IAAxBZ,EAAQ6nC,YACF7nC,EAAQ6nC,YAAY98B,cACpB,WACSnK,IAAvBZ,EAAQ2nC,aAA6BtmC,EAAIsmC,WAAa3nC,EAAQ2nC,iBAC9B/mC,IAAhCZ,EAAQ4nC,sBACHvmC,EAAIumC,oBAAsB5nC,EAAQ4nC,qBAChCvmC,GAEXC,YA9GgC,SA8GpBlC,GACR,IAAMY,EAAU,kBAAKwnC,GAsCrB,YArCuB5mC,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU5G,EAAO4G,QAGzBhG,EAAQgG,QAAU,QAEKpF,IAAvBxB,EAAOqoC,aAAoD,OAAvBroC,EAAOqoC,YAC3CznC,EAAQynC,YAAcroC,EAAOqoC,YAG7BznC,EAAQynC,YAAc,OAEC7mC,IAAvBxB,EAAOsoC,aAAoD,OAAvBtoC,EAAOsoC,YAC3C1nC,EAAQ0nC,YAActoC,EAAOsoC,YAG7B1nC,EAAQ0nC,YAAc,OAEC9mC,IAAvBxB,EAAOyoC,aAAoD,OAAvBzoC,EAAOyoC,YAC3C7nC,EAAQ6nC,YAAczoC,EAAOyoC,YAG7B7nC,EAAQ6nC,iBAAcjnC,OAEAA,IAAtBxB,EAAOuoC,YAAkD,OAAtBvoC,EAAOuoC,WAC1C3nC,EAAQ2nC,WAAavoC,EAAOuoC,WAG5B3nC,EAAQ2nC,YAAa,OAEU/mC,IAA/BxB,EAAOwoC,qBACwB,OAA/BxoC,EAAOwoC,oBACP5nC,EAAQ4nC,oBAAsBxoC,EAAOwoC,oBAGrC5nC,EAAQ4nC,oBAAsB,EAE3B5nC,IAGTiU,EAAa,CAAE6zB,mBAAoB,GAC5BxzB,EAAS,CAClBvU,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAgB5B,OAfmC,IAA/BgB,EAAQ8nC,oBACR7nC,EAAOE,OAAO,GAAGC,MAAMJ,EAAQ8nC,oBAEO,IAAtC9nC,EAAQ+nC,mBAAmBzrC,QAC3B2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ+nC,yBAECnnC,IAAjCZ,EAAQgoC,sBACRr/B,OAAS5I,OAAOC,EAAQgoC,qBAAsB/nC,EAAOE,OAAO,IAAIqF,QAAQC,SAE7B,IAA3CzF,EAAQioC,wBAAwB3rC,QAChC2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQioC,yBAES,IAAzCjoC,EAAQkoC,sBAAsB5rC,QAC9B2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQkoC,uBAE7BjoC,GAEXK,OAnBkB,SAmBXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiU,GACrB,MAAOzT,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8nC,mBAAqB9mC,EAAaR,EAAOJ,SACjD,MACJ,KAAK,EACDJ,EAAQ+nC,mBAAqBvnC,EAAOwC,QACpC,MACJ,KAAK,EACDhD,EAAQgoC,qBAAuBr/B,OAASrI,OAAOE,EAAQA,EAAOL,UAC9D,MACJ,KAAK,EACDH,EAAQioC,wBAA0BznC,EAAOwC,QACzC,MACJ,KAAK,EACDhD,EAAQkoC,sBAAwB1nC,EAAOwC,QACvC,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhDkB,SAgDT9B,GACL,IAAMY,EAAU,kBAAKiU,GA2BrB,YA1BkCrT,IAA9BxB,EAAO0oC,oBACuB,OAA9B1oC,EAAO0oC,mBACP9nC,EAAQ8nC,mBAAqB3mC,OAAO/B,EAAO0oC,oBAG3C9nC,EAAQ8nC,mBAAqB,OAEClnC,IAA9BxB,EAAO2oC,oBACuB,OAA9B3oC,EAAO2oC,qBACP/nC,EAAQ+nC,mBAAqB9kC,EAAgB7D,EAAO2oC,0BAEpBnnC,IAAhCxB,EAAO4oC,sBACyB,OAAhC5oC,EAAO4oC,qBACPhoC,EAAQgoC,qBAAuBr/B,OAASzH,SAAS9B,EAAO4oC,sBAGxDhoC,EAAQgoC,0BAAuBpnC,OAEIA,IAAnCxB,EAAO6oC,yBAC4B,OAAnC7oC,EAAO6oC,0BACPjoC,EAAQioC,wBAA0BhlC,EAAgB7D,EAAO6oC,+BAExBrnC,IAAjCxB,EAAO8oC,uBAC0B,OAAjC9oC,EAAO8oC,wBACPloC,EAAQkoC,sBAAwBjlC,EAAgB7D,EAAO8oC,wBAEpDloC,GAEXoB,OA9EkB,SA8EXpB,GACH,IAAMqB,EAAM,GAmBZ,YAlB+BT,IAA/BZ,EAAQ8nC,qBACHzmC,EAAIymC,mBAAqB9nC,EAAQ8nC,yBACPlnC,IAA/BZ,EAAQ+nC,qBACH1mC,EAAI0mC,mBAAqB7kC,OAA+CtC,IAA/BZ,EAAQ+nC,mBAC5C/nC,EAAQ+nC,mBACR,IAAItnC,kBACmBG,IAAjCZ,EAAQgoC,uBACH3mC,EAAI2mC,qBAAuBhoC,EAAQgoC,qBAC9Br/B,OAASvH,OAAOpB,EAAQgoC,2BACxBpnC,QAC0BA,IAApCZ,EAAQioC,0BACH5mC,EAAI4mC,wBAA0B/kC,OAAoDtC,IAApCZ,EAAQioC,wBACjDjoC,EAAQioC,wBACR,IAAIxnC,kBACoBG,IAAlCZ,EAAQkoC,wBACH7mC,EAAI6mC,sBAAwBhlC,OAAkDtC,IAAlCZ,EAAQkoC,sBAC/CloC,EAAQkoC,sBACR,IAAIznC,aACPY,GAEXC,YApGkB,SAoGNlC,GACR,IAAMY,EAAU,kBAAKiU,GAoCrB,YAnCkCrT,IAA9BxB,EAAO0oC,oBACuB,OAA9B1oC,EAAO0oC,mBACP9nC,EAAQ8nC,mBAAqB1oC,EAAO0oC,mBAGpC9nC,EAAQ8nC,mBAAqB,OAEClnC,IAA9BxB,EAAO2oC,oBACuB,OAA9B3oC,EAAO2oC,mBACP/nC,EAAQ+nC,mBAAqB3oC,EAAO2oC,mBAGpC/nC,EAAQ+nC,mBAAqB,IAAItnC,gBAEDG,IAAhCxB,EAAO4oC,sBACyB,OAAhC5oC,EAAO4oC,qBACPhoC,EAAQgoC,qBAAuBr/B,OAASrH,YAAYlC,EAAO4oC,sBAG3DhoC,EAAQgoC,0BAAuBpnC,OAEIA,IAAnCxB,EAAO6oC,yBAC4B,OAAnC7oC,EAAO6oC,wBACPjoC,EAAQioC,wBAA0B7oC,EAAO6oC,wBAGzCjoC,EAAQioC,wBAA0B,IAAIxnC,gBAELG,IAAjCxB,EAAO8oC,uBAC0B,OAAjC9oC,EAAO8oC,sBACPloC,EAAQkoC,sBAAwB9oC,EAAO8oC,sBAGvCloC,EAAQkoC,sBAAwB,IAAIznC,WAEjCT,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAEzB,SAASiF,EAAYc,GACjB,IAAMpL,EAAUoL,EAAKC,UAAY,IAC3BpL,EAASmL,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAErL,UAASC,SAEtB,SAASgL,EAAcjM,GACnB,IAAIsM,EAAqB,IAAZtM,EAAEgB,QAEf,OADAsL,GAAUtM,EAAEiB,MAAQ,IACb,IAAIsL,KAAKD,GAEpB,SAASJ,EAAkB1M,GACvB,OAAIA,aAAa+M,KACN/M,EAEW,kBAANA,EACL,IAAI+M,KAAK/M,GAGTyM,EAAc/K,OAAUoB,SAAS9C,IAGhD,SAAS4C,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,idCzWEkmC,EAAwB,CAAEC,UAAW,IAC9Bjc,EAAoB,CAC7BpsB,OAD6B,SACtBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MAN0B,KAAtBgB,EAAQooC,WACRnoC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQooC,gBAEZxnC,IAArBZ,EAAQqoC,UACR9hC,OAAIxG,OAAOC,EAAQqoC,SAAUpoC,EAAOE,OAAO,IAAIqF,QAAQC,SAEpDxF,GAEXK,OAV6B,SAUtBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKmoC,GACrB,MAAO3nC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQooC,UAAY5nC,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQqoC,SAAW9hC,OAAIjG,OAAOE,EAAQA,EAAOL,UAC7C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9B6B,SA8BpB9B,GACL,IAAMY,EAAU,kBAAKmoC,GAarB,YAZyBvnC,IAArBxB,EAAOgpC,WAAgD,OAArBhpC,EAAOgpC,UACzCpoC,EAAQooC,UAAY9lC,OAAOlD,EAAOgpC,WAGlCpoC,EAAQooC,UAAY,QAEAxnC,IAApBxB,EAAOipC,UAA8C,OAApBjpC,EAAOipC,SACxCroC,EAAQqoC,SAAW9hC,OAAIrF,SAAS9B,EAAOipC,UAGvCroC,EAAQqoC,cAAWznC,EAEhBZ,GAEXoB,OA9C6B,SA8CtBpB,GACH,IAAMqB,EAAM,GAMZ,YALsBT,IAAtBZ,EAAQooC,YAA4B/mC,EAAI+mC,UAAYpoC,EAAQooC,gBACvCxnC,IAArBZ,EAAQqoC,WACHhnC,EAAIgnC,SAAWroC,EAAQqoC,SAClB9hC,OAAInF,OAAOpB,EAAQqoC,eACnBznC,GACHS,GAEXC,YAvD6B,SAuDjBlC,GACR,IAAMY,EAAU,kBAAKmoC,GAarB,YAZyBvnC,IAArBxB,EAAOgpC,WAAgD,OAArBhpC,EAAOgpC,UACzCpoC,EAAQooC,UAAYhpC,EAAOgpC,UAG3BpoC,EAAQooC,UAAY,QAEAxnC,IAApBxB,EAAOipC,UAA8C,OAApBjpC,EAAOipC,SACxCroC,EAAQqoC,SAAW9hC,OAAIjF,YAAYlC,EAAOipC,UAG1CroC,EAAQqoC,cAAWznC,EAEhBZ,IAoEXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWLF,EAAWgD,KAUXhD,EAAWuD,O,qqBC7JlBwjC,EAA4B,CAC9Bn2B,iBAAkB,GAClBkW,gBAAiB,IAER+B,EAAwB,CACjCrqB,OADiC,SAC1BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANiC,KAA7BgB,EAAQmS,kBACRlS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmS,kBAEL,KAA5BnS,EAAQqoB,iBACRpoB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQqoB,iBAE9BpoB,GAEXK,OAViC,SAU1BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKsoC,GACrB,MAAO9nC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmS,iBAAmB3R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQqoB,gBAAkB7nB,EAAO6B,SACjC,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BiC,SA8BxB9B,GACL,IAAMY,EAAU,kBAAKsoC,GAerB,YAdgC1nC,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB7P,OAAOlD,EAAO+S,kBAGzCnS,EAAQmS,iBAAmB,QAEAvR,IAA3BxB,EAAOipB,iBACoB,OAA3BjpB,EAAOipB,gBACProB,EAAQqoB,gBAAkB/lB,OAAOlD,EAAOipB,iBAGxCroB,EAAQqoB,gBAAkB,GAEvBroB,GAEXoB,OAhDiC,SAgD1BpB,GACH,IAAMqB,EAAM,GAKZ,YAJ6BT,IAA7BZ,EAAQmS,mBACH9Q,EAAI8Q,iBAAmBnS,EAAQmS,uBACRvR,IAA5BZ,EAAQqoB,kBACHhnB,EAAIgnB,gBAAkBroB,EAAQqoB,iBAC5BhnB,GAEXC,YAxDiC,SAwDrBlC,GACR,IAAMY,EAAU,kBAAKsoC,GAerB,YAdgC1nC,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB/S,EAAO+S,iBAGlCnS,EAAQmS,iBAAmB,QAEAvR,IAA3BxB,EAAOipB,iBACoB,OAA3BjpB,EAAOipB,gBACProB,EAAQqoB,gBAAkBjpB,EAAOipB,gBAGjCroB,EAAQqoB,gBAAkB,GAEvBroB,IAGTuoC,EAAwC,CAAEn2B,iBAAkB,IACrDiY,EAAoC,CAC7CtqB,OAD6C,SACtCC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACK,KAA7BgB,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,kBAFC,uBAItBpS,EAAQwoC,oBAJc,IAItC,2BAA4C,KAAjCljC,EAAiC,QACxCwhB,OAAQ/mB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALV,8BAOtC,OAAOxF,GAEXK,OAV6C,SAUtCC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTuoC,GAEPvoC,EAAQwoC,mBAAqB,GAC7B,MAAOhoC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQwoC,mBAAmB5rC,KAAKkqB,OAAQxmB,OAAOE,EAAQA,EAAOL,WAC9D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAjC6C,SAiCpC9B,GACL,IAAMY,EAAU,kBACTuoC,GAUP,GARAvoC,EAAQwoC,mBAAqB,QACG5nC,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,QAEGxR,IAA9BxB,EAAOopC,oBACuB,OAA9BppC,EAAOopC,mBAA6B,wBACpBppC,EAAOopC,oBADa,IACpC,2BAA2C,KAAhC7iC,EAAgC,QACvC3F,EAAQwoC,mBAAmB5rC,KAAKkqB,OAAQ5lB,SAASyE,KAFjB,+BAKxC,OAAO3F,GAEXoB,OArD6C,SAqDtCpB,GACH,IAAMqB,EAAM,GASZ,YAR6BT,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,kBAChCpS,EAAQwoC,mBACRnnC,EAAImnC,mBAAqBxoC,EAAQwoC,mBAAmB5iC,KAAI,SAACD,GAAD,OAAOA,EAAImhB,OAAQ1lB,OAAOuE,QAAK/E,KAGvFS,EAAImnC,mBAAqB,GAEtBnnC,GAEXC,YAjE6C,SAiEjClC,GACR,IAAMY,EAAU,kBACTuoC,GAUP,GARAvoC,EAAQwoC,mBAAqB,QACG5nC,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,QAEGxR,IAA9BxB,EAAOopC,oBACuB,OAA9BppC,EAAOopC,mBAA6B,wBACpBppC,EAAOopC,oBADa,IACpC,2BAA2C,KAAhC7iC,EAAgC,QACvC3F,EAAQwoC,mBAAmB5rC,KAAKkqB,OAAQxlB,YAAYqE,KAFpB,+BAKxC,OAAO3F,IAGTyoC,EAA2C,CAC7Cr2B,iBAAkB,IAETkY,EAAuC,CAChDvqB,OADgD,SACzCC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANiC,KAA7BgB,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,uBAETxR,IAAxBZ,EAAQ0oC,aACR9e,OAA+B7pB,OAAOC,EAAQ0oC,YAAazoC,EAAOE,OAAO,IAAIqF,QAAQC,SAElFxF,GAEXK,OAVgD,SAUzCC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTyoC,GAEP,MAAOjoC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQ0oC,YAAc9e,OAA+BtpB,OAAOE,EAAQA,EAAOL,UAC3E,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhCgD,SAgCvC9B,GACL,IAAMY,EAAU,kBACTyoC,GAeP,YAbgC7nC,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,QAEJxR,IAAvBxB,EAAOspC,aAAoD,OAAvBtpC,EAAOspC,YAC3C1oC,EAAQ0oC,YAAc9e,OAA+B1oB,SAAS9B,EAAOspC,aAGrE1oC,EAAQ0oC,iBAAc9nC,EAEnBZ,GAEXoB,OAnDgD,SAmDzCpB,GACH,IAAMqB,EAAM,GAOZ,YAN6BT,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,uBACZxR,IAAxBZ,EAAQ0oC,cACHrnC,EAAIqnC,YAAc1oC,EAAQ0oC,YACrB9e,OAA+BxoB,OAAOpB,EAAQ0oC,kBAC9C9nC,GACHS,GAEXC,YA7DgD,SA6DpClC,GACR,IAAMY,EAAU,kBACTyoC,GAeP,YAbgC7nC,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,QAEJxR,IAAvBxB,EAAOspC,aAAoD,OAAvBtpC,EAAOspC,YAC3C1oC,EAAQ0oC,YAAc9e,OAA+BtoB,YAAYlC,EAAOspC,aAGxE1oC,EAAQ0oC,iBAAc9nC,EAEnBZ,IAGT2oC,EAAuC,CACzCv2B,iBAAkB,GAClB+zB,OAAQ,GAEC5b,EAAmC,CAC5CxqB,OAD4C,SACrCC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATiC,KAA7BgB,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,kBAEd,IAAnBpS,EAAQmmC,QACRlmC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQmmC,aAEbvlC,IAApBZ,EAAQomC,SACR1c,OAA2B3pB,OAAOC,EAAQomC,QAASnmC,EAAOE,OAAO,IAAIqF,QAAQC,SAE1ExF,GAEXK,OAb4C,SAarCC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACT2oC,GAEP,MAAOnoC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQmmC,OAASnlC,EAAaR,EAAO6H,UACrC,MACJ,KAAK,EACDrI,EAAQomC,QAAU1c,OAA2BppB,OAAOE,EAAQA,EAAOL,UACnE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAtC4C,SAsCnC9B,GACL,IAAMY,EAAU,kBACT2oC,GAqBP,YAnBgC/nC,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAO+mC,QAA0C,OAAlB/mC,EAAO+mC,OACtCnmC,EAAQmmC,OAAShlC,OAAO/B,EAAO+mC,QAG/BnmC,EAAQmmC,OAAS,OAEEvlC,IAAnBxB,EAAOgnC,SAA4C,OAAnBhnC,EAAOgnC,QACvCpmC,EAAQomC,QAAU1c,OAA2BxoB,SAAS9B,EAAOgnC,SAG7DpmC,EAAQomC,aAAUxlC,EAEfZ,GAEXoB,OA/D4C,SA+DrCpB,GACH,IAAMqB,EAAM,GAQZ,YAP6BT,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,uBACjBxR,IAAnBZ,EAAQmmC,SAAyB9kC,EAAI8kC,OAASnmC,EAAQmmC,aAClCvlC,IAApBZ,EAAQomC,UACH/kC,EAAI+kC,QAAUpmC,EAAQomC,QACjB1c,OAA2BtoB,OAAOpB,EAAQomC,cAC1CxlC,GACHS,GAEXC,YA1E4C,SA0EhClC,GACR,IAAMY,EAAU,kBACT2oC,GAqBP,YAnBgC/nC,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAO+mC,QAA0C,OAAlB/mC,EAAO+mC,OACtCnmC,EAAQmmC,OAAS/mC,EAAO+mC,OAGxBnmC,EAAQmmC,OAAS,OAEEvlC,IAAnBxB,EAAOgnC,SAA4C,OAAnBhnC,EAAOgnC,QACvCpmC,EAAQomC,QAAU1c,OAA2BpoB,YAAYlC,EAAOgnC,SAGhEpmC,EAAQomC,aAAUxlC,EAEfZ,IAGT4oC,EAAoC,CAAEx2B,iBAAkB,IACjDoY,EAAgC,CACzCzqB,OADyC,SAClCC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANiC,KAA7BgB,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,uBAEbxR,IAApBZ,EAAQomC,SACRzc,OAAwB5pB,OAAOC,EAAQomC,QAASnmC,EAAOE,OAAO,IAAIqF,QAAQC,SAEvExF,GAEXK,OAVyC,SAUlCC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACT4oC,GAEP,MAAOpoC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQomC,QAAUzc,OAAwBrpB,OAAOE,EAAQA,EAAOL,UAChE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhCyC,SAgChC9B,GACL,IAAMY,EAAU,kBACT4oC,GAeP,YAbgChoC,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,QAERxR,IAAnBxB,EAAOgnC,SAA4C,OAAnBhnC,EAAOgnC,QACvCpmC,EAAQomC,QAAUzc,OAAwBzoB,SAAS9B,EAAOgnC,SAG1DpmC,EAAQomC,aAAUxlC,EAEfZ,GAEXoB,OAnDyC,SAmDlCpB,GACH,IAAMqB,EAAM,GAOZ,YAN6BT,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,uBAChBxR,IAApBZ,EAAQomC,UACH/kC,EAAI+kC,QAAUpmC,EAAQomC,QACjBzc,OAAwBvoB,OAAOpB,EAAQomC,cACvCxlC,GACHS,GAEXC,YA7DyC,SA6D7BlC,GACR,IAAMY,EAAU,kBACT4oC,GAeP,YAbgChoC,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,QAERxR,IAAnBxB,EAAOgnC,SAA4C,OAAnBhnC,EAAOgnC,QACvCpmC,EAAQomC,QAAUzc,OAAwBroB,YAAYlC,EAAOgnC,SAG7DpmC,EAAQomC,aAAUxlC,EAEfZ,IAGT6oC,EAAkC,CACpC12B,iBAAkB,GAClBC,iBAAkB,IAETqY,EAA8B,CACvC1qB,OADuC,SAChCC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATiC,KAA7BgB,EAAQmS,kBACRlS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmS,kBAEJ,KAA7BnS,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,uBAERxR,IAAzBZ,EAAQ8oC,cACR7e,OAAsBlqB,OAAOC,EAAQ8oC,aAAc7oC,EAAOE,OAAO,IAAIqF,QAAQC,SAE1ExF,GAEXK,OAbuC,SAahCC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACT6oC,GAEP,MAAOroC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmS,iBAAmB3R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQ8oC,aAAe7e,OAAsB3pB,OAAOE,EAAQA,EAAOL,UACnE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAtCuC,SAsC9B9B,GACL,IAAMY,EAAU,kBACT6oC,GAsBP,YApBgCjoC,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB7P,OAAOlD,EAAO+S,kBAGzCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,QAEHxR,IAAxBxB,EAAO0pC,cAAsD,OAAxB1pC,EAAO0pC,aAC5C9oC,EAAQ8oC,aAAe7e,OAAsB/oB,SAAS9B,EAAO0pC,cAG7D9oC,EAAQ8oC,kBAAeloC,EAEpBZ,GAEXoB,OAhEuC,SAgEhCpB,GACH,IAAMqB,EAAM,GASZ,YAR6BT,IAA7BZ,EAAQmS,mBACH9Q,EAAI8Q,iBAAmBnS,EAAQmS,uBACPvR,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,uBACXxR,IAAzBZ,EAAQ8oC,eACHznC,EAAIynC,aAAe9oC,EAAQ8oC,aACtB7e,OAAsB7oB,OAAOpB,EAAQ8oC,mBACrCloC,GACHS,GAEXC,YA5EuC,SA4E3BlC,GACR,IAAMY,EAAU,kBACT6oC,GAsBP,YApBgCjoC,IAA5BxB,EAAO+S,kBACqB,OAA5B/S,EAAO+S,iBACPnS,EAAQmS,iBAAmB/S,EAAO+S,iBAGlCnS,EAAQmS,iBAAmB,QAECvR,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,QAEHxR,IAAxBxB,EAAO0pC,cAAsD,OAAxB1pC,EAAO0pC,aAC5C9oC,EAAQ8oC,aAAe7e,OAAsB3oB,YAAYlC,EAAO0pC,cAGhE9oC,EAAQ8oC,kBAAeloC,EAEpBZ,IAGT+oC,EAAgC,CAClC32B,iBAAkB,GAClBtI,OAAQ,EACRq8B,OAAQ,GAECzb,EAA4B,CACrC3qB,OADqC,SAC9BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,MAZiC,KAA7BgB,EAAQoS,kBACRnS,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoS,kBAEd,IAAnBpS,EAAQ8J,QACR7J,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQ8J,QAEd,IAAnB9J,EAAQmmC,QACRlmC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQmmC,aAEDvlC,IAAhCZ,EAAQgpC,qBACRnf,OAAoB9pB,OAAOC,EAAQgpC,oBAAqB/oC,EAAOE,OAAO,IAAIqF,QAAQC,SAE/ExF,GAEXK,OAhBqC,SAgB9BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACT+oC,GAEP,MAAOvoC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQoS,iBAAmB5R,EAAO6B,SAClC,MACJ,KAAK,EACDrC,EAAQ8J,OAAS9I,EAAaR,EAAO6H,UACrC,MACJ,KAAK,EACDrI,EAAQmmC,OAASnlC,EAAaR,EAAO6H,UACrC,MACJ,KAAK,EACDrI,EAAQgpC,oBAAsBnf,OAAoBvpB,OAAOE,EAAQA,EAAOL,UACxE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA5CqC,SA4C5B9B,GACL,IAAMY,EAAU,kBACT+oC,GA4BP,YA1BgCnoC,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmB9P,OAAOlD,EAAOgT,kBAGzCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS3I,OAAO/B,EAAO0K,QAG/B9J,EAAQ8J,OAAS,OAEClJ,IAAlBxB,EAAO+mC,QAA0C,OAAlB/mC,EAAO+mC,OACtCnmC,EAAQmmC,OAAShlC,OAAO/B,EAAO+mC,QAG/BnmC,EAAQmmC,OAAS,OAEcvlC,IAA/BxB,EAAO4pC,qBACwB,OAA/B5pC,EAAO4pC,oBACPhpC,EAAQgpC,oBAAsBnf,OAAoB3oB,SAAS9B,EAAO4pC,qBAGlEhpC,EAAQgpC,yBAAsBpoC,EAE3BZ,GAEXoB,OA5EqC,SA4E9BpB,GACH,IAAMqB,EAAM,GASZ,YAR6BT,IAA7BZ,EAAQoS,mBACH/Q,EAAI+Q,iBAAmBpS,EAAQoS,uBACjBxR,IAAnBZ,EAAQ8J,SAAyBzI,EAAIyI,OAAS9J,EAAQ8J,aACnClJ,IAAnBZ,EAAQmmC,SAAyB9kC,EAAI8kC,OAASnmC,EAAQmmC,aACtBvlC,IAAhCZ,EAAQgpC,sBACH3nC,EAAI2nC,oBAAsBhpC,EAAQgpC,oBAC7Bnf,OAAoBzoB,OAAOpB,EAAQgpC,0BACnCpoC,GACHS,GAEXC,YAxFqC,SAwFzBlC,GACR,IAAMY,EAAU,kBACT+oC,GA4BP,YA1BgCnoC,IAA5BxB,EAAOgT,kBACqB,OAA5BhT,EAAOgT,iBACPpS,EAAQoS,iBAAmBhT,EAAOgT,iBAGlCpS,EAAQoS,iBAAmB,QAETxR,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS1K,EAAO0K,OAGxB9J,EAAQ8J,OAAS,OAEClJ,IAAlBxB,EAAO+mC,QAA0C,OAAlB/mC,EAAO+mC,OACtCnmC,EAAQmmC,OAAS/mC,EAAO+mC,OAGxBnmC,EAAQmmC,OAAS,OAEcvlC,IAA/BxB,EAAO4pC,qBACwB,OAA/B5pC,EAAO4pC,oBACPhpC,EAAQgpC,oBAAsBnf,OAAoBvoB,YAAYlC,EAAO4pC,qBAGrEhpC,EAAQgpC,yBAAsBpoC,EAE3BZ,IAgSXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,iaC/8BEtC,EAAgB,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,EAAY,CACrBC,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANwB,IAApBgB,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAVqB,SAUdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKL,GACrB,MAAOa,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,EAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BqB,SA8BZ9B,GACL,IAAMY,EAAU,kBAAKL,GAarB,YAZuBiB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUuB,OAAO/B,EAAOQ,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQsB,OAAO/B,EAAOS,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXoB,OA9CqB,SA8CdpB,GACH,IAAMqB,EAAM,GAGZ,YAFoBT,IAApBZ,EAAQJ,UAA0ByB,EAAIzB,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwBwB,EAAIxB,MAAQG,EAAQH,OAC7CwB,GAEXC,YApDqB,SAoDTlC,GACR,IAAMY,EAAU,kBAAKL,GAarB,YAZuBiB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUR,EAAOQ,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQT,EAAOS,MAGvBG,EAAQH,MAAQ,EAEbG,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,iaCzFEuJ,EAAe,CAAE5L,QAAS,EAAGC,MAAO,GAC7B8I,EAAW,CACpB5I,OADoB,SACbC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANwB,IAApBgB,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAVoB,SAUbC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKwL,GACrB,MAAOhL,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,EAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BoB,SA8BX9B,GACL,IAAMY,EAAU,kBAAKwL,GAarB,YAZuB5K,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUuB,OAAO/B,EAAOQ,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQsB,OAAO/B,EAAOS,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXoB,OA9CoB,SA8CbpB,GACH,IAAMqB,EAAM,GAGZ,YAFoBT,IAApBZ,EAAQJ,UAA0ByB,EAAIzB,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwBwB,EAAIxB,MAAQG,EAAQH,OAC7CwB,GAEXC,YApDoB,SAoDRlC,GACR,IAAMY,EAAU,kBAAKwL,GAarB,YAZuB5K,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUR,EAAOQ,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQT,EAAOS,MAGvBG,EAAQH,MAAQ,EAEbG,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,qaC1FEiH,EAAU,CAAEC,QAAS,IACd5C,EAAM,CACfxG,OADe,SACRC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANwB,KAApBgB,EAAQmJ,SACRlJ,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmJ,SAER,IAAzBnJ,EAAQrB,MAAMrC,QACd2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQrB,OAE7BsB,GAEXK,OAVe,SAURC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkJ,GACrB,MAAO1I,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmJ,QAAU3I,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQrB,MAAQ6B,EAAOwC,QACvB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9Be,SA8BN9B,GACL,IAAMY,EAAU,kBAAKkJ,GAUrB,YATuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU7G,OAAOlD,EAAO+J,SAGhCnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCqB,EAAQrB,MAAQsE,EAAgB7D,EAAOT,QAEpCqB,GAEXoB,OA3Ce,SA2CRpB,GACH,IAAMqB,EAAM,GAIZ,YAHoBT,IAApBZ,EAAQmJ,UAA0B9H,EAAI8H,QAAUnJ,EAAQmJ,cACtCvI,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQuE,OAAkCtC,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aAC5EY,GAEXC,YAlDe,SAkDHlC,GACR,IAAMY,EAAU,kBAAKkJ,GAarB,YAZuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU/J,EAAO+J,QAGzBnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,oXChGnB2d,EAAW,CAAEN,MAAO,GAAI5V,OAAQ,IACzBX,EAAO,CAChBhM,OADgB,SACTC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANsB,KAAlBgB,EAAQsiB,OACRriB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsiB,OAEd,KAAnBtiB,EAAQ0M,QACRzM,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0M,QAE9BzM,GAEXK,OAVgB,SAUTC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4iB,GACrB,MAAOpiB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsiB,MAAQ9hB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0M,OAASlM,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BgB,SA8BP9B,GACL,IAAMY,EAAU,kBAAK4iB,GAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQhgB,OAAOlD,EAAOkjB,OAG9BtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASpK,OAAOlD,EAAOsN,QAG/B1M,EAAQ0M,OAAS,GAEd1M,GAEXoB,OA9CgB,SA8CTpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQsiB,QAAwBjhB,EAAIihB,MAAQtiB,EAAQsiB,YACjC1hB,IAAnBZ,EAAQ0M,SAAyBrL,EAAIqL,OAAS1M,EAAQ0M,QAC/CrL,GAEXC,YApDgB,SAoDJlC,GACR,IAAMY,EAAU,kBAAK4iB,GAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQljB,EAAOkjB,MAGvBtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAAStN,EAAOsN,OAGxB1M,EAAQ0M,OAAS,GAEd1M,K,4VCnET4iB,EAAW,CAAEN,MAAO,GAAI5V,OAAQ,IACzBX,EAAO,CAChBhM,OADgB,SACTC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANsB,KAAlBgB,EAAQsiB,OACRriB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsiB,OAEd,KAAnBtiB,EAAQ0M,QACRzM,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0M,QAE9BzM,GAEXK,OAVgB,SAUTC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4iB,GACrB,MAAOpiB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsiB,MAAQ9hB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0M,OAASlM,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BgB,SA8BP9B,GACL,IAAMY,EAAU,kBAAK4iB,GAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQhgB,OAAOlD,EAAOkjB,OAG9BtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASpK,OAAOlD,EAAOsN,QAG/B1M,EAAQ0M,OAAS,GAEd1M,GAEXoB,OA9CgB,SA8CTpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQsiB,QAAwBjhB,EAAIihB,MAAQtiB,EAAQsiB,YACjC1hB,IAAnBZ,EAAQ0M,SAAyBrL,EAAIqL,OAAS1M,EAAQ0M,QAC/CrL,GAEXC,YApDgB,SAoDJlC,GACR,IAAMY,EAAU,kBAAK4iB,GAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQljB,EAAOkjB,MAGvBtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAAStN,EAAOsN,OAGxB1M,EAAQ0M,OAAS,GAEd1M,K,8VCnET4iB,EAAW,CAAEN,MAAO,GAAI5V,OAAQ,IACzBX,EAAO,CAChBhM,OADgB,SACTC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANsB,KAAlBgB,EAAQsiB,OACRriB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsiB,OAEd,KAAnBtiB,EAAQ0M,QACRzM,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0M,QAE9BzM,GAEXK,OAVgB,SAUTC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4iB,GACrB,MAAOpiB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsiB,MAAQ9hB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0M,OAASlM,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BgB,SA8BP9B,GACL,IAAMY,EAAU,kBAAK4iB,GAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQhgB,OAAOlD,EAAOkjB,OAG9BtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASpK,OAAOlD,EAAOsN,QAG/B1M,EAAQ0M,OAAS,GAEd1M,GAEXoB,OA9CgB,SA8CTpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQsiB,QAAwBjhB,EAAIihB,MAAQtiB,EAAQsiB,YACjC1hB,IAAnBZ,EAAQ0M,SAAyBrL,EAAIqL,OAAS1M,EAAQ0M,QAC/CrL,GAEXC,YApDgB,SAoDJlC,GACR,IAAMY,EAAU,kBAAK4iB,GAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQljB,EAAOkjB,MAGvBtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAAStN,EAAOsN,OAGxB1M,EAAQ0M,OAAS,GAEd1M,K,2cCjETipC,EAA8B,CAChC9kB,YAAa,GACbC,UAAW,GACX1Y,QAAS,EACTw9B,SAAS,GAEA7T,EAA0B,CACnCt1B,OADmC,SAC5BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACA,KAAxBgB,EAAQmkB,aACRlkB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmkB,aAEX,KAAtBnkB,EAAQokB,WACRnkB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQokB,WALC,uBAOtBpkB,EAAQ0M,QAPc,IAOtC,2BAAgC,KAArBpH,EAAqB,QAC5ByG,OAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UARP,8BAgBtC,OANwB,IAApBzF,EAAQ0L,SACRzL,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ0L,UAEZ,IAApB1L,EAAQkpC,SACRjpC,EAAOE,OAAO,IAAI4H,KAAK/H,EAAQkpC,SAE5BjpC,GAEXK,OAnBmC,SAmB5BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTipC,GAEPjpC,EAAQ0M,OAAS,GACjB,MAAOlM,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmkB,YAAc3jB,EAAO6B,SAC7B,MACJ,KAAK,EACDrC,EAAQokB,UAAY5jB,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQ0M,OAAO9P,KAAKmP,OAAKzL,OAAOE,EAAQA,EAAOL,WAC/C,MACJ,KAAK,EACDH,EAAQ0L,QAAU1K,EAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQkpC,QAAU1oC,EAAOuH,OACzB,MACJ,QACIvH,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAnDmC,SAmD1B9B,GACL,IAAMY,EAAU,kBACTipC,GAeP,GAbAjpC,EAAQ0M,OAAS,QACU9L,IAAvBxB,EAAO+kB,aAAoD,OAAvB/kB,EAAO+kB,YAC3CnkB,EAAQmkB,YAAc7hB,OAAOlD,EAAO+kB,aAGpCnkB,EAAQmkB,YAAc,QAEDvjB,IAArBxB,EAAOglB,WAAgD,OAArBhlB,EAAOglB,UACzCpkB,EAAQokB,UAAY9hB,OAAOlD,EAAOglB,WAGlCpkB,EAAQokB,UAAY,QAEFxjB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,wBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,OAAK7K,SAASyE,KAFiB,+BAiB3D,YAZuB/E,IAAnBxB,EAAOsM,SAA4C,OAAnBtM,EAAOsM,QACvC1L,EAAQ0L,QAAUvK,OAAO/B,EAAOsM,SAGhC1L,EAAQ0L,QAAU,OAEC9K,IAAnBxB,EAAO8pC,SAA4C,OAAnB9pC,EAAO8pC,QACvClpC,EAAQkpC,QAAUlhC,QAAQ5I,EAAO8pC,SAGjClpC,EAAQkpC,SAAU,EAEflpC,GAEXoB,OAvFmC,SAuF5BpB,GACH,IAAMqB,EAAM,GAWZ,YAVwBT,IAAxBZ,EAAQmkB,cAA8B9iB,EAAI8iB,YAAcnkB,EAAQmkB,kBAC1CvjB,IAAtBZ,EAAQokB,YAA4B/iB,EAAI+iB,UAAYpkB,EAAQokB,WACxDpkB,EAAQ0M,OACRrL,EAAIqL,OAAS1M,EAAQ0M,OAAO9G,KAAI,SAACD,GAAD,OAAQA,EAAIoG,OAAK3K,OAAOuE,QAAK/E,KAG7DS,EAAIqL,OAAS,QAEG9L,IAApBZ,EAAQ0L,UAA0BrK,EAAIqK,QAAU1L,EAAQ0L,cACpC9K,IAApBZ,EAAQkpC,UAA0B7nC,EAAI6nC,QAAUlpC,EAAQkpC,SACjD7nC,GAEXC,YArGmC,SAqGvBlC,GACR,IAAMY,EAAU,kBACTipC,GAeP,GAbAjpC,EAAQ0M,OAAS,QACU9L,IAAvBxB,EAAO+kB,aAAoD,OAAvB/kB,EAAO+kB,YAC3CnkB,EAAQmkB,YAAc/kB,EAAO+kB,YAG7BnkB,EAAQmkB,YAAc,QAEDvjB,IAArBxB,EAAOglB,WAAgD,OAArBhlB,EAAOglB,UACzCpkB,EAAQokB,UAAYhlB,EAAOglB,UAG3BpkB,EAAQokB,UAAY,QAEFxjB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,wBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,OAAKzK,YAAYqE,KAFc,+BAiB3D,YAZuB/E,IAAnBxB,EAAOsM,SAA4C,OAAnBtM,EAAOsM,QACvC1L,EAAQ0L,QAAUtM,EAAOsM,QAGzB1L,EAAQ0L,QAAU,OAEC9K,IAAnBxB,EAAO8pC,SAA4C,OAAnB9pC,EAAO8pC,QACvClpC,EAAQkpC,QAAU9pC,EAAO8pC,QAGzBlpC,EAAQkpC,SAAU,EAEflpC,IAmDXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,6xBClNEknC,EAAyB,CAAE16B,OAAQ,GAAIrI,OAAQ,IACxCwxB,EAAqB,CAC9B73B,OAD8B,SACvBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATuB,KAAnBgB,EAAQyO,QACRxO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyO,aAEb7N,IAApBZ,EAAQopC,SACR/6B,OAAQtO,OAAOC,EAAQopC,QAASnpC,EAAOE,OAAO,IAAIqF,QAAQC,SAEvC,KAAnBzF,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAb8B,SAavBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKmpC,GACrB,MAAO3oC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyO,OAASjO,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQopC,QAAU/6B,OAAQ/N,OAAOE,EAAQA,EAAOL,UAChD,MACJ,KAAK,EACDH,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApC8B,SAoCrB9B,GACL,IAAMY,EAAU,kBAAKmpC,GAmBrB,YAlBsBvoC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASnM,OAAOlD,EAAOqP,QAG/BzO,EAAQyO,OAAS,QAEE7N,IAAnBxB,EAAOgqC,SAA4C,OAAnBhqC,EAAOgqC,QACvCppC,EAAQopC,QAAU/6B,OAAQnN,SAAS9B,EAAOgqC,SAG1CppC,EAAQopC,aAAUxoC,OAEAA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OA1D8B,SA0DvBpB,GACH,IAAMqB,EAAM,GAOZ,YANmBT,IAAnBZ,EAAQyO,SAAyBpN,EAAIoN,OAASzO,EAAQyO,aAClC7N,IAApBZ,EAAQopC,UACH/nC,EAAI+nC,QAAUppC,EAAQopC,QACjB/6B,OAAQjN,OAAOpB,EAAQopC,cACvBxoC,QACSA,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YApE8B,SAoElBlC,GACR,IAAMY,EAAU,kBAAKmpC,GAmBrB,YAlBsBvoC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASrP,EAAOqP,OAGxBzO,EAAQyO,OAAS,QAEE7N,IAAnBxB,EAAOgqC,SAA4C,OAAnBhqC,EAAOgqC,QACvCppC,EAAQopC,QAAU/6B,OAAQ/M,YAAYlC,EAAOgqC,SAG7CppC,EAAQopC,aAAUxoC,OAEAA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAyCTqpC,EAAwB,CAC1B56B,OAAQ,GACR66B,kBAAmB,GACnBC,oBAAqB,GACrBnjC,OAAQ,IAECkxB,EAAoB,CAC7Bv3B,OAD6B,SACtBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAsB5B,MArBuB,KAAnBgB,EAAQyO,QACRxO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyO,QAEH,KAA9BzO,EAAQspC,mBACRrpC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQspC,wBAEb1oC,IAApBZ,EAAQopC,SACR/6B,OAAQtO,OAAOC,EAAQopC,QAASnpC,EAAOE,OAAO,IAAIqF,QAAQC,SAE1B,KAAhCzF,EAAQupC,qBACRtpC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQupC,qBAEJ,IAA7BvpC,EAAQwpC,UAAUltC,QAClB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQwpC,gBAER5oC,IAAxBZ,EAAQypC,aACRrhC,OAAOrI,OAAOC,EAAQypC,YAAaxpC,EAAOE,OAAO,IAAIqF,QAAQC,SAE1C,KAAnBzF,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAzB6B,SAyBtBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKqpC,GACrB,MAAO7oC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyO,OAASjO,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQspC,kBAAoB9oC,EAAO6B,SACnC,MACJ,KAAK,EACDrC,EAAQopC,QAAU/6B,OAAQ/N,OAAOE,EAAQA,EAAOL,UAChD,MACJ,KAAK,EACDH,EAAQupC,oBAAsB/oC,EAAO6B,SACrC,MACJ,KAAK,EACDrC,EAAQwpC,UAAYhpC,EAAOwC,QAC3B,MACJ,KAAK,EACDhD,EAAQypC,YAAcrhC,OAAO9H,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA5D6B,SA4DpB9B,GACL,IAAMY,EAAU,kBAAKqpC,GA0CrB,YAzCsBzoC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASnM,OAAOlD,EAAOqP,QAG/BzO,EAAQyO,OAAS,QAEY7N,IAA7BxB,EAAOkqC,mBACsB,OAA7BlqC,EAAOkqC,kBACPtpC,EAAQspC,kBAAoBhnC,OAAOlD,EAAOkqC,mBAG1CtpC,EAAQspC,kBAAoB,QAET1oC,IAAnBxB,EAAOgqC,SAA4C,OAAnBhqC,EAAOgqC,QACvCppC,EAAQopC,QAAU/6B,OAAQnN,SAAS9B,EAAOgqC,SAG1CppC,EAAQopC,aAAUxoC,OAEaA,IAA/BxB,EAAOmqC,qBACwB,OAA/BnqC,EAAOmqC,oBACPvpC,EAAQupC,oBAAsBjnC,OAAOlD,EAAOmqC,qBAG5CvpC,EAAQupC,oBAAsB,QAET3oC,IAArBxB,EAAOoqC,WAAgD,OAArBpqC,EAAOoqC,YACzCxpC,EAAQwpC,UAAYvmC,EAAgB7D,EAAOoqC,iBAEpB5oC,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAOlH,SAAS9B,EAAOqqC,aAG7CzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OAzG6B,SAyGtBpB,GACH,IAAMqB,EAAM,GAiBZ,YAhBmBT,IAAnBZ,EAAQyO,SAAyBpN,EAAIoN,OAASzO,EAAQyO,aACxB7N,IAA9BZ,EAAQspC,oBACHjoC,EAAIioC,kBAAoBtpC,EAAQspC,wBACjB1oC,IAApBZ,EAAQopC,UACH/nC,EAAI+nC,QAAUppC,EAAQopC,QACjB/6B,OAAQjN,OAAOpB,EAAQopC,cACvBxoC,QACsBA,IAAhCZ,EAAQupC,sBACHloC,EAAIkoC,oBAAsBvpC,EAAQupC,0BACjB3oC,IAAtBZ,EAAQwpC,YACHnoC,EAAImoC,UAAYtmC,OAAsCtC,IAAtBZ,EAAQwpC,UAA0BxpC,EAAQwpC,UAAY,IAAI/oC,kBACvEG,IAAxBZ,EAAQypC,cACHpoC,EAAIooC,YAAczpC,EAAQypC,YACrBrhC,OAAOhH,OAAOpB,EAAQypC,kBACtB7oC,QACSA,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YA7H6B,SA6HjBlC,GACR,IAAMY,EAAU,kBAAKqpC,GA6CrB,YA5CsBzoC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASrP,EAAOqP,OAGxBzO,EAAQyO,OAAS,QAEY7N,IAA7BxB,EAAOkqC,mBACsB,OAA7BlqC,EAAOkqC,kBACPtpC,EAAQspC,kBAAoBlqC,EAAOkqC,kBAGnCtpC,EAAQspC,kBAAoB,QAET1oC,IAAnBxB,EAAOgqC,SAA4C,OAAnBhqC,EAAOgqC,QACvCppC,EAAQopC,QAAU/6B,OAAQ/M,YAAYlC,EAAOgqC,SAG7CppC,EAAQopC,aAAUxoC,OAEaA,IAA/BxB,EAAOmqC,qBACwB,OAA/BnqC,EAAOmqC,oBACPvpC,EAAQupC,oBAAsBnqC,EAAOmqC,oBAGrCvpC,EAAQupC,oBAAsB,QAET3oC,IAArBxB,EAAOoqC,WAAgD,OAArBpqC,EAAOoqC,UACzCxpC,EAAQwpC,UAAYpqC,EAAOoqC,UAG3BxpC,EAAQwpC,UAAY,IAAI/oC,gBAEDG,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAO9G,YAAYlC,EAAOqqC,aAGhDzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAyCT0pC,EAAwB,CAC1Bj7B,OAAQ,GACRC,UAAW,GACXi7B,sBAAuB,GACvBJ,oBAAqB,GACrBnjC,OAAQ,IAECoxB,EAAoB,CAC7Bz3B,OAD6B,SACtBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAsB5B,MArBuB,KAAnBgB,EAAQyO,QACRxO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyO,QAEX,KAAtBzO,EAAQ0O,WACRzO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0O,WAEC,KAAlC1O,EAAQ2pC,uBACR1pC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ2pC,uBAED,KAAhC3pC,EAAQupC,qBACRtpC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQupC,qBAEL,IAA5BvpC,EAAQ4pC,SAASttC,QACjB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ4pC,eAERhpC,IAAxBZ,EAAQypC,aACRrhC,OAAOrI,OAAOC,EAAQypC,YAAaxpC,EAAOE,OAAO,IAAIqF,QAAQC,SAE1C,KAAnBzF,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAzB6B,SAyBtBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK0pC,GACrB,MAAOlpC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyO,OAASjO,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQ0O,UAAYlO,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQ2pC,sBAAwBnpC,EAAO6B,SACvC,MACJ,KAAK,EACDrC,EAAQupC,oBAAsB/oC,EAAO6B,SACrC,MACJ,KAAK,EACDrC,EAAQ4pC,SAAWppC,EAAOwC,QAC1B,MACJ,KAAK,EACDhD,EAAQypC,YAAcrhC,OAAO9H,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA5D6B,SA4DpB9B,GACL,IAAMY,EAAU,kBAAK0pC,GA0CrB,YAzCsB9oC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASnM,OAAOlD,EAAOqP,QAG/BzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYpM,OAAOlD,EAAOsP,WAGlC1O,EAAQ0O,UAAY,QAEa9N,IAAjCxB,EAAOuqC,uBAC0B,OAAjCvqC,EAAOuqC,sBACP3pC,EAAQ2pC,sBAAwBrnC,OAAOlD,EAAOuqC,uBAG9C3pC,EAAQ2pC,sBAAwB,QAED/oC,IAA/BxB,EAAOmqC,qBACwB,OAA/BnqC,EAAOmqC,oBACPvpC,EAAQupC,oBAAsBjnC,OAAOlD,EAAOmqC,qBAG5CvpC,EAAQupC,oBAAsB,QAEV3oC,IAApBxB,EAAOwqC,UAA8C,OAApBxqC,EAAOwqC,WACxC5pC,EAAQ4pC,SAAW3mC,EAAgB7D,EAAOwqC,gBAEnBhpC,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAOlH,SAAS9B,EAAOqqC,aAG7CzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OAzG6B,SAyGtBpB,GACH,IAAMqB,EAAM,GAcZ,YAbmBT,IAAnBZ,EAAQyO,SAAyBpN,EAAIoN,OAASzO,EAAQyO,aAChC7N,IAAtBZ,EAAQ0O,YAA4BrN,EAAIqN,UAAY1O,EAAQ0O,gBAC1B9N,IAAlCZ,EAAQ2pC,wBACHtoC,EAAIsoC,sBAAwB3pC,EAAQ2pC,4BACT/oC,IAAhCZ,EAAQupC,sBACHloC,EAAIkoC,oBAAsBvpC,EAAQupC,0BAClB3oC,IAArBZ,EAAQ4pC,WACHvoC,EAAIuoC,SAAW1mC,OAAqCtC,IAArBZ,EAAQ4pC,SAAyB5pC,EAAQ4pC,SAAW,IAAInpC,kBACpEG,IAAxBZ,EAAQypC,cACHpoC,EAAIooC,YAAczpC,EAAQypC,YACrBrhC,OAAOhH,OAAOpB,EAAQypC,kBACtB7oC,QACSA,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YA1H6B,SA0HjBlC,GACR,IAAMY,EAAU,kBAAK0pC,GA6CrB,YA5CsB9oC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASrP,EAAOqP,OAGxBzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYtP,EAAOsP,UAG3B1O,EAAQ0O,UAAY,QAEa9N,IAAjCxB,EAAOuqC,uBAC0B,OAAjCvqC,EAAOuqC,sBACP3pC,EAAQ2pC,sBAAwBvqC,EAAOuqC,sBAGvC3pC,EAAQ2pC,sBAAwB,QAED/oC,IAA/BxB,EAAOmqC,qBACwB,OAA/BnqC,EAAOmqC,oBACPvpC,EAAQupC,oBAAsBnqC,EAAOmqC,oBAGrCvpC,EAAQupC,oBAAsB,QAEV3oC,IAApBxB,EAAOwqC,UAA8C,OAApBxqC,EAAOwqC,SACxC5pC,EAAQ4pC,SAAWxqC,EAAOwqC,SAG1B5pC,EAAQ4pC,SAAW,IAAInpC,gBAEAG,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAO9G,YAAYlC,EAAOqqC,aAGhDzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAyCT6pC,EAA4B,CAC9Bp7B,OAAQ,GACRC,UAAW,GACXtI,OAAQ,IAECqxB,EAAwB,CACjC13B,OADiC,SAC1BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAgB5B,MAfuB,KAAnBgB,EAAQyO,QACRxO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyO,QAEX,KAAtBzO,EAAQ0O,WACRzO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0O,WAEL,IAA5B1O,EAAQ8pC,SAASxtC,QACjB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ8pC,eAERlpC,IAAxBZ,EAAQypC,aACRrhC,OAAOrI,OAAOC,EAAQypC,YAAaxpC,EAAOE,OAAO,IAAIqF,QAAQC,SAE1C,KAAnBzF,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAnBiC,SAmB1BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6pC,GACrB,MAAOrpC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyO,OAASjO,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQ0O,UAAYlO,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQ8pC,SAAWtpC,EAAOwC,QAC1B,MACJ,KAAK,EACDhD,EAAQypC,YAAcrhC,OAAO9H,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhDiC,SAgDxB9B,GACL,IAAMY,EAAU,kBAAK6pC,GA4BrB,YA3BsBjpC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASnM,OAAOlD,EAAOqP,QAG/BzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYpM,OAAOlD,EAAOsP,WAGlC1O,EAAQ0O,UAAY,QAEA9N,IAApBxB,EAAO0qC,UAA8C,OAApB1qC,EAAO0qC,WACxC9pC,EAAQ8pC,SAAW7mC,EAAgB7D,EAAO0qC,gBAEnBlpC,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAOlH,SAAS9B,EAAOqqC,aAG7CzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OA/EiC,SA+E1BpB,GACH,IAAMqB,EAAM,GAUZ,YATmBT,IAAnBZ,EAAQyO,SAAyBpN,EAAIoN,OAASzO,EAAQyO,aAChC7N,IAAtBZ,EAAQ0O,YAA4BrN,EAAIqN,UAAY1O,EAAQ0O,gBACvC9N,IAArBZ,EAAQ8pC,WACHzoC,EAAIyoC,SAAW5mC,OAAqCtC,IAArBZ,EAAQ8pC,SAAyB9pC,EAAQ8pC,SAAW,IAAIrpC,kBACpEG,IAAxBZ,EAAQypC,cACHpoC,EAAIooC,YAAczpC,EAAQypC,YACrBrhC,OAAOhH,OAAOpB,EAAQypC,kBACtB7oC,QACSA,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YA5FiC,SA4FrBlC,GACR,IAAMY,EAAU,kBAAK6pC,GA+BrB,YA9BsBjpC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASrP,EAAOqP,OAGxBzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYtP,EAAOsP,UAG3B1O,EAAQ0O,UAAY,QAEA9N,IAApBxB,EAAO0qC,UAA8C,OAApB1qC,EAAO0qC,SACxC9pC,EAAQ8pC,SAAW1qC,EAAO0qC,SAG1B9pC,EAAQ8pC,SAAW,IAAIrpC,gBAEAG,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAO9G,YAAYlC,EAAOqqC,aAGhDzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAyCT+pC,EAA0B,CAC5Bt7B,OAAQ,GACRC,UAAW,GACXtI,OAAQ,IAECmxB,EAAsB,CAC/Bx3B,OAD+B,SACxBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,MATuB,KAAnBgB,EAAQyO,QACRxO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyO,QAEX,KAAtBzO,EAAQ0O,WACRzO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0O,WAEd,KAAnB1O,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAb+B,SAaxBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK+pC,GACrB,MAAOvpC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyO,OAASjO,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQ0O,UAAYlO,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApC+B,SAoCtB9B,GACL,IAAMY,EAAU,kBAAK+pC,GAmBrB,YAlBsBnpC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASnM,OAAOlD,EAAOqP,QAG/BzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYpM,OAAOlD,EAAOsP,WAGlC1O,EAAQ0O,UAAY,QAEF9N,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OA1D+B,SA0DxBpB,GACH,IAAMqB,EAAM,GAIZ,YAHmBT,IAAnBZ,EAAQyO,SAAyBpN,EAAIoN,OAASzO,EAAQyO,aAChC7N,IAAtBZ,EAAQ0O,YAA4BrN,EAAIqN,UAAY1O,EAAQ0O,gBACzC9N,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YAjE+B,SAiEnBlC,GACR,IAAMY,EAAU,kBAAK+pC,GAmBrB,YAlBsBnpC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASrP,EAAOqP,OAGxBzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYtP,EAAOsP,UAG3B1O,EAAQ0O,UAAY,QAEF9N,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAyCTgqC,EAA6B,CAC/Bv7B,OAAQ,GACRC,UAAW,GACXtI,OAAQ,IAECuxB,EAAyB,CAClC53B,OADkC,SAC3BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAgB5B,MAfuB,KAAnBgB,EAAQyO,QACRxO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyO,QAEX,KAAtBzO,EAAQ0O,WACRzO,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0O,WAEJ,IAA7B1O,EAAQwpC,UAAUltC,QAClB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQwpC,gBAER5oC,IAAxBZ,EAAQypC,aACRrhC,OAAOrI,OAAOC,EAAQypC,YAAaxpC,EAAOE,OAAO,IAAIqF,QAAQC,SAE1C,KAAnBzF,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAnBkC,SAmB3BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKgqC,GACrB,MAAOxpC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyO,OAASjO,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQ0O,UAAYlO,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQwpC,UAAYhpC,EAAOwC,QAC3B,MACJ,KAAK,EACDhD,EAAQypC,YAAcrhC,OAAO9H,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhDkC,SAgDzB9B,GACL,IAAMY,EAAU,kBAAKgqC,GA4BrB,YA3BsBppC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASnM,OAAOlD,EAAOqP,QAG/BzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYpM,OAAOlD,EAAOsP,WAGlC1O,EAAQ0O,UAAY,QAEC9N,IAArBxB,EAAOoqC,WAAgD,OAArBpqC,EAAOoqC,YACzCxpC,EAAQwpC,UAAYvmC,EAAgB7D,EAAOoqC,iBAEpB5oC,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAOlH,SAAS9B,EAAOqqC,aAG7CzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OA/EkC,SA+E3BpB,GACH,IAAMqB,EAAM,GAUZ,YATmBT,IAAnBZ,EAAQyO,SAAyBpN,EAAIoN,OAASzO,EAAQyO,aAChC7N,IAAtBZ,EAAQ0O,YAA4BrN,EAAIqN,UAAY1O,EAAQ0O,gBACtC9N,IAAtBZ,EAAQwpC,YACHnoC,EAAImoC,UAAYtmC,OAAsCtC,IAAtBZ,EAAQwpC,UAA0BxpC,EAAQwpC,UAAY,IAAI/oC,kBACvEG,IAAxBZ,EAAQypC,cACHpoC,EAAIooC,YAAczpC,EAAQypC,YACrBrhC,OAAOhH,OAAOpB,EAAQypC,kBACtB7oC,QACSA,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YA5FkC,SA4FtBlC,GACR,IAAMY,EAAU,kBAAKgqC,GA+BrB,YA9BsBppC,IAAlBxB,EAAOqP,QAA0C,OAAlBrP,EAAOqP,OACtCzO,EAAQyO,OAASrP,EAAOqP,OAGxBzO,EAAQyO,OAAS,QAEI7N,IAArBxB,EAAOsP,WAAgD,OAArBtP,EAAOsP,UACzC1O,EAAQ0O,UAAYtP,EAAOsP,UAG3B1O,EAAQ0O,UAAY,QAEC9N,IAArBxB,EAAOoqC,WAAgD,OAArBpqC,EAAOoqC,UACzCxpC,EAAQwpC,UAAYpqC,EAAOoqC,UAG3BxpC,EAAQwpC,UAAY,IAAI/oC,gBAEDG,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAO9G,YAAYlC,EAAOqqC,aAGhDzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAyCTiqC,EAAoB,CAAE7jC,OAAQ,IACvByxB,EAAgB,CACzB93B,OADyB,SAClBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,YAZuB4B,IAAnBZ,EAAQkqC,QACR96B,OAAOrP,OAAOC,EAAQkqC,OAAQjqC,EAAOE,OAAO,IAAIqF,QAAQC,SAErB,IAAnCzF,EAAQmqC,gBAAgB7tC,QACxB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQmqC,sBAERvpC,IAAxBZ,EAAQypC,aACRrhC,OAAOrI,OAAOC,EAAQypC,YAAaxpC,EAAOE,OAAO,IAAIqF,QAAQC,SAE1C,KAAnBzF,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAhByB,SAgBlBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiqC,GACrB,MAAOzpC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQkqC,OAAS96B,OAAO9O,OAAOE,EAAQA,EAAOL,UAC9C,MACJ,KAAK,EACDH,EAAQmqC,gBAAkB3pC,EAAOwC,QACjC,MACJ,KAAK,EACDhD,EAAQypC,YAAcrhC,OAAO9H,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1CyB,SA0ChB9B,GACL,IAAMY,EAAU,kBAAKiqC,GAuBrB,YAtBsBrpC,IAAlBxB,EAAO8qC,QAA0C,OAAlB9qC,EAAO8qC,OACtClqC,EAAQkqC,OAAS96B,OAAOlO,SAAS9B,EAAO8qC,QAGxClqC,EAAQkqC,YAAStpC,OAEUA,IAA3BxB,EAAO+qC,iBACoB,OAA3B/qC,EAAO+qC,kBACPnqC,EAAQmqC,gBAAkBlnC,EAAgB7D,EAAO+qC,uBAE1BvpC,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAOlH,SAAS9B,EAAOqqC,aAG7CzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OApEyB,SAoElBpB,GACH,IAAMqB,EAAM,GAYZ,YAXmBT,IAAnBZ,EAAQkqC,SACH7oC,EAAI6oC,OAASlqC,EAAQkqC,OAAS96B,OAAOhO,OAAOpB,EAAQkqC,aAAUtpC,QACvCA,IAA5BZ,EAAQmqC,kBACH9oC,EAAI8oC,gBAAkBjnC,OAA4CtC,IAA5BZ,EAAQmqC,gBACzCnqC,EAAQmqC,gBACR,IAAI1pC,kBACUG,IAAxBZ,EAAQypC,cACHpoC,EAAIooC,YAAczpC,EAAQypC,YACrBrhC,OAAOhH,OAAOpB,EAAQypC,kBACtB7oC,QACSA,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YAnFyB,SAmFblC,GACR,IAAMY,EAAU,kBAAKiqC,GA0BrB,YAzBsBrpC,IAAlBxB,EAAO8qC,QAA0C,OAAlB9qC,EAAO8qC,OACtClqC,EAAQkqC,OAAS96B,OAAO9N,YAAYlC,EAAO8qC,QAG3ClqC,EAAQkqC,YAAStpC,OAEUA,IAA3BxB,EAAO+qC,iBACoB,OAA3B/qC,EAAO+qC,gBACPnqC,EAAQmqC,gBAAkB/qC,EAAO+qC,gBAGjCnqC,EAAQmqC,gBAAkB,IAAI1pC,gBAEPG,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAO9G,YAAYlC,EAAOqqC,aAGhDzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAmCToqC,EAAiB,CAAEC,iBAAkB,EAAGjkC,OAAQ,IACzC0xB,EAAa,CACtB/3B,OADsB,SACfC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAgB5B,YAfuB4B,IAAnBZ,EAAQkqC,QACR96B,OAAOrP,OAAOC,EAAQkqC,OAAQjqC,EAAOE,OAAO,IAAIqF,QAAQC,SAErB,IAAnCzF,EAAQsqC,gBAAgBhuC,QACxB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQsqC,sBAER1pC,IAAxBZ,EAAQypC,aACRrhC,OAAOrI,OAAOC,EAAQypC,YAAaxpC,EAAOE,OAAO,IAAIqF,QAAQC,SAEhC,IAA7BzF,EAAQqqC,kBACRpqC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQqqC,kBAEd,KAAnBrqC,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAnBsB,SAmBfC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKoqC,GACrB,MAAO5pC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQkqC,OAAS96B,OAAO9O,OAAOE,EAAQA,EAAOL,UAC9C,MACJ,KAAK,EACDH,EAAQsqC,gBAAkB9pC,EAAOwC,QACjC,MACJ,KAAK,EACDhD,EAAQypC,YAAcrhC,OAAO9H,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQqqC,iBAAmBrpC,EAAaR,EAAO6H,UAC/C,MACJ,KAAK,EACDrI,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhDsB,SAgDb9B,GACL,IAAMY,EAAU,kBAAKoqC,GA8BrB,YA7BsBxpC,IAAlBxB,EAAO8qC,QAA0C,OAAlB9qC,EAAO8qC,OACtClqC,EAAQkqC,OAAS96B,OAAOlO,SAAS9B,EAAO8qC,QAGxClqC,EAAQkqC,YAAStpC,OAEUA,IAA3BxB,EAAOkrC,iBACoB,OAA3BlrC,EAAOkrC,kBACPtqC,EAAQsqC,gBAAkBrnC,EAAgB7D,EAAOkrC,uBAE1B1pC,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAOlH,SAAS9B,EAAOqqC,aAG7CzpC,EAAQypC,iBAAc7oC,OAEMA,IAA5BxB,EAAOirC,kBACqB,OAA5BjrC,EAAOirC,iBACPrqC,EAAQqqC,iBAAmBlpC,OAAO/B,EAAOirC,kBAGzCrqC,EAAQqqC,iBAAmB,OAETzpC,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OAjFsB,SAiFfpB,GACH,IAAMqB,EAAM,GAcZ,YAbmBT,IAAnBZ,EAAQkqC,SACH7oC,EAAI6oC,OAASlqC,EAAQkqC,OAAS96B,OAAOhO,OAAOpB,EAAQkqC,aAAUtpC,QACvCA,IAA5BZ,EAAQsqC,kBACHjpC,EAAIipC,gBAAkBpnC,OAA4CtC,IAA5BZ,EAAQsqC,gBACzCtqC,EAAQsqC,gBACR,IAAI7pC,kBACUG,IAAxBZ,EAAQypC,cACHpoC,EAAIooC,YAAczpC,EAAQypC,YACrBrhC,OAAOhH,OAAOpB,EAAQypC,kBACtB7oC,QACmBA,IAA7BZ,EAAQqqC,mBACHhpC,EAAIgpC,iBAAmBrqC,EAAQqqC,uBACjBzpC,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YAlGsB,SAkGVlC,GACR,IAAMY,EAAU,kBAAKoqC,GAiCrB,YAhCsBxpC,IAAlBxB,EAAO8qC,QAA0C,OAAlB9qC,EAAO8qC,OACtClqC,EAAQkqC,OAAS96B,OAAO9N,YAAYlC,EAAO8qC,QAG3ClqC,EAAQkqC,YAAStpC,OAEUA,IAA3BxB,EAAOkrC,iBACoB,OAA3BlrC,EAAOkrC,gBACPtqC,EAAQsqC,gBAAkBlrC,EAAOkrC,gBAGjCtqC,EAAQsqC,gBAAkB,IAAI7pC,gBAEPG,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAO9G,YAAYlC,EAAOqqC,aAGhDzpC,EAAQypC,iBAAc7oC,OAEMA,IAA5BxB,EAAOirC,kBACqB,OAA5BjrC,EAAOirC,iBACPrqC,EAAQqqC,iBAAmBjrC,EAAOirC,iBAGlCrqC,EAAQqqC,iBAAmB,OAETzpC,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAmCTuqC,EAAwB,CAAEF,iBAAkB,EAAGjkC,OAAQ,IAChDsxB,EAAoB,CAC7B33B,OAD6B,SACtBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAmB5B,YAlBuB4B,IAAnBZ,EAAQkqC,QACR96B,OAAOrP,OAAOC,EAAQkqC,OAAQjqC,EAAOE,OAAO,IAAIqF,QAAQC,SAErB,IAAnCzF,EAAQsqC,gBAAgBhuC,QACxB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQsqC,iBAEF,IAA9BtqC,EAAQwqC,WAAWluC,QACnB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQwqC,iBAER5pC,IAAxBZ,EAAQypC,aACRrhC,OAAOrI,OAAOC,EAAQypC,YAAaxpC,EAAOE,OAAO,IAAIqF,QAAQC,SAEhC,IAA7BzF,EAAQqqC,kBACRpqC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQqqC,kBAEd,KAAnBrqC,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAtB6B,SAsBtBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKuqC,GACrB,MAAO/pC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQkqC,OAAS96B,OAAO9O,OAAOE,EAAQA,EAAOL,UAC9C,MACJ,KAAK,EACDH,EAAQsqC,gBAAkB9pC,EAAOwC,QACjC,MACJ,KAAK,EACDhD,EAAQwqC,WAAahqC,EAAOwC,QAC5B,MACJ,KAAK,EACDhD,EAAQypC,YAAcrhC,OAAO9H,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQqqC,iBAAmBrpC,EAAaR,EAAO6H,UAC/C,MACJ,KAAK,EACDrI,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAtD6B,SAsDpB9B,GACL,IAAMY,EAAU,kBAAKuqC,GAiCrB,YAhCsB3pC,IAAlBxB,EAAO8qC,QAA0C,OAAlB9qC,EAAO8qC,OACtClqC,EAAQkqC,OAAS96B,OAAOlO,SAAS9B,EAAO8qC,QAGxClqC,EAAQkqC,YAAStpC,OAEUA,IAA3BxB,EAAOkrC,iBACoB,OAA3BlrC,EAAOkrC,kBACPtqC,EAAQsqC,gBAAkBrnC,EAAgB7D,EAAOkrC,uBAE3B1pC,IAAtBxB,EAAOorC,YAAkD,OAAtBprC,EAAOorC,aAC1CxqC,EAAQwqC,WAAavnC,EAAgB7D,EAAOorC,kBAErB5pC,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAOlH,SAAS9B,EAAOqqC,aAG7CzpC,EAAQypC,iBAAc7oC,OAEMA,IAA5BxB,EAAOirC,kBACqB,OAA5BjrC,EAAOirC,iBACPrqC,EAAQqqC,iBAAmBlpC,OAAO/B,EAAOirC,kBAGzCrqC,EAAQqqC,iBAAmB,OAETzpC,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OA1F6B,SA0FtBpB,GACH,IAAMqB,EAAM,GAgBZ,YAfmBT,IAAnBZ,EAAQkqC,SACH7oC,EAAI6oC,OAASlqC,EAAQkqC,OAAS96B,OAAOhO,OAAOpB,EAAQkqC,aAAUtpC,QACvCA,IAA5BZ,EAAQsqC,kBACHjpC,EAAIipC,gBAAkBpnC,OAA4CtC,IAA5BZ,EAAQsqC,gBACzCtqC,EAAQsqC,gBACR,IAAI7pC,kBACSG,IAAvBZ,EAAQwqC,aACHnpC,EAAImpC,WAAatnC,OAAuCtC,IAAvBZ,EAAQwqC,WAA2BxqC,EAAQwqC,WAAa,IAAI/pC,kBAC1EG,IAAxBZ,EAAQypC,cACHpoC,EAAIooC,YAAczpC,EAAQypC,YACrBrhC,OAAOhH,OAAOpB,EAAQypC,kBACtB7oC,QACmBA,IAA7BZ,EAAQqqC,mBACHhpC,EAAIgpC,iBAAmBrqC,EAAQqqC,uBACjBzpC,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YA7G6B,SA6GjBlC,GACR,IAAMY,EAAU,kBAAKuqC,GAuCrB,YAtCsB3pC,IAAlBxB,EAAO8qC,QAA0C,OAAlB9qC,EAAO8qC,OACtClqC,EAAQkqC,OAAS96B,OAAO9N,YAAYlC,EAAO8qC,QAG3ClqC,EAAQkqC,YAAStpC,OAEUA,IAA3BxB,EAAOkrC,iBACoB,OAA3BlrC,EAAOkrC,gBACPtqC,EAAQsqC,gBAAkBlrC,EAAOkrC,gBAGjCtqC,EAAQsqC,gBAAkB,IAAI7pC,gBAERG,IAAtBxB,EAAOorC,YAAkD,OAAtBprC,EAAOorC,WAC1CxqC,EAAQwqC,WAAaprC,EAAOorC,WAG5BxqC,EAAQwqC,WAAa,IAAI/pC,gBAEFG,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAO9G,YAAYlC,EAAOqqC,aAGhDzpC,EAAQypC,iBAAc7oC,OAEMA,IAA5BxB,EAAOirC,kBACqB,OAA5BjrC,EAAOirC,iBACPrqC,EAAQqqC,iBAAmBjrC,EAAOirC,iBAGlCrqC,EAAQqqC,iBAAmB,OAETzpC,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAyCTyqC,EAAyB,CAAErkC,OAAQ,IAC5B2xB,EAAqB,CAC9Bh4B,OAD8B,SACvBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAgB5B,YAfuB4B,IAAnBZ,EAAQkqC,QACR96B,OAAOrP,OAAOC,EAAQkqC,OAAQjqC,EAAOE,OAAO,IAAIqF,QAAQC,SAErB,IAAnCzF,EAAQ0qC,gBAAgBpuC,QACxB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ0qC,iBAEF,IAA9B1qC,EAAQ2qC,WAAWruC,QACnB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ2qC,iBAER/pC,IAAxBZ,EAAQypC,aACRrhC,OAAOrI,OAAOC,EAAQypC,YAAaxpC,EAAOE,OAAO,IAAIqF,QAAQC,SAE1C,KAAnBzF,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAnB8B,SAmBvBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKyqC,GACrB,MAAOjqC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQkqC,OAAS96B,OAAO9O,OAAOE,EAAQA,EAAOL,UAC9C,MACJ,KAAK,EACDH,EAAQ0qC,gBAAkBlqC,EAAOwC,QACjC,MACJ,KAAK,EACDhD,EAAQ2qC,WAAanqC,EAAOwC,QAC5B,MACJ,KAAK,EACDhD,EAAQypC,YAAcrhC,OAAO9H,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhD8B,SAgDrB9B,GACL,IAAMY,EAAU,kBAAKyqC,GA0BrB,YAzBsB7pC,IAAlBxB,EAAO8qC,QAA0C,OAAlB9qC,EAAO8qC,OACtClqC,EAAQkqC,OAAS96B,OAAOlO,SAAS9B,EAAO8qC,QAGxClqC,EAAQkqC,YAAStpC,OAEUA,IAA3BxB,EAAOsrC,iBACoB,OAA3BtrC,EAAOsrC,kBACP1qC,EAAQ0qC,gBAAkBznC,EAAgB7D,EAAOsrC,uBAE3B9pC,IAAtBxB,EAAOurC,YAAkD,OAAtBvrC,EAAOurC,aAC1C3qC,EAAQ2qC,WAAa1nC,EAAgB7D,EAAOurC,kBAErB/pC,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAOlH,SAAS9B,EAAOqqC,aAG7CzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OA7E8B,SA6EvBpB,GACH,IAAMqB,EAAM,GAcZ,YAbmBT,IAAnBZ,EAAQkqC,SACH7oC,EAAI6oC,OAASlqC,EAAQkqC,OAAS96B,OAAOhO,OAAOpB,EAAQkqC,aAAUtpC,QACvCA,IAA5BZ,EAAQ0qC,kBACHrpC,EAAIqpC,gBAAkBxnC,OAA4CtC,IAA5BZ,EAAQ0qC,gBACzC1qC,EAAQ0qC,gBACR,IAAIjqC,kBACSG,IAAvBZ,EAAQ2qC,aACHtpC,EAAIspC,WAAaznC,OAAuCtC,IAAvBZ,EAAQ2qC,WAA2B3qC,EAAQ2qC,WAAa,IAAIlqC,kBAC1EG,IAAxBZ,EAAQypC,cACHpoC,EAAIooC,YAAczpC,EAAQypC,YACrBrhC,OAAOhH,OAAOpB,EAAQypC,kBACtB7oC,QACSA,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YA9F8B,SA8FlBlC,GACR,IAAMY,EAAU,kBAAKyqC,GAgCrB,YA/BsB7pC,IAAlBxB,EAAO8qC,QAA0C,OAAlB9qC,EAAO8qC,OACtClqC,EAAQkqC,OAAS96B,OAAO9N,YAAYlC,EAAO8qC,QAG3ClqC,EAAQkqC,YAAStpC,OAEUA,IAA3BxB,EAAOsrC,iBACoB,OAA3BtrC,EAAOsrC,gBACP1qC,EAAQ0qC,gBAAkBtrC,EAAOsrC,gBAGjC1qC,EAAQ0qC,gBAAkB,IAAIjqC,gBAERG,IAAtBxB,EAAOurC,YAAkD,OAAtBvrC,EAAOurC,WAC1C3qC,EAAQ2qC,WAAavrC,EAAOurC,WAG5B3qC,EAAQ2qC,WAAa,IAAIlqC,gBAEFG,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAO9G,YAAYlC,EAAOqqC,aAGhDzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAgGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAEzB,SAASjE,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,sZC7wDE2gB,EAAW,CAAEN,MAAO,GAAI5V,OAAQ,IACzBX,EAAO,CAChBhM,OADgB,SACTC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANsB,KAAlBgB,EAAQsiB,OACRriB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsiB,OAEd,KAAnBtiB,EAAQ0M,QACRzM,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0M,QAE9BzM,GAEXK,OAVgB,SAUTC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4iB,GACrB,MAAOpiB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsiB,MAAQ9hB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0M,OAASlM,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BgB,SA8BP9B,GACL,IAAMY,EAAU,kBAAK4iB,GAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQhgB,OAAOlD,EAAOkjB,OAG9BtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASpK,OAAOlD,EAAOsN,QAG/B1M,EAAQ0M,OAAS,GAEd1M,GAEXoB,OA9CgB,SA8CTpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQsiB,QAAwBjhB,EAAIihB,MAAQtiB,EAAQsiB,YACjC1hB,IAAnBZ,EAAQ0M,SAAyBrL,EAAIqL,OAAS1M,EAAQ0M,QAC/CrL,GAEXC,YApDgB,SAoDJlC,GACR,IAAMY,EAAU,kBAAK4iB,GAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQljB,EAAOkjB,MAGvBtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAAStN,EAAOsN,OAGxB1M,EAAQ0M,OAAS,GAEd1M,IAGT6mB,EAAc,CAAEvE,MAAO,GAAI5V,OAAQ,IAC5Boa,EAAU,CACnB/mB,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANsB,KAAlBgB,EAAQsiB,OACRriB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsiB,OAEd,KAAnBtiB,EAAQ0M,QACRzM,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0M,QAE9BzM,GAEXK,OAVmB,SAUZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6mB,GACrB,MAAOrmB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsiB,MAAQ9hB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0M,OAASlM,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BmB,SA8BV9B,GACL,IAAMY,EAAU,kBAAK6mB,GAarB,YAZqBjmB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQhgB,OAAOlD,EAAOkjB,OAG9BtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASpK,OAAOlD,EAAOsN,QAG/B1M,EAAQ0M,OAAS,GAEd1M,GAEXoB,OA9CmB,SA8CZpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQsiB,QAAwBjhB,EAAIihB,MAAQtiB,EAAQsiB,YACjC1hB,IAAnBZ,EAAQ0M,SAAyBrL,EAAIqL,OAAS1M,EAAQ0M,QAC/CrL,GAEXC,YApDmB,SAoDPlC,GACR,IAAMY,EAAU,kBAAK6mB,GAarB,YAZqBjmB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQljB,EAAOkjB,MAGvBtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAAStN,EAAOsN,OAGxB1M,EAAQ0M,OAAS,GAEd1M,K,yYCxITwL,EAAe,CAAE5L,QAAS,EAAGC,MAAO,GAC7B8I,EAAW,CACpB5I,OADoB,SACbC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANwB,IAApBgB,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAVoB,SAUbC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKwL,GACrB,MAAOhL,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,EAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BoB,SA8BX9B,GACL,IAAMY,EAAU,kBAAKwL,GAarB,YAZuB5K,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUuB,OAAO/B,EAAOQ,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQsB,OAAO/B,EAAOS,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXoB,OA9CoB,SA8CbpB,GACH,IAAMqB,EAAM,GAGZ,YAFoBT,IAApBZ,EAAQJ,UAA0ByB,EAAIzB,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwBwB,EAAIxB,MAAQG,EAAQH,OAC7CwB,GAEXC,YApDoB,SAoDRlC,GACR,IAAMY,EAAU,kBAAKwL,GAarB,YAZuB5K,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUR,EAAOQ,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQT,EAAOS,MAGvBG,EAAQH,MAAQ,EAEbG,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,idCgQEgG,G,UAAa,CAAEC,eAAgB,EAAGC,eAAgB,IAC3CC,EAAS,CAClBrI,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OAN+B,IAA3BgB,EAAQkI,gBACRjI,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQkI,gBAEL,IAA3BlI,EAAQmI,gBACRlI,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQmI,gBAE9BlI,GAEXK,OAVkB,SAUXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiI,GACrB,MAAOzH,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQkI,eAAiBlH,EAAaR,EAAO6H,UAC7C,MACJ,KAAK,EACDrI,EAAQmI,eAAiBnH,EAAaR,EAAO6H,UAC7C,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BkB,SA8BT9B,GACL,IAAMY,EAAU,kBAAKiI,GAarB,YAZ8BrH,IAA1BxB,EAAO8I,gBAA0D,OAA1B9I,EAAO8I,eAC9ClI,EAAQkI,eAAiB/G,OAAO/B,EAAO8I,gBAGvClI,EAAQkI,eAAiB,OAECtH,IAA1BxB,EAAO+I,gBAA0D,OAA1B/I,EAAO+I,eAC9CnI,EAAQmI,eAAiBhH,OAAO/B,EAAO+I,gBAGvCnI,EAAQmI,eAAiB,EAEtBnI,GAEXoB,OA9CkB,SA8CXpB,GACH,IAAMqB,EAAM,GAKZ,YAJ2BT,IAA3BZ,EAAQkI,iBACH7G,EAAI6G,eAAiBlI,EAAQkI,qBACPtH,IAA3BZ,EAAQmI,iBACH9G,EAAI8G,eAAiBnI,EAAQmI,gBAC3B9G,GAEXC,YAtDkB,SAsDNlC,GACR,IAAMY,EAAU,kBAAKiI,GAarB,YAZ8BrH,IAA1BxB,EAAO8I,gBAA0D,OAA1B9I,EAAO8I,eAC9ClI,EAAQkI,eAAiB9I,EAAO8I,eAGhClI,EAAQkI,eAAiB,OAECtH,IAA1BxB,EAAO+I,gBAA0D,OAA1B/I,EAAO+I,eAC9CnI,EAAQmI,eAAiB/I,EAAO+I,eAGhCnI,EAAQmI,eAAiB,EAEtBnI,IA4DXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,mZC9eEiH,EAAU,CAAEC,QAAS,IACd5C,EAAM,CACfxG,OADe,SACRC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANwB,KAApBgB,EAAQmJ,SACRlJ,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmJ,SAER,IAAzBnJ,EAAQrB,MAAMrC,QACd2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQrB,OAE7BsB,GAEXK,OAVe,SAURC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkJ,GACrB,MAAO1I,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmJ,QAAU3I,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQrB,MAAQ6B,EAAOwC,QACvB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9Be,SA8BN9B,GACL,IAAMY,EAAU,kBAAKkJ,GAUrB,YATuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU7G,OAAOlD,EAAO+J,SAGhCnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCqB,EAAQrB,MAAQsE,EAAgB7D,EAAOT,QAEpCqB,GAEXoB,OA3Ce,SA2CRpB,GACH,IAAMqB,EAAM,GAIZ,YAHoBT,IAApBZ,EAAQmJ,UAA0B9H,EAAI8H,QAAUnJ,EAAQmJ,cACtCvI,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQuE,OAAkCtC,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aAC5EY,GAEXC,YAlDe,SAkDHlC,GACR,IAAMY,EAAU,kBAAKkJ,GAarB,YAZuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU/J,EAAO+J,QAGzBnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,mdC9FnB2lC,EAAkB,CAAE5kC,QAAS,GAAI6kC,cAAe,EAAG/7B,SAAU,GACtDjD,EAAc,CACvB9L,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,MAZwB,KAApBgB,EAAQgG,SACR/F,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgG,cAEdpF,IAAnBZ,EAAQiG,QACRM,OAAIxG,OAAOC,EAAQiG,OAAQhG,EAAOE,OAAO,IAAIqF,QAAQC,SAE3B,IAA1BzF,EAAQ6qC,eACR5qC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQ6qC,eAEZ,IAArB7qC,EAAQ8O,UACR7O,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQ8O,UAE9B7O,GAEXK,OAhBuB,SAgBhBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4qC,GACrB,MAAOpqC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgG,QAAUxF,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQiG,OAASM,OAAIjG,OAAOE,EAAQA,EAAOL,UAC3C,MACJ,KAAK,EACDH,EAAQ6qC,cAAgB7pC,EAAaR,EAAO6H,UAC5C,MACJ,KAAK,EACDrI,EAAQ8O,SAAW9N,EAAaR,EAAO6H,UACvC,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1CuB,SA0Cd9B,GACL,IAAMY,EAAU,kBAAK4qC,GAyBrB,YAxBuBhqC,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU1D,OAAOlD,EAAO4G,SAGhChG,EAAQgG,QAAU,QAEApF,IAAlBxB,EAAO6G,QAA0C,OAAlB7G,EAAO6G,OACtCjG,EAAQiG,OAASM,OAAIrF,SAAS9B,EAAO6G,QAGrCjG,EAAQiG,YAASrF,OAEQA,IAAzBxB,EAAOyrC,eAAwD,OAAzBzrC,EAAOyrC,cAC7C7qC,EAAQ6qC,cAAgB1pC,OAAO/B,EAAOyrC,eAGtC7qC,EAAQ6qC,cAAgB,OAEJjqC,IAApBxB,EAAO0P,UAA8C,OAApB1P,EAAO0P,SACxC9O,EAAQ8O,SAAW3N,OAAO/B,EAAO0P,UAGjC9O,EAAQ8O,SAAW,EAEhB9O,GAEXoB,OAtEuB,SAsEhBpB,GACH,IAAMqB,EAAM,GAOZ,YANoBT,IAApBZ,EAAQgG,UAA0B3E,EAAI2E,QAAUhG,EAAQgG,cACrCpF,IAAnBZ,EAAQiG,SACH5E,EAAI4E,OAASjG,EAAQiG,OAASM,OAAInF,OAAOpB,EAAQiG,aAAUrF,QACtCA,IAA1BZ,EAAQ6qC,gBACHxpC,EAAIwpC,cAAgB7qC,EAAQ6qC,oBACZjqC,IAArBZ,EAAQ8O,WAA2BzN,EAAIyN,SAAW9O,EAAQ8O,UACnDzN,GAEXC,YAhFuB,SAgFXlC,GACR,IAAMY,EAAU,kBAAK4qC,GAyBrB,YAxBuBhqC,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU5G,EAAO4G,QAGzBhG,EAAQgG,QAAU,QAEApF,IAAlBxB,EAAO6G,QAA0C,OAAlB7G,EAAO6G,OACtCjG,EAAQiG,OAASM,OAAIjF,YAAYlC,EAAO6G,QAGxCjG,EAAQiG,YAASrF,OAEQA,IAAzBxB,EAAOyrC,eAAwD,OAAzBzrC,EAAOyrC,cAC7C7qC,EAAQ6qC,cAAgBzrC,EAAOyrC,cAG/B7qC,EAAQ6qC,cAAgB,OAEJjqC,IAApBxB,EAAO0P,UAA8C,OAApB1P,EAAO0P,SACxC9O,EAAQ8O,SAAW1P,EAAO0P,SAG1B9O,EAAQ8O,SAAW,EAEhB9O,IAsPXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,6ZChXO6oC,EAsDAC,E,4aAxCJ,SAASC,EAAmB5rC,GAC/B,OAAQA,GACJ,KAAK,EACL,IAAK,0BACD,OAAO0rC,EAAWG,wBACtB,KAAK,EACL,IAAK,kBACD,OAAOH,EAAWI,gBACtB,KAAK,EACL,IAAK,sBACD,OAAOJ,EAAWK,oBACtB,KAAK,EACL,IAAK,iBACD,OAAOL,EAAWM,eACtB,KAAK,EACL,IAAK,2BACD,OAAON,EAAWO,yBACtB,KAAM,EACN,IAAK,eACL,QACI,OAAOP,EAAWp9B,cAGvB,SAAS49B,EAAiBlsC,GAC7B,OAAQA,GACJ,KAAK0rC,EAAWG,wBACZ,MAAO,0BACX,KAAKH,EAAWI,gBACZ,MAAO,kBACX,KAAKJ,EAAWK,oBACZ,MAAO,sBACX,KAAKL,EAAWM,eACZ,MAAO,iBACX,KAAKN,EAAWO,yBACZ,MAAO,2BACX,QACI,MAAO,WAmCZ,SAASE,EAAuBnsC,GACnC,OAAQA,GACJ,KAAK,EACL,IAAK,8BACD,OAAO2rC,EAAeS,4BAC1B,KAAK,EACL,IAAK,iCACD,OAAOT,EAAeU,+BAC1B,KAAK,EACL,IAAK,gCACD,OAAOV,EAAeW,8BAC1B,KAAK,EACL,IAAK,yBACD,OAAOX,EAAeY,uBAC1B,KAAK,EACL,IAAK,2BACD,OAAOZ,EAAea,yBAC1B,KAAK,EACL,IAAK,yBACD,OAAOb,EAAec,uBAC1B,KAAM,EACN,IAAK,eACL,QACI,OAAOd,EAAer9B,cAG3B,SAASo+B,EAAqB1sC,GACjC,OAAQA,GACJ,KAAK2rC,EAAeS,4BAChB,MAAO,8BACX,KAAKT,EAAeU,+BAChB,MAAO,iCACX,KAAKV,EAAeW,8BAChB,MAAO,gCACX,KAAKX,EAAeY,uBAChB,MAAO,yBACX,KAAKZ,EAAea,yBAChB,MAAO,2BACX,KAAKb,EAAec,uBAChB,MAAO,yBACX,QACI,MAAO,YA7HnB,SAAWf,GAEPA,EAAWA,EAAW,2BAA6B,GAAK,0BAExDA,EAAWA,EAAW,mBAAqB,GAAK,kBAEhDA,EAAWA,EAAW,uBAAyB,GAAK,sBAEpDA,EAAWA,EAAW,kBAAoB,GAAK,iBAE/CA,EAAWA,EAAW,4BAA8B,GAAK,2BACzDA,EAAWA,EAAW,iBAAmB,GAAK,gBAXlD,CAYGA,IAAeA,EAAa,KA0C/B,SAAWC,GAEPA,EAAeA,EAAe,+BAAiC,GAAK,8BAKpEA,EAAeA,EAAe,kCAAoC,GAAK,iCAKvEA,EAAeA,EAAe,iCAAmC,GAAK,gCAKtEA,EAAeA,EAAe,0BAA4B,GAAK,yBAK/DA,EAAeA,EAAe,4BAA8B,GAAK,2BAKjEA,EAAeA,EAAe,0BAA4B,GAAK,yBAC/DA,EAAeA,EAAe,iBAAmB,GAAK,eA5B1D,CA6BGA,IAAmBA,EAAiB,KA6CvC,IAAMgB,EAAmB,CAAEhF,MAAO,GAAIxjC,YAAa,IACtC+qB,EAAe,CACxBvuB,OADwB,SACjBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANsB,KAAlBgB,EAAQ+mC,OACR9mC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+mC,OAET,KAAxB/mC,EAAQuD,aACRtD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQuD,aAE9BtD,GAEXK,OAVwB,SAUjBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK+rC,GACrB,MAAOvrC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+mC,MAAQvmC,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQuD,YAAc/C,EAAO6B,SAC7B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BwB,SA8Bf9B,GACL,IAAMY,EAAU,kBAAK+rC,GAarB,YAZqBnrC,IAAjBxB,EAAO2nC,OAAwC,OAAjB3nC,EAAO2nC,MACrC/mC,EAAQ+mC,MAAQzkC,OAAOlD,EAAO2nC,OAG9B/mC,EAAQ+mC,MAAQ,QAEOnmC,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcjB,OAAOlD,EAAOmE,aAGpCvD,EAAQuD,YAAc,GAEnBvD,GAEXoB,OA9CwB,SA8CjBpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQ+mC,QAAwB1lC,EAAI0lC,MAAQ/mC,EAAQ+mC,YAC5BnmC,IAAxBZ,EAAQuD,cAA8BlC,EAAIkC,YAAcvD,EAAQuD,aACzDlC,GAEXC,YApDwB,SAoDZlC,GACR,IAAMY,EAAU,kBAAK+rC,GAarB,YAZqBnrC,IAAjBxB,EAAO2nC,OAAwC,OAAjB3nC,EAAO2nC,MACrC/mC,EAAQ+mC,MAAQ3nC,EAAO2nC,MAGvB/mC,EAAQ+mC,MAAQ,QAEOnmC,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcnE,EAAOmE,YAG7BvD,EAAQuD,YAAc,GAEnBvD,IAGTgsC,EAAc,CAAE9e,WAAY,EAAGtE,UAAW,IACnCuF,EAAU,CACnBpuB,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACD,IAAvBgB,EAAQktB,YACRjtB,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQktB,YAEV,KAAtBltB,EAAQ4oB,WACR3oB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ4oB,WALC,uBAOtB5oB,EAAQ0M,QAPc,IAOtC,2BAAgC,KAArBpH,EAAqB,QAC5ByG,OAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UARP,8BAUtC,OAAOxF,GAEXK,OAbmB,SAaZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKgsC,GACrBhsC,EAAQ0M,OAAS,GACjB,MAAOlM,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQktB,WAAalsB,EAAaR,EAAO6H,UACzC,MACJ,KAAK,EACDrI,EAAQ4oB,UAAYpoB,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQ0M,OAAO9P,KAAKmP,OAAKzL,OAAOE,EAAQA,EAAOL,WAC/C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SArCmB,SAqCV9B,GACL,IAAMY,EAAU,kBAAKgsC,GAcrB,GAbAhsC,EAAQ0M,OAAS,QACS9L,IAAtBxB,EAAO8tB,YAAkD,OAAtB9tB,EAAO8tB,WAC1CltB,EAAQktB,WAAa/rB,OAAO/B,EAAO8tB,YAGnCltB,EAAQktB,WAAa,OAEAtsB,IAArBxB,EAAOwpB,WAAgD,OAArBxpB,EAAOwpB,UACzC5oB,EAAQ4oB,UAAYtmB,OAAOlD,EAAOwpB,WAGlC5oB,EAAQ4oB,UAAY,QAEFhoB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,wBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,OAAK7K,SAASyE,KAFiB,+BAK3D,OAAO3F,GAEXoB,OA3DmB,SA2DZpB,GACH,IAAMqB,EAAM,GASZ,YARuBT,IAAvBZ,EAAQktB,aAA6B7rB,EAAI6rB,WAAaltB,EAAQktB,iBACxCtsB,IAAtBZ,EAAQ4oB,YAA4BvnB,EAAIunB,UAAY5oB,EAAQ4oB,WACxD5oB,EAAQ0M,OACRrL,EAAIqL,OAAS1M,EAAQ0M,OAAO9G,KAAI,SAACD,GAAD,OAAQA,EAAIoG,OAAK3K,OAAOuE,QAAK/E,KAG7DS,EAAIqL,OAAS,GAEVrL,GAEXC,YAvEmB,SAuEPlC,GACR,IAAMY,EAAU,kBAAKgsC,GAcrB,GAbAhsC,EAAQ0M,OAAS,QACS9L,IAAtBxB,EAAO8tB,YAAkD,OAAtB9tB,EAAO8tB,WAC1CltB,EAAQktB,WAAa9tB,EAAO8tB,WAG5BltB,EAAQktB,WAAa,OAEAtsB,IAArBxB,EAAOwpB,WAAgD,OAArBxpB,EAAOwpB,UACzC5oB,EAAQ4oB,UAAYxpB,EAAOwpB,UAG3B5oB,EAAQ4oB,UAAY,QAEFhoB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,wBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,OAAKzK,YAAYqE,KAFc,+BAK3D,OAAO3F,IAGTisC,EAAe,CAAE/e,WAAY,EAAG3b,OAAQ,GACjCwc,EAAW,CACpBhuB,OADoB,SACbC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACD,IAAvBgB,EAAQktB,YACRjtB,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQktB,iBAEZtsB,IAApBZ,EAAQmE,SACRoC,OAAIxG,OAAOC,EAAQmE,QAASlE,EAAOE,OAAO,IAAIqF,QAAQC,SAEnC,IAAnBzF,EAAQuR,QACRtR,EAAOE,OAAO,IAAIE,MAAML,EAAQuR,aAEH3Q,IAA7BZ,EAAQksC,kBACR7d,EAAYtuB,OAAOC,EAAQksC,iBAAkBjsC,EAAOE,OAAO,IAAIqF,QAAQC,cAEhD7E,IAAvBZ,EAAQmsC,YACRrsC,OAAUC,OAAOmK,EAAYlK,EAAQmsC,YAAalsC,EAAOE,OAAO,IAAIqF,QAAQC,cAEjD7E,IAA3BZ,EAAQosC,gBACRtsC,OAAUC,OAAOmK,EAAYlK,EAAQosC,gBAAiBnsC,EAAOE,OAAO,IAAIqF,QAAQC,SAjB9C,uBAmBtBzF,EAAQqsC,cAnBc,IAmBtC,2BAAsC,KAA3B/mC,EAA2B,QAClCyG,OAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UApBP,8BA4BtC,YANgC7E,IAA5BZ,EAAQssC,iBACRxsC,OAAUC,OAAOmK,EAAYlK,EAAQssC,iBAAkBrsC,EAAOE,OAAO,IAAIqF,QAAQC,cAEvD7E,IAA1BZ,EAAQusC,eACRzsC,OAAUC,OAAOmK,EAAYlK,EAAQusC,eAAgBtsC,EAAOE,OAAO,IAAIqF,QAAQC,SAE5ExF,GAEXK,OA/BoB,SA+BbC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKisC,GACrBjsC,EAAQqsC,aAAe,GACvB,MAAO7rC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQktB,WAAalsB,EAAaR,EAAO6H,UACzC,MACJ,KAAK,EACDrI,EAAQmE,QAAUoC,OAAIjG,OAAOE,EAAQA,EAAOL,UAC5C,MACJ,KAAK,EACDH,EAAQuR,OAAS/Q,EAAOH,QACxB,MACJ,KAAK,EACDL,EAAQksC,iBAAmB7d,EAAY/tB,OAAOE,EAAQA,EAAOL,UAC7D,MACJ,KAAK,EACDH,EAAQmsC,WAAathC,EAAc/K,OAAUQ,OAAOE,EAAQA,EAAOL,WACnE,MACJ,KAAK,EACDH,EAAQosC,eAAiBvhC,EAAc/K,OAAUQ,OAAOE,EAAQA,EAAOL,WACvE,MACJ,KAAK,EACDH,EAAQqsC,aAAazvC,KAAKmP,OAAKzL,OAAOE,EAAQA,EAAOL,WACrD,MACJ,KAAK,EACDH,EAAQssC,gBAAkBzhC,EAAc/K,OAAUQ,OAAOE,EAAQA,EAAOL,WACxE,MACJ,KAAK,EACDH,EAAQusC,cAAgB1hC,EAAc/K,OAAUQ,OAAOE,EAAQA,EAAOL,WACtE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAzEoB,SAyEX9B,GACL,IAAMY,EAAU,kBAAKisC,GAuCrB,GAtCAjsC,EAAQqsC,aAAe,QACGzrC,IAAtBxB,EAAO8tB,YAAkD,OAAtB9tB,EAAO8tB,WAC1CltB,EAAQktB,WAAa/rB,OAAO/B,EAAO8tB,YAGnCltB,EAAQktB,WAAa,OAEFtsB,IAAnBxB,EAAO+E,SAA4C,OAAnB/E,EAAO+E,QACvCnE,EAAQmE,QAAUoC,OAAIrF,SAAS9B,EAAO+E,SAGtCnE,EAAQmE,aAAUvD,OAEAA,IAAlBxB,EAAOmS,QAA0C,OAAlBnS,EAAOmS,OACtCvR,EAAQuR,OAASg6B,EAAuBnsC,EAAOmS,QAG/CvR,EAAQuR,OAAS,OAEW3Q,IAA5BxB,EAAO8sC,kBACqB,OAA5B9sC,EAAO8sC,iBACPlsC,EAAQksC,iBAAmB7d,EAAYntB,SAAS9B,EAAO8sC,kBAGvDlsC,EAAQksC,sBAAmBtrC,OAELA,IAAtBxB,EAAO+sC,YAAkD,OAAtB/sC,EAAO+sC,WAC1CnsC,EAAQmsC,WAAarhC,EAAkB1L,EAAO+sC,YAG9CnsC,EAAQmsC,gBAAavrC,OAEKA,IAA1BxB,EAAOgtC,gBAA0D,OAA1BhtC,EAAOgtC,eAC9CpsC,EAAQosC,eAAiBthC,EAAkB1L,EAAOgtC,gBAGlDpsC,EAAQosC,oBAAiBxrC,OAEDA,IAAxBxB,EAAOitC,cAAsD,OAAxBjtC,EAAOitC,aAAuB,wBACnDjtC,EAAOitC,cAD4C,IACnE,2BAAqC,KAA1B1mC,EAA0B,QACjC3F,EAAQqsC,aAAazvC,KAAKmP,OAAK7K,SAASyE,KAFuB,+BAkBvE,YAb+B/E,IAA3BxB,EAAOktC,iBACoB,OAA3BltC,EAAOktC,gBACPtsC,EAAQssC,gBAAkBxhC,EAAkB1L,EAAOktC,iBAGnDtsC,EAAQssC,qBAAkB1rC,OAEDA,IAAzBxB,EAAOmtC,eAAwD,OAAzBntC,EAAOmtC,cAC7CvsC,EAAQusC,cAAgBzhC,EAAkB1L,EAAOmtC,eAGjDvsC,EAAQusC,mBAAgB3rC,EAErBZ,GAEXoB,OArIoB,SAqIbpB,GACH,IAAMqB,EAAM,GAoCZ,YAnCuBT,IAAvBZ,EAAQktB,aAA6B7rB,EAAI6rB,WAAaltB,EAAQktB,iBAC1CtsB,IAApBZ,EAAQmE,UACH9C,EAAI8C,QAAUnE,EAAQmE,QAAUoC,OAAInF,OAAOpB,EAAQmE,cAAWvD,QAChDA,IAAnBZ,EAAQuR,SACHlQ,EAAIkQ,OAASu6B,EAAqB9rC,EAAQuR,cAClB3Q,IAA7BZ,EAAQksC,mBACH7qC,EAAI6qC,iBAAmBlsC,EAAQksC,iBAC1B7d,EAAYjtB,OAAOpB,EAAQksC,uBAC3BtrC,QACaA,IAAvBZ,EAAQmsC,aACH9qC,EAAI8qC,gBACsBvrC,IAAvBZ,EAAQmsC,WACFnsC,EAAQmsC,WAAWphC,cACnB,WACanK,IAA3BZ,EAAQosC,iBACH/qC,EAAI+qC,oBAC0BxrC,IAA3BZ,EAAQosC,eACFpsC,EAAQosC,eAAerhC,cACvB,MACV/K,EAAQqsC,aACRhrC,EAAIgrC,aAAersC,EAAQqsC,aAAazmC,KAAI,SAACD,GAAD,OAAOA,EAAIoG,OAAK3K,OAAOuE,QAAK/E,KAGxES,EAAIgrC,aAAe,QAEKzrC,IAA5BZ,EAAQssC,kBACHjrC,EAAIirC,qBAC2B1rC,IAA5BZ,EAAQssC,gBACFtsC,EAAQssC,gBAAgBvhC,cACxB,WACYnK,IAA1BZ,EAAQusC,gBACHlrC,EAAIkrC,mBACyB3rC,IAA1BZ,EAAQusC,cACFvsC,EAAQusC,cAAcxhC,cACtB,MACP1J,GAEXC,YA5KoB,SA4KRlC,GACR,IAAMY,EAAU,kBAAKisC,GAuCrB,GAtCAjsC,EAAQqsC,aAAe,QACGzrC,IAAtBxB,EAAO8tB,YAAkD,OAAtB9tB,EAAO8tB,WAC1CltB,EAAQktB,WAAa9tB,EAAO8tB,WAG5BltB,EAAQktB,WAAa,OAEFtsB,IAAnBxB,EAAO+E,SAA4C,OAAnB/E,EAAO+E,QACvCnE,EAAQmE,QAAUoC,OAAIjF,YAAYlC,EAAO+E,SAGzCnE,EAAQmE,aAAUvD,OAEAA,IAAlBxB,EAAOmS,QAA0C,OAAlBnS,EAAOmS,OACtCvR,EAAQuR,OAASnS,EAAOmS,OAGxBvR,EAAQuR,OAAS,OAEW3Q,IAA5BxB,EAAO8sC,kBACqB,OAA5B9sC,EAAO8sC,iBACPlsC,EAAQksC,iBAAmB7d,EAAY/sB,YAAYlC,EAAO8sC,kBAG1DlsC,EAAQksC,sBAAmBtrC,OAELA,IAAtBxB,EAAO+sC,YAAkD,OAAtB/sC,EAAO+sC,WAC1CnsC,EAAQmsC,WAAa/sC,EAAO+sC,WAG5BnsC,EAAQmsC,gBAAavrC,OAEKA,IAA1BxB,EAAOgtC,gBAA0D,OAA1BhtC,EAAOgtC,eAC9CpsC,EAAQosC,eAAiBhtC,EAAOgtC,eAGhCpsC,EAAQosC,oBAAiBxrC,OAEDA,IAAxBxB,EAAOitC,cAAsD,OAAxBjtC,EAAOitC,aAAuB,wBACnDjtC,EAAOitC,cAD4C,IACnE,2BAAqC,KAA1B1mC,EAA0B,QACjC3F,EAAQqsC,aAAazvC,KAAKmP,OAAKzK,YAAYqE,KAFoB,+BAkBvE,YAb+B/E,IAA3BxB,EAAOktC,iBACoB,OAA3BltC,EAAOktC,gBACPtsC,EAAQssC,gBAAkBltC,EAAOktC,gBAGjCtsC,EAAQssC,qBAAkB1rC,OAEDA,IAAzBxB,EAAOmtC,eAAwD,OAAzBntC,EAAOmtC,cAC7CvsC,EAAQusC,cAAgBntC,EAAOmtC,cAG/BvsC,EAAQusC,mBAAgB3rC,EAErBZ,IAGTwsC,EAAkB,CAAEC,IAAK,GAAIC,QAAS,GAAIC,GAAI,GAAIC,WAAY,IACvDve,EAAc,CACvBtuB,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,MAZoB,KAAhBgB,EAAQysC,KACRxsC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQysC,KAEb,KAApBzsC,EAAQ0sC,SACRzsC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0sC,SAElB,KAAf1sC,EAAQ2sC,IACR1sC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ2sC,IAEV,KAAvB3sC,EAAQ4sC,YACR3sC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ4sC,YAE9B3sC,GAEXK,OAhBuB,SAgBhBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKwsC,GACrB,MAAOhsC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQysC,IAAMjsC,EAAO6B,SACrB,MACJ,KAAK,EACDrC,EAAQ0sC,QAAUlsC,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQ2sC,GAAKnsC,EAAO6B,SACpB,MACJ,KAAK,EACDrC,EAAQ4sC,WAAapsC,EAAO6B,SAC5B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1CuB,SA0Cd9B,GACL,IAAMY,EAAU,kBAAKwsC,GAyBrB,YAxBmB5rC,IAAfxB,EAAOqtC,KAAoC,OAAfrtC,EAAOqtC,IACnCzsC,EAAQysC,IAAMnqC,OAAOlD,EAAOqtC,KAG5BzsC,EAAQysC,IAAM,QAEK7rC,IAAnBxB,EAAOstC,SAA4C,OAAnBttC,EAAOstC,QACvC1sC,EAAQ0sC,QAAUpqC,OAAOlD,EAAOstC,SAGhC1sC,EAAQ0sC,QAAU,QAEJ9rC,IAAdxB,EAAOutC,IAAkC,OAAdvtC,EAAOutC,GAClC3sC,EAAQ2sC,GAAKrqC,OAAOlD,EAAOutC,IAG3B3sC,EAAQ2sC,GAAK,QAES/rC,IAAtBxB,EAAOwtC,YAAkD,OAAtBxtC,EAAOwtC,WAC1C5sC,EAAQ4sC,WAAatqC,OAAOlD,EAAOwtC,YAGnC5sC,EAAQ4sC,WAAa,GAElB5sC,GAEXoB,OAtEuB,SAsEhBpB,GACH,IAAMqB,EAAM,GAKZ,YAJgBT,IAAhBZ,EAAQysC,MAAsBprC,EAAIorC,IAAMzsC,EAAQysC,UAC5B7rC,IAApBZ,EAAQ0sC,UAA0BrrC,EAAIqrC,QAAU1sC,EAAQ0sC,cACzC9rC,IAAfZ,EAAQ2sC,KAAqBtrC,EAAIsrC,GAAK3sC,EAAQ2sC,SACvB/rC,IAAvBZ,EAAQ4sC,aAA6BvrC,EAAIurC,WAAa5sC,EAAQ4sC,YACvDvrC,GAEXC,YA9EuB,SA8EXlC,GACR,IAAMY,EAAU,kBAAKwsC,GAyBrB,YAxBmB5rC,IAAfxB,EAAOqtC,KAAoC,OAAfrtC,EAAOqtC,IACnCzsC,EAAQysC,IAAMrtC,EAAOqtC,IAGrBzsC,EAAQysC,IAAM,QAEK7rC,IAAnBxB,EAAOstC,SAA4C,OAAnBttC,EAAOstC,QACvC1sC,EAAQ0sC,QAAUttC,EAAOstC,QAGzB1sC,EAAQ0sC,QAAU,QAEJ9rC,IAAdxB,EAAOutC,IAAkC,OAAdvtC,EAAOutC,GAClC3sC,EAAQ2sC,GAAKvtC,EAAOutC,GAGpB3sC,EAAQ2sC,GAAK,QAES/rC,IAAtBxB,EAAOwtC,YAAkD,OAAtBxtC,EAAOwtC,WAC1C5sC,EAAQ4sC,WAAaxtC,EAAOwtC,WAG5B5sC,EAAQ4sC,WAAa,GAElB5sC,IAGT6sC,EAAW,CAAE3f,WAAY,EAAGM,MAAO,GAAIsf,OAAQ,GACxC7e,EAAO,CAChBluB,OADgB,SACTC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,OAT2B,IAAvBgB,EAAQktB,YACRjtB,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQktB,YAEd,KAAlBltB,EAAQwtB,OACRvtB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQwtB,OAEd,IAAnBxtB,EAAQ8sC,QACR7sC,EAAOE,OAAO,IAAIE,MAAML,EAAQ8sC,QAE7B7sC,GAEXK,OAbgB,SAaTC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6sC,GACrB,MAAOrsC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQktB,WAAalsB,EAAaR,EAAO6H,UACzC,MACJ,KAAK,EACDrI,EAAQwtB,MAAQhtB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ8sC,OAAStsC,EAAOH,QACxB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApCgB,SAoCP9B,GACL,IAAMY,EAAU,kBAAK6sC,GAmBrB,YAlB0BjsC,IAAtBxB,EAAO8tB,YAAkD,OAAtB9tB,EAAO8tB,WAC1CltB,EAAQktB,WAAa/rB,OAAO/B,EAAO8tB,YAGnCltB,EAAQktB,WAAa,OAEJtsB,IAAjBxB,EAAOouB,OAAwC,OAAjBpuB,EAAOouB,MACrCxtB,EAAQwtB,MAAQlrB,OAAOlD,EAAOouB,OAG9BxtB,EAAQwtB,MAAQ,QAEE5sB,IAAlBxB,EAAO0tC,QAA0C,OAAlB1tC,EAAO0tC,OACtC9sC,EAAQ8sC,OAAS9B,EAAmB5rC,EAAO0tC,QAG3C9sC,EAAQ8sC,OAAS,EAEd9sC,GAEXoB,OA1DgB,SA0DTpB,GACH,IAAMqB,EAAM,GAKZ,YAJuBT,IAAvBZ,EAAQktB,aAA6B7rB,EAAI6rB,WAAaltB,EAAQktB,iBAC5CtsB,IAAlBZ,EAAQwtB,QAAwBnsB,EAAImsB,MAAQxtB,EAAQwtB,YACjC5sB,IAAnBZ,EAAQ8sC,SACHzrC,EAAIyrC,OAASxB,EAAiBtrC,EAAQ8sC,SACpCzrC,GAEXC,YAlEgB,SAkEJlC,GACR,IAAMY,EAAU,kBAAK6sC,GAmBrB,YAlB0BjsC,IAAtBxB,EAAO8tB,YAAkD,OAAtB9tB,EAAO8tB,WAC1CltB,EAAQktB,WAAa9tB,EAAO8tB,WAG5BltB,EAAQktB,WAAa,OAEJtsB,IAAjBxB,EAAOouB,OAAwC,OAAjBpuB,EAAOouB,MACrCxtB,EAAQwtB,MAAQpuB,EAAOouB,MAGvBxtB,EAAQwtB,MAAQ,QAEE5sB,IAAlBxB,EAAO0tC,QAA0C,OAAlB1tC,EAAO0tC,OACtC9sC,EAAQ8sC,OAAS1tC,EAAO0tC,OAGxB9sC,EAAQ8sC,OAAS,EAEd9sC,IAGT+sC,EAAoB,GACbxe,EAAgB,CACzBxuB,OADyB,SAClBC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQgtC,YADc,IACtC,2BAAoC,KAAzB1nC,EAAyB,QAChCyG,OAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFP,8BAOtC,YAHiC7E,IAA7BZ,EAAQitC,kBACRtkC,OAAS5I,OAAOC,EAAQitC,iBAAkBhtC,EAAOE,OAAO,IAAIqF,QAAQC,SAEjExF,GAEXK,OAVyB,SAUlBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK+sC,GACrB/sC,EAAQgtC,WAAa,GACrB,MAAOxsC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgtC,WAAWpwC,KAAKmP,OAAKzL,OAAOE,EAAQA,EAAOL,WACnD,MACJ,KAAK,EACDH,EAAQitC,iBAAmBtkC,OAASrI,OAAOE,EAAQA,EAAOL,UAC1D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/ByB,SA+BhB9B,GACL,IAAMY,EAAU,kBAAK+sC,GAErB,GADA/sC,EAAQgtC,WAAa,QACKpsC,IAAtBxB,EAAO4tC,YAAkD,OAAtB5tC,EAAO4tC,WAAqB,wBAC/C5tC,EAAO4tC,YADwC,IAC/D,2BAAmC,KAAxBrnC,EAAwB,QAC/B3F,EAAQgtC,WAAWpwC,KAAKmP,OAAK7K,SAASyE,KAFqB,+BAYnE,YAPgC/E,IAA5BxB,EAAO6tC,kBACqB,OAA5B7tC,EAAO6tC,iBACPjtC,EAAQitC,iBAAmBtkC,OAASzH,SAAS9B,EAAO6tC,kBAGpDjtC,EAAQitC,sBAAmBrsC,EAExBZ,GAEXoB,OAhDyB,SAgDlBpB,GACH,IAAMqB,EAAM,GAWZ,OAVIrB,EAAQgtC,WACR3rC,EAAI2rC,WAAahtC,EAAQgtC,WAAWpnC,KAAI,SAACD,GAAD,OAAOA,EAAIoG,OAAK3K,OAAOuE,QAAK/E,KAGpES,EAAI2rC,WAAa,QAEQpsC,IAA7BZ,EAAQitC,mBACH5rC,EAAI4rC,iBAAmBjtC,EAAQitC,iBAC1BtkC,OAASvH,OAAOpB,EAAQitC,uBACxBrsC,GACHS,GAEXC,YA9DyB,SA8DblC,GACR,IAAMY,EAAU,kBAAK+sC,GAErB,GADA/sC,EAAQgtC,WAAa,QACKpsC,IAAtBxB,EAAO4tC,YAAkD,OAAtB5tC,EAAO4tC,WAAqB,wBAC/C5tC,EAAO4tC,YADwC,IAC/D,2BAAmC,KAAxBrnC,EAAwB,QAC/B3F,EAAQgtC,WAAWpwC,KAAKmP,OAAKzK,YAAYqE,KAFkB,+BAYnE,YAPgC/E,IAA5BxB,EAAO6tC,kBACqB,OAA5B7tC,EAAO6tC,iBACPjtC,EAAQitC,iBAAmBtkC,OAASrH,YAAYlC,EAAO6tC,kBAGvDjtC,EAAQitC,sBAAmBrsC,EAExBZ,IAGTktC,EAAmB,GACZ1e,EAAe,CACxBzuB,OADwB,SACjBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,YAH6B4B,IAAzBZ,EAAQmtC,cACRxkC,OAAS5I,OAAOC,EAAQmtC,aAAcltC,EAAOE,OAAO,IAAIqF,QAAQC,SAE7DxF,GAEXK,OAPwB,SAOjBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKktC,GACrB,MAAO1sC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmtC,aAAexkC,OAASrI,OAAOE,EAAQA,EAAOL,UACtD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAxBwB,SAwBf9B,GACL,IAAMY,EAAU,kBAAKktC,GAOrB,YAN4BtsC,IAAxBxB,EAAO+tC,cAAsD,OAAxB/tC,EAAO+tC,aAC5CntC,EAAQmtC,aAAexkC,OAASzH,SAAS9B,EAAO+tC,cAGhDntC,EAAQmtC,kBAAevsC,EAEpBZ,GAEXoB,OAlCwB,SAkCjBpB,GACH,IAAMqB,EAAM,GAKZ,YAJyBT,IAAzBZ,EAAQmtC,eACH9rC,EAAI8rC,aAAentC,EAAQmtC,aACtBxkC,OAASvH,OAAOpB,EAAQmtC,mBACxBvsC,GACHS,GAEXC,YA1CwB,SA0CZlC,GACR,IAAMY,EAAU,kBAAKktC,GAOrB,YAN4BtsC,IAAxBxB,EAAO+tC,cAAsD,OAAxB/tC,EAAO+tC,aAC5CntC,EAAQmtC,aAAexkC,OAASrH,YAAYlC,EAAO+tC,cAGnDntC,EAAQmtC,kBAAevsC,EAEpBZ,IAGTotC,EAAkB,GACX3e,EAAc,CACvB1uB,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,OAT8B,IAA1BgB,EAAQqtC,OAAO/wC,QACf2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQqtC,QAEH,IAA7BrtC,EAAQstC,UAAUhxC,QAClB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQstC,WAEC,IAAjCttC,EAAQutC,cAAcjxC,QACtB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQutC,eAE7BttC,GAEXK,OAbuB,SAahBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKotC,GACrB,MAAO5sC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqtC,OAAS7sC,EAAOwC,QACxB,MACJ,KAAK,EACDhD,EAAQstC,UAAY9sC,EAAOwC,QAC3B,MACJ,KAAK,EACDhD,EAAQutC,cAAgB/sC,EAAOwC,QAC/B,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApCuB,SAoCd9B,GACL,IAAMY,EAAU,kBAAKotC,GAUrB,YATsBxsC,IAAlBxB,EAAOiuC,QAA0C,OAAlBjuC,EAAOiuC,SACtCrtC,EAAQqtC,OAASpqC,EAAgB7D,EAAOiuC,cAEnBzsC,IAArBxB,EAAOkuC,WAAgD,OAArBluC,EAAOkuC,YACzCttC,EAAQstC,UAAYrqC,EAAgB7D,EAAOkuC,iBAElB1sC,IAAzBxB,EAAOmuC,eAAwD,OAAzBnuC,EAAOmuC,gBAC7CvtC,EAAQutC,cAAgBtqC,EAAgB7D,EAAOmuC,gBAE5CvtC,GAEXoB,OAjDuB,SAiDhBpB,GACH,IAAMqB,EAAM,GASZ,YARmBT,IAAnBZ,EAAQqtC,SACHhsC,EAAIgsC,OAASnqC,OAAmCtC,IAAnBZ,EAAQqtC,OAAuBrtC,EAAQqtC,OAAS,IAAI5sC,kBAChEG,IAAtBZ,EAAQstC,YACHjsC,EAAIisC,UAAYpqC,OAAsCtC,IAAtBZ,EAAQstC,UAA0BttC,EAAQstC,UAAY,IAAI7sC,kBACrEG,IAA1BZ,EAAQutC,gBACHlsC,EAAIksC,cAAgBrqC,OAA0CtC,IAA1BZ,EAAQutC,cACvCvtC,EAAQutC,cACR,IAAI9sC,aACPY,GAEXC,YA7DuB,SA6DXlC,GACR,IAAMY,EAAU,kBAAKotC,GAmBrB,YAlBsBxsC,IAAlBxB,EAAOiuC,QAA0C,OAAlBjuC,EAAOiuC,OACtCrtC,EAAQqtC,OAASjuC,EAAOiuC,OAGxBrtC,EAAQqtC,OAAS,IAAI5sC,gBAEAG,IAArBxB,EAAOkuC,WAAgD,OAArBluC,EAAOkuC,UACzCttC,EAAQstC,UAAYluC,EAAOkuC,UAG3BttC,EAAQstC,UAAY,IAAI7sC,gBAECG,IAAzBxB,EAAOmuC,eAAwD,OAAzBnuC,EAAOmuC,cAC7CvtC,EAAQutC,cAAgBnuC,EAAOmuC,cAG/BvtC,EAAQutC,cAAgB,IAAI9sC,WAEzBT,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAEzB,SAASiF,EAAYc,GACjB,IAAMpL,EAAUoL,EAAKC,UAAY,IAC3BpL,EAASmL,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAErL,UAASC,SAEtB,SAASgL,EAAcjM,GACnB,IAAIsM,EAAqB,IAAZtM,EAAEgB,QAEf,OADAsL,GAAUtM,EAAEiB,MAAQ,IACb,IAAIsL,KAAKD,GAEpB,SAASJ,EAAkB1M,GACvB,OAAIA,aAAa+M,KACN/M,EAEW,kBAANA,EACL,IAAI+M,KAAK/M,GAGTyM,EAAc/K,OAAUoB,SAAS9C,IAGhD,SAAS4C,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,meCl/BEurC,EAA8B,CAChClrB,MAAO,GACP5V,OAAQ,EACR4a,OAAQ,GACRmmB,SAAU,IAEDzX,EAA0B,CACnCj2B,OADmC,SAC5BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,MAZsB,KAAlBgB,EAAQsiB,OACRriB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsiB,OAEd,IAAnBtiB,EAAQ0M,QACRzM,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQ0M,QAEd,KAAnB1M,EAAQsnB,QACRrnB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsnB,QAEZ,KAArBtnB,EAAQytC,UACRxtC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQytC,UAE9BxtC,GAEXK,OAhBmC,SAgB5BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTwtC,GAEP,MAAOhtC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsiB,MAAQ9hB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0M,OAAS1L,EAAaR,EAAO6H,UACrC,MACJ,KAAK,EACDrI,EAAQsnB,OAAS9mB,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQytC,SAAWjtC,EAAO6B,SAC1B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA5CmC,SA4C1B9B,GACL,IAAMY,EAAU,kBACTwtC,GA0BP,YAxBqB5sC,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQhgB,OAAOlD,EAAOkjB,OAG9BtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASvL,OAAO/B,EAAOsN,QAG/B1M,EAAQ0M,OAAS,OAEC9L,IAAlBxB,EAAOkoB,QAA0C,OAAlBloB,EAAOkoB,OACtCtnB,EAAQsnB,OAAShlB,OAAOlD,EAAOkoB,QAG/BtnB,EAAQsnB,OAAS,QAEG1mB,IAApBxB,EAAOquC,UAA8C,OAApBruC,EAAOquC,SACxCztC,EAAQytC,SAAWnrC,OAAOlD,EAAOquC,UAGjCztC,EAAQytC,SAAW,GAEhBztC,GAEXoB,OA1EmC,SA0E5BpB,GACH,IAAMqB,EAAM,GAKZ,YAJkBT,IAAlBZ,EAAQsiB,QAAwBjhB,EAAIihB,MAAQtiB,EAAQsiB,YACjC1hB,IAAnBZ,EAAQ0M,SAAyBrL,EAAIqL,OAAS1M,EAAQ0M,aACnC9L,IAAnBZ,EAAQsnB,SAAyBjmB,EAAIimB,OAAStnB,EAAQsnB,aACjC1mB,IAArBZ,EAAQytC,WAA2BpsC,EAAIosC,SAAWztC,EAAQytC,UACnDpsC,GAEXC,YAlFmC,SAkFvBlC,GACR,IAAMY,EAAU,kBACTwtC,GA0BP,YAxBqB5sC,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQljB,EAAOkjB,MAGvBtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAAStN,EAAOsN,OAGxB1M,EAAQ0M,OAAS,OAEC9L,IAAlBxB,EAAOkoB,QAA0C,OAAlBloB,EAAOkoB,OACtCtnB,EAAQsnB,OAASloB,EAAOkoB,OAGxBtnB,EAAQsnB,OAAS,QAEG1mB,IAApBxB,EAAOquC,UAA8C,OAApBruC,EAAOquC,SACxCztC,EAAQytC,SAAWruC,EAAOquC,SAG1BztC,EAAQytC,SAAW,GAEhBztC,IAGT0tC,EAAiB,CAAExpC,KAAM,GAAIypC,UAAW,IACjC7X,EAAa,CACtB/1B,OADsB,SACfC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANqB,KAAjBgB,EAAQkE,MACRjE,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQkE,MAEX,KAAtBlE,EAAQ2tC,WACR1tC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ2tC,WAE9B1tC,GAEXK,OAVsB,SAUfC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK0tC,GACrB,MAAOltC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQkE,KAAO1D,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQ2tC,UAAYntC,EAAO6B,SAC3B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BsB,SA8Bb9B,GACL,IAAMY,EAAU,kBAAK0tC,GAarB,YAZoB9sC,IAAhBxB,EAAO8E,MAAsC,OAAhB9E,EAAO8E,KACpClE,EAAQkE,KAAO5B,OAAOlD,EAAO8E,MAG7BlE,EAAQkE,KAAO,QAEMtD,IAArBxB,EAAOuuC,WAAgD,OAArBvuC,EAAOuuC,UACzC3tC,EAAQ2tC,UAAYrrC,OAAOlD,EAAOuuC,WAGlC3tC,EAAQ2tC,UAAY,GAEjB3tC,GAEXoB,OA9CsB,SA8CfpB,GACH,IAAMqB,EAAM,GAGZ,YAFiBT,IAAjBZ,EAAQkE,OAAuB7C,EAAI6C,KAAOlE,EAAQkE,WAC5BtD,IAAtBZ,EAAQ2tC,YAA4BtsC,EAAIssC,UAAY3tC,EAAQ2tC,WACrDtsC,GAEXC,YApDsB,SAoDVlC,GACR,IAAMY,EAAU,kBAAK0tC,GAarB,YAZoB9sC,IAAhBxB,EAAO8E,MAAsC,OAAhB9E,EAAO8E,KACpClE,EAAQkE,KAAO9E,EAAO8E,KAGtBlE,EAAQkE,KAAO,QAEMtD,IAArBxB,EAAOuuC,WAAgD,OAArBvuC,EAAOuuC,UACzC3tC,EAAQ2tC,UAAYvuC,EAAOuuC,UAG3B3tC,EAAQ2tC,UAAY,GAEjB3tC,IAGTiU,EAAa,CAAE6O,aAAa,EAAO8qB,gBAAgB,GAC5Ct5B,EAAS,CAClBvU,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OAN4B,IAAxBgB,EAAQ8iB,aACR7iB,EAAOE,OAAO,GAAG4H,KAAK/H,EAAQ8iB,cAEH,IAA3B9iB,EAAQ4tC,gBACR3tC,EAAOE,OAAO,IAAI4H,KAAK/H,EAAQ4tC,gBAE5B3tC,GAEXK,OAVkB,SAUXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiU,GACrB,MAAOzT,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8iB,YAActiB,EAAOuH,OAC7B,MACJ,KAAK,EACD/H,EAAQ4tC,eAAiBptC,EAAOuH,OAChC,MACJ,QACIvH,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BkB,SA8BT9B,GACL,IAAMY,EAAU,kBAAKiU,GAarB,YAZ2BrT,IAAvBxB,EAAO0jB,aAAoD,OAAvB1jB,EAAO0jB,YAC3C9iB,EAAQ8iB,YAAc9a,QAAQ5I,EAAO0jB,aAGrC9iB,EAAQ8iB,aAAc,OAEIliB,IAA1BxB,EAAOwuC,gBAA0D,OAA1BxuC,EAAOwuC,eAC9C5tC,EAAQ4tC,eAAiB5lC,QAAQ5I,EAAOwuC,gBAGxC5tC,EAAQ4tC,gBAAiB,EAEtB5tC,GAEXoB,OA9CkB,SA8CXpB,GACH,IAAMqB,EAAM,GAIZ,YAHwBT,IAAxBZ,EAAQ8iB,cAA8BzhB,EAAIyhB,YAAc9iB,EAAQ8iB,kBACrCliB,IAA3BZ,EAAQ4tC,iBACHvsC,EAAIusC,eAAiB5tC,EAAQ4tC,gBAC3BvsC,GAEXC,YArDkB,SAqDNlC,GACR,IAAMY,EAAU,kBAAKiU,GAarB,YAZ2BrT,IAAvBxB,EAAO0jB,aAAoD,OAAvB1jB,EAAO0jB,YAC3C9iB,EAAQ8iB,YAAc1jB,EAAO0jB,YAG7B9iB,EAAQ8iB,aAAc,OAEIliB,IAA1BxB,EAAOwuC,gBAA0D,OAA1BxuC,EAAOwuC,eAC9C5tC,EAAQ4tC,eAAiBxuC,EAAOwuC,eAGhC5tC,EAAQ4tC,gBAAiB,EAEtB5tC,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,qfCpGE4rC,G,UAAsB,IACf1Q,EAAkB,CAC3Bp9B,OAD2B,SACpBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OAN2B,IAAvBgB,EAAQf,IAAI3C,QACZ2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQf,KAEP,IAAzBe,EAAQrB,MAAMrC,QACd2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQrB,OAE7BsB,GAEXK,OAV2B,SAUpBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6tC,GACrB,MAAOrtC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQf,IAAMuB,EAAOwC,QACrB,MACJ,KAAK,EACDhD,EAAQrB,MAAQ6B,EAAOwC,QACvB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9B2B,SA8BlB9B,GACL,IAAMY,EAAU,kBAAK6tC,GAOrB,YANmBjtC,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,MACnCe,EAAQf,IAAMgE,EAAgB7D,EAAOH,WAEpB2B,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCqB,EAAQrB,MAAQsE,EAAgB7D,EAAOT,QAEpCqB,GAEXoB,OAxC2B,SAwCpBpB,GACH,IAAMqB,EAAM,GAKZ,YAJgBT,IAAhBZ,EAAQf,MACHoC,EAAIpC,IAAMiE,OAAgCtC,IAAhBZ,EAAQf,IAAoBe,EAAQf,IAAM,IAAIwB,kBAC3DG,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQuE,OAAkCtC,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aAC5EY,GAEXC,YAhD2B,SAgDflC,GACR,IAAMY,EAAU,kBAAK6tC,GAarB,YAZmBjtC,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,IACnCe,EAAQf,IAAMG,EAAOH,IAGrBe,EAAQf,IAAM,IAAIwB,gBAEDG,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGT8tC,EAAgC,CAAEpnC,SAAU,IACrC02B,EAA4B,CACrCr9B,OADqC,SAC9BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACH,KAArBgB,EAAQ0G,UACRzG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0G,UAFC,uBAItB1G,EAAQ+tC,gBAJc,IAItC,2BAAwC,KAA7BzoC,EAA6B,QACpC63B,EAAgBp9B,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALlB,8BAOtC,OAAOxF,GAEXK,OAVqC,SAU9BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACT8tC,GAEP9tC,EAAQ+tC,eAAiB,GACzB,MAAOvtC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0G,SAAWlG,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQ+tC,eAAenxC,KAAKugC,EAAgB78B,OAAOE,EAAQA,EAAOL,WAClE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAjCqC,SAiC5B9B,GACL,IAAMY,EAAU,kBACT8tC,GASP,GAPA9tC,EAAQ+tC,eAAiB,QACDntC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWpE,OAAOlD,EAAOsH,UAGjC1G,EAAQ0G,SAAW,QAEO9F,IAA1BxB,EAAO2uC,gBAA0D,OAA1B3uC,EAAO2uC,eAAyB,wBACvD3uC,EAAO2uC,gBADgD,IACvE,2BAAuC,KAA5BpoC,EAA4B,QACnC3F,EAAQ+tC,eAAenxC,KAAKugC,EAAgBj8B,SAASyE,KAFc,+BAK3E,OAAO3F,GAEXoB,OAnDqC,SAmD9BpB,GACH,IAAMqB,EAAM,GAQZ,YAPqBT,IAArBZ,EAAQ0G,WAA2BrF,EAAIqF,SAAW1G,EAAQ0G,UACtD1G,EAAQ+tC,eACR1sC,EAAI0sC,eAAiB/tC,EAAQ+tC,eAAenoC,KAAI,SAACD,GAAD,OAAOA,EAAIw3B,EAAgB/7B,OAAOuE,QAAK/E,KAGvFS,EAAI0sC,eAAiB,GAElB1sC,GAEXC,YA9DqC,SA8DzBlC,GACR,IAAMY,EAAU,kBACT8tC,GASP,GAPA9tC,EAAQ+tC,eAAiB,QACDntC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWtH,EAAOsH,SAG1B1G,EAAQ0G,SAAW,QAEO9F,IAA1BxB,EAAO2uC,gBAA0D,OAA1B3uC,EAAO2uC,eAAyB,wBACvD3uC,EAAO2uC,gBADgD,IACvE,2BAAuC,KAA5BpoC,EAA4B,QACnC3F,EAAQ+tC,eAAenxC,KAAKugC,EAAgB77B,YAAYqE,KAFW,+BAK3E,OAAO3F,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAQrBlD,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,mZC9WEiH,EAAU,CAAEC,QAAS,IACd5C,EAAM,CACfxG,OADe,SACRC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANwB,KAApBgB,EAAQmJ,SACRlJ,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmJ,SAER,IAAzBnJ,EAAQrB,MAAMrC,QACd2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQrB,OAE7BsB,GAEXK,OAVe,SAURC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkJ,GACrB,MAAO1I,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmJ,QAAU3I,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQrB,MAAQ6B,EAAOwC,QACvB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9Be,SA8BN9B,GACL,IAAMY,EAAU,kBAAKkJ,GAUrB,YATuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU7G,OAAOlD,EAAO+J,SAGhCnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCqB,EAAQrB,MAAQsE,EAAgB7D,EAAOT,QAEpCqB,GAEXoB,OA3Ce,SA2CRpB,GACH,IAAMqB,EAAM,GAIZ,YAHoBT,IAApBZ,EAAQmJ,UAA0B9H,EAAI8H,QAAUnJ,EAAQmJ,cACtCvI,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQuE,OAAkCtC,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aAC5EY,GAEXC,YAlDe,SAkDHlC,GACR,IAAMY,EAAU,kBAAKkJ,GAarB,YAZuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU/J,EAAO+J,QAGzBnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,inBC5FnB+oC,EAA4B,CAC9BtnC,SAAU,GACV+9B,YAAa,EACbr+B,OAAQ,IAECw4B,EAAwB,CACjC7+B,OADiC,SAC1BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAgB5B,MAfyB,KAArBgB,EAAQ0G,UACRzG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0G,eAER9F,IAAzBZ,EAAQsO,cACRC,OAAaxO,OAAOC,EAAQsO,aAAcrO,EAAOE,OAAO,IAAIqF,QAAQC,cAEhD7E,IAApBZ,EAAQgK,SACR21B,OAAQ5/B,OAAOC,EAAQgK,QAAS/J,EAAOE,OAAO,IAAIqF,QAAQC,SAElC,IAAxBzF,EAAQykC,aACRxkC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQykC,aAEd,KAAnBzkC,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAnBiC,SAmB1BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKguC,GACrB,MAAOxtC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0G,SAAWlG,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQsO,aAAeC,OAAajO,OAAOE,EAAQA,EAAOL,UAC1D,MACJ,KAAK,EACDH,EAAQgK,QAAU21B,OAAQr/B,OAAOE,EAAQA,EAAOL,UAChD,MACJ,KAAK,EACDH,EAAQykC,YAAczjC,EAAaR,EAAO6H,UAC1C,MACJ,KAAK,EACDrI,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhDiC,SAgDxB9B,GACL,IAAMY,EAAU,kBAAKguC,GA+BrB,YA9BwBptC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWpE,OAAOlD,EAAOsH,UAGjC1G,EAAQ0G,SAAW,QAEK9F,IAAxBxB,EAAOkP,cAAsD,OAAxBlP,EAAOkP,aAC5CtO,EAAQsO,aAAeC,OAAarN,SAAS9B,EAAOkP,cAGpDtO,EAAQsO,kBAAe1N,OAEJA,IAAnBxB,EAAO4K,SAA4C,OAAnB5K,EAAO4K,QACvChK,EAAQgK,QAAU21B,OAAQz+B,SAAS9B,EAAO4K,SAG1ChK,EAAQgK,aAAUpJ,OAEKA,IAAvBxB,EAAOqlC,aAAoD,OAAvBrlC,EAAOqlC,YAC3CzkC,EAAQykC,YAActjC,OAAO/B,EAAOqlC,aAGpCzkC,EAAQykC,YAAc,OAEJ7jC,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OAlFiC,SAkF1BpB,GACH,IAAMqB,EAAM,GAYZ,YAXqBT,IAArBZ,EAAQ0G,WAA2BrF,EAAIqF,SAAW1G,EAAQ0G,eACjC9F,IAAzBZ,EAAQsO,eACHjN,EAAIiN,aAAetO,EAAQsO,aACtBC,OAAanN,OAAOpB,EAAQsO,mBAC5B1N,QACUA,IAApBZ,EAAQgK,UACH3I,EAAI2I,QAAUhK,EAAQgK,QACjB21B,OAAQv+B,OAAOpB,EAAQgK,cACvBpJ,QACcA,IAAxBZ,EAAQykC,cAA8BpjC,EAAIojC,YAAczkC,EAAQykC,kBAC7C7jC,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YAjGiC,SAiGrBlC,GACR,IAAMY,EAAU,kBAAKguC,GA+BrB,YA9BwBptC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWtH,EAAOsH,SAG1B1G,EAAQ0G,SAAW,QAEK9F,IAAxBxB,EAAOkP,cAAsD,OAAxBlP,EAAOkP,aAC5CtO,EAAQsO,aAAeC,OAAajN,YAAYlC,EAAOkP,cAGvDtO,EAAQsO,kBAAe1N,OAEJA,IAAnBxB,EAAO4K,SAA4C,OAAnB5K,EAAO4K,QACvChK,EAAQgK,QAAU21B,OAAQr+B,YAAYlC,EAAO4K,SAG7ChK,EAAQgK,aAAUpJ,OAEKA,IAAvBxB,EAAOqlC,aAAoD,OAAvBrlC,EAAOqlC,YAC3CzkC,EAAQykC,YAAcrlC,EAAOqlC,YAG7BzkC,EAAQykC,YAAc,OAEJ7jC,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAyCTiuC,EAA2B,CAC7BvnC,SAAU,GACVwnC,qBAAsB,GACtBzJ,YAAa,EACbr+B,OAAQ,IAECs4B,EAAuB,CAChC3+B,OADgC,SACzBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACH,KAArBgB,EAAQ0G,UACRzG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0G,UAEA,KAAjC1G,EAAQkuC,sBACRjuC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQkuC,2BAETttC,IAAxBZ,EAAQsG,aACRC,OAAIxG,OAAOC,EAAQsG,YAAarG,EAAOE,OAAO,IAAIqF,QAAQC,cAEjC7E,IAAzBZ,EAAQsO,cACRC,OAAaxO,OAAOC,EAAQsO,aAAcrO,EAAOE,OAAO,IAAIqF,QAAQC,SAE5C,IAAxBzF,EAAQykC,aACRxkC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQykC,aAdC,uBAgBtBzkC,EAAQmuC,sBAhBc,IAgBtC,2BAA8C,KAAnC7oC,EAAmC,QAC1Cq6B,OAAQ5/B,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAjBV,8BAqCtC,YAlB4B7E,IAAxBZ,EAAQypC,aACRrhC,OAAOrI,OAAOC,EAAQypC,YAAaxpC,EAAOE,OAAO,IAAIqF,QAAQC,SAEhC,IAA7BzF,EAAQwpC,UAAUltC,QAClB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQwpC,WAED,IAA/BxpC,EAAQouC,YAAY9xC,QACpB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQouC,aAEE,IAAlCpuC,EAAQquC,eAAe/xC,QACvB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQquC,qBAEJztC,IAA5BZ,EAAQsuC,iBACRlmC,OAAOrI,OAAOC,EAAQsuC,gBAAiBruC,EAAOE,OAAO,IAAIqF,QAAQC,SAE9C,KAAnBzF,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAxCgC,SAwCzBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiuC,GACrBjuC,EAAQmuC,qBAAuB,GAC/B,MAAO3tC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0G,SAAWlG,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQkuC,qBAAuB1tC,EAAO6B,SACtC,MACJ,KAAK,EACDrC,EAAQsG,YAAcC,OAAIjG,OAAOE,EAAQA,EAAOL,UAChD,MACJ,KAAK,EACDH,EAAQsO,aAAeC,OAAajO,OAAOE,EAAQA,EAAOL,UAC1D,MACJ,KAAK,EACDH,EAAQykC,YAAczjC,EAAaR,EAAO6H,UAC1C,MACJ,KAAK,EACDrI,EAAQmuC,qBAAqBvxC,KAAK+iC,OAAQr/B,OAAOE,EAAQA,EAAOL,WAChE,MACJ,KAAK,EACDH,EAAQypC,YAAcrhC,OAAO9H,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQwpC,UAAYhpC,EAAOwC,QAC3B,MACJ,KAAK,EACDhD,EAAQouC,YAAc5tC,EAAOwC,QAC7B,MACJ,KAAK,GACDhD,EAAQquC,eAAiB7tC,EAAOwC,QAChC,MACJ,KAAK,GACDhD,EAAQsuC,gBAAkBlmC,OAAO9H,OAAOE,EAAQA,EAAOL,UACvD,MACJ,KAAK,GACDH,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA3FgC,SA2FvB9B,GACL,IAAMY,EAAU,kBAAKiuC,GAiCrB,GAhCAjuC,EAAQmuC,qBAAuB,QACPvtC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWpE,OAAOlD,EAAOsH,UAGjC1G,EAAQ0G,SAAW,QAEa9F,IAAhCxB,EAAO8uC,sBACyB,OAAhC9uC,EAAO8uC,qBACPluC,EAAQkuC,qBAAuB5rC,OAAOlD,EAAO8uC,sBAG7CluC,EAAQkuC,qBAAuB,QAERttC,IAAvBxB,EAAOkH,aAAoD,OAAvBlH,EAAOkH,YAC3CtG,EAAQsG,YAAcC,OAAIrF,SAAS9B,EAAOkH,aAG1CtG,EAAQsG,iBAAc1F,OAEEA,IAAxBxB,EAAOkP,cAAsD,OAAxBlP,EAAOkP,aAC5CtO,EAAQsO,aAAeC,OAAarN,SAAS9B,EAAOkP,cAGpDtO,EAAQsO,kBAAe1N,OAEAA,IAAvBxB,EAAOqlC,aAAoD,OAAvBrlC,EAAOqlC,YAC3CzkC,EAAQykC,YAActjC,OAAO/B,EAAOqlC,aAGpCzkC,EAAQykC,YAAc,OAEU7jC,IAAhCxB,EAAO+uC,sBACyB,OAAhC/uC,EAAO+uC,qBAA+B,wBACtB/uC,EAAO+uC,sBADe,IACtC,2BAA6C,KAAlCxoC,EAAkC,QACzC3F,EAAQmuC,qBAAqBvxC,KAAK+iC,OAAQz+B,SAASyE,KAFjB,+BAiC1C,YA5B2B/E,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAOlH,SAAS9B,EAAOqqC,aAG7CzpC,EAAQypC,iBAAc7oC,OAEDA,IAArBxB,EAAOoqC,WAAgD,OAArBpqC,EAAOoqC,YACzCxpC,EAAQwpC,UAAYvmC,EAAgB7D,EAAOoqC,iBAEpB5oC,IAAvBxB,EAAOgvC,aAAoD,OAAvBhvC,EAAOgvC,cAC3CpuC,EAAQouC,YAAcnrC,EAAgB7D,EAAOgvC,mBAEnBxtC,IAA1BxB,EAAOivC,gBAA0D,OAA1BjvC,EAAOivC,iBAC9CruC,EAAQquC,eAAiBprC,EAAgB7D,EAAOivC,sBAErBztC,IAA3BxB,EAAOkvC,iBACoB,OAA3BlvC,EAAOkvC,gBACPtuC,EAAQsuC,gBAAkBlmC,OAAOlH,SAAS9B,EAAOkvC,iBAGjDtuC,EAAQsuC,qBAAkB1tC,OAERA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OAjKgC,SAiKzBpB,GACH,IAAMqB,EAAM,GAsCZ,YArCqBT,IAArBZ,EAAQ0G,WAA2BrF,EAAIqF,SAAW1G,EAAQ0G,eACzB9F,IAAjCZ,EAAQkuC,uBACH7sC,EAAI6sC,qBAAuBluC,EAAQkuC,2BAChBttC,IAAxBZ,EAAQsG,cACHjF,EAAIiF,YAActG,EAAQsG,YACrBC,OAAInF,OAAOpB,EAAQsG,kBACnB1F,QACeA,IAAzBZ,EAAQsO,eACHjN,EAAIiN,aAAetO,EAAQsO,aACtBC,OAAanN,OAAOpB,EAAQsO,mBAC5B1N,QACcA,IAAxBZ,EAAQykC,cAA8BpjC,EAAIojC,YAAczkC,EAAQykC,aAC5DzkC,EAAQmuC,qBACR9sC,EAAI8sC,qBAAuBnuC,EAAQmuC,qBAAqBvoC,KAAI,SAACD,GAAD,OAAOA,EAAIg6B,OAAQv+B,OAAOuE,QAAK/E,KAG3FS,EAAI8sC,qBAAuB,QAEPvtC,IAAxBZ,EAAQypC,cACHpoC,EAAIooC,YAAczpC,EAAQypC,YACrBrhC,OAAOhH,OAAOpB,EAAQypC,kBACtB7oC,QACYA,IAAtBZ,EAAQwpC,YACHnoC,EAAImoC,UAAYtmC,OAAsCtC,IAAtBZ,EAAQwpC,UAA0BxpC,EAAQwpC,UAAY,IAAI/oC,kBACvEG,IAAxBZ,EAAQouC,cACH/sC,EAAI+sC,YAAclrC,OAAwCtC,IAAxBZ,EAAQouC,YACrCpuC,EAAQouC,YACR,IAAI3tC,kBACaG,IAA3BZ,EAAQquC,iBACHhtC,EAAIgtC,eAAiBnrC,OAA2CtC,IAA3BZ,EAAQquC,eACxCruC,EAAQquC,eACR,IAAI5tC,kBACcG,IAA5BZ,EAAQsuC,kBACHjtC,EAAIitC,gBAAkBtuC,EAAQsuC,gBACzBlmC,OAAOhH,OAAOpB,EAAQsuC,sBACtB1tC,QACSA,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YA1MgC,SA0MpBlC,GACR,IAAMY,EAAU,kBAAKiuC,GAiCrB,GAhCAjuC,EAAQmuC,qBAAuB,QACPvtC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWtH,EAAOsH,SAG1B1G,EAAQ0G,SAAW,QAEa9F,IAAhCxB,EAAO8uC,sBACyB,OAAhC9uC,EAAO8uC,qBACPluC,EAAQkuC,qBAAuB9uC,EAAO8uC,qBAGtCluC,EAAQkuC,qBAAuB,QAERttC,IAAvBxB,EAAOkH,aAAoD,OAAvBlH,EAAOkH,YAC3CtG,EAAQsG,YAAcC,OAAIjF,YAAYlC,EAAOkH,aAG7CtG,EAAQsG,iBAAc1F,OAEEA,IAAxBxB,EAAOkP,cAAsD,OAAxBlP,EAAOkP,aAC5CtO,EAAQsO,aAAeC,OAAajN,YAAYlC,EAAOkP,cAGvDtO,EAAQsO,kBAAe1N,OAEAA,IAAvBxB,EAAOqlC,aAAoD,OAAvBrlC,EAAOqlC,YAC3CzkC,EAAQykC,YAAcrlC,EAAOqlC,YAG7BzkC,EAAQykC,YAAc,OAEU7jC,IAAhCxB,EAAO+uC,sBACyB,OAAhC/uC,EAAO+uC,qBAA+B,wBACtB/uC,EAAO+uC,sBADe,IACtC,2BAA6C,KAAlCxoC,EAAkC,QACzC3F,EAAQmuC,qBAAqBvxC,KAAK+iC,OAAQr+B,YAAYqE,KAFpB,+BA0C1C,YArC2B/E,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAO9G,YAAYlC,EAAOqqC,aAGhDzpC,EAAQypC,iBAAc7oC,OAEDA,IAArBxB,EAAOoqC,WAAgD,OAArBpqC,EAAOoqC,UACzCxpC,EAAQwpC,UAAYpqC,EAAOoqC,UAG3BxpC,EAAQwpC,UAAY,IAAI/oC,gBAEDG,IAAvBxB,EAAOgvC,aAAoD,OAAvBhvC,EAAOgvC,YAC3CpuC,EAAQouC,YAAchvC,EAAOgvC,YAG7BpuC,EAAQouC,YAAc,IAAI3tC,gBAEAG,IAA1BxB,EAAOivC,gBAA0D,OAA1BjvC,EAAOivC,eAC9CruC,EAAQquC,eAAiBjvC,EAAOivC,eAGhCruC,EAAQquC,eAAiB,IAAI5tC,gBAEFG,IAA3BxB,EAAOkvC,iBACoB,OAA3BlvC,EAAOkvC,gBACPtuC,EAAQsuC,gBAAkBlmC,OAAO9G,YAAYlC,EAAOkvC,iBAGpDtuC,EAAQsuC,qBAAkB1tC,OAERA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAyCTuuC,EAA2B,CAC7BhQ,aAAc,GACdiQ,yBAA0B,GAC1BpoC,OAAQ,IAECy4B,EAAuB,CAChC9+B,OADgC,SACzBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SA+B5B,MA9B6B,KAAzBgB,EAAQu+B,cACRt+B,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQu+B,cAEI,KAArCv+B,EAAQwuC,0BACRvuC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQwuC,+BAEb5tC,IAApBZ,EAAQgK,SACR21B,OAAQ5/B,OAAOC,EAAQgK,QAAS/J,EAAOE,OAAO,IAAIqF,QAAQC,cAElC7E,IAAxBZ,EAAQsG,aACRC,OAAIxG,OAAOC,EAAQsG,YAAarG,EAAOE,OAAO,IAAIqF,QAAQC,cAElC7E,IAAxBZ,EAAQypC,aACRrhC,OAAOrI,OAAOC,EAAQypC,YAAaxpC,EAAOE,OAAO,IAAIqF,QAAQC,SAEjC,IAA5BzF,EAAQ4pC,SAASttC,QACjB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ4pC,UAED,IAA/B5pC,EAAQouC,YAAY9xC,QACpB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQouC,aAEE,IAAlCpuC,EAAQquC,eAAe/xC,QACvB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQquC,qBAEJztC,IAA5BZ,EAAQsuC,iBACRlmC,OAAOrI,OAAOC,EAAQsuC,gBAAiBruC,EAAOE,OAAO,IAAIqF,QAAQC,SAE9C,KAAnBzF,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAlCgC,SAkCzBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKuuC,GACrB,MAAO/tC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQu+B,aAAe/9B,EAAO6B,SAC9B,MACJ,KAAK,EACDrC,EAAQwuC,yBAA2BhuC,EAAO6B,SAC1C,MACJ,KAAK,EACDrC,EAAQgK,QAAU21B,OAAQr/B,OAAOE,EAAQA,EAAOL,UAChD,MACJ,KAAK,EACDH,EAAQsG,YAAcC,OAAIjG,OAAOE,EAAQA,EAAOL,UAChD,MACJ,KAAK,EACDH,EAAQypC,YAAcrhC,OAAO9H,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQ4pC,SAAWppC,EAAOwC,QAC1B,MACJ,KAAK,EACDhD,EAAQouC,YAAc5tC,EAAOwC,QAC7B,MACJ,KAAK,EACDhD,EAAQquC,eAAiB7tC,EAAOwC,QAChC,MACJ,KAAK,EACDhD,EAAQsuC,gBAAkBlmC,OAAO9H,OAAOE,EAAQA,EAAOL,UACvD,MACJ,KAAK,GACDH,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9EgC,SA8EvB9B,GACL,IAAMY,EAAU,kBAAKuuC,GAsDrB,YArD4B3tC,IAAxBxB,EAAOm/B,cAAsD,OAAxBn/B,EAAOm/B,aAC5Cv+B,EAAQu+B,aAAej8B,OAAOlD,EAAOm/B,cAGrCv+B,EAAQu+B,aAAe,QAEa39B,IAApCxB,EAAOovC,0BAC6B,OAApCpvC,EAAOovC,yBACPxuC,EAAQwuC,yBAA2BlsC,OAAOlD,EAAOovC,0BAGjDxuC,EAAQwuC,yBAA2B,QAEhB5tC,IAAnBxB,EAAO4K,SAA4C,OAAnB5K,EAAO4K,QACvChK,EAAQgK,QAAU21B,OAAQz+B,SAAS9B,EAAO4K,SAG1ChK,EAAQgK,aAAUpJ,OAEKA,IAAvBxB,EAAOkH,aAAoD,OAAvBlH,EAAOkH,YAC3CtG,EAAQsG,YAAcC,OAAIrF,SAAS9B,EAAOkH,aAG1CtG,EAAQsG,iBAAc1F,OAECA,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAOlH,SAAS9B,EAAOqqC,aAG7CzpC,EAAQypC,iBAAc7oC,OAEFA,IAApBxB,EAAOwqC,UAA8C,OAApBxqC,EAAOwqC,WACxC5pC,EAAQ4pC,SAAW3mC,EAAgB7D,EAAOwqC,gBAEnBhpC,IAAvBxB,EAAOgvC,aAAoD,OAAvBhvC,EAAOgvC,cAC3CpuC,EAAQouC,YAAcnrC,EAAgB7D,EAAOgvC,mBAEnBxtC,IAA1BxB,EAAOivC,gBAA0D,OAA1BjvC,EAAOivC,iBAC9CruC,EAAQquC,eAAiBprC,EAAgB7D,EAAOivC,sBAErBztC,IAA3BxB,EAAOkvC,iBACoB,OAA3BlvC,EAAOkvC,gBACPtuC,EAAQsuC,gBAAkBlmC,OAAOlH,SAAS9B,EAAOkvC,iBAGjDtuC,EAAQsuC,qBAAkB1tC,OAERA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OAvIgC,SAuIzBpB,GACH,IAAMqB,EAAM,GAgCZ,YA/ByBT,IAAzBZ,EAAQu+B,eACHl9B,EAAIk9B,aAAev+B,EAAQu+B,mBACK39B,IAArCZ,EAAQwuC,2BACHntC,EAAImtC,yBAA2BxuC,EAAQwuC,+BACxB5tC,IAApBZ,EAAQgK,UACH3I,EAAI2I,QAAUhK,EAAQgK,QACjB21B,OAAQv+B,OAAOpB,EAAQgK,cACvBpJ,QACcA,IAAxBZ,EAAQsG,cACHjF,EAAIiF,YAActG,EAAQsG,YACrBC,OAAInF,OAAOpB,EAAQsG,kBACnB1F,QACcA,IAAxBZ,EAAQypC,cACHpoC,EAAIooC,YAAczpC,EAAQypC,YACrBrhC,OAAOhH,OAAOpB,EAAQypC,kBACtB7oC,QACWA,IAArBZ,EAAQ4pC,WACHvoC,EAAIuoC,SAAW1mC,OAAqCtC,IAArBZ,EAAQ4pC,SAAyB5pC,EAAQ4pC,SAAW,IAAInpC,kBACpEG,IAAxBZ,EAAQouC,cACH/sC,EAAI+sC,YAAclrC,OAAwCtC,IAAxBZ,EAAQouC,YACrCpuC,EAAQouC,YACR,IAAI3tC,kBACaG,IAA3BZ,EAAQquC,iBACHhtC,EAAIgtC,eAAiBnrC,OAA2CtC,IAA3BZ,EAAQquC,eACxCruC,EAAQquC,eACR,IAAI5tC,kBACcG,IAA5BZ,EAAQsuC,kBACHjtC,EAAIitC,gBAAkBtuC,EAAQsuC,gBACzBlmC,OAAOhH,OAAOpB,EAAQsuC,sBACtB1tC,QACSA,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YA1KgC,SA0KpBlC,GACR,IAAMY,EAAU,kBAAKuuC,GA+DrB,YA9D4B3tC,IAAxBxB,EAAOm/B,cAAsD,OAAxBn/B,EAAOm/B,aAC5Cv+B,EAAQu+B,aAAen/B,EAAOm/B,aAG9Bv+B,EAAQu+B,aAAe,QAEa39B,IAApCxB,EAAOovC,0BAC6B,OAApCpvC,EAAOovC,yBACPxuC,EAAQwuC,yBAA2BpvC,EAAOovC,yBAG1CxuC,EAAQwuC,yBAA2B,QAEhB5tC,IAAnBxB,EAAO4K,SAA4C,OAAnB5K,EAAO4K,QACvChK,EAAQgK,QAAU21B,OAAQr+B,YAAYlC,EAAO4K,SAG7ChK,EAAQgK,aAAUpJ,OAEKA,IAAvBxB,EAAOkH,aAAoD,OAAvBlH,EAAOkH,YAC3CtG,EAAQsG,YAAcC,OAAIjF,YAAYlC,EAAOkH,aAG7CtG,EAAQsG,iBAAc1F,OAECA,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAO9G,YAAYlC,EAAOqqC,aAGhDzpC,EAAQypC,iBAAc7oC,OAEFA,IAApBxB,EAAOwqC,UAA8C,OAApBxqC,EAAOwqC,SACxC5pC,EAAQ4pC,SAAWxqC,EAAOwqC,SAG1B5pC,EAAQ4pC,SAAW,IAAInpC,gBAEAG,IAAvBxB,EAAOgvC,aAAoD,OAAvBhvC,EAAOgvC,YAC3CpuC,EAAQouC,YAAchvC,EAAOgvC,YAG7BpuC,EAAQouC,YAAc,IAAI3tC,gBAEAG,IAA1BxB,EAAOivC,gBAA0D,OAA1BjvC,EAAOivC,eAC9CruC,EAAQquC,eAAiBjvC,EAAOivC,eAGhCruC,EAAQquC,eAAiB,IAAI5tC,gBAEFG,IAA3BxB,EAAOkvC,iBACoB,OAA3BlvC,EAAOkvC,gBACPtuC,EAAQsuC,gBAAkBlmC,OAAO9G,YAAYlC,EAAOkvC,iBAGpDtuC,EAAQsuC,qBAAkB1tC,OAERA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAyCTyuC,EAA+B,CAAElQ,aAAc,GAAIn4B,OAAQ,IACpDu4B,EAA2B,CACpC5+B,OADoC,SAC7BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,MAZ6B,KAAzBgB,EAAQu+B,cACRt+B,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQu+B,cAEL,IAA5Bv+B,EAAQ8pC,SAASxtC,QACjB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ8pC,eAERlpC,IAAxBZ,EAAQypC,aACRrhC,OAAOrI,OAAOC,EAAQypC,YAAaxpC,EAAOE,OAAO,IAAIqF,QAAQC,SAE1C,KAAnBzF,EAAQoG,QACRnG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQoG,QAE9BnG,GAEXK,OAhBoC,SAgB7BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTyuC,GAEP,MAAOjuC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQu+B,aAAe/9B,EAAO6B,SAC9B,MACJ,KAAK,EACDrC,EAAQ8pC,SAAWtpC,EAAOwC,QAC1B,MACJ,KAAK,EACDhD,EAAQypC,YAAcrhC,OAAO9H,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQoG,OAAS5F,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA5CoC,SA4C3B9B,GACL,IAAMY,EAAU,kBACTyuC,GAuBP,YArB4B7tC,IAAxBxB,EAAOm/B,cAAsD,OAAxBn/B,EAAOm/B,aAC5Cv+B,EAAQu+B,aAAej8B,OAAOlD,EAAOm/B,cAGrCv+B,EAAQu+B,aAAe,QAEH39B,IAApBxB,EAAO0qC,UAA8C,OAApB1qC,EAAO0qC,WACxC9pC,EAAQ8pC,SAAW7mC,EAAgB7D,EAAO0qC,gBAEnBlpC,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAOlH,SAAS9B,EAAOqqC,aAG7CzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAS9D,OAAOlD,EAAOgH,QAG/BpG,EAAQoG,OAAS,GAEdpG,GAEXoB,OAvEoC,SAuE7BpB,GACH,IAAMqB,EAAM,GAUZ,YATyBT,IAAzBZ,EAAQu+B,eACHl9B,EAAIk9B,aAAev+B,EAAQu+B,mBACX39B,IAArBZ,EAAQ8pC,WACHzoC,EAAIyoC,SAAW5mC,OAAqCtC,IAArBZ,EAAQ8pC,SAAyB9pC,EAAQ8pC,SAAW,IAAIrpC,kBACpEG,IAAxBZ,EAAQypC,cACHpoC,EAAIooC,YAAczpC,EAAQypC,YACrBrhC,OAAOhH,OAAOpB,EAAQypC,kBACtB7oC,QACSA,IAAnBZ,EAAQoG,SAAyB/E,EAAI+E,OAASpG,EAAQoG,QAC/C/E,GAEXC,YApFoC,SAoFxBlC,GACR,IAAMY,EAAU,kBACTyuC,GA0BP,YAxB4B7tC,IAAxBxB,EAAOm/B,cAAsD,OAAxBn/B,EAAOm/B,aAC5Cv+B,EAAQu+B,aAAen/B,EAAOm/B,aAG9Bv+B,EAAQu+B,aAAe,QAEH39B,IAApBxB,EAAO0qC,UAA8C,OAApB1qC,EAAO0qC,SACxC9pC,EAAQ8pC,SAAW1qC,EAAO0qC,SAG1B9pC,EAAQ8pC,SAAW,IAAIrpC,gBAEAG,IAAvBxB,EAAOqqC,aAAoD,OAAvBrqC,EAAOqqC,YAC3CzpC,EAAQypC,YAAcrhC,OAAO9G,YAAYlC,EAAOqqC,aAGhDzpC,EAAQypC,iBAAc7oC,OAEJA,IAAlBxB,EAAOgH,QAA0C,OAAlBhH,EAAOgH,OACtCpG,EAAQoG,OAAShH,EAAOgH,OAGxBpG,EAAQoG,OAAS,GAEdpG,IAkEXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAEzB,SAASjE,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,+ZCn6BEwjC,EAAgB,CAAEC,MAAO,EAAGtC,IAAK,GAC1Bn5B,EAAY,CACrBlK,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANsB,IAAlBgB,EAAQ0lC,OACRzlC,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQ0lC,OAEhB,IAAhB1lC,EAAQojC,KACRnjC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQojC,KAE9BnjC,GAEXK,OAVqB,SAUdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKylC,GACrB,MAAOjlC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0lC,MAAQ1kC,EAAaR,EAAO6H,UACpC,MACJ,KAAK,EACDrI,EAAQojC,IAAMpiC,EAAaR,EAAO6H,UAClC,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BqB,SA8BZ9B,GACL,IAAMY,EAAU,kBAAKylC,GAarB,YAZqB7kC,IAAjBxB,EAAOsmC,OAAwC,OAAjBtmC,EAAOsmC,MACrC1lC,EAAQ0lC,MAAQvkC,OAAO/B,EAAOsmC,OAG9B1lC,EAAQ0lC,MAAQ,OAED9kC,IAAfxB,EAAOgkC,KAAoC,OAAfhkC,EAAOgkC,IACnCpjC,EAAQojC,IAAMjiC,OAAO/B,EAAOgkC,KAG5BpjC,EAAQojC,IAAM,EAEXpjC,GAEXoB,OA9CqB,SA8CdpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQ0lC,QAAwBrkC,EAAIqkC,MAAQ1lC,EAAQ0lC,YACpC9kC,IAAhBZ,EAAQojC,MAAsB/hC,EAAI+hC,IAAMpjC,EAAQojC,KACzC/hC,GAEXC,YApDqB,SAoDTlC,GACR,IAAMY,EAAU,kBAAKylC,GAarB,YAZqB7kC,IAAjBxB,EAAOsmC,OAAwC,OAAjBtmC,EAAOsmC,MACrC1lC,EAAQ0lC,MAAQtmC,EAAOsmC,MAGvB1lC,EAAQ0lC,MAAQ,OAED9kC,IAAfxB,EAAOgkC,KAAoC,OAAfhkC,EAAOgkC,IACnCpjC,EAAQojC,IAAMhkC,EAAOgkC,IAGrBpjC,EAAQojC,IAAM,EAEXpjC,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,mZChKEiH,EAAU,CAAEC,QAAS,IACd5C,EAAM,CACfxG,OADe,SACRC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANwB,KAApBgB,EAAQmJ,SACRlJ,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmJ,SAER,IAAzBnJ,EAAQrB,MAAMrC,QACd2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQrB,OAE7BsB,GAEXK,OAVe,SAURC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkJ,GACrB,MAAO1I,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmJ,QAAU3I,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQrB,MAAQ6B,EAAOwC,QACvB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9Be,SA8BN9B,GACL,IAAMY,EAAU,kBAAKkJ,GAUrB,YATuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU7G,OAAOlD,EAAO+J,SAGhCnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCqB,EAAQrB,MAAQsE,EAAgB7D,EAAOT,QAEpCqB,GAEXoB,OA3Ce,SA2CRpB,GACH,IAAMqB,EAAM,GAIZ,YAHoBT,IAApBZ,EAAQmJ,UAA0B9H,EAAI8H,QAAUnJ,EAAQmJ,cACtCvI,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQuE,OAAkCtC,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aAC5EY,GAEXC,YAlDe,SAkDHlC,GACR,IAAMY,EAAU,kBAAKkJ,GAarB,YAZuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU/J,EAAO+J,QAGzBnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,idC6HnBypC,G,UAAyB,CAAE1oC,QAAS,GAAIqF,MAAO,IACxCgoB,EAAqB,CAC9BtzB,OAD8B,SACvBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANwB,KAApBgB,EAAQgG,SACR/F,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgG,SAEf,IAAlBhG,EAAQqL,OACRpL,EAAOE,OAAO,IAAIC,MAAMJ,EAAQqL,OAE7BpL,GAEXK,OAV8B,SAUvBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK0uC,GACrB,MAAOluC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgG,QAAUxF,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQqL,MAAQrK,EAAaR,EAAOJ,SACpC,MACJ,QACII,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9B8B,SA8BrB9B,GACL,IAAMY,EAAU,kBAAK0uC,GAarB,YAZuB9tC,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU1D,OAAOlD,EAAO4G,SAGhChG,EAAQgG,QAAU,QAEDpF,IAAjBxB,EAAOiM,OAAwC,OAAjBjM,EAAOiM,MACrCrL,EAAQqL,MAAQlK,OAAO/B,EAAOiM,OAG9BrL,EAAQqL,MAAQ,EAEbrL,GAEXoB,OA9C8B,SA8CvBpB,GACH,IAAMqB,EAAM,GAGZ,YAFoBT,IAApBZ,EAAQgG,UAA0B3E,EAAI2E,QAAUhG,EAAQgG,cACtCpF,IAAlBZ,EAAQqL,QAAwBhK,EAAIgK,MAAQrL,EAAQqL,OAC7ChK,GAEXC,YApD8B,SAoDlBlC,GACR,IAAMY,EAAU,kBAAK0uC,GAarB,YAZuB9tC,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU5G,EAAO4G,QAGzBhG,EAAQgG,QAAU,QAEDpF,IAAjBxB,EAAOiM,OAAwC,OAAjBjM,EAAOiM,MACrCrL,EAAQqL,MAAQjM,EAAOiM,MAGvBrL,EAAQqL,MAAQ,EAEbrL,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWLF,EAAWgD,KAUXhD,EAAWuD,KASxB,SAAS9D,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,2bCvRE0sC,EAAmB,GACZ9J,EAAe,CACxB9kC,OADwB,SACjBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAI5B,OAHiC,IAA7BgB,EAAQ4uC,UAAUtyC,QAClB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ4uC,WAE7B3uC,GAEXK,OAPwB,SAOjBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK2uC,GACrB,MAAOnuC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4uC,UAAYpuC,EAAOwC,QAC3B,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAxBwB,SAwBf9B,GACL,IAAMY,EAAU,kBAAK2uC,GAIrB,YAHyB/tC,IAArBxB,EAAOwvC,WAAgD,OAArBxvC,EAAOwvC,YACzC5uC,EAAQ4uC,UAAY3rC,EAAgB7D,EAAOwvC,YAExC5uC,GAEXoB,OA/BwB,SA+BjBpB,GACH,IAAMqB,EAAM,GAGZ,YAFsBT,IAAtBZ,EAAQ4uC,YACHvtC,EAAIutC,UAAY1rC,OAAsCtC,IAAtBZ,EAAQ4uC,UAA0B5uC,EAAQ4uC,UAAY,IAAInuC,aACxFY,GAEXC,YArCwB,SAqCZlC,GACR,IAAMY,EAAU,kBAAK2uC,GAOrB,YANyB/tC,IAArBxB,EAAOwvC,WAAgD,OAArBxvC,EAAOwvC,UACzC5uC,EAAQ4uC,UAAYxvC,EAAOwvC,UAG3B5uC,EAAQ4uC,UAAY,IAAInuC,WAErBT,IAqHXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,2GCjPd4pC,EA8DAC,E,4VAlDJ,SAASC,EAAe3vC,GAC3B,OAAQA,GACJ,KAAK,EACL,IAAK,UACD,OAAOyvC,EAAOG,QAClB,KAAK,EACL,IAAK,SACD,OAAOH,EAAOI,OAClB,KAAK,EACL,IAAK,SACD,OAAOJ,EAAOK,OAClB,KAAK,EACL,IAAK,SACD,OAAOL,EAAOM,OAClB,KAAK,EACL,IAAK,YACD,OAAON,EAAOO,UAClB,KAAK,EACL,IAAK,UACD,OAAOP,EAAOQ,QAClB,KAAM,EACN,IAAK,eACL,QACI,OAAOR,EAAOnhC,cAGnB,SAAS4hC,EAAalwC,GACzB,OAAQA,GACJ,KAAKyvC,EAAOG,QACR,MAAO,UACX,KAAKH,EAAOI,OACR,MAAO,SACX,KAAKJ,EAAOK,OACR,MAAO,SACX,KAAKL,EAAOM,OACR,MAAO,SACX,KAAKN,EAAOO,UACR,MAAO,YACX,KAAKP,EAAOQ,QACR,MAAO,UACX,QACI,MAAO,WA+BZ,SAASE,EAAiBnwC,GAC7B,OAAQA,GACJ,KAAK,EACL,IAAK,YACD,OAAO0vC,EAASU,UACpB,KAAK,EACL,IAAK,YACD,OAAOV,EAASW,UACpB,KAAK,EACL,IAAK,UACD,OAAOX,EAASY,QACpB,KAAK,EACL,IAAK,cACD,OAAOZ,EAASa,YACpB,KAAK,EACL,IAAK,iBACD,OAAOb,EAASc,eACpB,KAAK,EACL,IAAK,cACD,OAAOd,EAASe,YACpB,KAAK,EACL,IAAK,iBACD,OAAOf,EAASgB,eACpB,KAAK,EACL,IAAK,mBACD,OAAOhB,EAASiB,iBACpB,KAAK,EACL,IAAK,mBACD,OAAOjB,EAASkB,iBACpB,KAAM,EACN,IAAK,eACL,QACI,OAAOlB,EAASphC,cAGrB,SAASuiC,EAAe7wC,GAC3B,OAAQA,GACJ,KAAK0vC,EAASU,UACV,MAAO,YACX,KAAKV,EAASW,UACV,MAAO,YACX,KAAKX,EAASY,QACV,MAAO,UACX,KAAKZ,EAASa,YACV,MAAO,cACX,KAAKb,EAASc,eACV,MAAO,iBACX,KAAKd,EAASe,YACV,MAAO,cACX,KAAKf,EAASgB,eACV,MAAO,iBACX,KAAKhB,EAASiB,iBACV,MAAO,mBACX,KAAKjB,EAASkB,iBACV,MAAO,mBACX,QACI,MAAO,YA3InB,SAAWnB,GAEPA,EAAOA,EAAO,WAAa,GAAK,UAChCA,EAAOA,EAAO,UAAY,GAAK,SAC/BA,EAAOA,EAAO,UAAY,GAAK,SAC/BA,EAAOA,EAAO,UAAY,GAAK,SAC/BA,EAAOA,EAAO,aAAe,GAAK,YAElCA,EAAOA,EAAO,WAAa,GAAK,UAChCA,EAAOA,EAAO,iBAAmB,GAAK,gBAT1C,CAUGA,IAAWA,EAAS,KAoDvB,SAAWC,GAEPA,EAASA,EAAS,aAAe,GAAK,YAEtCA,EAASA,EAAS,aAAe,GAAK,YAEtCA,EAASA,EAAS,WAAa,GAAK,UAEpCA,EAASA,EAAS,eAAiB,GAAK,cAExCA,EAASA,EAAS,kBAAoB,GAAK,iBAE3CA,EAASA,EAAS,eAAiB,GAAK,cAExCA,EAASA,EAAS,kBAAoB,GAAK,iBAE3CA,EAASA,EAAS,oBAAsB,GAAK,mBAE7CA,EAASA,EAAS,oBAAsB,GAAK,mBAC7CA,EAASA,EAAS,iBAAmB,GAAK,eAnB9C,CAoBGA,IAAaA,EAAW,KA4D3B,IAAMoB,EAAqB,GACdC,EAAiB,CAC1BpwC,OAD0B,SACnBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACD,IAAvBgB,EAAQf,IAAI3C,QACZ2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQf,KAEP,IAAzBe,EAAQrB,MAAMrC,QACd2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQrB,YAEfiC,IAAjBZ,EAAQowC,MACRC,EAAOtwC,OAAOC,EAAQowC,KAAMnwC,EAAOE,OAAO,IAAIqF,QAAQC,SARpB,uBAUtBzF,EAAQkE,MAVc,IAUtC,2BAA8B,KAAnBoB,EAAmB,QAC1BgrC,EAAQvwC,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAXV,8BAatC,OAAOxF,GAEXK,OAhB0B,SAgBnBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkwC,GACrBlwC,EAAQkE,KAAO,GACf,MAAO1D,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQf,IAAMuB,EAAOwC,QACrB,MACJ,KAAK,EACDhD,EAAQrB,MAAQ6B,EAAOwC,QACvB,MACJ,KAAK,EACDhD,EAAQowC,KAAOC,EAAO/vC,OAAOE,EAAQA,EAAOL,UAC5C,MACJ,KAAK,EACDH,EAAQkE,KAAKtH,KAAK0zC,EAAQhwC,OAAOE,EAAQA,EAAOL,WAChD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA3C0B,SA2CjB9B,GACL,IAAMY,EAAU,kBAAKkwC,GAcrB,GAbAlwC,EAAQkE,KAAO,QACItD,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,MACnCe,EAAQf,IAAMgE,EAAgB7D,EAAOH,WAEpB2B,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCqB,EAAQrB,MAAQsE,EAAgB7D,EAAOT,aAEvBiC,IAAhBxB,EAAOgxC,MAAsC,OAAhBhxC,EAAOgxC,KACpCpwC,EAAQowC,KAAOC,EAAOnvC,SAAS9B,EAAOgxC,MAGtCpwC,EAAQowC,UAAOxvC,OAECA,IAAhBxB,EAAO8E,MAAsC,OAAhB9E,EAAO8E,KAAe,wBACnC9E,EAAO8E,MAD4B,IACnD,2BAA6B,KAAlByB,EAAkB,QACzB3F,EAAQkE,KAAKtH,KAAK0zC,EAAQpvC,SAASyE,KAFY,+BAKvD,OAAO3F,GAEXoB,OAjE0B,SAiEnBpB,GACH,IAAMqB,EAAM,GAaZ,YAZgBT,IAAhBZ,EAAQf,MACHoC,EAAIpC,IAAMiE,OAAgCtC,IAAhBZ,EAAQf,IAAoBe,EAAQf,IAAM,IAAIwB,kBAC3DG,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQuE,OAAkCtC,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,kBAClEG,IAAjBZ,EAAQowC,OACH/uC,EAAI+uC,KAAOpwC,EAAQowC,KAAOC,EAAOjvC,OAAOpB,EAAQowC,WAAQxvC,GACzDZ,EAAQkE,KACR7C,EAAI6C,KAAOlE,EAAQkE,KAAK0B,KAAI,SAACD,GAAD,OAAQA,EAAI2qC,EAAQlvC,OAAOuE,QAAK/E,KAG5DS,EAAI6C,KAAO,GAER7C,GAEXC,YAjF0B,SAiFdlC,GACR,IAAMY,EAAU,kBAAKkwC,GAoBrB,GAnBAlwC,EAAQkE,KAAO,QACItD,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,IACnCe,EAAQf,IAAMG,EAAOH,IAGrBe,EAAQf,IAAM,IAAIwB,gBAEDG,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,IAAI8B,gBAEJG,IAAhBxB,EAAOgxC,MAAsC,OAAhBhxC,EAAOgxC,KACpCpwC,EAAQowC,KAAOC,EAAO/uC,YAAYlC,EAAOgxC,MAGzCpwC,EAAQowC,UAAOxvC,OAECA,IAAhBxB,EAAO8E,MAAsC,OAAhB9E,EAAO8E,KAAe,wBACnC9E,EAAO8E,MAD4B,IACnD,2BAA6B,KAAlByB,EAAkB,QACzB3F,EAAQkE,KAAKtH,KAAK0zC,EAAQhvC,YAAYqE,KAFS,+BAKvD,OAAO3F,IAGTuwC,EAAwB,GACjBC,EAAoB,CAC7BzwC,OAD6B,SACtBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,OAT2B,IAAvBgB,EAAQf,IAAI3C,QACZ2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQf,UAEf2B,IAAjBZ,EAAQywC,MACRN,EAAepwC,OAAOC,EAAQywC,KAAMxwC,EAAOE,OAAO,IAAIqF,QAAQC,cAE5C7E,IAAlBZ,EAAQ0wC,OACRP,EAAepwC,OAAOC,EAAQ0wC,MAAOzwC,EAAOE,OAAO,IAAIqF,QAAQC,SAE5DxF,GAEXK,OAb6B,SAatBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKuwC,GACrB,MAAO/vC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQf,IAAMuB,EAAOwC,QACrB,MACJ,KAAK,EACDhD,EAAQywC,KAAON,EAAe7vC,OAAOE,EAAQA,EAAOL,UACpD,MACJ,KAAK,EACDH,EAAQ0wC,MAAQP,EAAe7vC,OAAOE,EAAQA,EAAOL,UACrD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApC6B,SAoCpB9B,GACL,IAAMY,EAAU,kBAAKuwC,GAgBrB,YAfmB3vC,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,MACnCe,EAAQf,IAAMgE,EAAgB7D,EAAOH,WAErB2B,IAAhBxB,EAAOqxC,MAAsC,OAAhBrxC,EAAOqxC,KACpCzwC,EAAQywC,KAAON,EAAejvC,SAAS9B,EAAOqxC,MAG9CzwC,EAAQywC,UAAO7vC,OAEEA,IAAjBxB,EAAOsxC,OAAwC,OAAjBtxC,EAAOsxC,MACrC1wC,EAAQ0wC,MAAQP,EAAejvC,SAAS9B,EAAOsxC,OAG/C1wC,EAAQ0wC,WAAQ9vC,EAEbZ,GAEXoB,OAvD6B,SAuDtBpB,GACH,IAAMqB,EAAM,GAWZ,YAVgBT,IAAhBZ,EAAQf,MACHoC,EAAIpC,IAAMiE,OAAgCtC,IAAhBZ,EAAQf,IAAoBe,EAAQf,IAAM,IAAIwB,kBAC5DG,IAAjBZ,EAAQywC,OACHpvC,EAAIovC,KAAOzwC,EAAQywC,KACdN,EAAe/uC,OAAOpB,EAAQywC,WAC9B7vC,QACQA,IAAlBZ,EAAQ0wC,QACHrvC,EAAIqvC,MAAQ1wC,EAAQ0wC,MACfP,EAAe/uC,OAAOpB,EAAQ0wC,YAC9B9vC,GACHS,GAEXC,YArE6B,SAqEjBlC,GACR,IAAMY,EAAU,kBAAKuwC,GAmBrB,YAlBmB3vC,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,IACnCe,EAAQf,IAAMG,EAAOH,IAGrBe,EAAQf,IAAM,IAAIwB,gBAEFG,IAAhBxB,EAAOqxC,MAAsC,OAAhBrxC,EAAOqxC,KACpCzwC,EAAQywC,KAAON,EAAe7uC,YAAYlC,EAAOqxC,MAGjDzwC,EAAQywC,UAAO7vC,OAEEA,IAAjBxB,EAAOsxC,OAAwC,OAAjBtxC,EAAOsxC,MACrC1wC,EAAQ0wC,MAAQP,EAAe7uC,YAAYlC,EAAOsxC,OAGlD1wC,EAAQ0wC,WAAQ9vC,EAEbZ,IAGT2wC,EAAsB,GACfC,EAAkB,CAC3B7wC,OAD2B,SACpBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,YAZsB4B,IAAlBZ,EAAQ6wC,OACRV,EAAepwC,OAAOC,EAAQ6wC,MAAO5wC,EAAOE,OAAO,IAAIqF,QAAQC,cAE1C7E,IAArBZ,EAAQ8wC,UACRN,EAAkBzwC,OAAOC,EAAQ8wC,SAAU7wC,EAAOE,OAAO,IAAIqF,QAAQC,cAEnD7E,IAAlBZ,EAAQ+wC,OACRC,EAAWjxC,OAAOC,EAAQ+wC,MAAO9wC,EAAOE,OAAO,IAAIqF,QAAQC,cAEpC7E,IAAvBZ,EAAQixC,YACRC,EAAqBnxC,OAAOC,EAAQixC,WAAYhxC,EAAOE,OAAO,IAAIqF,QAAQC,SAEvExF,GAEXK,OAhB2B,SAgBpBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK2wC,GACrB,MAAOnwC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6wC,MAAQV,EAAe7vC,OAAOE,EAAQA,EAAOL,UACrD,MACJ,KAAK,EACDH,EAAQ8wC,SAAWN,EAAkBlwC,OAAOE,EAAQA,EAAOL,UAC3D,MACJ,KAAK,EACDH,EAAQ+wC,MAAQC,EAAW1wC,OAAOE,EAAQA,EAAOL,UACjD,MACJ,KAAK,EACDH,EAAQixC,WAAaC,EAAqB5wC,OAAOE,EAAQA,EAAOL,UAChE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1C2B,SA0ClB9B,GACL,IAAMY,EAAU,kBAAK2wC,GAyBrB,YAxBqB/vC,IAAjBxB,EAAOyxC,OAAwC,OAAjBzxC,EAAOyxC,MACrC7wC,EAAQ6wC,MAAQV,EAAejvC,SAAS9B,EAAOyxC,OAG/C7wC,EAAQ6wC,WAAQjwC,OAEIA,IAApBxB,EAAO0xC,UAA8C,OAApB1xC,EAAO0xC,SACxC9wC,EAAQ8wC,SAAWN,EAAkBtvC,SAAS9B,EAAO0xC,UAGrD9wC,EAAQ8wC,cAAWlwC,OAEFA,IAAjBxB,EAAO2xC,OAAwC,OAAjB3xC,EAAO2xC,MACrC/wC,EAAQ+wC,MAAQC,EAAW9vC,SAAS9B,EAAO2xC,OAG3C/wC,EAAQ+wC,WAAQnwC,OAEMA,IAAtBxB,EAAO6xC,YAAkD,OAAtB7xC,EAAO6xC,WAC1CjxC,EAAQixC,WAAaC,EAAqBhwC,SAAS9B,EAAO6xC,YAG1DjxC,EAAQixC,gBAAarwC,EAElBZ,GAEXoB,OAtE2B,SAsEpBpB,GACH,IAAMqB,EAAM,GAeZ,YAdkBT,IAAlBZ,EAAQ6wC,QACHxvC,EAAIwvC,MAAQ7wC,EAAQ6wC,MACfV,EAAe/uC,OAAOpB,EAAQ6wC,YAC9BjwC,QACWA,IAArBZ,EAAQ8wC,WACHzvC,EAAIyvC,SAAW9wC,EAAQ8wC,SAClBN,EAAkBpvC,OAAOpB,EAAQ8wC,eACjClwC,QACQA,IAAlBZ,EAAQ+wC,QACH1vC,EAAI0vC,MAAQ/wC,EAAQ+wC,MAAQC,EAAW5vC,OAAOpB,EAAQ+wC,YAASnwC,QAC7CA,IAAvBZ,EAAQixC,aACH5vC,EAAI4vC,WAAajxC,EAAQixC,WACpBC,EAAqB9vC,OAAOpB,EAAQixC,iBACpCrwC,GACHS,GAEXC,YAxF2B,SAwFflC,GACR,IAAMY,EAAU,kBAAK2wC,GAyBrB,YAxBqB/vC,IAAjBxB,EAAOyxC,OAAwC,OAAjBzxC,EAAOyxC,MACrC7wC,EAAQ6wC,MAAQV,EAAe7uC,YAAYlC,EAAOyxC,OAGlD7wC,EAAQ6wC,WAAQjwC,OAEIA,IAApBxB,EAAO0xC,UAA8C,OAApB1xC,EAAO0xC,SACxC9wC,EAAQ8wC,SAAWN,EAAkBlvC,YAAYlC,EAAO0xC,UAGxD9wC,EAAQ8wC,cAAWlwC,OAEFA,IAAjBxB,EAAO2xC,OAAwC,OAAjB3xC,EAAO2xC,MACrC/wC,EAAQ+wC,MAAQC,EAAW1vC,YAAYlC,EAAO2xC,OAG9C/wC,EAAQ+wC,WAAQnwC,OAEMA,IAAtBxB,EAAO6xC,YAAkD,OAAtB7xC,EAAO6xC,WAC1CjxC,EAAQixC,WAAaC,EAAqB5vC,YAAYlC,EAAO6xC,YAG7DjxC,EAAQixC,gBAAarwC,EAElBZ,IAGTmxC,EAAa,CACfpuC,KAAM,EACNquC,WAAY,EACZC,aAAc,EACd/0C,OAAQ,GAEC+zC,EAAS,CAClBtwC,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAgB5B,OAfqB,IAAjBgB,EAAQ+C,MACR9C,EAAOE,OAAO,GAAGE,MAAML,EAAQ+C,MAER,IAAvB/C,EAAQoxC,YACRnxC,EAAOE,OAAO,IAAIE,MAAML,EAAQoxC,YAEP,IAAzBpxC,EAAQqxC,cACRpxC,EAAOE,OAAO,IAAIE,MAAML,EAAQqxC,cAEb,IAAnBrxC,EAAQ1D,QACR2D,EAAOE,OAAO,IAAIE,MAAML,EAAQ1D,QAEN,IAA1B0D,EAAQ4kC,OAAOtoC,QACf2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ4kC,QAE7B3kC,GAEXK,OAnBkB,SAmBXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKmxC,GACrB,MAAO3wC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+C,KAAOvC,EAAOH,QACtB,MACJ,KAAK,EACDL,EAAQoxC,WAAa5wC,EAAOH,QAC5B,MACJ,KAAK,EACDL,EAAQqxC,aAAe7wC,EAAOH,QAC9B,MACJ,KAAK,EACDL,EAAQ1D,OAASkE,EAAOH,QACxB,MACJ,KAAK,EACDL,EAAQ4kC,OAASpkC,EAAOwC,QACxB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhDkB,SAgDT9B,GACL,IAAMY,EAAU,kBAAKmxC,GA4BrB,YA3BoBvwC,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,KACpC/C,EAAQ+C,KAAOgsC,EAAe3vC,EAAO2D,MAGrC/C,EAAQ+C,KAAO,OAEOnC,IAAtBxB,EAAOgyC,YAAkD,OAAtBhyC,EAAOgyC,WAC1CpxC,EAAQoxC,WAAarC,EAAe3vC,EAAOgyC,YAG3CpxC,EAAQoxC,WAAa,OAEGxwC,IAAxBxB,EAAOiyC,cAAsD,OAAxBjyC,EAAOiyC,aAC5CrxC,EAAQqxC,aAAetC,EAAe3vC,EAAOiyC,cAG7CrxC,EAAQqxC,aAAe,OAELzwC,IAAlBxB,EAAO9C,QAA0C,OAAlB8C,EAAO9C,OACtC0D,EAAQ1D,OAASizC,EAAiBnwC,EAAO9C,QAGzC0D,EAAQ1D,OAAS,OAECsE,IAAlBxB,EAAOwlC,QAA0C,OAAlBxlC,EAAOwlC,SACtC5kC,EAAQ4kC,OAAS3hC,EAAgB7D,EAAOwlC,SAErC5kC,GAEXoB,OA/EkB,SA+EXpB,GACH,IAAMqB,EAAM,GAUZ,YATiBT,IAAjBZ,EAAQ+C,OAAuB1B,EAAI0B,KAAOusC,EAAatvC,EAAQ+C,YACxCnC,IAAvBZ,EAAQoxC,aACH/vC,EAAI+vC,WAAa9B,EAAatvC,EAAQoxC,kBAClBxwC,IAAzBZ,EAAQqxC,eACHhwC,EAAIgwC,aAAe/B,EAAatvC,EAAQqxC,oBAC1BzwC,IAAnBZ,EAAQ1D,SACH+E,EAAI/E,OAAS2zC,EAAejwC,EAAQ1D,cACtBsE,IAAnBZ,EAAQ4kC,SACHvjC,EAAIujC,OAAS1hC,OAAmCtC,IAAnBZ,EAAQ4kC,OAAuB5kC,EAAQ4kC,OAAS,IAAInkC,aAC/EY,GAEXC,YA5FkB,SA4FNlC,GACR,IAAMY,EAAU,kBAAKmxC,GA+BrB,YA9BoBvwC,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,KACpC/C,EAAQ+C,KAAO3D,EAAO2D,KAGtB/C,EAAQ+C,KAAO,OAEOnC,IAAtBxB,EAAOgyC,YAAkD,OAAtBhyC,EAAOgyC,WAC1CpxC,EAAQoxC,WAAahyC,EAAOgyC,WAG5BpxC,EAAQoxC,WAAa,OAEGxwC,IAAxBxB,EAAOiyC,cAAsD,OAAxBjyC,EAAOiyC,aAC5CrxC,EAAQqxC,aAAejyC,EAAOiyC,aAG9BrxC,EAAQqxC,aAAe,OAELzwC,IAAlBxB,EAAO9C,QAA0C,OAAlB8C,EAAO9C,OACtC0D,EAAQ1D,OAAS8C,EAAO9C,OAGxB0D,EAAQ1D,OAAS,OAECsE,IAAlBxB,EAAOwlC,QAA0C,OAAlBxlC,EAAOwlC,OACtC5kC,EAAQ4kC,OAASxlC,EAAOwlC,OAGxB5kC,EAAQ4kC,OAAS,IAAInkC,WAElBT,IAGTsxC,EAAc,CAAEvuC,KAAM,GACfutC,EAAU,CACnBvwC,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,OATqB,IAAjBgB,EAAQ+C,MACR9C,EAAOE,OAAO,GAAGE,MAAML,EAAQ+C,MAEL,IAA1B/C,EAAQ4kC,OAAOtoC,QACf2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ4kC,QAEN,IAA1B5kC,EAAQuxC,OAAOj1C,QACf2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQuxC,QAE7BtxC,GAEXK,OAbmB,SAaZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKsxC,GACrB,MAAO9wC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+C,KAAOvC,EAAOH,QACtB,MACJ,KAAK,EACDL,EAAQ4kC,OAASpkC,EAAOwC,QACxB,MACJ,KAAK,EACDhD,EAAQuxC,OAAS/wC,EAAOwC,QACxB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApCmB,SAoCV9B,GACL,IAAMY,EAAU,kBAAKsxC,GAarB,YAZoB1wC,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,KACpC/C,EAAQ+C,KAAOgsC,EAAe3vC,EAAO2D,MAGrC/C,EAAQ+C,KAAO,OAEGnC,IAAlBxB,EAAOwlC,QAA0C,OAAlBxlC,EAAOwlC,SACtC5kC,EAAQ4kC,OAAS3hC,EAAgB7D,EAAOwlC,cAEtBhkC,IAAlBxB,EAAOmyC,QAA0C,OAAlBnyC,EAAOmyC,SACtCvxC,EAAQuxC,OAAStuC,EAAgB7D,EAAOmyC,SAErCvxC,GAEXoB,OApDmB,SAoDZpB,GACH,IAAMqB,EAAM,GAMZ,YALiBT,IAAjBZ,EAAQ+C,OAAuB1B,EAAI0B,KAAOusC,EAAatvC,EAAQ+C,YAC5CnC,IAAnBZ,EAAQ4kC,SACHvjC,EAAIujC,OAAS1hC,OAAmCtC,IAAnBZ,EAAQ4kC,OAAuB5kC,EAAQ4kC,OAAS,IAAInkC,kBACnEG,IAAnBZ,EAAQuxC,SACHlwC,EAAIkwC,OAASruC,OAAmCtC,IAAnBZ,EAAQuxC,OAAuBvxC,EAAQuxC,OAAS,IAAI9wC,aAC/EY,GAEXC,YA7DmB,SA6DPlC,GACR,IAAMY,EAAU,kBAAKsxC,GAmBrB,YAlBoB1wC,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,KACpC/C,EAAQ+C,KAAO3D,EAAO2D,KAGtB/C,EAAQ+C,KAAO,OAEGnC,IAAlBxB,EAAOwlC,QAA0C,OAAlBxlC,EAAOwlC,OACtC5kC,EAAQ4kC,OAASxlC,EAAOwlC,OAGxB5kC,EAAQ4kC,OAAS,IAAInkC,gBAEHG,IAAlBxB,EAAOmyC,QAA0C,OAAlBnyC,EAAOmyC,OACtCvxC,EAAQuxC,OAASnyC,EAAOmyC,OAGxBvxC,EAAQuxC,OAAS,IAAI9wC,WAElBT,IAiSTwxC,EAAiB,GACVR,EAAa,CACtBjxC,OADsB,SACfC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQqT,SADc,IACtC,2BAAiC,KAAtB/N,EAAsB,QAC7BmsC,EAAW1xC,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFb,8BAItC,OAAOxF,GAEXK,OAPsB,SAOfC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKwxC,GACrBxxC,EAAQqT,QAAU,GAClB,MAAO7S,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqT,QAAQzW,KAAK60C,EAAWnxC,OAAOE,EAAQA,EAAOL,WACtD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAzBsB,SAyBb9B,GACL,IAAMY,EAAU,kBAAKwxC,GAErB,GADAxxC,EAAQqT,QAAU,QACKzS,IAAnBxB,EAAOiU,SAA4C,OAAnBjU,EAAOiU,QAAkB,wBACzCjU,EAAOiU,SADkC,IACzD,2BAAgC,KAArB1N,EAAqB,QAC5B3F,EAAQqT,QAAQzW,KAAK60C,EAAWvwC,SAASyE,KAFY,+BAK7D,OAAO3F,GAEXoB,OAnCsB,SAmCfpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQqT,QACRhS,EAAIgS,QAAUrT,EAAQqT,QAAQzN,KAAI,SAACD,GAAD,OAAOA,EAAI8rC,EAAWrwC,OAAOuE,QAAK/E,KAGpES,EAAIgS,QAAU,GAEXhS,GAEXC,YA7CsB,SA6CVlC,GACR,IAAMY,EAAU,kBAAKwxC,GAErB,GADAxxC,EAAQqT,QAAU,QACKzS,IAAnBxB,EAAOiU,SAA4C,OAAnBjU,EAAOiU,QAAkB,wBACzCjU,EAAOiU,SADkC,IACzD,2BAAgC,KAArB1N,EAAqB,QAC5B3F,EAAQqT,QAAQzW,KAAK60C,EAAWnwC,YAAYqE,KAFS,+BAK7D,OAAO3F,IAGT0xC,EAAiB,GACVD,EAAa,CACtB1xC,OADsB,SACfC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,YANsB4B,IAAlBZ,EAAQ6wC,OACRV,EAAepwC,OAAOC,EAAQ6wC,MAAO5wC,EAAOE,OAAO,IAAIqF,QAAQC,cAE1C7E,IAArBZ,EAAQ8wC,UACRN,EAAkBzwC,OAAOC,EAAQ8wC,SAAU7wC,EAAOE,OAAO,IAAIqF,QAAQC,SAElExF,GAEXK,OAVsB,SAUfC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK0xC,GACrB,MAAOlxC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6wC,MAAQV,EAAe7vC,OAAOE,EAAQA,EAAOL,UACrD,MACJ,KAAK,EACDH,EAAQ8wC,SAAWN,EAAkBlwC,OAAOE,EAAQA,EAAOL,UAC3D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BsB,SA8Bb9B,GACL,IAAMY,EAAU,kBAAK0xC,GAarB,YAZqB9wC,IAAjBxB,EAAOyxC,OAAwC,OAAjBzxC,EAAOyxC,MACrC7wC,EAAQ6wC,MAAQV,EAAejvC,SAAS9B,EAAOyxC,OAG/C7wC,EAAQ6wC,WAAQjwC,OAEIA,IAApBxB,EAAO0xC,UAA8C,OAApB1xC,EAAO0xC,SACxC9wC,EAAQ8wC,SAAWN,EAAkBtvC,SAAS9B,EAAO0xC,UAGrD9wC,EAAQ8wC,cAAWlwC,EAEhBZ,GAEXoB,OA9CsB,SA8CfpB,GACH,IAAMqB,EAAM,GASZ,YARkBT,IAAlBZ,EAAQ6wC,QACHxvC,EAAIwvC,MAAQ7wC,EAAQ6wC,MACfV,EAAe/uC,OAAOpB,EAAQ6wC,YAC9BjwC,QACWA,IAArBZ,EAAQ8wC,WACHzvC,EAAIyvC,SAAW9wC,EAAQ8wC,SAClBN,EAAkBpvC,OAAOpB,EAAQ8wC,eACjClwC,GACHS,GAEXC,YA1DsB,SA0DVlC,GACR,IAAMY,EAAU,kBAAK0xC,GAarB,YAZqB9wC,IAAjBxB,EAAOyxC,OAAwC,OAAjBzxC,EAAOyxC,MACrC7wC,EAAQ6wC,MAAQV,EAAe7uC,YAAYlC,EAAOyxC,OAGlD7wC,EAAQ6wC,WAAQjwC,OAEIA,IAApBxB,EAAO0xC,UAA8C,OAApB1xC,EAAO0xC,SACxC9wC,EAAQ8wC,SAAWN,EAAkBlvC,YAAYlC,EAAO0xC,UAGxD9wC,EAAQ8wC,cAAWlwC,EAEhBZ,IAGT2xC,EAA2B,GACpBT,EAAuB,CAChCnxC,OADgC,SACzBC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQqT,SADc,IACtC,2BAAiC,KAAtB/N,EAAsB,QAC7BssC,EAAqB7xC,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFvB,qDAItBzF,EAAQ6xC,cAJc,IAItC,2BAAsC,KAA3BvsC,EAA2B,QAClCgrC,EAAQvwC,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALV,8BAOtC,OAAOxF,GAEXK,OAVgC,SAUzBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK2xC,GACrB3xC,EAAQqT,QAAU,GAClBrT,EAAQ6xC,aAAe,GACvB,MAAOrxC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqT,QAAQzW,KAAKg1C,EAAqBtxC,OAAOE,EAAQA,EAAOL,WAChE,MACJ,KAAK,EACDH,EAAQ6xC,aAAaj1C,KAAK0zC,EAAQhwC,OAAOE,EAAQA,EAAOL,WACxD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhCgC,SAgCvB9B,GACL,IAAMY,EAAU,kBAAK2xC,GAGrB,GAFA3xC,EAAQqT,QAAU,GAClBrT,EAAQ6xC,aAAe,QACAjxC,IAAnBxB,EAAOiU,SAA4C,OAAnBjU,EAAOiU,QAAkB,wBACzCjU,EAAOiU,SADkC,IACzD,2BAAgC,KAArB1N,EAAqB,QAC5B3F,EAAQqT,QAAQzW,KAAKg1C,EAAqB1wC,SAASyE,KAFE,+BAK7D,QAA4B/E,IAAxBxB,EAAOyyC,cAAsD,OAAxBzyC,EAAOyyC,aAAuB,wBACnDzyC,EAAOyyC,cAD4C,IACnE,2BAAqC,KAA1BlsC,EAA0B,QACjC3F,EAAQ6xC,aAAaj1C,KAAK0zC,EAAQpvC,SAASyE,KAFoB,+BAKvE,OAAO3F,GAEXoB,OAhDgC,SAgDzBpB,GACH,IAAMqB,EAAM,GAaZ,OAZIrB,EAAQqT,QACRhS,EAAIgS,QAAUrT,EAAQqT,QAAQzN,KAAI,SAACD,GAAD,OAAOA,EAAIisC,EAAqBxwC,OAAOuE,QAAK/E,KAG9ES,EAAIgS,QAAU,GAEdrT,EAAQ6xC,aACRxwC,EAAIwwC,aAAe7xC,EAAQ6xC,aAAajsC,KAAI,SAACD,GAAD,OAAOA,EAAI2qC,EAAQlvC,OAAOuE,QAAK/E,KAG3ES,EAAIwwC,aAAe,GAEhBxwC,GAEXC,YAhEgC,SAgEpBlC,GACR,IAAMY,EAAU,kBAAK2xC,GAGrB,GAFA3xC,EAAQqT,QAAU,GAClBrT,EAAQ6xC,aAAe,QACAjxC,IAAnBxB,EAAOiU,SAA4C,OAAnBjU,EAAOiU,QAAkB,wBACzCjU,EAAOiU,SADkC,IACzD,2BAAgC,KAArB1N,EAAqB,QAC5B3F,EAAQqT,QAAQzW,KAAKg1C,EAAqBtwC,YAAYqE,KAFD,+BAK7D,QAA4B/E,IAAxBxB,EAAOyyC,cAAsD,OAAxBzyC,EAAOyyC,aAAuB,wBACnDzyC,EAAOyyC,cAD4C,IACnE,2BAAqC,KAA1BlsC,EAA0B,QACjC3F,EAAQ6xC,aAAaj1C,KAAK0zC,EAAQhvC,YAAYqE,KAFiB,+BAKvE,OAAO3F,IAGT8xC,EAA2B,GACpBF,EAAuB,CAChC7xC,OADgC,SACzBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,YANsB4B,IAAlBZ,EAAQ6wC,OACRkB,EAAyBhyC,OAAOC,EAAQ6wC,MAAO5wC,EAAOE,OAAO,IAAIqF,QAAQC,cAEpD7E,IAArBZ,EAAQ8wC,UACRkB,EAA4BjyC,OAAOC,EAAQ8wC,SAAU7wC,EAAOE,OAAO,IAAIqF,QAAQC,SAE5ExF,GAEXK,OAVgC,SAUzBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK8xC,GACrB,MAAOtxC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6wC,MAAQkB,EAAyBzxC,OAAOE,EAAQA,EAAOL,UAC/D,MACJ,KAAK,EACDH,EAAQ8wC,SAAWkB,EAA4B1xC,OAAOE,EAAQA,EAAOL,UACrE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BgC,SA8BvB9B,GACL,IAAMY,EAAU,kBAAK8xC,GAarB,YAZqBlxC,IAAjBxB,EAAOyxC,OAAwC,OAAjBzxC,EAAOyxC,MACrC7wC,EAAQ6wC,MAAQkB,EAAyB7wC,SAAS9B,EAAOyxC,OAGzD7wC,EAAQ6wC,WAAQjwC,OAEIA,IAApBxB,EAAO0xC,UAA8C,OAApB1xC,EAAO0xC,SACxC9wC,EAAQ8wC,SAAWkB,EAA4B9wC,SAAS9B,EAAO0xC,UAG/D9wC,EAAQ8wC,cAAWlwC,EAEhBZ,GAEXoB,OA9CgC,SA8CzBpB,GACH,IAAMqB,EAAM,GASZ,YARkBT,IAAlBZ,EAAQ6wC,QACHxvC,EAAIwvC,MAAQ7wC,EAAQ6wC,MACfkB,EAAyB3wC,OAAOpB,EAAQ6wC,YACxCjwC,QACWA,IAArBZ,EAAQ8wC,WACHzvC,EAAIyvC,SAAW9wC,EAAQ8wC,SAClBkB,EAA4B5wC,OAAOpB,EAAQ8wC,eAC3ClwC,GACHS,GAEXC,YA1DgC,SA0DpBlC,GACR,IAAMY,EAAU,kBAAK8xC,GAarB,YAZqBlxC,IAAjBxB,EAAOyxC,OAAwC,OAAjBzxC,EAAOyxC,MACrC7wC,EAAQ6wC,MAAQkB,EAAyBzwC,YAAYlC,EAAOyxC,OAG5D7wC,EAAQ6wC,WAAQjwC,OAEIA,IAApBxB,EAAO0xC,UAA8C,OAApB1xC,EAAO0xC,SACxC9wC,EAAQ8wC,SAAWkB,EAA4B1wC,YAAYlC,EAAO0xC,UAGlE9wC,EAAQ8wC,cAAWlwC,EAEhBZ,IAGTiyC,EAA+B,CAAE/tC,KAAM,GAChC6tC,EAA2B,CACpChyC,OADoC,SAC7BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACD,IAAvBgB,EAAQf,IAAI3C,QACZ2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQf,KAEP,IAAzBe,EAAQrB,MAAMrC,QACd2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQrB,YAEfiC,IAAjBZ,EAAQowC,MACRC,EAAOtwC,OAAOC,EAAQowC,KAAMnwC,EAAOE,OAAO,IAAIqF,QAAQC,SAE1DxF,EAAOE,OAAO,IAAIqF,OAVoB,uBAWtBxF,EAAQkE,MAXc,IAWtC,2BAA8B,KAAnBoB,EAAmB,QAC1BrF,EAAOI,MAAMiF,IAZqB,8BAetC,OADArF,EAAOwF,SACAxF,GAEXK,OAlBoC,SAkB7BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTiyC,GAEPjyC,EAAQkE,KAAO,GACf,MAAO1D,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQf,IAAMuB,EAAOwC,QACrB,MACJ,KAAK,EACDhD,EAAQrB,MAAQ6B,EAAOwC,QACvB,MACJ,KAAK,EACDhD,EAAQowC,KAAOC,EAAO/vC,OAAOE,EAAQA,EAAOL,UAC5C,MACJ,KAAK,EACD,GAAkB,KAAP,EAANY,GAAgB,CACjB,IAAMmxC,EAAO1xC,EAAOL,SAAWK,EAAOM,IACtC,MAAON,EAAOM,IAAMoxC,EAChBlyC,EAAQkE,KAAKtH,KAAK4D,EAAOH,cAI7BL,EAAQkE,KAAKtH,KAAK4D,EAAOH,SAE7B,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAvDoC,SAuD3B9B,GACL,IAAMY,EAAU,kBACTiyC,GAeP,GAbAjyC,EAAQkE,KAAO,QACItD,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,MACnCe,EAAQf,IAAMgE,EAAgB7D,EAAOH,WAEpB2B,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCqB,EAAQrB,MAAQsE,EAAgB7D,EAAOT,aAEvBiC,IAAhBxB,EAAOgxC,MAAsC,OAAhBhxC,EAAOgxC,KACpCpwC,EAAQowC,KAAOC,EAAOnvC,SAAS9B,EAAOgxC,MAGtCpwC,EAAQowC,UAAOxvC,OAECA,IAAhBxB,EAAO8E,MAAsC,OAAhB9E,EAAO8E,KAAe,wBACnC9E,EAAO8E,MAD4B,IACnD,2BAA6B,KAAlByB,EAAkB,QACzB3F,EAAQkE,KAAKtH,KAAKuE,OAAOwE,KAFsB,+BAKvD,OAAO3F,GAEXoB,OA/EoC,SA+E7BpB,GACH,IAAMqB,EAAM,GAaZ,YAZgBT,IAAhBZ,EAAQf,MACHoC,EAAIpC,IAAMiE,OAAgCtC,IAAhBZ,EAAQf,IAAoBe,EAAQf,IAAM,IAAIwB,kBAC3DG,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQuE,OAAkCtC,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,kBAClEG,IAAjBZ,EAAQowC,OACH/uC,EAAI+uC,KAAOpwC,EAAQowC,KAAOC,EAAOjvC,OAAOpB,EAAQowC,WAAQxvC,GACzDZ,EAAQkE,KACR7C,EAAI6C,KAAOlE,EAAQkE,KAAK0B,KAAI,SAACD,GAAD,OAAOA,KAGnCtE,EAAI6C,KAAO,GAER7C,GAEXC,YA/FoC,SA+FxBlC,GACR,IAAMY,EAAU,kBACTiyC,GAqBP,GAnBAjyC,EAAQkE,KAAO,QACItD,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,IACnCe,EAAQf,IAAMG,EAAOH,IAGrBe,EAAQf,IAAM,IAAIwB,gBAEDG,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,IAAI8B,gBAEJG,IAAhBxB,EAAOgxC,MAAsC,OAAhBhxC,EAAOgxC,KACpCpwC,EAAQowC,KAAOC,EAAO/uC,YAAYlC,EAAOgxC,MAGzCpwC,EAAQowC,UAAOxvC,OAECA,IAAhBxB,EAAO8E,MAAsC,OAAhB9E,EAAO8E,KAAe,wBACnC9E,EAAO8E,MAD4B,IACnD,2BAA6B,KAAlByB,EAAkB,QACzB3F,EAAQkE,KAAKtH,KAAK+I,IAF6B,+BAKvD,OAAO3F,IAGTmyC,EAAkC,GAC3BH,EAA8B,CACvCjyC,OADuC,SAChCC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,OAT2B,IAAvBgB,EAAQf,IAAI3C,QACZ2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQf,UAEf2B,IAAjBZ,EAAQywC,MACRsB,EAAyBhyC,OAAOC,EAAQywC,KAAMxwC,EAAOE,OAAO,IAAIqF,QAAQC,cAEtD7E,IAAlBZ,EAAQ0wC,OACRqB,EAAyBhyC,OAAOC,EAAQ0wC,MAAOzwC,EAAOE,OAAO,IAAIqF,QAAQC,SAEtExF,GAEXK,OAbuC,SAahCC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTmyC,GAEP,MAAO3xC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQf,IAAMuB,EAAOwC,QACrB,MACJ,KAAK,EACDhD,EAAQywC,KAAOsB,EAAyBzxC,OAAOE,EAAQA,EAAOL,UAC9D,MACJ,KAAK,EACDH,EAAQ0wC,MAAQqB,EAAyBzxC,OAAOE,EAAQA,EAAOL,UAC/D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAtCuC,SAsC9B9B,GACL,IAAMY,EAAU,kBACTmyC,GAiBP,YAfmBvxC,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,MACnCe,EAAQf,IAAMgE,EAAgB7D,EAAOH,WAErB2B,IAAhBxB,EAAOqxC,MAAsC,OAAhBrxC,EAAOqxC,KACpCzwC,EAAQywC,KAAOsB,EAAyB7wC,SAAS9B,EAAOqxC,MAGxDzwC,EAAQywC,UAAO7vC,OAEEA,IAAjBxB,EAAOsxC,OAAwC,OAAjBtxC,EAAOsxC,MACrC1wC,EAAQ0wC,MAAQqB,EAAyB7wC,SAAS9B,EAAOsxC,OAGzD1wC,EAAQ0wC,WAAQ9vC,EAEbZ,GAEXoB,OA3DuC,SA2DhCpB,GACH,IAAMqB,EAAM,GAWZ,YAVgBT,IAAhBZ,EAAQf,MACHoC,EAAIpC,IAAMiE,OAAgCtC,IAAhBZ,EAAQf,IAAoBe,EAAQf,IAAM,IAAIwB,kBAC5DG,IAAjBZ,EAAQywC,OACHpvC,EAAIovC,KAAOzwC,EAAQywC,KACdsB,EAAyB3wC,OAAOpB,EAAQywC,WACxC7vC,QACQA,IAAlBZ,EAAQ0wC,QACHrvC,EAAIqvC,MAAQ1wC,EAAQ0wC,MACfqB,EAAyB3wC,OAAOpB,EAAQ0wC,YACxC9vC,GACHS,GAEXC,YAzEuC,SAyE3BlC,GACR,IAAMY,EAAU,kBACTmyC,GAoBP,YAlBmBvxC,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,IACnCe,EAAQf,IAAMG,EAAOH,IAGrBe,EAAQf,IAAM,IAAIwB,gBAEFG,IAAhBxB,EAAOqxC,MAAsC,OAAhBrxC,EAAOqxC,KACpCzwC,EAAQywC,KAAOsB,EAAyBzwC,YAAYlC,EAAOqxC,MAG3DzwC,EAAQywC,UAAO7vC,OAEEA,IAAjBxB,EAAOsxC,OAAwC,OAAjBtxC,EAAOsxC,MACrC1wC,EAAQ0wC,MAAQqB,EAAyBzwC,YAAYlC,EAAOsxC,OAG5D1wC,EAAQ0wC,WAAQ9vC,EAEbZ,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,mZC1+CnBmtC,EAAgB,GACTlsC,EAAY,CACrBnG,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,YANwB4B,IAApBZ,EAAQqyC,SACRpyC,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQqyC,cAEVzxC,IAAtBZ,EAAQsyC,WACRryC,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQsyC,WAE7BryC,GAEXK,OAVqB,SAUdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKoyC,GACrB,MAAO5xC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqyC,QAAU7xC,EAAOwC,QACzB,MACJ,KAAK,EACDhD,EAAQsyC,UAAY9xC,EAAOwC,QAC3B,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BqB,SA8BZ9B,GACL,IAAMY,EAAU,kBAAKoyC,GAOrB,YANuBxxC,IAAnBxB,EAAOizC,SAA4C,OAAnBjzC,EAAOizC,UACvCryC,EAAQqyC,QAAUpvC,EAAgB7D,EAAOizC,eAEpBzxC,IAArBxB,EAAOkzC,WAAgD,OAArBlzC,EAAOkzC,YACzCtyC,EAAQsyC,UAAYrvC,EAAgB7D,EAAOkzC,YAExCtyC,GAEXoB,OAxCqB,SAwCdpB,GACH,IAAMqB,EAAM,GAWZ,YAVoBT,IAApBZ,EAAQqyC,UACHhxC,EAAIgxC,aACmBzxC,IAApBZ,EAAQqyC,QACFnvC,EAAgBlD,EAAQqyC,cACxBzxC,QACQA,IAAtBZ,EAAQsyC,YACHjxC,EAAIixC,eACqB1xC,IAAtBZ,EAAQsyC,UACFpvC,EAAgBlD,EAAQsyC,gBACxB1xC,GACPS,GAEXC,YAtDqB,SAsDTlC,GACR,IAAMY,EAAU,kBAAKoyC,GAarB,YAZuBxxC,IAAnBxB,EAAOizC,SAA4C,OAAnBjzC,EAAOizC,QACvCryC,EAAQqyC,QAAUjzC,EAAOizC,QAGzBryC,EAAQqyC,aAAUzxC,OAEGA,IAArBxB,EAAOkzC,WAAgD,OAArBlzC,EAAOkzC,UACzCtyC,EAAQsyC,UAAYlzC,EAAOkzC,UAG3BtyC,EAAQsyC,eAAY1xC,EAEjBZ,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,6xBCjGnBstC,EAAiB,CACnBzoC,OAAQ,EACR0oC,OAAQ,GACRC,UAAW,GACXC,KAAM,EACN52C,KAAM,GACN62C,OAAQ,GACRC,KAAM,GACNC,UAAW,EACXC,QAAS,EACTC,UAAW,IAEF5sB,EAAa,CACtBpmB,OADsB,SACfC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACL,IAAnBgB,EAAQ8J,QACR7J,EAAOE,OAAO,GAAGC,MAAMJ,EAAQ8J,QAEZ,KAAnB9J,EAAQwyC,QACRvyC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQwyC,QAEX,KAAtBxyC,EAAQyyC,WACRxyC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyyC,WAEhB,IAAjBzyC,EAAQ0yC,MACRzyC,EAAOE,OAAO,IAAIA,OAAOH,EAAQ0yC,MAEhB,KAAjB1yC,EAAQlE,MACRmE,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQlE,MAEd,KAAnBkE,EAAQ2yC,QACR1yC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ2yC,QAjBC,uBAmBtB3yC,EAAQgzC,MAnBc,IAmBtC,2BAA8B,KAAnB1tC,EAAmB,QAC1B8gB,EAAermB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UApBjB,8BAqCtC,MAfqB,KAAjBzF,EAAQ4yC,MACR3yC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ4yC,MAEX,IAAtB5yC,EAAQ6yC,WACR5yC,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ6yC,WAEZ,IAApB7yC,EAAQ8yC,SACR7yC,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ8yC,cAEjBlyC,IAAfZ,EAAQizC,IACR1sC,OAAIxG,OAAOC,EAAQizC,GAAIhzC,EAAOE,OAAO,IAAIqF,QAAQC,SAE3B,KAAtBzF,EAAQ+yC,WACR9yC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+yC,WAE9B9yC,GAEXK,OAxCsB,SAwCfC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKuyC,GACrBvyC,EAAQgzC,KAAO,GACf,MAAOxyC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8J,OAAS9I,EAAaR,EAAOJ,SACrC,MACJ,KAAK,EACDJ,EAAQwyC,OAAShyC,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQyyC,UAAYjyC,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQ0yC,KAAOlyC,EAAOL,SACtB,MACJ,KAAK,EACDH,EAAQlE,KAAO0E,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQ2yC,OAASnyC,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQgzC,KAAKp2C,KAAKwpB,EAAe9lB,OAAOE,EAAQA,EAAOL,WACvD,MACJ,KAAK,EACDH,EAAQ4yC,KAAOpyC,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQ6yC,UAAY7xC,EAAaR,EAAOJ,SACxC,MACJ,KAAK,GACDJ,EAAQ8yC,QAAU9xC,EAAaR,EAAOJ,SACtC,MACJ,KAAK,GACDJ,EAAQizC,GAAK1sC,OAAIjG,OAAOE,EAAQA,EAAOL,UACvC,MACJ,KAAK,GACDH,EAAQ+yC,UAAYvyC,EAAO6B,SAC3B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA3FsB,SA2Fb9B,GACL,IAAMY,EAAU,kBAAKuyC,GAsCrB,GArCAvyC,EAAQgzC,KAAO,QACOpyC,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS3I,OAAO/B,EAAO0K,QAG/B9J,EAAQ8J,OAAS,OAEClJ,IAAlBxB,EAAOozC,QAA0C,OAAlBpzC,EAAOozC,OACtCxyC,EAAQwyC,OAASlwC,OAAOlD,EAAOozC,QAG/BxyC,EAAQwyC,OAAS,QAEI5xC,IAArBxB,EAAOqzC,WAAgD,OAArBrzC,EAAOqzC,UACzCzyC,EAAQyyC,UAAYnwC,OAAOlD,EAAOqzC,WAGlCzyC,EAAQyyC,UAAY,QAEJ7xC,IAAhBxB,EAAOszC,MAAsC,OAAhBtzC,EAAOszC,KACpC1yC,EAAQ0yC,KAAOvxC,OAAO/B,EAAOszC,MAG7B1yC,EAAQ0yC,KAAO,OAEC9xC,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCkE,EAAQlE,KAAOwG,OAAOlD,EAAOtD,MAG7BkE,EAAQlE,KAAO,QAEG8E,IAAlBxB,EAAOuzC,QAA0C,OAAlBvzC,EAAOuzC,OACtC3yC,EAAQ2yC,OAASrwC,OAAOlD,EAAOuzC,QAG/B3yC,EAAQ2yC,OAAS,QAED/xC,IAAhBxB,EAAO4zC,MAAsC,OAAhB5zC,EAAO4zC,KAAe,wBACnC5zC,EAAO4zC,MAD4B,IACnD,2BAA6B,KAAlBrtC,EAAkB,QACzB3F,EAAQgzC,KAAKp2C,KAAKwpB,EAAellB,SAASyE,KAFK,+BAmCvD,YA9BoB/E,IAAhBxB,EAAOwzC,MAAsC,OAAhBxzC,EAAOwzC,KACpC5yC,EAAQ4yC,KAAOtwC,OAAOlD,EAAOwzC,MAG7B5yC,EAAQ4yC,KAAO,QAEMhyC,IAArBxB,EAAOyzC,WAAgD,OAArBzzC,EAAOyzC,UACzC7yC,EAAQ6yC,UAAY1xC,OAAO/B,EAAOyzC,WAGlC7yC,EAAQ6yC,UAAY,OAEDjyC,IAAnBxB,EAAO0zC,SAA4C,OAAnB1zC,EAAO0zC,QACvC9yC,EAAQ8yC,QAAU3xC,OAAO/B,EAAO0zC,SAGhC9yC,EAAQ8yC,QAAU,OAEJlyC,IAAdxB,EAAO6zC,IAAkC,OAAd7zC,EAAO6zC,GAClCjzC,EAAQizC,GAAK1sC,OAAIrF,SAAS9B,EAAO6zC,IAGjCjzC,EAAQizC,QAAKryC,OAEQA,IAArBxB,EAAO2zC,WAAgD,OAArB3zC,EAAO2zC,UACzC/yC,EAAQ+yC,UAAYzwC,OAAOlD,EAAO2zC,WAGlC/yC,EAAQ+yC,UAAY,GAEjB/yC,GAEXoB,OAvKsB,SAuKfpB,GACH,IAAMqB,EAAM,GAmBZ,YAlBmBT,IAAnBZ,EAAQ8J,SAAyBzI,EAAIyI,OAAS9J,EAAQ8J,aACnClJ,IAAnBZ,EAAQwyC,SAAyBnxC,EAAImxC,OAASxyC,EAAQwyC,aAChC5xC,IAAtBZ,EAAQyyC,YAA4BpxC,EAAIoxC,UAAYzyC,EAAQyyC,gBAC3C7xC,IAAjBZ,EAAQ0yC,OAAuBrxC,EAAIqxC,KAAO1yC,EAAQ0yC,WACjC9xC,IAAjBZ,EAAQlE,OAAuBuF,EAAIvF,KAAOkE,EAAQlE,WAC/B8E,IAAnBZ,EAAQ2yC,SAAyBtxC,EAAIsxC,OAAS3yC,EAAQ2yC,QAClD3yC,EAAQgzC,KACR3xC,EAAI2xC,KAAOhzC,EAAQgzC,KAAKptC,KAAI,SAACD,GAAD,OAAOA,EAAIygB,EAAehlB,OAAOuE,QAAK/E,KAGlES,EAAI2xC,KAAO,QAEEpyC,IAAjBZ,EAAQ4yC,OAAuBvxC,EAAIuxC,KAAO5yC,EAAQ4yC,WAC5BhyC,IAAtBZ,EAAQ6yC,YAA4BxxC,EAAIwxC,UAAY7yC,EAAQ6yC,gBACxCjyC,IAApBZ,EAAQ8yC,UAA0BzxC,EAAIyxC,QAAU9yC,EAAQ8yC,cACzClyC,IAAfZ,EAAQizC,KACH5xC,EAAI4xC,GAAKjzC,EAAQizC,GAAK1sC,OAAInF,OAAOpB,EAAQizC,SAAMryC,QAC9BA,IAAtBZ,EAAQ+yC,YAA4B1xC,EAAI0xC,UAAY/yC,EAAQ+yC,WACrD1xC,GAEXC,YA7LsB,SA6LVlC,GACR,IAAMY,EAAU,kBAAKuyC,GAsCrB,GArCAvyC,EAAQgzC,KAAO,QACOpyC,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS1K,EAAO0K,OAGxB9J,EAAQ8J,OAAS,OAEClJ,IAAlBxB,EAAOozC,QAA0C,OAAlBpzC,EAAOozC,OACtCxyC,EAAQwyC,OAASpzC,EAAOozC,OAGxBxyC,EAAQwyC,OAAS,QAEI5xC,IAArBxB,EAAOqzC,WAAgD,OAArBrzC,EAAOqzC,UACzCzyC,EAAQyyC,UAAYrzC,EAAOqzC,UAG3BzyC,EAAQyyC,UAAY,QAEJ7xC,IAAhBxB,EAAOszC,MAAsC,OAAhBtzC,EAAOszC,KACpC1yC,EAAQ0yC,KAAOtzC,EAAOszC,KAGtB1yC,EAAQ0yC,KAAO,OAEC9xC,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCkE,EAAQlE,KAAOsD,EAAOtD,KAGtBkE,EAAQlE,KAAO,QAEG8E,IAAlBxB,EAAOuzC,QAA0C,OAAlBvzC,EAAOuzC,OACtC3yC,EAAQ2yC,OAASvzC,EAAOuzC,OAGxB3yC,EAAQ2yC,OAAS,QAED/xC,IAAhBxB,EAAO4zC,MAAsC,OAAhB5zC,EAAO4zC,KAAe,wBACnC5zC,EAAO4zC,MAD4B,IACnD,2BAA6B,KAAlBrtC,EAAkB,QACzB3F,EAAQgzC,KAAKp2C,KAAKwpB,EAAe9kB,YAAYqE,KAFE,+BAmCvD,YA9BoB/E,IAAhBxB,EAAOwzC,MAAsC,OAAhBxzC,EAAOwzC,KACpC5yC,EAAQ4yC,KAAOxzC,EAAOwzC,KAGtB5yC,EAAQ4yC,KAAO,QAEMhyC,IAArBxB,EAAOyzC,WAAgD,OAArBzzC,EAAOyzC,UACzC7yC,EAAQ6yC,UAAYzzC,EAAOyzC,UAG3B7yC,EAAQ6yC,UAAY,OAEDjyC,IAAnBxB,EAAO0zC,SAA4C,OAAnB1zC,EAAO0zC,QACvC9yC,EAAQ8yC,QAAU1zC,EAAO0zC,QAGzB9yC,EAAQ8yC,QAAU,OAEJlyC,IAAdxB,EAAO6zC,IAAkC,OAAd7zC,EAAO6zC,GAClCjzC,EAAQizC,GAAK1sC,OAAIjF,YAAYlC,EAAO6zC,IAGpCjzC,EAAQizC,QAAKryC,OAEQA,IAArBxB,EAAO2zC,WAAgD,OAArB3zC,EAAO2zC,UACzC/yC,EAAQ+yC,UAAY3zC,EAAO2zC,UAG3B/yC,EAAQ+yC,UAAY,GAEjB/yC,IAGTkzC,EAAqB,CAAEC,SAAU,EAAGl8B,IAAK,IAClCmP,EAAiB,CAC1BrmB,OAD0B,SACnBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACH,IAArBgB,EAAQmzC,UACRlzC,EAAOE,OAAO,GAAGA,OAAOH,EAAQmzC,UAEhB,KAAhBnzC,EAAQiX,KACRhX,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQiX,KALC,uBAOtBjX,EAAQozC,QAPc,IAOtC,2BAAgC,KAArB9tC,EAAqB,QAC5B+gB,EAAYtmB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UARd,8BAUtC,OAAOxF,GAEXK,OAb0B,SAanBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkzC,GACrBlzC,EAAQozC,OAAS,GACjB,MAAO5yC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmzC,SAAW3yC,EAAOL,SAC1B,MACJ,KAAK,EACDH,EAAQiX,IAAMzW,EAAO6B,SACrB,MACJ,KAAK,EACDrC,EAAQozC,OAAOx2C,KAAKypB,EAAY/lB,OAAOE,EAAQA,EAAOL,WACtD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SArC0B,SAqCjB9B,GACL,IAAMY,EAAU,kBAAKkzC,GAcrB,GAbAlzC,EAAQozC,OAAS,QACOxyC,IAApBxB,EAAO+zC,UAA8C,OAApB/zC,EAAO+zC,SACxCnzC,EAAQmzC,SAAWhyC,OAAO/B,EAAO+zC,UAGjCnzC,EAAQmzC,SAAW,OAEJvyC,IAAfxB,EAAO6X,KAAoC,OAAf7X,EAAO6X,IACnCjX,EAAQiX,IAAM3U,OAAOlD,EAAO6X,KAG5BjX,EAAQiX,IAAM,QAEIrW,IAAlBxB,EAAOg0C,QAA0C,OAAlBh0C,EAAOg0C,OAAiB,wBACvCh0C,EAAOg0C,QADgC,IACvD,2BAA+B,KAApBztC,EAAoB,QAC3B3F,EAAQozC,OAAOx2C,KAAKypB,EAAYnlB,SAASyE,KAFU,+BAK3D,OAAO3F,GAEXoB,OA3D0B,SA2DnBpB,GACH,IAAMqB,EAAM,GASZ,YARqBT,IAArBZ,EAAQmzC,WAA2B9xC,EAAI8xC,SAAWnzC,EAAQmzC,eAC1CvyC,IAAhBZ,EAAQiX,MAAsB5V,EAAI4V,IAAMjX,EAAQiX,KAC5CjX,EAAQozC,OACR/xC,EAAI+xC,OAASpzC,EAAQozC,OAAOxtC,KAAI,SAACD,GAAD,OAAOA,EAAI0gB,EAAYjlB,OAAOuE,QAAK/E,KAGnES,EAAI+xC,OAAS,GAEV/xC,GAEXC,YAvE0B,SAuEdlC,GACR,IAAMY,EAAU,kBAAKkzC,GAcrB,GAbAlzC,EAAQozC,OAAS,QACOxyC,IAApBxB,EAAO+zC,UAA8C,OAApB/zC,EAAO+zC,SACxCnzC,EAAQmzC,SAAW/zC,EAAO+zC,SAG1BnzC,EAAQmzC,SAAW,OAEJvyC,IAAfxB,EAAO6X,KAAoC,OAAf7X,EAAO6X,IACnCjX,EAAQiX,IAAM7X,EAAO6X,IAGrBjX,EAAQiX,IAAM,QAEIrW,IAAlBxB,EAAOg0C,QAA0C,OAAlBh0C,EAAOg0C,OAAiB,wBACvCh0C,EAAOg0C,QADgC,IACvD,2BAA+B,KAApBztC,EAAoB,QAC3B3F,EAAQozC,OAAOx2C,KAAKypB,EAAY/kB,YAAYqE,KAFO,+BAK3D,OAAO3F,IAGTqzC,EAAkB,CAAE5rC,KAAM,IACnB4e,EAAc,CACvBtmB,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACP,KAAjBgB,EAAQyH,MACRxH,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQyH,MAFC,uBAItBzH,EAAQ2H,YAJc,IAItC,2BAAoC,KAAzBrC,EAAyB,QAChCghB,EAAUvmB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALZ,8BAOtC,OAAOxF,GAEXK,OAVuB,SAUhBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKqzC,GACrBrzC,EAAQ2H,WAAa,GACrB,MAAOnH,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyH,KAAOjH,EAAO6B,SACtB,MACJ,KAAK,EACDrC,EAAQ2H,WAAW/K,KAAK0pB,EAAUhmB,OAAOE,EAAQA,EAAOL,WACxD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/BuB,SA+Bd9B,GACL,IAAMY,EAAU,kBAAKqzC,GAQrB,GAPArzC,EAAQ2H,WAAa,QACD/G,IAAhBxB,EAAOqI,MAAsC,OAAhBrI,EAAOqI,KACpCzH,EAAQyH,KAAOnF,OAAOlD,EAAOqI,MAG7BzH,EAAQyH,KAAO,QAEO7G,IAAtBxB,EAAOuI,YAAkD,OAAtBvI,EAAOuI,WAAqB,wBAC/CvI,EAAOuI,YADwC,IAC/D,2BAAmC,KAAxBhC,EAAwB,QAC/B3F,EAAQ2H,WAAW/K,KAAK0pB,EAAUplB,SAASyE,KAFgB,+BAKnE,OAAO3F,GAEXoB,OA/CuB,SA+ChBpB,GACH,IAAMqB,EAAM,GAQZ,YAPiBT,IAAjBZ,EAAQyH,OAAuBpG,EAAIoG,KAAOzH,EAAQyH,MAC9CzH,EAAQ2H,WACRtG,EAAIsG,WAAa3H,EAAQ2H,WAAW/B,KAAI,SAACD,GAAD,OAAOA,EAAI2gB,EAAUllB,OAAOuE,QAAK/E,KAGzES,EAAIsG,WAAa,GAEdtG,GAEXC,YA1DuB,SA0DXlC,GACR,IAAMY,EAAU,kBAAKqzC,GAQrB,GAPArzC,EAAQ2H,WAAa,QACD/G,IAAhBxB,EAAOqI,MAAsC,OAAhBrI,EAAOqI,KACpCzH,EAAQyH,KAAOrI,EAAOqI,KAGtBzH,EAAQyH,KAAO,QAEO7G,IAAtBxB,EAAOuI,YAAkD,OAAtBvI,EAAOuI,WAAqB,wBAC/CvI,EAAOuI,YADwC,IAC/D,2BAAmC,KAAxBhC,EAAwB,QAC/B3F,EAAQ2H,WAAW/K,KAAK0pB,EAAUhlB,YAAYqE,KAFa,+BAKnE,OAAO3F,IAGTszC,EAAgB,CAAEr0C,IAAK,GAAIN,MAAO,IAC3B2nB,EAAY,CACrBvmB,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANoB,KAAhBgB,EAAQf,KACRgB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQf,KAEf,KAAlBe,EAAQrB,OACRsB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQrB,OAE9BsB,GAEXK,OAVqB,SAUdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKszC,GACrB,MAAO9yC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQf,IAAMuB,EAAO6B,SACrB,MACJ,KAAK,EACDrC,EAAQrB,MAAQ6B,EAAO6B,SACvB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BqB,SA8BZ9B,GACL,IAAMY,EAAU,kBAAKszC,GAarB,YAZmB1yC,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,IACnCe,EAAQf,IAAMqD,OAAOlD,EAAOH,KAG5Be,EAAQf,IAAM,QAEG2B,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQ2D,OAAOlD,EAAOT,OAG9BqB,EAAQrB,MAAQ,GAEbqB,GAEXoB,OA9CqB,SA8CdpB,GACH,IAAMqB,EAAM,GAGZ,YAFgBT,IAAhBZ,EAAQf,MAAsBoC,EAAIpC,IAAMe,EAAQf,UAC9B2B,IAAlBZ,EAAQrB,QAAwB0C,EAAI1C,MAAQqB,EAAQrB,OAC7C0C,GAEXC,YApDqB,SAoDTlC,GACR,IAAMY,EAAU,kBAAKszC,GAarB,YAZmB1yC,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,IACnCe,EAAQf,IAAMG,EAAOH,IAGrBe,EAAQf,IAAM,QAEG2B,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,GAEbqB,IAGTuzC,EAAc,CAAEV,UAAW,EAAGC,QAAS,GAChCvsB,EAAU,CACnBxmB,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OAN0B,IAAtBgB,EAAQ6yC,WACR5yC,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQ6yC,WAEZ,IAApB7yC,EAAQ8yC,SACR7yC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQ8yC,SAE9B7yC,GAEXK,OAVmB,SAUZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKuzC,GACrB,MAAO/yC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6yC,UAAY7xC,EAAaR,EAAO6H,UACxC,MACJ,KAAK,EACDrI,EAAQ8yC,QAAU9xC,EAAaR,EAAO6H,UACtC,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BmB,SA8BV9B,GACL,IAAMY,EAAU,kBAAKuzC,GAarB,YAZyB3yC,IAArBxB,EAAOyzC,WAAgD,OAArBzzC,EAAOyzC,UACzC7yC,EAAQ6yC,UAAY1xC,OAAO/B,EAAOyzC,WAGlC7yC,EAAQ6yC,UAAY,OAEDjyC,IAAnBxB,EAAO0zC,SAA4C,OAAnB1zC,EAAO0zC,QACvC9yC,EAAQ8yC,QAAU3xC,OAAO/B,EAAO0zC,SAGhC9yC,EAAQ8yC,QAAU,EAEf9yC,GAEXoB,OA9CmB,SA8CZpB,GACH,IAAMqB,EAAM,GAGZ,YAFsBT,IAAtBZ,EAAQ6yC,YAA4BxxC,EAAIwxC,UAAY7yC,EAAQ6yC,gBACxCjyC,IAApBZ,EAAQ8yC,UAA0BzxC,EAAIyxC,QAAU9yC,EAAQ8yC,SACjDzxC,GAEXC,YApDmB,SAoDPlC,GACR,IAAMY,EAAU,kBAAKuzC,GAarB,YAZyB3yC,IAArBxB,EAAOyzC,WAAgD,OAArBzzC,EAAOyzC,UACzC7yC,EAAQ6yC,UAAYzzC,EAAOyzC,UAG3B7yC,EAAQ6yC,UAAY,OAEDjyC,IAAnBxB,EAAO0zC,SAA4C,OAAnB1zC,EAAO0zC,QACvC9yC,EAAQ8yC,QAAU1zC,EAAO0zC,QAGzB9yC,EAAQ8yC,QAAU,EAEf9yC,IAGTwzC,EAAa,CAAEv8B,IAAK,IACbuP,EAAS,CAClBzmB,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACA,IAAxBgB,EAAQlE,KAAKQ,QACb2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQlE,MAEhB,KAAhBkE,EAAQiX,KACRhX,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQiX,KALC,uBAOtBjX,EAAQozC,QAPc,IAOtC,2BAAgC,KAArB9tC,EAAqB,QAC5BoC,OAAM3H,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UARR,8BAUtC,OAAOxF,GAEXK,OAbkB,SAaXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKwzC,GACrBxzC,EAAQozC,OAAS,GACjB,MAAO5yC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQlE,KAAO0E,EAAOwC,QACtB,MACJ,KAAK,EACDhD,EAAQiX,IAAMzW,EAAO6B,SACrB,MACJ,KAAK,EACDrC,EAAQozC,OAAOx2C,KAAK8K,OAAMpH,OAAOE,EAAQA,EAAOL,WAChD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SArCkB,SAqCT9B,GACL,IAAMY,EAAU,kBAAKwzC,GAWrB,GAVAxzC,EAAQozC,OAAS,QACGxyC,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,OACpCkE,EAAQlE,KAAOmH,EAAgB7D,EAAOtD,YAEvB8E,IAAfxB,EAAO6X,KAAoC,OAAf7X,EAAO6X,IACnCjX,EAAQiX,IAAM3U,OAAOlD,EAAO6X,KAG5BjX,EAAQiX,IAAM,QAEIrW,IAAlBxB,EAAOg0C,QAA0C,OAAlBh0C,EAAOg0C,OAAiB,wBACvCh0C,EAAOg0C,QADgC,IACvD,2BAA+B,KAApBztC,EAAoB,QAC3B3F,EAAQozC,OAAOx2C,KAAK8K,OAAMxG,SAASyE,KAFgB,+BAK3D,OAAO3F,GAEXoB,OAxDkB,SAwDXpB,GACH,IAAMqB,EAAM,GAUZ,YATiBT,IAAjBZ,EAAQlE,OACHuF,EAAIvF,KAAOoH,OAAiCtC,IAAjBZ,EAAQlE,KAAqBkE,EAAQlE,KAAO,IAAI2E,kBAChEG,IAAhBZ,EAAQiX,MAAsB5V,EAAI4V,IAAMjX,EAAQiX,KAC5CjX,EAAQozC,OACR/xC,EAAI+xC,OAASpzC,EAAQozC,OAAOxtC,KAAI,SAACD,GAAD,OAAQA,EAAI+B,OAAMtG,OAAOuE,QAAK/E,KAG9DS,EAAI+xC,OAAS,GAEV/xC,GAEXC,YArEkB,SAqENlC,GACR,IAAMY,EAAU,kBAAKwzC,GAcrB,GAbAxzC,EAAQozC,OAAS,QACGxyC,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCkE,EAAQlE,KAAOsD,EAAOtD,KAGtBkE,EAAQlE,KAAO,IAAI2E,gBAEJG,IAAfxB,EAAO6X,KAAoC,OAAf7X,EAAO6X,IACnCjX,EAAQiX,IAAM7X,EAAO6X,IAGrBjX,EAAQiX,IAAM,QAEIrW,IAAlBxB,EAAOg0C,QAA0C,OAAlBh0C,EAAOg0C,OAAiB,wBACvCh0C,EAAOg0C,QADgC,IACvD,2BAA+B,KAApBztC,EAAoB,QAC3B3F,EAAQozC,OAAOx2C,KAAK8K,OAAMpG,YAAYqE,KAFa,+BAK3D,OAAO3F,IAGTyzC,EAAyB,GAClBhtB,EAAqB,CAC9B1mB,OAD8B,SACvBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,YANwB4B,IAApBZ,EAAQ0zC,SACRntB,EAAQxmB,OAAOC,EAAQ0zC,QAASzzC,EAAOE,OAAO,IAAIqF,QAAQC,cAEvC7E,IAAnBZ,EAAQ7C,QACRqpB,EAAOzmB,OAAOC,EAAQ7C,OAAQ8C,EAAOE,OAAO,IAAIqF,QAAQC,SAErDxF,GAEXK,OAV8B,SAUvBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKyzC,GACrB,MAAOjzC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0zC,QAAUntB,EAAQjmB,OAAOE,EAAQA,EAAOL,UAChD,MACJ,KAAK,EACDH,EAAQ7C,OAASqpB,EAAOlmB,OAAOE,EAAQA,EAAOL,UAC9C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9B8B,SA8BrB9B,GACL,IAAMY,EAAU,kBAAKyzC,GAarB,YAZuB7yC,IAAnBxB,EAAOs0C,SAA4C,OAAnBt0C,EAAOs0C,QACvC1zC,EAAQ0zC,QAAUntB,EAAQrlB,SAAS9B,EAAOs0C,SAG1C1zC,EAAQ0zC,aAAU9yC,OAEAA,IAAlBxB,EAAOjC,QAA0C,OAAlBiC,EAAOjC,OACtC6C,EAAQ7C,OAASqpB,EAAOtlB,SAAS9B,EAAOjC,QAGxC6C,EAAQ7C,YAASyD,EAEdZ,GAEXoB,OA9C8B,SA8CvBpB,GACH,IAAMqB,EAAM,GAOZ,YANoBT,IAApBZ,EAAQ0zC,UACHryC,EAAIqyC,QAAU1zC,EAAQ0zC,QACjBntB,EAAQnlB,OAAOpB,EAAQ0zC,cACvB9yC,QACSA,IAAnBZ,EAAQ7C,SACHkE,EAAIlE,OAAS6C,EAAQ7C,OAASqpB,EAAOplB,OAAOpB,EAAQ7C,aAAUyD,GAC5DS,GAEXC,YAxD8B,SAwDlBlC,GACR,IAAMY,EAAU,kBAAKyzC,GAarB,YAZuB7yC,IAAnBxB,EAAOs0C,SAA4C,OAAnBt0C,EAAOs0C,QACvC1zC,EAAQ0zC,QAAUntB,EAAQjlB,YAAYlC,EAAOs0C,SAG7C1zC,EAAQ0zC,aAAU9yC,OAEAA,IAAlBxB,EAAOjC,QAA0C,OAAlBiC,EAAOjC,OACtC6C,EAAQ7C,OAASqpB,EAAOllB,YAAYlC,EAAOjC,QAG3C6C,EAAQ7C,YAASyD,EAEdZ,IAGT2zC,EAAc,CAAEC,QAAS,IAClBltB,EAAU,CACnB3mB,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANwB,KAApBgB,EAAQ4zC,SACR3zC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ4zC,SAET,IAAxB5zC,EAAQlE,KAAKQ,QACb2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQlE,MAE7BmE,GAEXK,OAVmB,SAUZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK2zC,GACrB,MAAOnzC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4zC,QAAUpzC,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQlE,KAAO0E,EAAOwC,QACtB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BmB,SA8BV9B,GACL,IAAMY,EAAU,kBAAK2zC,GAUrB,YATuB/yC,IAAnBxB,EAAOw0C,SAA4C,OAAnBx0C,EAAOw0C,QACvC5zC,EAAQ4zC,QAAUtxC,OAAOlD,EAAOw0C,SAGhC5zC,EAAQ4zC,QAAU,QAEFhzC,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,OACpCkE,EAAQlE,KAAOmH,EAAgB7D,EAAOtD,OAEnCkE,GAEXoB,OA3CmB,SA2CZpB,GACH,IAAMqB,EAAM,GAIZ,YAHoBT,IAApBZ,EAAQ4zC,UAA0BvyC,EAAIuyC,QAAU5zC,EAAQ4zC,cACvChzC,IAAjBZ,EAAQlE,OACHuF,EAAIvF,KAAOoH,OAAiCtC,IAAjBZ,EAAQlE,KAAqBkE,EAAQlE,KAAO,IAAI2E,aACzEY,GAEXC,YAlDmB,SAkDPlC,GACR,IAAMY,EAAU,kBAAK2zC,GAarB,YAZuB/yC,IAAnBxB,EAAOw0C,SAA4C,OAAnBx0C,EAAOw0C,QACvC5zC,EAAQ4zC,QAAUx0C,EAAOw0C,QAGzB5zC,EAAQ4zC,QAAU,QAEFhzC,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCkE,EAAQlE,KAAOsD,EAAOtD,KAGtBkE,EAAQlE,KAAO,IAAI2E,WAEhBT,IAGT6zC,EAAgB,GACTltB,EAAY,CACrB5mB,OADqB,SACdC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQlE,MADc,IACtC,2BAA8B,KAAnBwJ,EAAmB,QAC1BohB,EAAQ3mB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFV,8BAItC,OAAOxF,GAEXK,OAPqB,SAOdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6zC,GACrB7zC,EAAQlE,KAAO,GACf,MAAO0E,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQlE,KAAKc,KAAK8pB,EAAQpmB,OAAOE,EAAQA,EAAOL,WAChD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAzBqB,SAyBZ9B,GACL,IAAMY,EAAU,kBAAK6zC,GAErB,GADA7zC,EAAQlE,KAAO,QACK8E,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KAAe,wBACnCsD,EAAOtD,MAD4B,IACnD,2BAA6B,KAAlB6J,EAAkB,QACzB3F,EAAQlE,KAAKc,KAAK8pB,EAAQxlB,SAASyE,KAFY,+BAKvD,OAAO3F,GAEXoB,OAnCqB,SAmCdpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQlE,KACRuF,EAAIvF,KAAOkE,EAAQlE,KAAK8J,KAAI,SAACD,GAAD,OAAQA,EAAI+gB,EAAQtlB,OAAOuE,QAAK/E,KAG5DS,EAAIvF,KAAO,GAERuF,GAEXC,YA7CqB,SA6CTlC,GACR,IAAMY,EAAU,kBAAK6zC,GAErB,GADA7zC,EAAQlE,KAAO,QACK8E,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KAAe,wBACnCsD,EAAOtD,MAD4B,IACnD,2BAA6B,KAAlB6J,EAAkB,QACzB3F,EAAQlE,KAAKc,KAAK8pB,EAAQplB,YAAYqE,KAFS,+BAKvD,OAAO3F,IAGT8zC,EAAsB,CACxBC,WAAY,EACZC,MAAO,EACPC,WAAY,EACZC,UAAW,EACXC,MAAO,GAEEvtB,EAAkB,CAC3B7mB,OAD2B,SACpBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACD,IAAvBgB,EAAQ+zC,YACR9zC,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQ+zC,YAEd,IAAlB/zC,EAAQg0C,OACR/zC,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQg0C,OAEV,IAAvBh0C,EAAQi0C,YACRh0C,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQi0C,YAEX,IAAtBj0C,EAAQk0C,WACRj0C,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQk0C,WAEf,IAAlBl0C,EAAQm0C,OACRl0C,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQm0C,OAdC,uBAgBtBn0C,EAAQo0C,KAhBc,IAgBtC,2BAA6B,KAAlB9uC,EAAkB,QACzB6gB,EAAWpmB,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAjBb,8BAmBtC,OAAOxF,GAEXK,OAtB2B,SAsBpBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK8zC,GACrB9zC,EAAQo0C,IAAM,GACd,MAAO5zC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+zC,WAAa/yC,EAAaR,EAAO6H,UACzC,MACJ,KAAK,EACDrI,EAAQg0C,MAAQhzC,EAAaR,EAAO6H,UACpC,MACJ,KAAK,EACDrI,EAAQi0C,WAAajzC,EAAaR,EAAO6H,UACzC,MACJ,KAAK,EACDrI,EAAQk0C,UAAYlzC,EAAaR,EAAO6H,UACxC,MACJ,KAAK,EACDrI,EAAQm0C,MAAQnzC,EAAaR,EAAO6H,UACpC,MACJ,KAAK,EACDrI,EAAQo0C,IAAIx3C,KAAKupB,EAAW7lB,OAAOE,EAAQA,EAAOL,WAClD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAvD2B,SAuDlB9B,GACL,IAAMY,EAAU,kBAAK8zC,GAgCrB,GA/BA9zC,EAAQo0C,IAAM,QACYxzC,IAAtBxB,EAAO20C,YAAkD,OAAtB30C,EAAO20C,WAC1C/zC,EAAQ+zC,WAAa5yC,OAAO/B,EAAO20C,YAGnC/zC,EAAQ+zC,WAAa,OAEJnzC,IAAjBxB,EAAO40C,OAAwC,OAAjB50C,EAAO40C,MACrCh0C,EAAQg0C,MAAQ7yC,OAAO/B,EAAO40C,OAG9Bh0C,EAAQg0C,MAAQ,OAEMpzC,IAAtBxB,EAAO60C,YAAkD,OAAtB70C,EAAO60C,WAC1Cj0C,EAAQi0C,WAAa9yC,OAAO/B,EAAO60C,YAGnCj0C,EAAQi0C,WAAa,OAEArzC,IAArBxB,EAAO80C,WAAgD,OAArB90C,EAAO80C,UACzCl0C,EAAQk0C,UAAY/yC,OAAO/B,EAAO80C,WAGlCl0C,EAAQk0C,UAAY,OAEHtzC,IAAjBxB,EAAO+0C,OAAwC,OAAjB/0C,EAAO+0C,MACrCn0C,EAAQm0C,MAAQhzC,OAAO/B,EAAO+0C,OAG9Bn0C,EAAQm0C,MAAQ,OAEDvzC,IAAfxB,EAAOg1C,KAAoC,OAAfh1C,EAAOg1C,IAAc,wBACjCh1C,EAAOg1C,KAD0B,IACjD,2BAA4B,KAAjBzuC,EAAiB,QACxB3F,EAAQo0C,IAAIx3C,KAAKupB,EAAWjlB,SAASyE,KAFQ,+BAKrD,OAAO3F,GAEXoB,OA/F2B,SA+FpBpB,GACH,IAAMqB,EAAM,GAYZ,YAXuBT,IAAvBZ,EAAQ+zC,aAA6B1yC,EAAI0yC,WAAa/zC,EAAQ+zC,iBAC5CnzC,IAAlBZ,EAAQg0C,QAAwB3yC,EAAI2yC,MAAQh0C,EAAQg0C,YAC7BpzC,IAAvBZ,EAAQi0C,aAA6B5yC,EAAI4yC,WAAaj0C,EAAQi0C,iBACxCrzC,IAAtBZ,EAAQk0C,YAA4B7yC,EAAI6yC,UAAYl0C,EAAQk0C,gBAC1CtzC,IAAlBZ,EAAQm0C,QAAwB9yC,EAAI8yC,MAAQn0C,EAAQm0C,OAChDn0C,EAAQo0C,IACR/yC,EAAI+yC,IAAMp0C,EAAQo0C,IAAIxuC,KAAI,SAACD,GAAD,OAAQA,EAAIwgB,EAAW/kB,OAAOuE,QAAK/E,KAG7DS,EAAI+yC,IAAM,GAEP/yC,GAEXC,YA9G2B,SA8GflC,GACR,IAAMY,EAAU,kBAAK8zC,GAgCrB,GA/BA9zC,EAAQo0C,IAAM,QACYxzC,IAAtBxB,EAAO20C,YAAkD,OAAtB30C,EAAO20C,WAC1C/zC,EAAQ+zC,WAAa30C,EAAO20C,WAG5B/zC,EAAQ+zC,WAAa,OAEJnzC,IAAjBxB,EAAO40C,OAAwC,OAAjB50C,EAAO40C,MACrCh0C,EAAQg0C,MAAQ50C,EAAO40C,MAGvBh0C,EAAQg0C,MAAQ,OAEMpzC,IAAtBxB,EAAO60C,YAAkD,OAAtB70C,EAAO60C,WAC1Cj0C,EAAQi0C,WAAa70C,EAAO60C,WAG5Bj0C,EAAQi0C,WAAa,OAEArzC,IAArBxB,EAAO80C,WAAgD,OAArB90C,EAAO80C,UACzCl0C,EAAQk0C,UAAY90C,EAAO80C,UAG3Bl0C,EAAQk0C,UAAY,OAEHtzC,IAAjBxB,EAAO+0C,OAAwC,OAAjB/0C,EAAO+0C,MACrCn0C,EAAQm0C,MAAQ/0C,EAAO+0C,MAGvBn0C,EAAQm0C,MAAQ,OAEDvzC,IAAfxB,EAAOg1C,KAAoC,OAAfh1C,EAAOg1C,IAAc,wBACjCh1C,EAAOg1C,KAD0B,IACjD,2BAA4B,KAAjBzuC,EAAiB,QACxB3F,EAAQo0C,IAAIx3C,KAAKupB,EAAW7kB,YAAYqE,KAFK,+BAKrD,OAAO3F,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAEzB,SAASjE,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,+dCtjCEiD,EAAmB,CAAEC,iBAAkB,GAChCC,EAAe,CACxBrF,OADwB,SACjBC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQqF,YADc,IACtC,2BAAoC,KAAzBC,EAAyB,QAChCC,EAAUxF,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAFZ,8BAUtC,YANyB7E,IAArBZ,EAAQ0F,UACRH,EAAUxF,OAAOC,EAAQ0F,SAAUzF,EAAOE,OAAO,IAAIqF,QAAQC,SAEhC,IAA7BzF,EAAQmF,kBACRlF,EAAOE,OAAO,IAAIC,MAAMJ,EAAQmF,kBAE7BlF,GAEXK,OAbwB,SAajBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkF,GACrBlF,EAAQqF,WAAa,GACrB,MAAO7E,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqF,WAAWzI,KAAK2I,EAAUjF,OAAOE,EAAQA,EAAOL,WACxD,MACJ,KAAK,EACDH,EAAQ0F,SAAWH,EAAUjF,OAAOE,EAAQA,EAAOL,UACnD,MACJ,KAAK,EACDH,EAAQmF,iBAAmBnE,EAAaR,EAAOJ,SAC/C,MACJ,QACII,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SArCwB,SAqCf9B,GACL,IAAMY,EAAU,kBAAKkF,GAErB,GADAlF,EAAQqF,WAAa,QACKzE,IAAtBxB,EAAOiG,YAAkD,OAAtBjG,EAAOiG,WAAqB,wBAC/CjG,EAAOiG,YADwC,IAC/D,2BAAmC,KAAxBM,EAAwB,QAC/B3F,EAAQqF,WAAWzI,KAAK2I,EAAUrE,SAASyE,KAFgB,+BAkBnE,YAbwB/E,IAApBxB,EAAOsG,UAA8C,OAApBtG,EAAOsG,SACxC1F,EAAQ0F,SAAWH,EAAUrE,SAAS9B,EAAOsG,UAG7C1F,EAAQ0F,cAAW9E,OAESA,IAA5BxB,EAAO+F,kBACqB,OAA5B/F,EAAO+F,iBACPnF,EAAQmF,iBAAmBhE,OAAO/B,EAAO+F,kBAGzCnF,EAAQmF,iBAAmB,EAExBnF,GAEXoB,OA5DwB,SA4DjBpB,GACH,IAAMqB,EAAM,GAaZ,OAZIrB,EAAQqF,WACRhE,EAAIgE,WAAarF,EAAQqF,WAAWO,KAAI,SAACD,GAAD,OAAOA,EAAIJ,EAAUnE,OAAOuE,QAAK/E,KAGzES,EAAIgE,WAAa,QAEAzE,IAArBZ,EAAQ0F,WACHrE,EAAIqE,SAAW1F,EAAQ0F,SAClBH,EAAUnE,OAAOpB,EAAQ0F,eACzB9E,QACmBA,IAA7BZ,EAAQmF,mBACH9D,EAAI8D,iBAAmBnF,EAAQmF,kBAC7B9D,GAEXC,YA5EwB,SA4EZlC,GACR,IAAMY,EAAU,kBAAKkF,GAErB,GADAlF,EAAQqF,WAAa,QACKzE,IAAtBxB,EAAOiG,YAAkD,OAAtBjG,EAAOiG,WAAqB,wBAC/CjG,EAAOiG,YADwC,IAC/D,2BAAmC,KAAxBM,EAAwB,QAC/B3F,EAAQqF,WAAWzI,KAAK2I,EAAUjE,YAAYqE,KAFa,+BAkBnE,YAbwB/E,IAApBxB,EAAOsG,UAA8C,OAApBtG,EAAOsG,SACxC1F,EAAQ0F,SAAWH,EAAUjE,YAAYlC,EAAOsG,UAGhD1F,EAAQ0F,cAAW9E,OAESA,IAA5BxB,EAAO+F,kBACqB,OAA5B/F,EAAO+F,iBACPnF,EAAQmF,iBAAmB/F,EAAO+F,iBAGlCnF,EAAQmF,iBAAmB,EAExBnF,IAGT6F,EAAgB,CAAEC,YAAa,EAAGC,iBAAkB,GAC7CR,EAAY,CACrBxF,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,OAZ+B,IAA3BgB,EAAQgG,QAAQ1J,QAChB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQgG,cAEbpF,IAAnBZ,EAAQiG,QACRC,OAAUnG,OAAOC,EAAQiG,OAAQhG,EAAOE,OAAO,IAAIqF,QAAQC,SAEnC,IAAxBzF,EAAQ8F,aACR7F,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ8F,aAEH,IAA7B9F,EAAQ+F,kBACR9F,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ+F,kBAE7B9F,GAEXK,OAhBqB,SAgBdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK6F,GACrB,MAAOrF,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgG,QAAUxF,EAAOwC,QACzB,MACJ,KAAK,EACDhD,EAAQiG,OAASC,OAAU5F,OAAOE,EAAQA,EAAOL,UACjD,MACJ,KAAK,EACDH,EAAQ8F,YAAc9E,EAAaR,EAAOJ,SAC1C,MACJ,KAAK,EACDJ,EAAQ+F,iBAAmB/E,EAAaR,EAAOJ,SAC/C,MACJ,QACII,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1CqB,SA0CZ9B,GACL,IAAMY,EAAU,kBAAK6F,GAuBrB,YAtBuBjF,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,UACvChG,EAAQgG,QAAU/C,EAAgB7D,EAAO4G,eAEvBpF,IAAlBxB,EAAO6G,QAA0C,OAAlB7G,EAAO6G,OACtCjG,EAAQiG,OAASC,OAAUhF,SAAS9B,EAAO6G,QAG3CjG,EAAQiG,YAASrF,OAEMA,IAAvBxB,EAAO0G,aAAoD,OAAvB1G,EAAO0G,YAC3C9F,EAAQ8F,YAAc3E,OAAO/B,EAAO0G,aAGpC9F,EAAQ8F,YAAc,OAEMlF,IAA5BxB,EAAO2G,kBACqB,OAA5B3G,EAAO2G,iBACP/F,EAAQ+F,iBAAmB5E,OAAO/B,EAAO2G,kBAGzC/F,EAAQ+F,iBAAmB,EAExB/F,GAEXoB,OApEqB,SAoEdpB,GACH,IAAMqB,EAAM,GAUZ,YAToBT,IAApBZ,EAAQgG,UACH3E,EAAI2E,QAAU9C,OAAoCtC,IAApBZ,EAAQgG,QAAwBhG,EAAQgG,QAAU,IAAIvF,kBACtEG,IAAnBZ,EAAQiG,SACH5E,EAAI4E,OAASjG,EAAQiG,OAChBC,OAAU9E,OAAOpB,EAAQiG,aACzBrF,QACcA,IAAxBZ,EAAQ8F,cAA8BzE,EAAIyE,YAAc9F,EAAQ8F,kBACnClF,IAA7BZ,EAAQ+F,mBACH1E,EAAI0E,iBAAmB/F,EAAQ+F,kBAC7B1E,GAEXC,YAjFqB,SAiFTlC,GACR,IAAMY,EAAU,kBAAK6F,GA0BrB,YAzBuBjF,IAAnBxB,EAAO4G,SAA4C,OAAnB5G,EAAO4G,QACvChG,EAAQgG,QAAU5G,EAAO4G,QAGzBhG,EAAQgG,QAAU,IAAIvF,gBAEJG,IAAlBxB,EAAO6G,QAA0C,OAAlB7G,EAAO6G,OACtCjG,EAAQiG,OAASC,OAAU5E,YAAYlC,EAAO6G,QAG9CjG,EAAQiG,YAASrF,OAEMA,IAAvBxB,EAAO0G,aAAoD,OAAvB1G,EAAO0G,YAC3C9F,EAAQ8F,YAAc1G,EAAO0G,YAG7B9F,EAAQ8F,YAAc,OAEMlF,IAA5BxB,EAAO2G,kBACqB,OAA5B3G,EAAO2G,iBACP/F,EAAQ+F,iBAAmB3G,EAAO2G,iBAGlC/F,EAAQ+F,iBAAmB,EAExB/F,IA4EXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAEzB,SAASjE,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,qHChUOmH,EA2CAC,E,2YA1CX,SAAWD,GACPA,EAAYA,EAAY,yBAA2B,GAAK,wBACxDA,EAAYA,EAAY,wBAA0B,GAAK,uBACvDA,EAAYA,EAAY,wBAA0B,GAAK,uBACvDA,EAAYA,EAAY,qBAAuB,GAAK,oBACpDA,EAAYA,EAAY,iBAAmB,GAAK,gBALpD,CAMGA,IAAgBA,EAAc,KAqCjC,SAAWC,GACPA,EAAcA,EAAc,2BAA6B,GAAK,0BAE9DA,EAAcA,EAAc,2BAA6B,GAAK,0BAC9DA,EAAcA,EAAc,6BAA+B,GAAK,4BAEhEA,EAAcA,EAAc,4BAA8B,IAAM,2BAChEA,EAAcA,EAAc,iBAAmB,GAAK,eAPxD,CAQGA,IAAkBA,EAAgB,KAmCrC,IAAMC,EAAoB,CAAEC,MAAO,GACtBC,EAAgB,CACzBzJ,OADyB,SAClBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANsB,IAAlBgB,EAAQuJ,OACRtJ,EAAOE,OAAO,GAAGA,OAAOH,EAAQuJ,OAER,IAAxBvJ,EAAQ+C,KAAKzG,QACb2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ+C,MAE7B9C,GAEXK,OAVyB,SAUlBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKsJ,GACrB,MAAO9I,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQuJ,MAAQ/I,EAAOL,SACvB,MACJ,KAAK,EACDH,EAAQ+C,KAAOvC,EAAOwC,QACtB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9ByB,SA8BhB9B,GACL,IAAMY,EAAU,kBAAKsJ,GAUrB,YATqB1I,IAAjBxB,EAAOmK,OAAwC,OAAjBnK,EAAOmK,MACrCvJ,EAAQuJ,MAAQpI,OAAO/B,EAAOmK,OAG9BvJ,EAAQuJ,MAAQ,OAEA3I,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,OACpC/C,EAAQ+C,KAAOE,EAAgB7D,EAAO2D,OAEnC/C,GAEXoB,OA3CyB,SA2ClBpB,GACH,IAAMqB,EAAM,GAIZ,YAHkBT,IAAlBZ,EAAQuJ,QAAwBlI,EAAIkI,MAAQvJ,EAAQuJ,YACnC3I,IAAjBZ,EAAQ+C,OACH1B,EAAI0B,KAAOG,OAAiCtC,IAAjBZ,EAAQ+C,KAAqB/C,EAAQ+C,KAAO,IAAItC,aACzEY,GAEXC,YAlDyB,SAkDblC,GACR,IAAMY,EAAU,kBAAKsJ,GAarB,YAZqB1I,IAAjBxB,EAAOmK,OAAwC,OAAjBnK,EAAOmK,MACrCvJ,EAAQuJ,MAAQnK,EAAOmK,MAGvBvJ,EAAQuJ,MAAQ,OAEA3I,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,KACpC/C,EAAQ+C,KAAO3D,EAAO2D,KAGtB/C,EAAQ+C,KAAO,IAAItC,WAEhBT,IA2FTyJ,EAAc,GACPC,EAAU,CACnB3J,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OAN4B,IAAxBgB,EAAQ+C,KAAKzG,QACb2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ+C,WAENnC,IAA1BZ,EAAQ2J,eACRH,EAAczJ,OAAOC,EAAQ2J,cAAe1J,EAAOE,OAAO,IAAIqF,QAAQC,SAEnExF,GAEXK,OAVmB,SAUZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKyJ,GACrB,MAAOjJ,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+C,KAAOvC,EAAOwC,QACtB,MACJ,KAAK,EACDhD,EAAQ2J,cAAgBH,EAAclJ,OAAOE,EAAQA,EAAOL,UAC5D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BmB,SA8BV9B,GACL,IAAMY,EAAU,kBAAKyJ,GAUrB,YAToB7I,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,OACpC/C,EAAQ+C,KAAOE,EAAgB7D,EAAO2D,YAEbnC,IAAzBxB,EAAOuK,eAAwD,OAAzBvK,EAAOuK,cAC7C3J,EAAQ2J,cAAgBH,EAActI,SAAS9B,EAAOuK,eAGtD3J,EAAQ2J,mBAAgB/I,EAErBZ,GAEXoB,OA3CmB,SA2CZpB,GACH,IAAMqB,EAAM,GAOZ,YANiBT,IAAjBZ,EAAQ+C,OACH1B,EAAI0B,KAAOG,OAAiCtC,IAAjBZ,EAAQ+C,KAAqB/C,EAAQ+C,KAAO,IAAItC,kBACtDG,IAA1BZ,EAAQ2J,gBACHtI,EAAIsI,cAAgB3J,EAAQ2J,cACvBH,EAAcpI,OAAOpB,EAAQ2J,oBAC7B/I,GACHS,GAEXC,YArDmB,SAqDPlC,GACR,IAAMY,EAAU,kBAAKyJ,GAarB,YAZoB7I,IAAhBxB,EAAO2D,MAAsC,OAAhB3D,EAAO2D,KACpC/C,EAAQ+C,KAAO3D,EAAO2D,KAGtB/C,EAAQ+C,KAAO,IAAItC,gBAEMG,IAAzBxB,EAAOuK,eAAwD,OAAzBvK,EAAOuK,cAC7C3J,EAAQ2J,cAAgBH,EAAclI,YAAYlC,EAAOuK,eAGzD3J,EAAQ2J,mBAAgB/I,EAErBZ,IAGT4J,EAAa,CAAEC,QAAS,GAAIC,OAAQ,GAC7BC,EAAS,CAClBhK,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SA2C5B,YA1CwB4B,IAApBZ,EAAQgK,SACRC,OAAUlK,OAAOC,EAAQgK,QAAS/J,EAAOE,OAAO,IAAIqF,QAAQC,SAExC,KAApBzF,EAAQ6J,SACR5J,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ6J,SAEd,IAAnB7J,EAAQ8J,QACR7J,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ8J,aAEflJ,IAAjBZ,EAAQoE,MACRtE,OAAUC,OAAOmK,EAAYlK,EAAQoE,MAAOnE,EAAOE,OAAO,IAAIqF,QAAQC,cAE9C7E,IAAxBZ,EAAQmK,aACRT,EAAQ3J,OAAOC,EAAQmK,YAAalK,EAAOE,OAAO,IAAIqF,QAAQC,SAE5B,IAAlCzF,EAAQoK,eAAe9N,QACvB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQoK,gBAEJ,IAA5BpK,EAAQqK,SAAS/N,QACjB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQqK,UAEE,IAAlCrK,EAAQsK,eAAehO,QACvB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQsK,gBAEM,IAAtCtK,EAAQuK,mBAAmBjO,QAC3B2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQuK,oBAEC,IAAjCvK,EAAQwK,cAAclO,QACtB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQwK,eAEL,IAA3BxK,EAAQyK,QAAQnO,QAChB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQyK,SAEG,IAAnCzK,EAAQ0K,gBAAgBpO,QACxB2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQ0K,iBAEA,IAAhC1K,EAAQ2K,aAAarO,QACrB2D,EAAOE,OAAO,KAAK6C,MAAMhD,EAAQ2K,cAEE,IAAnC3K,EAAQ4K,gBAAgBtO,QACxB2D,EAAOE,OAAO,KAAK6C,MAAMhD,EAAQ4K,iBAE9B3K,GAEXK,OA9CkB,SA8CXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4J,GACrB,MAAOpJ,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgK,QAAUC,OAAU3J,OAAOE,EAAQA,EAAOL,UAClD,MACJ,KAAK,EACDH,EAAQ6J,QAAUrJ,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQ8J,OAAS9I,EAAaR,EAAOJ,SACrC,MACJ,KAAK,EACDJ,EAAQoE,KAAOyG,EAAc/K,OAAUQ,OAAOE,EAAQA,EAAOL,WAC7D,MACJ,KAAK,EACDH,EAAQmK,YAAcT,EAAQpJ,OAAOE,EAAQA,EAAOL,UACpD,MACJ,KAAK,EACDH,EAAQoK,eAAiB5J,EAAOwC,QAChC,MACJ,KAAK,EACDhD,EAAQqK,SAAW7J,EAAOwC,QAC1B,MACJ,KAAK,EACDhD,EAAQsK,eAAiB9J,EAAOwC,QAChC,MACJ,KAAK,EACDhD,EAAQuK,mBAAqB/J,EAAOwC,QACpC,MACJ,KAAK,GACDhD,EAAQwK,cAAgBhK,EAAOwC,QAC/B,MACJ,KAAK,GACDhD,EAAQyK,QAAUjK,EAAOwC,QACzB,MACJ,KAAK,GACDhD,EAAQ0K,gBAAkBlK,EAAOwC,QACjC,MACJ,KAAK,GACDhD,EAAQ2K,aAAenK,EAAOwC,QAC9B,MACJ,KAAK,GACDhD,EAAQ4K,gBAAkBpK,EAAOwC,QACjC,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAtGkB,SAsGT9B,GACL,IAAMY,EAAU,kBAAK4J,GA6DrB,YA5DuBhJ,IAAnBxB,EAAO4K,SAA4C,OAAnB5K,EAAO4K,QACvChK,EAAQgK,QAAUC,OAAU/I,SAAS9B,EAAO4K,SAG5ChK,EAAQgK,aAAUpJ,OAECA,IAAnBxB,EAAOyK,SAA4C,OAAnBzK,EAAOyK,QACvC7J,EAAQ6J,QAAUvH,OAAOlD,EAAOyK,SAGhC7J,EAAQ6J,QAAU,QAEAjJ,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS3I,OAAO/B,EAAO0K,QAG/B9J,EAAQ8J,OAAS,OAEDlJ,IAAhBxB,EAAOgF,MAAsC,OAAhBhF,EAAOgF,KACpCpE,EAAQoE,KAAO0G,EAAkB1L,EAAOgF,MAGxCpE,EAAQoE,UAAOxD,OAEQA,IAAvBxB,EAAO+K,aAAoD,OAAvB/K,EAAO+K,YAC3CnK,EAAQmK,YAAcT,EAAQxI,SAAS9B,EAAO+K,aAG9CnK,EAAQmK,iBAAcvJ,OAEIA,IAA1BxB,EAAOgL,gBAA0D,OAA1BhL,EAAOgL,iBAC9CpK,EAAQoK,eAAiBnH,EAAgB7D,EAAOgL,sBAE5BxJ,IAApBxB,EAAOiL,UAA8C,OAApBjL,EAAOiL,WACxCrK,EAAQqK,SAAWpH,EAAgB7D,EAAOiL,gBAEhBzJ,IAA1BxB,EAAOkL,gBAA0D,OAA1BlL,EAAOkL,iBAC9CtK,EAAQsK,eAAiBrH,EAAgB7D,EAAOkL,sBAElB1J,IAA9BxB,EAAOmL,oBACuB,OAA9BnL,EAAOmL,qBACPvK,EAAQuK,mBAAqBtH,EAAgB7D,EAAOmL,0BAE3B3J,IAAzBxB,EAAOoL,eAAwD,OAAzBpL,EAAOoL,gBAC7CxK,EAAQwK,cAAgBvH,EAAgB7D,EAAOoL,qBAE5B5J,IAAnBxB,EAAOqL,SAA4C,OAAnBrL,EAAOqL,UACvCzK,EAAQyK,QAAUxH,EAAgB7D,EAAOqL,eAEd7J,IAA3BxB,EAAOsL,iBACoB,OAA3BtL,EAAOsL,kBACP1K,EAAQ0K,gBAAkBzH,EAAgB7D,EAAOsL,uBAEzB9J,IAAxBxB,EAAOuL,cAAsD,OAAxBvL,EAAOuL,eAC5C3K,EAAQ2K,aAAe1H,EAAgB7D,EAAOuL,oBAEnB/J,IAA3BxB,EAAOwL,iBACoB,OAA3BxL,EAAOwL,kBACP5K,EAAQ4K,gBAAkB3H,EAAgB7D,EAAOwL,kBAE9C5K,GAEXoB,OAtKkB,SAsKXpB,GACH,IAAMqB,EAAM,GA8CZ,YA7CoBT,IAApBZ,EAAQgK,UACH3I,EAAI2I,QAAUhK,EAAQgK,QACjBC,OAAU7I,OAAOpB,EAAQgK,cACzBpJ,QACUA,IAApBZ,EAAQ6J,UAA0BxI,EAAIwI,QAAU7J,EAAQ6J,cACrCjJ,IAAnBZ,EAAQ8J,SAAyBzI,EAAIyI,OAAS9J,EAAQ8J,aACrClJ,IAAjBZ,EAAQoE,OACH/C,EAAI+C,UACgBxD,IAAjBZ,EAAQoE,KAAqBpE,EAAQoE,KAAK2G,cAAgB,WAC1CnK,IAAxBZ,EAAQmK,cACH9I,EAAI8I,YAAcnK,EAAQmK,YACrBT,EAAQtI,OAAOpB,EAAQmK,kBACvBvJ,QACiBA,IAA3BZ,EAAQoK,iBACH/I,EAAI+I,eAAiBlH,OAA2CtC,IAA3BZ,EAAQoK,eACxCpK,EAAQoK,eACR,IAAI3J,kBACOG,IAArBZ,EAAQqK,WACHhJ,EAAIgJ,SAAWnH,OAAqCtC,IAArBZ,EAAQqK,SAAyBrK,EAAQqK,SAAW,IAAI5J,kBACjEG,IAA3BZ,EAAQsK,iBACHjJ,EAAIiJ,eAAiBpH,OAA2CtC,IAA3BZ,EAAQsK,eACxCtK,EAAQsK,eACR,IAAI7J,kBACiBG,IAA/BZ,EAAQuK,qBACHlJ,EAAIkJ,mBAAqBrH,OAA+CtC,IAA/BZ,EAAQuK,mBAC5CvK,EAAQuK,mBACR,IAAI9J,kBACYG,IAA1BZ,EAAQwK,gBACHnJ,EAAImJ,cAAgBtH,OAA0CtC,IAA1BZ,EAAQwK,cACvCxK,EAAQwK,cACR,IAAI/J,kBACMG,IAApBZ,EAAQyK,UACHpJ,EAAIoJ,QAAUvH,OAAoCtC,IAApBZ,EAAQyK,QAAwBzK,EAAQyK,QAAU,IAAIhK,kBAC7DG,IAA5BZ,EAAQ0K,kBACHrJ,EAAIqJ,gBAAkBxH,OAA4CtC,IAA5BZ,EAAQ0K,gBACzC1K,EAAQ0K,gBACR,IAAIjK,kBACWG,IAAzBZ,EAAQ2K,eACHtJ,EAAIsJ,aAAezH,OAAyCtC,IAAzBZ,EAAQ2K,aACtC3K,EAAQ2K,aACR,IAAIlK,kBACcG,IAA5BZ,EAAQ4K,kBACHvJ,EAAIuJ,gBAAkB1H,OAA4CtC,IAA5BZ,EAAQ4K,gBACzC5K,EAAQ4K,gBACR,IAAInK,aACPY,GAEXC,YAvNkB,SAuNNlC,GACR,IAAMY,EAAU,kBAAK4J,GAwFrB,YAvFuBhJ,IAAnBxB,EAAO4K,SAA4C,OAAnB5K,EAAO4K,QACvChK,EAAQgK,QAAUC,OAAU3I,YAAYlC,EAAO4K,SAG/ChK,EAAQgK,aAAUpJ,OAECA,IAAnBxB,EAAOyK,SAA4C,OAAnBzK,EAAOyK,QACvC7J,EAAQ6J,QAAUzK,EAAOyK,QAGzB7J,EAAQ6J,QAAU,QAEAjJ,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS1K,EAAO0K,OAGxB9J,EAAQ8J,OAAS,OAEDlJ,IAAhBxB,EAAOgF,MAAsC,OAAhBhF,EAAOgF,KACpCpE,EAAQoE,KAAOhF,EAAOgF,KAGtBpE,EAAQoE,UAAOxD,OAEQA,IAAvBxB,EAAO+K,aAAoD,OAAvB/K,EAAO+K,YAC3CnK,EAAQmK,YAAcT,EAAQpI,YAAYlC,EAAO+K,aAGjDnK,EAAQmK,iBAAcvJ,OAEIA,IAA1BxB,EAAOgL,gBAA0D,OAA1BhL,EAAOgL,eAC9CpK,EAAQoK,eAAiBhL,EAAOgL,eAGhCpK,EAAQoK,eAAiB,IAAI3J,gBAETG,IAApBxB,EAAOiL,UAA8C,OAApBjL,EAAOiL,SACxCrK,EAAQqK,SAAWjL,EAAOiL,SAG1BrK,EAAQqK,SAAW,IAAI5J,gBAEGG,IAA1BxB,EAAOkL,gBAA0D,OAA1BlL,EAAOkL,eAC9CtK,EAAQsK,eAAiBlL,EAAOkL,eAGhCtK,EAAQsK,eAAiB,IAAI7J,gBAECG,IAA9BxB,EAAOmL,oBACuB,OAA9BnL,EAAOmL,mBACPvK,EAAQuK,mBAAqBnL,EAAOmL,mBAGpCvK,EAAQuK,mBAAqB,IAAI9J,gBAERG,IAAzBxB,EAAOoL,eAAwD,OAAzBpL,EAAOoL,cAC7CxK,EAAQwK,cAAgBpL,EAAOoL,cAG/BxK,EAAQwK,cAAgB,IAAI/J,gBAETG,IAAnBxB,EAAOqL,SAA4C,OAAnBrL,EAAOqL,QACvCzK,EAAQyK,QAAUrL,EAAOqL,QAGzBzK,EAAQyK,QAAU,IAAIhK,gBAEKG,IAA3BxB,EAAOsL,iBACoB,OAA3BtL,EAAOsL,gBACP1K,EAAQ0K,gBAAkBtL,EAAOsL,gBAGjC1K,EAAQ0K,gBAAkB,IAAIjK,gBAENG,IAAxBxB,EAAOuL,cAAsD,OAAxBvL,EAAOuL,aAC5C3K,EAAQ2K,aAAevL,EAAOuL,aAG9B3K,EAAQ2K,aAAe,IAAIlK,gBAEAG,IAA3BxB,EAAOwL,iBACoB,OAA3BxL,EAAOwL,gBACP5K,EAAQ4K,gBAAkBxL,EAAOwL,gBAGjC5K,EAAQ4K,gBAAkB,IAAInK,WAE3BT,IAs+BXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,KAEzB,SAASiF,EAAYc,GACjB,IAAMpL,EAAUoL,EAAKC,UAAY,IAC3BpL,EAASmL,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAErL,UAASC,SAEtB,SAASgL,EAAcjM,GACnB,IAAIsM,EAAqB,IAAZtM,EAAEgB,QAEf,OADAsL,GAAUtM,EAAEiB,MAAQ,IACb,IAAIsL,KAAKD,GAEpB,SAASJ,EAAkB1M,GACvB,OAAIA,aAAa+M,KACN/M,EAEW,kBAANA,EACL,IAAI+M,KAAK/M,GAGTyM,EAAc/K,OAAUoB,SAAS9C,IAGhD,SAAS4C,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,mZClpDEiH,EAAU,CAAEC,QAAS,IACd5C,EAAM,CACfxG,OADe,SACRC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANwB,KAApBgB,EAAQmJ,SACRlJ,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmJ,SAER,IAAzBnJ,EAAQrB,MAAMrC,QACd2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQrB,OAE7BsB,GAEXK,OAVe,SAURC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkJ,GACrB,MAAO1I,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmJ,QAAU3I,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQrB,MAAQ6B,EAAOwC,QACvB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9Be,SA8BN9B,GACL,IAAMY,EAAU,kBAAKkJ,GAUrB,YATuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU7G,OAAOlD,EAAO+J,SAGhCnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCqB,EAAQrB,MAAQsE,EAAgB7D,EAAOT,QAEpCqB,GAEXoB,OA3Ce,SA2CRpB,GACH,IAAMqB,EAAM,GAIZ,YAHoBT,IAApBZ,EAAQmJ,UAA0B9H,EAAI8H,QAAUnJ,EAAQmJ,cACtCvI,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQuE,OAAkCtC,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aAC5EY,GAEXC,YAlDe,SAkDHlC,GACR,IAAMY,EAAU,kBAAKkJ,GAarB,YAZuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU/J,EAAO+J,QAGzBnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,yoBC9FnBovC,EAA4B,CAAE3tC,SAAU,IACjCq2B,EAAwB,CACjCh9B,OADiC,SAC1BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANyB,KAArBgB,EAAQ0G,UACRzG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0G,eAET9F,IAAxBZ,EAAQsG,aACRC,OAAIxG,OAAOC,EAAQsG,YAAarG,EAAOE,OAAO,IAAIqF,QAAQC,SAEvDxF,GAEXK,OAViC,SAU1BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKq0C,GACrB,MAAO7zC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0G,SAAWlG,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQsG,YAAcC,OAAIjG,OAAOE,EAAQA,EAAOL,UAChD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BiC,SA8BxB9B,GACL,IAAMY,EAAU,kBAAKq0C,GAarB,YAZwBzzC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWpE,OAAOlD,EAAOsH,UAGjC1G,EAAQ0G,SAAW,QAEI9F,IAAvBxB,EAAOkH,aAAoD,OAAvBlH,EAAOkH,YAC3CtG,EAAQsG,YAAcC,OAAIrF,SAAS9B,EAAOkH,aAG1CtG,EAAQsG,iBAAc1F,EAEnBZ,GAEXoB,OA9CiC,SA8C1BpB,GACH,IAAMqB,EAAM,GAMZ,YALqBT,IAArBZ,EAAQ0G,WAA2BrF,EAAIqF,SAAW1G,EAAQ0G,eAClC9F,IAAxBZ,EAAQsG,cACHjF,EAAIiF,YAActG,EAAQsG,YACrBC,OAAInF,OAAOpB,EAAQsG,kBACnB1F,GACHS,GAEXC,YAvDiC,SAuDrBlC,GACR,IAAMY,EAAU,kBAAKq0C,GAarB,YAZwBzzC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWtH,EAAOsH,SAG1B1G,EAAQ0G,SAAW,QAEI9F,IAAvBxB,EAAOkH,aAAoD,OAAvBlH,EAAOkH,YAC3CtG,EAAQsG,YAAcC,OAAIjF,YAAYlC,EAAOkH,aAG7CtG,EAAQsG,iBAAc1F,EAEnBZ,IAGTs0C,EAA+B,GACxBtX,EAA2B,CACpCj9B,OADoC,SAC7BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,YANuB4B,IAAnBZ,EAAQ8J,QACR1B,EAAOrI,OAAOC,EAAQ8J,OAAQ7J,EAAOE,OAAO,IAAIqF,QAAQC,cAE7B7E,IAA3BZ,EAAQwG,gBACRD,OAAIxG,OAAOC,EAAQwG,eAAgBvG,EAAOE,OAAO,IAAIqF,QAAQC,SAE1DxF,GAEXK,OAVoC,SAU7BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBACTs0C,GAEP,MAAO9zC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8J,OAAS1B,EAAO9H,OAAOE,EAAQA,EAAOL,UAC9C,MACJ,KAAK,EACDH,EAAQwG,eAAiBD,OAAIjG,OAAOE,EAAQA,EAAOL,UACnD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAhCoC,SAgC3B9B,GACL,IAAMY,EAAU,kBACTs0C,GAcP,YAZsB1zC,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS1B,EAAOlH,SAAS9B,EAAO0K,QAGxC9J,EAAQ8J,YAASlJ,OAESA,IAA1BxB,EAAOoH,gBAA0D,OAA1BpH,EAAOoH,eAC9CxG,EAAQwG,eAAiBD,OAAIrF,SAAS9B,EAAOoH,gBAG7CxG,EAAQwG,oBAAiB5F,EAEtBZ,GAEXoB,OAlDoC,SAkD7BpB,GACH,IAAMqB,EAAM,GAOZ,YANmBT,IAAnBZ,EAAQ8J,SACHzI,EAAIyI,OAAS9J,EAAQ8J,OAAS1B,EAAOhH,OAAOpB,EAAQ8J,aAAUlJ,QACxCA,IAA3BZ,EAAQwG,iBACHnF,EAAImF,eAAiBxG,EAAQwG,eACxBD,OAAInF,OAAOpB,EAAQwG,qBACnB5F,GACHS,GAEXC,YA5DoC,SA4DxBlC,GACR,IAAMY,EAAU,kBACTs0C,GAcP,YAZsB1zC,IAAlBxB,EAAO0K,QAA0C,OAAlB1K,EAAO0K,OACtC9J,EAAQ8J,OAAS1B,EAAO9G,YAAYlC,EAAO0K,QAG3C9J,EAAQ8J,YAASlJ,OAESA,IAA1BxB,EAAOoH,gBAA0D,OAA1BpH,EAAOoH,eAC9CxG,EAAQwG,eAAiBD,OAAIjF,YAAYlC,EAAOoH,gBAGhDxG,EAAQwG,oBAAiB5F,EAEtBZ,IAGTu0C,EAA4B,CAAE7tC,SAAU,IACjCu2B,EAAwB,CACjCl9B,OADiC,SAC1BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACH,KAArBgB,EAAQ0G,UACRzG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0G,UAFC,uBAItB1G,EAAQw0C,iBAJc,IAItC,2BAAyC,KAA9BlvC,EAA8B,QACrC03B,EAAyBj9B,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UAL3B,8BAOtC,OAAOxF,GAEXK,OAViC,SAU1BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKu0C,GACrBv0C,EAAQw0C,gBAAkB,GAC1B,MAAOh0C,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0G,SAAWlG,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQw0C,gBAAgB53C,KAAKogC,EAAyB18B,OAAOE,EAAQA,EAAOL,WAC5E,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA/BiC,SA+BxB9B,GACL,IAAMY,EAAU,kBAAKu0C,GAQrB,GAPAv0C,EAAQw0C,gBAAkB,QACF5zC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWpE,OAAOlD,EAAOsH,UAGjC1G,EAAQ0G,SAAW,QAEQ9F,IAA3BxB,EAAOo1C,iBACoB,OAA3Bp1C,EAAOo1C,gBAA0B,wBACjBp1C,EAAOo1C,iBADU,IACjC,2BAAwC,KAA7B7uC,EAA6B,QACpC3F,EAAQw0C,gBAAgB53C,KAAKogC,EAAyB97B,SAASyE,KAFlC,+BAKrC,OAAO3F,GAEXoB,OAhDiC,SAgD1BpB,GACH,IAAMqB,EAAM,GAQZ,YAPqBT,IAArBZ,EAAQ0G,WAA2BrF,EAAIqF,SAAW1G,EAAQ0G,UACtD1G,EAAQw0C,gBACRnzC,EAAImzC,gBAAkBx0C,EAAQw0C,gBAAgB5uC,KAAI,SAACD,GAAD,OAAOA,EAAIq3B,EAAyB57B,OAAOuE,QAAK/E,KAGlGS,EAAImzC,gBAAkB,GAEnBnzC,GAEXC,YA3DiC,SA2DrBlC,GACR,IAAMY,EAAU,kBAAKu0C,GAQrB,GAPAv0C,EAAQw0C,gBAAkB,QACF5zC,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWtH,EAAOsH,SAG1B1G,EAAQ0G,SAAW,QAEQ9F,IAA3BxB,EAAOo1C,iBACoB,OAA3Bp1C,EAAOo1C,gBAA0B,wBACjBp1C,EAAOo1C,iBADU,IACjC,2BAAwC,KAA7B7uC,EAA6B,QACpC3F,EAAQw0C,gBAAgB53C,KAAKogC,EAAyB17B,YAAYqE,KAFrC,+BAKrC,OAAO3F,IAGTy0C,EAA2B,CAC7B1N,MAAO,GACPxjC,YAAa,GACbmD,SAAU,IAEDw2B,EAAuB,CAChCn9B,OADgC,SACzBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAa5B,MAZsB,KAAlBgB,EAAQ+mC,OACR9mC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+mC,OAET,KAAxB/mC,EAAQuD,aACRtD,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQuD,aAEZ,KAArBvD,EAAQ0G,UACRzG,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0G,eAEd9F,IAAnBZ,EAAQ4G,QACRL,OAAIxG,OAAOC,EAAQ4G,OAAQ3G,EAAOE,OAAO,IAAIqF,QAAQC,SAElDxF,GAEXK,OAhBgC,SAgBzBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKy0C,GACrB,MAAOj0C,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+mC,MAAQvmC,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQuD,YAAc/C,EAAO6B,SAC7B,MACJ,KAAK,EACDrC,EAAQ0G,SAAWlG,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQ4G,OAASL,OAAIjG,OAAOE,EAAQA,EAAOL,UAC3C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA1CgC,SA0CvB9B,GACL,IAAMY,EAAU,kBAAKy0C,GAyBrB,YAxBqB7zC,IAAjBxB,EAAO2nC,OAAwC,OAAjB3nC,EAAO2nC,MACrC/mC,EAAQ+mC,MAAQzkC,OAAOlD,EAAO2nC,OAG9B/mC,EAAQ+mC,MAAQ,QAEOnmC,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcjB,OAAOlD,EAAOmE,aAGpCvD,EAAQuD,YAAc,QAEF3C,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWpE,OAAOlD,EAAOsH,UAGjC1G,EAAQ0G,SAAW,QAED9F,IAAlBxB,EAAOwH,QAA0C,OAAlBxH,EAAOwH,OACtC5G,EAAQ4G,OAASL,OAAIrF,SAAS9B,EAAOwH,QAGrC5G,EAAQ4G,YAAShG,EAEdZ,GAEXoB,OAtEgC,SAsEzBpB,GACH,IAAMqB,EAAM,GAMZ,YALkBT,IAAlBZ,EAAQ+mC,QAAwB1lC,EAAI0lC,MAAQ/mC,EAAQ+mC,YAC5BnmC,IAAxBZ,EAAQuD,cAA8BlC,EAAIkC,YAAcvD,EAAQuD,kBAC3C3C,IAArBZ,EAAQ0G,WAA2BrF,EAAIqF,SAAW1G,EAAQ0G,eACvC9F,IAAnBZ,EAAQ4G,SACHvF,EAAIuF,OAAS5G,EAAQ4G,OAASL,OAAInF,OAAOpB,EAAQ4G,aAAUhG,GACzDS,GAEXC,YA/EgC,SA+EpBlC,GACR,IAAMY,EAAU,kBAAKy0C,GAyBrB,YAxBqB7zC,IAAjBxB,EAAO2nC,OAAwC,OAAjB3nC,EAAO2nC,MACrC/mC,EAAQ+mC,MAAQ3nC,EAAO2nC,MAGvB/mC,EAAQ+mC,MAAQ,QAEOnmC,IAAvBxB,EAAOmE,aAAoD,OAAvBnE,EAAOmE,YAC3CvD,EAAQuD,YAAcnE,EAAOmE,YAG7BvD,EAAQuD,YAAc,QAEF3C,IAApBxB,EAAOsH,UAA8C,OAApBtH,EAAOsH,SACxC1G,EAAQ0G,SAAWtH,EAAOsH,SAG1B1G,EAAQ0G,SAAW,QAED9F,IAAlBxB,EAAOwH,QAA0C,OAAlBxH,EAAOwH,OACtC5G,EAAQ4G,OAASL,OAAIjF,YAAYlC,EAAOwH,QAGxC5G,EAAQ4G,YAAShG,EAEdZ,IAGTiI,EAAa,CAAEC,eAAgB,EAAGC,eAAgB,GAC3CC,EAAS,CAClBrI,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OAN+B,IAA3BgB,EAAQkI,gBACRjI,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQkI,gBAEL,IAA3BlI,EAAQmI,gBACRlI,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQmI,gBAE9BlI,GAEXK,OAVkB,SAUXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiI,GACrB,MAAOzH,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQkI,eAAiBlH,EAAaR,EAAO6H,UAC7C,MACJ,KAAK,EACDrI,EAAQmI,eAAiBnH,EAAaR,EAAO6H,UAC7C,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BkB,SA8BT9B,GACL,IAAMY,EAAU,kBAAKiI,GAarB,YAZ8BrH,IAA1BxB,EAAO8I,gBAA0D,OAA1B9I,EAAO8I,eAC9ClI,EAAQkI,eAAiB/G,OAAO/B,EAAO8I,gBAGvClI,EAAQkI,eAAiB,OAECtH,IAA1BxB,EAAO+I,gBAA0D,OAA1B/I,EAAO+I,eAC9CnI,EAAQmI,eAAiBhH,OAAO/B,EAAO+I,gBAGvCnI,EAAQmI,eAAiB,EAEtBnI,GAEXoB,OA9CkB,SA8CXpB,GACH,IAAMqB,EAAM,GAKZ,YAJ2BT,IAA3BZ,EAAQkI,iBACH7G,EAAI6G,eAAiBlI,EAAQkI,qBACPtH,IAA3BZ,EAAQmI,iBACH9G,EAAI8G,eAAiBnI,EAAQmI,gBAC3B9G,GAEXC,YAtDkB,SAsDNlC,GACR,IAAMY,EAAU,kBAAKiI,GAarB,YAZ8BrH,IAA1BxB,EAAO8I,gBAA0D,OAA1B9I,EAAO8I,eAC9ClI,EAAQkI,eAAiB9I,EAAO8I,eAGhClI,EAAQkI,eAAiB,OAECtH,IAA1BxB,EAAO+I,gBAA0D,OAA1B/I,EAAO+I,eAC9CnI,EAAQmI,eAAiB/I,EAAO+I,eAGhCnI,EAAQmI,eAAiB,EAEtBnI,IAGTiU,EAAa,CAAEygC,eAAgB,IACxBpgC,EAAS,CAClBvU,OADkB,SACXC,GAAmC,MAA1BC,EAA0B,uDAAjBC,YAAOlB,SAAU,iBACtBgB,EAAQ00C,gBADc,IACtC,2BAAwC,KAA7BpvC,EAA6B,QACpCrF,EAAOE,OAAO,IAAIkC,OAAOiD,IAFS,8BAItC,OAAOrF,GAEXK,OAPkB,SAOXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKiU,GACrBjU,EAAQ00C,eAAiB,GACzB,MAAOl0C,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ00C,eAAe93C,KAAK4D,EAAO6B,UACnC,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAzBkB,SAyBT9B,GACL,IAAMY,EAAU,kBAAKiU,GAErB,GADAjU,EAAQ00C,eAAiB,QACK9zC,IAA1BxB,EAAOs1C,gBAA0D,OAA1Bt1C,EAAOs1C,eAAyB,wBACvDt1C,EAAOs1C,gBADgD,IACvE,2BAAuC,KAA5B/uC,EAA4B,QACnC3F,EAAQ00C,eAAe93C,KAAK0F,OAAOqD,KAFgC,+BAK3E,OAAO3F,GAEXoB,OAnCkB,SAmCXpB,GACH,IAAMqB,EAAM,GAOZ,OANIrB,EAAQ00C,eACRrzC,EAAIqzC,eAAiB10C,EAAQ00C,eAAe9uC,KAAI,SAACD,GAAD,OAAOA,KAGvDtE,EAAIqzC,eAAiB,GAElBrzC,GAEXC,YA7CkB,SA6CNlC,GACR,IAAMY,EAAU,kBAAKiU,GAErB,GADAjU,EAAQ00C,eAAiB,QACK9zC,IAA1BxB,EAAOs1C,gBAA0D,OAA1Bt1C,EAAOs1C,eAAyB,wBACvDt1C,EAAOs1C,gBADgD,IACvE,2BAAuC,KAA5B/uC,EAA4B,QACnC3F,EAAQ00C,eAAe93C,KAAK+I,IAFuC,+BAK3E,OAAO3F,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,qdC3eE0yC,EAAkB,CACpB5lC,WAAY,GACZC,cAAe,GACfsY,OAAQ,GACRmmB,SAAU,GACVt+B,iBAAkB,GAETumB,EAAc,CACvB31B,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAsB5B,MArB2B,KAAvBgB,EAAQ+O,YACR9O,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ+O,YAEP,KAA1B/O,EAAQgP,eACR/O,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQgP,oBAEfpO,IAAlBZ,EAAQ40C,OACR7oC,OAAKhM,OAAOC,EAAQ40C,MAAO30C,EAAOE,OAAO,IAAIqF,QAAQC,SAElC,KAAnBzF,EAAQsnB,QACRrnB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsnB,QAEZ,KAArBtnB,EAAQytC,UACRxtC,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQytC,eAEP7sC,IAA1BZ,EAAQqP,eACRjH,OAAOrI,OAAOC,EAAQqP,cAAepP,EAAOE,OAAO,IAAIqF,QAAQC,SAElC,IAA7BzF,EAAQmP,kBACRlP,EAAOE,OAAO,IAAIkI,OAAOrI,EAAQmP,kBAE9BlP,GAEXK,OAzBuB,SAyBhBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK20C,GACrB,MAAOn0C,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+O,WAAavO,EAAO6B,SAC5B,MACJ,KAAK,EACDrC,EAAQgP,cAAgBxO,EAAO6B,SAC/B,MACJ,KAAK,EACDrC,EAAQ40C,MAAQ7oC,OAAKzL,OAAOE,EAAQA,EAAOL,UAC3C,MACJ,KAAK,EACDH,EAAQsnB,OAAS9mB,EAAO6B,SACxB,MACJ,KAAK,EACDrC,EAAQytC,SAAWjtC,EAAO6B,SAC1B,MACJ,KAAK,EACDrC,EAAQqP,cAAgBjH,OAAO9H,OAAOE,EAAQA,EAAOL,UACrD,MACJ,KAAK,EACDH,EAAQmP,iBAAmBnO,EAAaR,EAAO6H,UAC/C,MACJ,QACI7H,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA5DuB,SA4Dd9B,GACL,IAAMY,EAAU,kBAAK20C,GA4CrB,YA3C0B/zC,IAAtBxB,EAAO2P,YAAkD,OAAtB3P,EAAO2P,WAC1C/O,EAAQ+O,WAAazM,OAAOlD,EAAO2P,YAGnC/O,EAAQ+O,WAAa,QAEInO,IAAzBxB,EAAO4P,eAAwD,OAAzB5P,EAAO4P,cAC7ChP,EAAQgP,cAAgB1M,OAAOlD,EAAO4P,eAGtChP,EAAQgP,cAAgB,QAEPpO,IAAjBxB,EAAOw1C,OAAwC,OAAjBx1C,EAAOw1C,MACrC50C,EAAQ40C,MAAQ7oC,OAAK7K,SAAS9B,EAAOw1C,OAGrC50C,EAAQ40C,WAAQh0C,OAEEA,IAAlBxB,EAAOkoB,QAA0C,OAAlBloB,EAAOkoB,OACtCtnB,EAAQsnB,OAAShlB,OAAOlD,EAAOkoB,QAG/BtnB,EAAQsnB,OAAS,QAEG1mB,IAApBxB,EAAOquC,UAA8C,OAApBruC,EAAOquC,SACxCztC,EAAQytC,SAAWnrC,OAAOlD,EAAOquC,UAGjCztC,EAAQytC,SAAW,QAEM7sC,IAAzBxB,EAAOiQ,eAAwD,OAAzBjQ,EAAOiQ,cAC7CrP,EAAQqP,cAAgBjH,OAAOlH,SAAS9B,EAAOiQ,eAG/CrP,EAAQqP,mBAAgBzO,OAEIA,IAA5BxB,EAAO+P,kBACqB,OAA5B/P,EAAO+P,iBACPnP,EAAQmP,iBAAmBhO,OAAO/B,EAAO+P,kBAGzCnP,EAAQmP,iBAAmB,EAExBnP,GAEXoB,OA3GuB,SA2GhBpB,GACH,IAAMqB,EAAM,GAcZ,YAbuBT,IAAvBZ,EAAQ+O,aAA6B1N,EAAI0N,WAAa/O,EAAQ+O,iBACpCnO,IAA1BZ,EAAQgP,gBACH3N,EAAI2N,cAAgBhP,EAAQgP,oBACfpO,IAAlBZ,EAAQ40C,QACHvzC,EAAIuzC,MAAQ50C,EAAQ40C,MAAQ7oC,OAAK3K,OAAOpB,EAAQ40C,YAASh0C,QAC3CA,IAAnBZ,EAAQsnB,SAAyBjmB,EAAIimB,OAAStnB,EAAQsnB,aACjC1mB,IAArBZ,EAAQytC,WAA2BpsC,EAAIosC,SAAWztC,EAAQytC,eAChC7sC,IAA1BZ,EAAQqP,gBACHhO,EAAIgO,cAAgBrP,EAAQqP,cACvBjH,OAAOhH,OAAOpB,EAAQqP,oBACtBzO,QACmBA,IAA7BZ,EAAQmP,mBACH9N,EAAI8N,iBAAmBnP,EAAQmP,kBAC7B9N,GAEXC,YA5HuB,SA4HXlC,GACR,IAAMY,EAAU,kBAAK20C,GA4CrB,YA3C0B/zC,IAAtBxB,EAAO2P,YAAkD,OAAtB3P,EAAO2P,WAC1C/O,EAAQ+O,WAAa3P,EAAO2P,WAG5B/O,EAAQ+O,WAAa,QAEInO,IAAzBxB,EAAO4P,eAAwD,OAAzB5P,EAAO4P,cAC7ChP,EAAQgP,cAAgB5P,EAAO4P,cAG/BhP,EAAQgP,cAAgB,QAEPpO,IAAjBxB,EAAOw1C,OAAwC,OAAjBx1C,EAAOw1C,MACrC50C,EAAQ40C,MAAQ7oC,OAAKzK,YAAYlC,EAAOw1C,OAGxC50C,EAAQ40C,WAAQh0C,OAEEA,IAAlBxB,EAAOkoB,QAA0C,OAAlBloB,EAAOkoB,OACtCtnB,EAAQsnB,OAASloB,EAAOkoB,OAGxBtnB,EAAQsnB,OAAS,QAEG1mB,IAApBxB,EAAOquC,UAA8C,OAApBruC,EAAOquC,SACxCztC,EAAQytC,SAAWruC,EAAOquC,SAG1BztC,EAAQytC,SAAW,QAEM7sC,IAAzBxB,EAAOiQ,eAAwD,OAAzBjQ,EAAOiQ,cAC7CrP,EAAQqP,cAAgBjH,OAAO9G,YAAYlC,EAAOiQ,eAGlDrP,EAAQqP,mBAAgBzO,OAEIA,IAA5BxB,EAAO+P,kBACqB,OAA5B/P,EAAO+P,iBACPnP,EAAQmP,iBAAmB/P,EAAO+P,iBAGlCnP,EAAQmP,iBAAmB,EAExBnP,IA6CXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,mZCnPEmwC,EAAgB,GACTlsC,EAAY,CACrBnG,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,YANwB4B,IAApBZ,EAAQqyC,SACRpyC,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQqyC,cAEVzxC,IAAtBZ,EAAQsyC,WACRryC,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQsyC,WAE7BryC,GAEXK,OAVqB,SAUdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKoyC,GACrB,MAAO5xC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqyC,QAAU7xC,EAAOwC,QACzB,MACJ,KAAK,EACDhD,EAAQsyC,UAAY9xC,EAAOwC,QAC3B,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BqB,SA8BZ9B,GACL,IAAMY,EAAU,kBAAKoyC,GAOrB,YANuBxxC,IAAnBxB,EAAOizC,SAA4C,OAAnBjzC,EAAOizC,UACvCryC,EAAQqyC,QAAUpvC,EAAgB7D,EAAOizC,eAEpBzxC,IAArBxB,EAAOkzC,WAAgD,OAArBlzC,EAAOkzC,YACzCtyC,EAAQsyC,UAAYrvC,EAAgB7D,EAAOkzC,YAExCtyC,GAEXoB,OAxCqB,SAwCdpB,GACH,IAAMqB,EAAM,GAWZ,YAVoBT,IAApBZ,EAAQqyC,UACHhxC,EAAIgxC,aACmBzxC,IAApBZ,EAAQqyC,QACFnvC,EAAgBlD,EAAQqyC,cACxBzxC,QACQA,IAAtBZ,EAAQsyC,YACHjxC,EAAIixC,eACqB1xC,IAAtBZ,EAAQsyC,UACFpvC,EAAgBlD,EAAQsyC,gBACxB1xC,GACPS,GAEXC,YAtDqB,SAsDTlC,GACR,IAAMY,EAAU,kBAAKoyC,GAarB,YAZuBxxC,IAAnBxB,EAAOizC,SAA4C,OAAnBjzC,EAAOizC,QACvCryC,EAAQqyC,QAAUjzC,EAAOizC,QAGzBryC,EAAQqyC,aAAUzxC,OAEGA,IAArBxB,EAAOkzC,WAAgD,OAArBlzC,EAAOkzC,UACzCtyC,EAAQsyC,UAAYlzC,EAAOkzC,UAG3BtyC,EAAQsyC,eAAY1xC,EAEjBZ,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,+ZCnGnBuG,EAAe,CAAE5L,QAAS,EAAGC,MAAO,GAC7B8I,EAAW,CACpB5I,OADoB,SACbC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANwB,IAApBgB,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAVoB,SAUbC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKwL,GACrB,MAAOhL,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,EAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BoB,SA8BX9B,GACL,IAAMY,EAAU,kBAAKwL,GAarB,YAZuB5K,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUuB,OAAO/B,EAAOQ,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQsB,OAAO/B,EAAOS,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXoB,OA9CoB,SA8CbpB,GACH,IAAMqB,EAAM,GAGZ,YAFoBT,IAApBZ,EAAQJ,UAA0ByB,EAAIzB,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwBwB,EAAIxB,MAAQG,EAAQH,OAC7CwB,GAEXC,YApDoB,SAoDRlC,GACR,IAAMY,EAAU,kBAAKwL,GAarB,YAZuB5K,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUR,EAAOQ,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQT,EAAOS,MAGvBG,EAAQH,MAAQ,EAEbG,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,mZC1FEiH,EAAU,CAAEC,QAAS,IACd5C,EAAM,CACfxG,OADe,SACRC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANwB,KAApBgB,EAAQmJ,SACRlJ,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmJ,SAER,IAAzBnJ,EAAQrB,MAAMrC,QACd2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQrB,OAE7BsB,GAEXK,OAVe,SAURC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkJ,GACrB,MAAO1I,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmJ,QAAU3I,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQrB,MAAQ6B,EAAOwC,QACvB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9Be,SA8BN9B,GACL,IAAMY,EAAU,kBAAKkJ,GAUrB,YATuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU7G,OAAOlD,EAAO+J,SAGhCnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCqB,EAAQrB,MAAQsE,EAAgB7D,EAAOT,QAEpCqB,GAEXoB,OA3Ce,SA2CRpB,GACH,IAAMqB,EAAM,GAIZ,YAHoBT,IAApBZ,EAAQmJ,UAA0B9H,EAAI8H,QAAUnJ,EAAQmJ,cACtCvI,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQuE,OAAkCtC,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aAC5EY,GAEXC,YAlDe,SAkDHlC,GACR,IAAMY,EAAU,kBAAKkJ,GAarB,YAZuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU/J,EAAO+J,QAGzBnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q,kXChGnB2d,EAAW,CAAEN,MAAO,GAAI5V,OAAQ,IACzBX,EAAO,CAChBhM,OADgB,SACTC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANsB,KAAlBgB,EAAQsiB,OACRriB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQsiB,OAEd,KAAnBtiB,EAAQ0M,QACRzM,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0M,QAE9BzM,GAEXK,OAVgB,SAUTC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK4iB,GACrB,MAAOpiB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsiB,MAAQ9hB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ0M,OAASlM,EAAO6B,SACxB,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BgB,SA8BP9B,GACL,IAAMY,EAAU,kBAAK4iB,GAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQhgB,OAAOlD,EAAOkjB,OAG9BtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAASpK,OAAOlD,EAAOsN,QAG/B1M,EAAQ0M,OAAS,GAEd1M,GAEXoB,OA9CgB,SA8CTpB,GACH,IAAMqB,EAAM,GAGZ,YAFkBT,IAAlBZ,EAAQsiB,QAAwBjhB,EAAIihB,MAAQtiB,EAAQsiB,YACjC1hB,IAAnBZ,EAAQ0M,SAAyBrL,EAAIqL,OAAS1M,EAAQ0M,QAC/CrL,GAEXC,YApDgB,SAoDJlC,GACR,IAAMY,EAAU,kBAAK4iB,GAarB,YAZqBhiB,IAAjBxB,EAAOkjB,OAAwC,OAAjBljB,EAAOkjB,MACrCtiB,EAAQsiB,MAAQljB,EAAOkjB,MAGvBtiB,EAAQsiB,MAAQ,QAEE1hB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OACtC1M,EAAQ0M,OAAStN,EAAOsN,OAGxB1M,EAAQ0M,OAAS,GAEd1M,K,yYClETL,EAAgB,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,EAAY,CACrBC,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,OANwB,IAApBgB,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAVqB,SAUdC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKL,GACrB,MAAOa,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,EAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9BqB,SA8BZ9B,GACL,IAAMY,EAAU,kBAAKL,GAarB,YAZuBiB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUuB,OAAO/B,EAAOQ,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQsB,OAAO/B,EAAOS,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXoB,OA9CqB,SA8CdpB,GACH,IAAMqB,EAAM,GAGZ,YAFoBT,IAApBZ,EAAQJ,UAA0ByB,EAAIzB,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwBwB,EAAIxB,MAAQG,EAAQH,OAC7CwB,GAEXC,YApDqB,SAoDTlC,GACR,IAAMY,EAAU,kBAAKL,GAarB,YAZuBiB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCI,EAAQJ,QAAUR,EAAOQ,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBxB,EAAOS,OAAwC,OAAjBT,EAAOS,MACrCG,EAAQH,MAAQT,EAAOS,MAGvBG,EAAQH,MAAQ,EAEbG,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,2jBCtFE4yC,EAAwB,CAAEnvC,SAAU,IAC7BioB,EAAoB,CAC7B5tB,OAD6B,SACtBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,cACJ4B,IAApBZ,EAAQmE,SACRoC,OAAIxG,OAAOC,EAAQmE,QAASlE,EAAOE,OAAO,IAAIqF,QAAQC,SAFpB,uBAItBzF,EAAQ80C,gBAJc,IAItC,2BAAwC,KAA7BxvC,EAA6B,QACpCyG,OAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UALP,8BAUtC,MAHyB,KAArBzF,EAAQ0F,UACRzF,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ0F,UAE9BzF,GAEXK,OAb6B,SAatBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK60C,GACrB70C,EAAQ80C,eAAiB,GACzB,MAAOt0C,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmE,QAAUoC,OAAIjG,OAAOE,EAAQA,EAAOL,UAC5C,MACJ,KAAK,EACDH,EAAQ80C,eAAel4C,KAAKmP,OAAKzL,OAAOE,EAAQA,EAAOL,WACvD,MACJ,KAAK,EACDH,EAAQ0F,SAAWlF,EAAO6B,SAC1B,MACJ,QACI7B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SArC6B,SAqCpB9B,GACL,IAAMY,EAAU,kBAAK60C,GAQrB,GAPA70C,EAAQ80C,eAAiB,QACFl0C,IAAnBxB,EAAO+E,SAA4C,OAAnB/E,EAAO+E,QACvCnE,EAAQmE,QAAUoC,OAAIrF,SAAS9B,EAAO+E,SAGtCnE,EAAQmE,aAAUvD,OAEQA,IAA1BxB,EAAO01C,gBAA0D,OAA1B11C,EAAO01C,eAAyB,wBACvD11C,EAAO01C,gBADgD,IACvE,2BAAuC,KAA5BnvC,EAA4B,QACnC3F,EAAQ80C,eAAel4C,KAAKmP,OAAK7K,SAASyE,KAFyB,+BAW3E,YANwB/E,IAApBxB,EAAOsG,UAA8C,OAApBtG,EAAOsG,SACxC1F,EAAQ0F,SAAWpD,OAAOlD,EAAOsG,UAGjC1F,EAAQ0F,SAAW,GAEhB1F,GAEXoB,OA3D6B,SA2DtBpB,GACH,IAAMqB,EAAM,GAUZ,YAToBT,IAApBZ,EAAQmE,UACH9C,EAAI8C,QAAUnE,EAAQmE,QAAUoC,OAAInF,OAAOpB,EAAQmE,cAAWvD,GAC/DZ,EAAQ80C,eACRzzC,EAAIyzC,eAAiB90C,EAAQ80C,eAAelvC,KAAI,SAACD,GAAD,OAAOA,EAAIoG,OAAK3K,OAAOuE,QAAK/E,KAG5ES,EAAIyzC,eAAiB,QAEJl0C,IAArBZ,EAAQ0F,WAA2BrE,EAAIqE,SAAW1F,EAAQ0F,UACnDrE,GAEXC,YAxE6B,SAwEjBlC,GACR,IAAMY,EAAU,kBAAK60C,GAQrB,GAPA70C,EAAQ80C,eAAiB,QACFl0C,IAAnBxB,EAAO+E,SAA4C,OAAnB/E,EAAO+E,QACvCnE,EAAQmE,QAAUoC,OAAIjF,YAAYlC,EAAO+E,SAGzCnE,EAAQmE,aAAUvD,OAEQA,IAA1BxB,EAAO01C,gBAA0D,OAA1B11C,EAAO01C,eAAyB,wBACvD11C,EAAO01C,gBADgD,IACvE,2BAAuC,KAA5BnvC,EAA4B,QACnC3F,EAAQ80C,eAAel4C,KAAKmP,OAAKzK,YAAYqE,KAFsB,+BAW3E,YANwB/E,IAApBxB,EAAOsG,UAA8C,OAApBtG,EAAOsG,SACxC1F,EAAQ0F,SAAWtG,EAAOsG,SAG1B1F,EAAQ0F,SAAW,GAEhB1F,IA4DT+0C,EAAc,CAAE7nB,WAAY,EAAGM,MAAO,GAAIsf,OAAQ,GAC3Crf,EAAU,CACnB1tB,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAU5B,OAT2B,IAAvBgB,EAAQktB,YACRjtB,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQktB,YAEd,KAAlBltB,EAAQwtB,OACRvtB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQwtB,OAEd,IAAnBxtB,EAAQ8sC,QACR7sC,EAAOE,OAAO,IAAIE,MAAML,EAAQ8sC,QAE7B7sC,GAEXK,OAbmB,SAaZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAK+0C,GACrB,MAAOv0C,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQktB,WAAalsB,EAAaR,EAAO6H,UACzC,MACJ,KAAK,EACDrI,EAAQwtB,MAAQhtB,EAAO6B,SACvB,MACJ,KAAK,EACDrC,EAAQ8sC,OAAStsC,EAAOH,QACxB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SApCmB,SAoCV9B,GACL,IAAMY,EAAU,kBAAK+0C,GAmBrB,YAlB0Bn0C,IAAtBxB,EAAO8tB,YAAkD,OAAtB9tB,EAAO8tB,WAC1CltB,EAAQktB,WAAa/rB,OAAO/B,EAAO8tB,YAGnCltB,EAAQktB,WAAa,OAEJtsB,IAAjBxB,EAAOouB,OAAwC,OAAjBpuB,EAAOouB,MACrCxtB,EAAQwtB,MAAQlrB,OAAOlD,EAAOouB,OAG9BxtB,EAAQwtB,MAAQ,QAEE5sB,IAAlBxB,EAAO0tC,QAA0C,OAAlB1tC,EAAO0tC,OACtC9sC,EAAQ8sC,OAAS9B,eAAmB5rC,EAAO0tC,QAG3C9sC,EAAQ8sC,OAAS,EAEd9sC,GAEXoB,OA1DmB,SA0DZpB,GACH,IAAMqB,EAAM,GAKZ,YAJuBT,IAAvBZ,EAAQktB,aAA6B7rB,EAAI6rB,WAAaltB,EAAQktB,iBAC5CtsB,IAAlBZ,EAAQwtB,QAAwBnsB,EAAImsB,MAAQxtB,EAAQwtB,YACjC5sB,IAAnBZ,EAAQ8sC,SACHzrC,EAAIyrC,OAASxB,eAAiBtrC,EAAQ8sC,SACpCzrC,GAEXC,YAlEmB,SAkEPlC,GACR,IAAMY,EAAU,kBAAK+0C,GAmBrB,YAlB0Bn0C,IAAtBxB,EAAO8tB,YAAkD,OAAtB9tB,EAAO8tB,WAC1CltB,EAAQktB,WAAa9tB,EAAO8tB,WAG5BltB,EAAQktB,WAAa,OAEJtsB,IAAjBxB,EAAOouB,OAAwC,OAAjBpuB,EAAOouB,MACrCxtB,EAAQwtB,MAAQpuB,EAAOouB,MAGvBxtB,EAAQwtB,MAAQ,QAEE5sB,IAAlBxB,EAAO0tC,QAA0C,OAAlB1tC,EAAO0tC,OACtC9sC,EAAQ8sC,OAAS1tC,EAAO0tC,OAGxB9sC,EAAQ8sC,OAAS,EAEd9sC,IAmCTg1C,EAAiB,CAAE9nB,WAAY,EAAGtE,UAAW,IACtC8E,EAAa,CACtB3tB,OADsB,SACfC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SACD,IAAvBgB,EAAQktB,YACRjtB,EAAOE,OAAO,GAAGkI,OAAOrI,EAAQktB,YAEV,KAAtBltB,EAAQ4oB,WACR3oB,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQ4oB,WALC,uBAOtB5oB,EAAQ0M,QAPc,IAOtC,2BAAgC,KAArBpH,EAAqB,QAC5ByG,OAAKhM,OAAOuF,EAAGrF,EAAOE,OAAO,IAAIqF,QAAQC,UARP,8BAUtC,OAAOxF,GAEXK,OAbsB,SAafC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKg1C,GACrBh1C,EAAQ0M,OAAS,GACjB,MAAOlM,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQktB,WAAalsB,EAAaR,EAAO6H,UACzC,MACJ,KAAK,EACDrI,EAAQ4oB,UAAYpoB,EAAO6B,SAC3B,MACJ,KAAK,EACDrC,EAAQ0M,OAAO9P,KAAKmP,OAAKzL,OAAOE,EAAQA,EAAOL,WAC/C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SArCsB,SAqCb9B,GACL,IAAMY,EAAU,kBAAKg1C,GAcrB,GAbAh1C,EAAQ0M,OAAS,QACS9L,IAAtBxB,EAAO8tB,YAAkD,OAAtB9tB,EAAO8tB,WAC1CltB,EAAQktB,WAAa/rB,OAAO/B,EAAO8tB,YAGnCltB,EAAQktB,WAAa,OAEAtsB,IAArBxB,EAAOwpB,WAAgD,OAArBxpB,EAAOwpB,UACzC5oB,EAAQ4oB,UAAYtmB,OAAOlD,EAAOwpB,WAGlC5oB,EAAQ4oB,UAAY,QAEFhoB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,wBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,OAAK7K,SAASyE,KAFiB,+BAK3D,OAAO3F,GAEXoB,OA3DsB,SA2DfpB,GACH,IAAMqB,EAAM,GASZ,YARuBT,IAAvBZ,EAAQktB,aAA6B7rB,EAAI6rB,WAAaltB,EAAQktB,iBACxCtsB,IAAtBZ,EAAQ4oB,YAA4BvnB,EAAIunB,UAAY5oB,EAAQ4oB,WACxD5oB,EAAQ0M,OACRrL,EAAIqL,OAAS1M,EAAQ0M,OAAO9G,KAAI,SAACD,GAAD,OAAQA,EAAIoG,OAAK3K,OAAOuE,QAAK/E,KAG7DS,EAAIqL,OAAS,GAEVrL,GAEXC,YAvEsB,SAuEVlC,GACR,IAAMY,EAAU,kBAAKg1C,GAcrB,GAbAh1C,EAAQ0M,OAAS,QACS9L,IAAtBxB,EAAO8tB,YAAkD,OAAtB9tB,EAAO8tB,WAC1CltB,EAAQktB,WAAa9tB,EAAO8tB,WAG5BltB,EAAQktB,WAAa,OAEAtsB,IAArBxB,EAAOwpB,WAAgD,OAArBxpB,EAAOwpB,UACzC5oB,EAAQ4oB,UAAYxpB,EAAOwpB,UAG3B5oB,EAAQ4oB,UAAY,QAEFhoB,IAAlBxB,EAAOsN,QAA0C,OAAlBtN,EAAOsN,OAAiB,wBACvCtN,EAAOsN,QADgC,IACvD,2BAA+B,KAApB/G,EAAoB,QAC3B3F,EAAQ0M,OAAO9P,KAAKmP,OAAKzK,YAAYqE,KAFc,+BAK3D,OAAO3F,IAuDXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAAST,EAAaU,GAClB,GAAIA,EAAKC,GAAGR,OAAOS,kBACf,MAAM,IAAIL,EAAWM,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,mZC7bEiH,EAAU,CAAEC,QAAS,IACd5C,EAAM,CACfxG,OADe,SACRC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOlB,SAO5B,MANwB,KAApBgB,EAAQmJ,SACRlJ,EAAOE,OAAO,IAAIkC,OAAOrC,EAAQmJ,SAER,IAAzBnJ,EAAQrB,MAAMrC,QACd2D,EAAOE,OAAO,IAAI6C,MAAMhD,EAAQrB,OAE7BsB,GAEXK,OAVe,SAURC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD0D,EAAU,kBAAKkJ,GACrB,MAAO1I,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmJ,QAAU3I,EAAO6B,SACzB,MACJ,KAAK,EACDrC,EAAQrB,MAAQ6B,EAAOwC,QACvB,MACJ,QACIxC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SA9Be,SA8BN9B,GACL,IAAMY,EAAU,kBAAKkJ,GAUrB,YATuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU7G,OAAOlD,EAAO+J,SAGhCnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCqB,EAAQrB,MAAQsE,EAAgB7D,EAAOT,QAEpCqB,GAEXoB,OA3Ce,SA2CRpB,GACH,IAAMqB,EAAM,GAIZ,YAHoBT,IAApBZ,EAAQmJ,UAA0B9H,EAAI8H,QAAUnJ,EAAQmJ,cACtCvI,IAAlBZ,EAAQrB,QACH0C,EAAI1C,MAAQuE,OAAkCtC,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aAC5EY,GAEXC,YAlDe,SAkDHlC,GACR,IAAMY,EAAU,kBAAKkJ,GAarB,YAZuBtI,IAAnBxB,EAAO+J,SAA4C,OAAnB/J,EAAO+J,QACvCnJ,EAAQmJ,QAAU/J,EAAO+J,QAGzBnJ,EAAQmJ,QAAU,QAEDvI,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCqB,EAAQrB,MAAQS,EAAOT,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGXuB,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXhC,OACP,OAAOA,OACX,GAAsB,qBAAXiC,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZ8C,EAAOhD,EAAWgD,MACnB,SAACC,GAAD,OAASjD,EAAWkD,OAAOV,KAAKS,EAAK,UAAUE,SAAS,WAC7D,SAASzB,EAAgBuB,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAInE,WAAWkE,EAAIrI,QACtBF,EAAI,EAAGA,EAAIuI,EAAIrI,SAAUF,EAC9BwI,EAAIxI,GAAKuI,EAAIE,WAAWzI,GAE5B,OAAOwI,EAEX,IAAME,EAAOvD,EAAWuD,MACnB,SAACH,GAAD,OAASpD,EAAWkD,OAAOV,KAAKY,EAAK,UAAUD,SAAS,WAC7D,SAASxB,EAAgB0B,GAErB,IADA,IAAMD,EAAM,GACHvI,EAAI,EAAGA,EAAIwI,EAAIG,aAAc3I,EAClCuI,EAAI/H,KAAK0F,OAAO0C,aAAaJ,EAAIxI,KAErC,OAAO0I,EAAKH,EAAIM,KAAK,Q","file":"js/app.5a95cccf.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgChangeOwner = { creator: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = {};\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgAddDelegate = { creator: '' };\nexport const MsgAddDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAddDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAddDelegate };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAddDelegate };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAddDelegateResponse = {};\nexport const MsgAddDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAddDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAddDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAddDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { creator: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgNonce = { creator: '', delegates: '' };\nexport const MsgNonce = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.delegates !== '') {\n            writer.uint32(18).string(message.delegates);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgNonce };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.delegates = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgNonce };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.delegates !== undefined && object.delegates !== null) {\n            message.delegates = String(object.delegates);\n        }\n        else {\n            message.delegates = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.delegates !== undefined && (obj.delegates = message.delegates);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgNonce };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.delegates !== undefined && object.delegates !== null) {\n            message.delegates = object.delegates;\n        }\n        else {\n            message.delegates = '';\n        }\n        return message;\n    }\n};\nconst baseMsgNonceResponse = {};\nexport const MsgNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgNonceResponse };\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Nonce(request) {\n        const data = MsgNonce.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Nonce', data);\n        return promise.then((data) => MsgNonceResponse.decode(new Reader(data)));\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    AddDelegate(request) {\n        const data = MsgAddDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'AddDelegate', data);\n        return promise.then((data) => MsgAddDelegateResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    SetAttribute(request) {\n        const data = MsgSetAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'SetAttribute', data);\n        return promise.then((data) => MsgSetAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseMsgCreateClient = { signer: '' };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpdateClient = { clientId: '', signer: '' };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpgradeClient = { clientId: '', signer: '' };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviour = { clientId: '', signer: '' };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'CreateClient', data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpdateClient', data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpgradeClient', data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'SubmitMisbehaviour', data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { Header } from '../../tendermint/types/types';\nimport { ProofOps } from '../../tendermint/crypto/proof';\nimport { EvidenceParams, ValidatorParams, VersionParams } from '../../tendermint/types/params';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.abci';\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NEW':\n            return CheckTxType.NEW;\n        case 1:\n        case 'RECHECK':\n            return CheckTxType.RECHECK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return 'NEW';\n        case CheckTxType.RECHECK:\n            return 'RECHECK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case 'DUPLICATE_VOTE':\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case 'LIGHT_CLIENT_ATTACK':\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return 'UNKNOWN';\n        case EvidenceType.DUPLICATE_VOTE:\n            return 'DUPLICATE_VOTE';\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return 'LIGHT_CLIENT_ATTACK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case 'REJECT':\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case 'REJECT_FORMAT':\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case 'REJECT_SENDER':\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseOfferSnapshot_Result.ABORT:\n            return 'ABORT';\n        case ResponseOfferSnapshot_Result.REJECT:\n            return 'REJECT';\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return 'REJECT_FORMAT';\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return 'REJECT_SENDER';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case 'RETRY':\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case 'RETRY_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case 'REJECT_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return 'ABORT';\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return 'RETRY';\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return 'RETRY_SNAPSHOT';\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return 'REJECT_SNAPSHOT';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseRequestEcho = { message: '' };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    }\n};\nconst baseRequestInfo = { version: '', blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== '') {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestSetOption = { key: '', value: '' };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseRequestInitChain = { chainId: '', initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestQuery = { path: '', height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    }\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    }\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    }\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: '' };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseResponseException = { error: '' };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== '') {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEcho = { message: '' };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    }\n};\nconst baseResponseInfo = {\n    data: '',\n    version: '',\n    appVersion: 0,\n    lastBlockHeight: 0\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== '') {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseSetOption = { code: 0, log: '', info: '' };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: '',\n    info: '',\n    index: 0,\n    height: 0,\n    codespace: ''\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: ''\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    }\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? VoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEvent = { type: '' };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    }\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Echo', data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Flush', data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Info', data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'SetOption', data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'DeliverTx', data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'CheckTx', data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Query', data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Commit', data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'InitChain', data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'BeginBlock', data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'EndBlock', data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ListSnapshots', data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'OfferSnapshot', data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'LoadSnapshotChunk', data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ApplySnapshotChunk', data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../google/protobuf/duration';\nexport const protobufPackage = 'tendermint.types';\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    }\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorParams = { pubKeyTypes: '' };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined && (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'anconprotocol';\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgFileTx = { path: '', content: '', mode: '', time: 0, contentType: '', did: '', from: '' };\nexport const MsgFileTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(18).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(26).string(message.mode);\n        }\n        if (message.time !== 0) {\n            writer.uint32(32).uint64(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(42).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(50).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(58).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.content = reader.string();\n                    break;\n                case 3:\n                    message.mode = reader.string();\n                    break;\n                case 4:\n                    message.time = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.contentType = reader.string();\n                    break;\n                case 6:\n                    message.did = reader.string();\n                    break;\n                case 7:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = Number(object.time);\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataTx = {\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadataTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(26).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(34).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(42).string(message.parent);\n        }\n        for (const v of message.sources) {\n            writer.uint32(50).string(v);\n        }\n        for (const v of message.links) {\n            writer.uint32(58).string(v);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(66).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(74).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(82).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.image = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                case 5:\n                    message.parent = reader.string();\n                    break;\n                case 6:\n                    message.sources.push(reader.string());\n                    break;\n                case 7:\n                    message.links.push(reader.string());\n                    break;\n                case 8:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 9:\n                    message.did = reader.string();\n                    break;\n                case 10:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(String(e));\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(String(e));\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        if (message.sources) {\n            obj.sources = message.sources.map((e) => e);\n        }\n        else {\n            obj.sources = [];\n        }\n        if (message.links) {\n            obj.links = message.links.map((e) => e);\n        }\n        else {\n            obj.links = [];\n        }\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(e);\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(e);\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case 4:\n        case 'STATE_CLOSED':\n            return State.STATE_CLOSED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        case State.STATE_CLOSED:\n            return 'STATE_CLOSED';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'ORDER_NONE_UNSPECIFIED':\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case 'ORDER_UNORDERED':\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case 'ORDER_ORDERED':\n            return Order.ORDER_ORDERED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return 'ORDER_NONE_UNSPECIFIED';\n        case Order.ORDER_UNORDERED:\n            return 'ORDER_UNORDERED';\n        case Order.ORDER_ORDERED:\n            return 'ORDER_ORDERED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: ''\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    }\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: '',\n    portId: '',\n    channelId: ''\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== '') {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { portId: '', channelId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: '',\n    sourceChannel: '',\n    destinationPort: '',\n    destinationChannel: '',\n    timeoutTimestamp: 0\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== '') {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== '') {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== '') {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst basePacketState = { portId: '', channelId: '', sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = {\n    moniker: '',\n    identity: '',\n    website: '',\n    securityContact: '',\n    details: ''\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = {\n    operatorAddress: '',\n    jailed: false,\n    status: 0,\n    tokens: '',\n    delegatorShares: '',\n    unbondingHeight: 0,\n    minSelfDelegation: ''\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = {\n    delegatorAddress: '',\n    validatorAddress: '',\n    shares: ''\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    balance: ''\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    sharesDst: ''\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: ''\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetDidRegistryDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryGetDidRegistryDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDidRegistryNonces\n         * @summary Queries a list of nonce items.\n         * @request GET:/ancon/didregistry/nonces\n         */\n        this.queryDidRegistryNonces = (query, params = {}) => this.request({\n            path: `/ancon/didregistry/nonces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetDidRegistryNonce\n         * @summary Queries a list of nonce items.\n         * @request GET:/ancon/didregistry/nonces/{id}\n         */\n        this.queryGetDidRegistryNonce = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/nonces/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryReadFile\n       * @summary additional handler that uses ReadFile\n      Queries a list of resource items.\n       * @request GET:/ancon/file/{cid}/{path}\n       */\n        this.queryReadFile = (cid, path, params = {}) => this.request({\n            path: `/ancon/file/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRead\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}\n         */\n        this.queryRead = (cid, query, params = {}) => this.request({\n            path: `/ancon/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSetAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgNonce } from \"./types/anconprotocol/tx\";\nimport { MsgAddDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgSetAttribute\", MsgSetAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgNonce\", MsgNonce],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgAddDelegate\", MsgAddDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSetAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgSetAttribute\", value: data }),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgNonce: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgNonce\", value: data }),\n        msgAddDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgAddDelegate\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQueryDelegatesRequest = { id: '' };\nexport const QueryDelegatesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDelegatesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDelegatesRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDelegatesRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDelegatesResponse = {};\nexport const QueryDelegatesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDelegatesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryDelegatesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryDelegatesResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadFile(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadFile', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    Read(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Read', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    DidRegistryNonces(request) {\n        const data = QueryNonceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'DidRegistryNonces', data);\n        return promise.then((data) => QueryNonceResponse.decode(new Reader(data)));\n    }\n    GetDidRegistryNonce(request) {\n        const data = QueryNonceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetDidRegistryNonce', data);\n        return promise.then((data) => QueryNonceResponse.decode(new Reader(data)));\n    }\n    GetDidRegistryDelegate(request) {\n        const data = QueryDelegatesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetDidRegistryDelegate', data);\n        return promise.then((data) => QueryDelegatesResponse.decode(new Reader(data)));\n    }\n}\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { QueryOwnersResponse, MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadWithPath: {},\n        ReadFile: {},\n        Read: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        DidRegistryNonces: {},\n        GetDidRegistryNonce: {},\n        GetDidRegistryDelegate: {},\n        _Structure: {\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getReadFile: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadFile[JSON.stringify(params)] ?? {};\n        },\n        getRead: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Read[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getDidRegistryNonces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DidRegistryNonces[JSON.stringify(params)] ?? {};\n        },\n        getGetDidRegistryNonce: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetDidRegistryNonce[JSON.stringify(params)] ?? {};\n        },\n        getGetDidRegistryDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetDidRegistryDelegate[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadFile({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadFile(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadFile', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadFile', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadFile']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadFile', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRead({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRead(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRead(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Read', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRead', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRead']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRead', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDidRegistryNonces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDidRegistryNonces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDidRegistryNonces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DidRegistryNonces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDidRegistryNonces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDidRegistryNonces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDidRegistryNonces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetDidRegistryNonce({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetDidRegistryNonce(key.id)).data;\n                commit('QUERY', { query: 'GetDidRegistryNonce', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetDidRegistryNonce', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetDidRegistryNonce']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetDidRegistryNonce', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetDidRegistryDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetDidRegistryDelegate(key.id)).data;\n                commit('QUERY', { query: 'GetDidRegistryDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetDidRegistryDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetDidRegistryDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetDidRegistryDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSetAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgNonce({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgNonce(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgNonce:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgNonce:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAddDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAddDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAddDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAddDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSetAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgNonce({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgNonce(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgNonce:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgNonce:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAddDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAddDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAddDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAddDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryResource = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/anconprotocol.MsgFile\", MsgFile],\n    [\"/anconprotocol.MsgMetadata\", MsgMetadata],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgFile: (data) => ({ typeUrl: \"/anconprotocol.MsgFile\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/anconprotocol.MsgMetadata\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileTx } from \"./module/types/anconprotocol/tx\";\nimport { MsgMetadataTx } from \"./module/types/anconprotocol/tx\";\nexport { MsgFileMetadataResponse, MsgFileTx, MsgMetadataTx };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Resource: {},\n        _Structure: {\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n            MsgFileTx: getStructure(MsgFileTx.fromPartial({})),\n            MsgMetadataTx: getStructure(MsgMetadataTx.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, key.path)).data;\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nexport { TxResponse, ABCIMessageLog, StringEvent, Attribute, GasInfo, Result, SimulationResponse, MsgData, TxMsgData, SearchTxsResult };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.abci.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nexport { Coin, DecCoin, IntProto, DecProto };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = {\n    sender: '',\n    invariantModuleName: '',\n    invariantRoute: ''\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = {\n    minSelfDelegation: '',\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgEditValidator = {\n    validatorAddress: '',\n    commissionRate: '',\n    minSelfDelegation: ''\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/channel.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nexport { Channel, IdentifiedChannel, Counterparty, Packet, PacketState, Acknowledgement, PacketSequence };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.channel.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannels(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionChannels(key.connection, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nexport { IdentifiedClientState, ConsensusStateWithHeight, ClientConsensusStates, ClientUpdateProposal, Height, Params, GenesisMetadata, IdentifiedGenesisMetadata };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.client.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientStates(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusStates(key.client_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/connection.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nexport { ConnectionEnd, IdentifiedConnection, Counterparty, ClientPaths, ConnectionPaths, Version };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.connection.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnections(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nimport ElectronicSignaturesIndustriesAnconProtocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/anconprotocol';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n    ElectronicSignaturesIndustriesAnconProtocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolAnconprotocol, 'anconprotocol'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedChannel, PacketState } from '../../../../ibc/core/channel/v1/channel';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    }\n};\nconst basePacketSequence = { portId: '', channelId: '', sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { MerklePrefix } from '../../../../ibc/core/commitment/v1/commitment';\nexport const protobufPackage = 'ibc.core.connection.v1';\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseConnectionEnd = { clientId: '', state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseIdentifiedConnection = {\n    id: '',\n    clientId: '',\n    state: 0,\n    delayPeriod: 0\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { clientId: '', connectionId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== '') {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientPaths = { paths: '' };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConnectionPaths = { clientId: '', paths: '' };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersion = { identifier: '', features: '' };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== '') {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = {\n    communityTax: '',\n    baseProposerReward: '',\n    bonusProposerReward: '',\n    withdrawAddrEnabled: false\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = {\n    title: '',\n    description: '',\n    recipient: ''\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: '',\n    height: 0\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: '',\n    description: '',\n    recipient: '',\n    amount: '',\n    deposit: ''\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = {\n    address: '',\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: ''\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: '',\n    period: 0\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: '',\n    height: 0,\n    period: 0\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = {\n    fromAddress: '',\n    toAddress: '',\n    endTime: 0,\n    delayed: false\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Channel, Packet } from '../../../../ibc/core/channel/v1/channel';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseMsgChannelOpenInit = { portId: '', signer: '' };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenTry = {\n    portId: '',\n    previousChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== '') {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenAck = {\n    portId: '',\n    channelId: '',\n    counterpartyChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== '') {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseInit = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgRecvPacket = { signer: '' };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    }\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    }\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    }\n};\nconst baseMsgAcknowledgement = { signer: '' };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenInit', data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenTry', data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenAck', data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenConfirm', data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseInit', data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseConfirm', data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'RecvPacket', data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Timeout', data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'TimeoutOnClose', data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Acknowledgement', data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = {\n    denom: '',\n    amount: 0,\n    sender: '',\n    receiver: ''\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedClientState, ClientConsensusStates, Params } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    }\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseIdentifiedGenesisMetadata = { clientId: '' };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Counterparty, Version } from '../../../../ibc/core/connection/v1/connection';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.connection.v1';\nconst baseMsgConnectionOpenInit = {\n    clientId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: '',\n    previousConnectionId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== '') {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: '',\n    counterpartyConnectionId: '',\n    signer: ''\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== '') {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: '', signer: '' };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenInit', data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenTry', data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenAck', data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenConfirm', data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from '../../../../confio/proofs';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.core.commitment.v1';\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePath = { keyPath: '' };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ics23';\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_HASH':\n            return HashOp.NO_HASH;\n        case 1:\n        case 'SHA256':\n            return HashOp.SHA256;\n        case 2:\n        case 'SHA512':\n            return HashOp.SHA512;\n        case 3:\n        case 'KECCAK':\n            return HashOp.KECCAK;\n        case 4:\n        case 'RIPEMD160':\n            return HashOp.RIPEMD160;\n        case 5:\n        case 'BITCOIN':\n            return HashOp.BITCOIN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return 'NO_HASH';\n        case HashOp.SHA256:\n            return 'SHA256';\n        case HashOp.SHA512:\n            return 'SHA512';\n        case HashOp.KECCAK:\n            return 'KECCAK';\n        case HashOp.RIPEMD160:\n            return 'RIPEMD160';\n        case HashOp.BITCOIN:\n            return 'BITCOIN';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_PREFIX':\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case 'VAR_PROTO':\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case 'VAR_RLP':\n            return LengthOp.VAR_RLP;\n        case 3:\n        case 'FIXED32_BIG':\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case 'FIXED32_LITTLE':\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case 'FIXED64_BIG':\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case 'FIXED64_LITTLE':\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case 'REQUIRE_32_BYTES':\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case 'REQUIRE_64_BYTES':\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return 'NO_PREFIX';\n        case LengthOp.VAR_PROTO:\n            return 'VAR_PROTO';\n        case LengthOp.VAR_RLP:\n            return 'VAR_RLP';\n        case LengthOp.FIXED32_BIG:\n            return 'FIXED32_BIG';\n        case LengthOp.FIXED32_LITTLE:\n            return 'FIXED32_LITTLE';\n        case LengthOp.FIXED64_BIG:\n            return 'FIXED64_BIG';\n        case LengthOp.FIXED64_LITTLE:\n            return 'FIXED64_LITTLE';\n        case LengthOp.REQUIRE_32_BYTES:\n            return 'REQUIRE_32_BYTES';\n        case LengthOp.REQUIRE_64_BYTES:\n            return 'REQUIRE_64_BYTES';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch ? BatchProof.toJSON(message.batch) : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    }\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    }\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    }\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Event } from '../../../../tendermint/abci/types';\nexport const protobufPackage = 'cosmos.base.abci.v1beta1';\nconst baseTxResponse = {\n    height: 0,\n    txhash: '',\n    codespace: '',\n    code: 0,\n    data: '',\n    rawLog: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: ''\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== '') {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== '') {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== '') {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== '') {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    }\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: '' };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseStringEvent = { type: '' };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseAttribute = { key: '', value: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseResult = { log: '' };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgData = { msgType: '' };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== '') {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = {\n    sourcePort: '',\n    sourceChannel: '',\n    sender: '',\n    receiver: '',\n    timeoutTimestamp: 0\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n"],"sourceRoot":""}