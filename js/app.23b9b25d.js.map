{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/google/protobuf/duration.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/htlc.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseMsgIssueDenom","id","schema","sender","symbol","mintRestricted","updateRestricted","MsgIssueDenom","encode","message","writer","Writer","uint32","string","bool","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","skipType","fromJSON","String","Boolean","toJSON","obj","fromPartial","baseMsgTransferNFT","denomId","uri","recipient","MsgTransferNFT","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgCreateHTLC","to","receiverOnOtherChain","senderOnOtherChain","hashLock","timestamp","timeLock","transfer","MsgCreateHTLC","amount","v","Coin","fork","ldelim","uint64","longToNumber","e","Number","map","baseMsgClaimHTLC","secret","MsgClaimHTLC","baseMsgFileMetadataResponse","MsgFileMetadataResponse","hash","bytes","bytesFromBase64","base64FromBytes","baseMsgMetadata","creator","description","image","owner","parent","sources","links","verifiedCredentialRef","did","from","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","globalThis","self","global","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseCoin","denom","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","AnconprotocolHTLCState","AnconprotocolSwapDirection","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryResource","cid","method","queryReadFile","queryGetHtlc","queryParams","queryAssetSupplies","queryAssetSupply","queryCollection","querySupply","queryDenoms","queryDenom","queryOwner","queryGetNft","tokenId","queryRead","queryReadWithPath","types","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","address","signAndBroadcast","msgs","fee","memo","msgEditNFT","typeUrl","msgBurnNFT","msgTransferNFT","msgIssueDenom","msgCreateHTLC","msgMintNFT","msgMetadata","msgFile","msgClaimHTLC","msgTransferDenom","queryClient","baseBaseNFT","BaseNFT","baseDenom","Denom","baseIDCollection","tokenIds","IDCollection","baseOwner","Owner","idCollections","baseCollection","Collection","nfts","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","ReadWithPath","ReadFile","Read","GetHtlc","AssetSupply","AssetSupplies","Params","Resource","Supply","Denoms","GetNft","_Structure","HTLC","AssetParam","SupplyLimit","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadWithPath","getReadFile","getRead","getGetHtlc","getAssetSupply","getAssetSupplies","getParams","getResource","getSupply","getOwner","getCollection","getDenom","getDenoms","getGetNft","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadWithPath","options","subscribe","all","QueryReadFile","QueryRead","pagination","nextKey","QueryGetHtlc","QueryAssetSupply","QueryAssetSupplies","QueryParams","QueryResource","QuerySupply","denom_id","QueryOwner","QueryCollection","QueryDenom","QueryDenoms","QueryGetNft","token_id","sendMsgEditNFT","msg","sendMsgBurnNFT","sendMsgTransferNFT","sendMsgIssueDenom","sendMsgCreateHTLC","sendMsgMintNFT","sendMsgMetadata","sendMsgFile","sendMsgClaimHTLC","sendMsgTransferDenom","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","baseDuration","seconds","nanos","Duration","int64","int32","HTLCState","SwapDirection","hTLCStateFromJSON","HTLC_STATE_OPEN","HTLC_STATE_COMPLETED","HTLC_STATE_REFUNDED","UNRECOGNIZED","hTLCStateToJSON","swapDirectionFromJSON","NONE","INCOMING","OUTGOING","swapDirectionToJSON","baseHTLC","expirationHeight","closedBlock","direction","baseAssetSupply","incomingSupply","outgoingSupply","currentSupply","timeLimitedCurrentSupply","timeElapsed","baseParams","assetParams","baseAssetParam","active","deputyAddress","fixedFee","minSwapAmount","maxSwapAmount","minBlockLock","maxBlockLock","supplyLimit","baseSupplyLimit","limit","timeLimited","timeBasedLimit","timePeriod"],"mappings":"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","file":"js/app.23b9b25d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgCreateHTLC = {\n    sender: '',\n    to: '',\n    receiverOnOtherChain: '',\n    senderOnOtherChain: '',\n    hashLock: '',\n    timestamp: 0,\n    timeLock: 0,\n    transfer: false\n};\nexport const MsgCreateHTLC = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.to !== '') {\n            writer.uint32(18).string(message.to);\n        }\n        if (message.receiverOnOtherChain !== '') {\n            writer.uint32(26).string(message.receiverOnOtherChain);\n        }\n        if (message.senderOnOtherChain !== '') {\n            writer.uint32(34).string(message.senderOnOtherChain);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.hashLock !== '') {\n            writer.uint32(50).string(message.hashLock);\n        }\n        if (message.timestamp !== 0) {\n            writer.uint32(56).uint64(message.timestamp);\n        }\n        if (message.timeLock !== 0) {\n            writer.uint32(64).uint64(message.timeLock);\n        }\n        if (message.transfer === true) {\n            writer.uint32(72).bool(message.transfer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateHTLC };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.to = reader.string();\n                    break;\n                case 3:\n                    message.receiverOnOtherChain = reader.string();\n                    break;\n                case 4:\n                    message.senderOnOtherChain = reader.string();\n                    break;\n                case 5:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.hashLock = reader.string();\n                    break;\n                case 7:\n                    message.timestamp = longToNumber(reader.uint64());\n                    break;\n                case 8:\n                    message.timeLock = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.transfer = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateHTLC };\n        message.amount = [];\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = '';\n        }\n        if (object.receiverOnOtherChain !== undefined && object.receiverOnOtherChain !== null) {\n            message.receiverOnOtherChain = String(object.receiverOnOtherChain);\n        }\n        else {\n            message.receiverOnOtherChain = '';\n        }\n        if (object.senderOnOtherChain !== undefined && object.senderOnOtherChain !== null) {\n            message.senderOnOtherChain = String(object.senderOnOtherChain);\n        }\n        else {\n            message.senderOnOtherChain = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.hashLock !== undefined && object.hashLock !== null) {\n            message.hashLock = String(object.hashLock);\n        }\n        else {\n            message.hashLock = '';\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = Number(object.timestamp);\n        }\n        else {\n            message.timestamp = 0;\n        }\n        if (object.timeLock !== undefined && object.timeLock !== null) {\n            message.timeLock = Number(object.timeLock);\n        }\n        else {\n            message.timeLock = 0;\n        }\n        if (object.transfer !== undefined && object.transfer !== null) {\n            message.transfer = Boolean(object.transfer);\n        }\n        else {\n            message.transfer = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.to !== undefined && (obj.to = message.to);\n        message.receiverOnOtherChain !== undefined && (obj.receiverOnOtherChain = message.receiverOnOtherChain);\n        message.senderOnOtherChain !== undefined && (obj.senderOnOtherChain = message.senderOnOtherChain);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.hashLock !== undefined && (obj.hashLock = message.hashLock);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        message.timeLock !== undefined && (obj.timeLock = message.timeLock);\n        message.transfer !== undefined && (obj.transfer = message.transfer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateHTLC };\n        message.amount = [];\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = '';\n        }\n        if (object.receiverOnOtherChain !== undefined && object.receiverOnOtherChain !== null) {\n            message.receiverOnOtherChain = object.receiverOnOtherChain;\n        }\n        else {\n            message.receiverOnOtherChain = '';\n        }\n        if (object.senderOnOtherChain !== undefined && object.senderOnOtherChain !== null) {\n            message.senderOnOtherChain = object.senderOnOtherChain;\n        }\n        else {\n            message.senderOnOtherChain = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.hashLock !== undefined && object.hashLock !== null) {\n            message.hashLock = object.hashLock;\n        }\n        else {\n            message.hashLock = '';\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = 0;\n        }\n        if (object.timeLock !== undefined && object.timeLock !== null) {\n            message.timeLock = object.timeLock;\n        }\n        else {\n            message.timeLock = 0;\n        }\n        if (object.transfer !== undefined && object.transfer !== null) {\n            message.transfer = object.transfer;\n        }\n        else {\n            message.transfer = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateHTLCResponse = { id: '' };\nexport const MsgCreateHTLCResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateHTLCResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateHTLCResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateHTLCResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimHTLC = { sender: '', id: '', secret: '' };\nexport const MsgClaimHTLC = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.id !== '') {\n            writer.uint32(18).string(message.id);\n        }\n        if (message.secret !== '') {\n            writer.uint32(26).string(message.secret);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimHTLC };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.id = reader.string();\n                    break;\n                case 3:\n                    message.secret = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimHTLC };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.secret !== undefined && object.secret !== null) {\n            message.secret = String(object.secret);\n        }\n        else {\n            message.secret = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.id !== undefined && (obj.id = message.id);\n        message.secret !== undefined && (obj.secret = message.secret);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimHTLC };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.secret !== undefined && object.secret !== null) {\n            message.secret = object.secret;\n        }\n        else {\n            message.secret = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimHTLCResponse = {};\nexport const MsgClaimHTLCResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimHTLCResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgClaimHTLCResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgClaimHTLCResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n    CreateHTLC(request) {\n        const data = MsgCreateHTLC.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'CreateHTLC', data);\n        return promise.then((data) => MsgCreateHTLCResponse.decode(new Reader(data)));\n    }\n    ClaimHTLC(request) {\n        const data = MsgClaimHTLC.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ClaimHTLC', data);\n        return promise.then((data) => MsgClaimHTLCResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - HTLC_STATE_OPEN: HTLC_STATE_OPEN defines an open state.\n - HTLC_STATE_COMPLETED: HTLC_STATE_COMPLETED defines a completed state.\n - HTLC_STATE_REFUNDED: HTLC_STATE_REFUNDED defines a refunded state.\n*/\nexport var AnconprotocolHTLCState;\n(function (AnconprotocolHTLCState) {\n    AnconprotocolHTLCState[\"HTLC_STATE_OPEN\"] = \"HTLC_STATE_OPEN\";\n    AnconprotocolHTLCState[\"HTLC_STATE_COMPLETED\"] = \"HTLC_STATE_COMPLETED\";\n    AnconprotocolHTLCState[\"HTLC_STATE_REFUNDED\"] = \"HTLC_STATE_REFUNDED\";\n})(AnconprotocolHTLCState || (AnconprotocolHTLCState = {}));\n/**\n* - NONE: NONE defines an htlt none direction.\n - INCOMING: INCOMING defines an htlt incoming direction.\n - OUTGOING: OUTGOING defines an htlt outgoing direction.\n*/\nexport var AnconprotocolSwapDirection;\n(function (AnconprotocolSwapDirection) {\n    AnconprotocolSwapDirection[\"NONE\"] = \"NONE\";\n    AnconprotocolSwapDirection[\"INCOMING\"] = \"INCOMING\";\n    AnconprotocolSwapDirection[\"OUTGOING\"] = \"OUTGOING\";\n})(AnconprotocolSwapDirection || (AnconprotocolSwapDirection = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryReadFile\n       * @summary additional handler that uses ReadFile\n      Queries a list of resource items.\n       * @request GET:/ancon/file/{cid}/{path}\n       */\n        this.queryReadFile = (cid, path, params = {}) => this.request({\n            path: `/ancon/file/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetHtlc\n         * @summary HTLC queries the HTLC by the specified hash lock\n         * @request GET:/ancon/htlc/htlcs/{id}\n         */\n        this.queryGetHtlc = (id, params = {}) => this.request({\n            path: `/ancon/htlc/htlcs/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the htlc parameters\n         * @request GET:/ancon/htlc/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ancon/htlc/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAssetSupplies\n         * @summary AssetSupplies queries the supplies of all assets\n         * @request GET:/ancon/htlc/supplies\n         */\n        this.queryAssetSupplies = (params = {}) => this.request({\n            path: `/ancon/htlc/supplies`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAssetSupply\n         * @summary AssetSupply queries the supply of an asset\n         * @request GET:/ancon/htlc/supplies/{denom}\n         */\n        this.queryAssetSupply = (denom, params = {}) => this.request({\n            path: `/ancon/htlc/supplies/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupply\n         * @summary Supply queries the total supply of a given denom or owner\n         * @request GET:/ancon/nft/collections/{denomId}/supply\n         */\n        this.querySupply = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}/supply`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRead\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}\n         */\n        this.queryRead = (cid, query, params = {}) => this.request({\n            path: `/ancon/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nimport { MsgCreateHTLC } from \"./types/anconprotocol/tx\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgClaimHTLC } from \"./types/anconprotocol/tx\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateHTLC\", MsgCreateHTLC],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimHTLC\", MsgClaimHTLC],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n        msgCreateHTLC: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateHTLC\", value: data }),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgClaimHTLC: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimHTLC\", value: data }),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '' };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HTLC } from \"./module/types/anconprotocol/htlc\";\nimport { AssetSupply } from \"./module/types/anconprotocol/htlc\";\nimport { Params } from \"./module/types/anconprotocol/htlc\";\nimport { AssetParam } from \"./module/types/anconprotocol/htlc\";\nimport { SupplyLimit } from \"./module/types/anconprotocol/htlc\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { HTLC, AssetSupply, Params, AssetParam, SupplyLimit, BaseNFT, Denom, IDCollection, Owner, Collection, MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadWithPath: {},\n        ReadFile: {},\n        Read: {},\n        GetHtlc: {},\n        AssetSupply: {},\n        AssetSupplies: {},\n        Params: {},\n        Resource: {},\n        Supply: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        _Structure: {\n            HTLC: getStructure(HTLC.fromPartial({})),\n            AssetSupply: getStructure(AssetSupply.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            AssetParam: getStructure(AssetParam.fromPartial({})),\n            SupplyLimit: getStructure(SupplyLimit.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getReadFile: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadFile[JSON.stringify(params)] ?? {};\n        },\n        getRead: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Read[JSON.stringify(params)] ?? {};\n        },\n        getGetHtlc: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetHtlc[JSON.stringify(params)] ?? {};\n        },\n        getAssetSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AssetSupply[JSON.stringify(params)] ?? {};\n        },\n        getAssetSupplies: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AssetSupplies[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Supply[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadFile({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadFile(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadFile', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadFile', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadFile']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadFile', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRead({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRead(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRead(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Read', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRead', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRead']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRead', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetHtlc({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetHtlc(key.id)).data;\n                commit('QUERY', { query: 'GetHtlc', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetHtlc', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetHtlc']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetHtlc', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAssetSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAssetSupply(key.denom)).data;\n                commit('QUERY', { query: 'AssetSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAssetSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAssetSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAssetSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAssetSupplies({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAssetSupplies()).data;\n                commit('QUERY', { query: 'AssetSupplies', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAssetSupplies', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAssetSupplies']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAssetSupplies', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupply(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySupply(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Supply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateHTLC({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateHTLC(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateHTLC:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateHTLC:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgClaimHTLC({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimHTLC(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimHTLC:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimHTLC:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateHTLC({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateHTLC(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateHTLC:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateHTLC:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgClaimHTLC({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimHTLC(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimHTLC:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimHTLC:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../cosmos/base/v1beta1/coin';\nimport { Duration } from '../google/protobuf/duration';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\n/** HTLCState defines the state of an HTLC */\nexport var HTLCState;\n(function (HTLCState) {\n    /** HTLC_STATE_OPEN - HTLC_STATE_OPEN defines an open state. */\n    HTLCState[HTLCState[\"HTLC_STATE_OPEN\"] = 0] = \"HTLC_STATE_OPEN\";\n    /** HTLC_STATE_COMPLETED - HTLC_STATE_COMPLETED defines a completed state. */\n    HTLCState[HTLCState[\"HTLC_STATE_COMPLETED\"] = 1] = \"HTLC_STATE_COMPLETED\";\n    /** HTLC_STATE_REFUNDED - HTLC_STATE_REFUNDED defines a refunded state. */\n    HTLCState[HTLCState[\"HTLC_STATE_REFUNDED\"] = 2] = \"HTLC_STATE_REFUNDED\";\n    HTLCState[HTLCState[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HTLCState || (HTLCState = {}));\nexport function hTLCStateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'HTLC_STATE_OPEN':\n            return HTLCState.HTLC_STATE_OPEN;\n        case 1:\n        case 'HTLC_STATE_COMPLETED':\n            return HTLCState.HTLC_STATE_COMPLETED;\n        case 2:\n        case 'HTLC_STATE_REFUNDED':\n            return HTLCState.HTLC_STATE_REFUNDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return HTLCState.UNRECOGNIZED;\n    }\n}\nexport function hTLCStateToJSON(object) {\n    switch (object) {\n        case HTLCState.HTLC_STATE_OPEN:\n            return 'HTLC_STATE_OPEN';\n        case HTLCState.HTLC_STATE_COMPLETED:\n            return 'HTLC_STATE_COMPLETED';\n        case HTLCState.HTLC_STATE_REFUNDED:\n            return 'HTLC_STATE_REFUNDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SwapDirection defines the direction of an HTLT */\nexport var SwapDirection;\n(function (SwapDirection) {\n    /** NONE - NONE defines an htlt none direction. */\n    SwapDirection[SwapDirection[\"NONE\"] = 0] = \"NONE\";\n    /** INCOMING - INCOMING defines an htlt incoming direction. */\n    SwapDirection[SwapDirection[\"INCOMING\"] = 1] = \"INCOMING\";\n    /** OUTGOING - OUTGOING defines an htlt outgoing direction. */\n    SwapDirection[SwapDirection[\"OUTGOING\"] = 2] = \"OUTGOING\";\n    SwapDirection[SwapDirection[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SwapDirection || (SwapDirection = {}));\nexport function swapDirectionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NONE':\n            return SwapDirection.NONE;\n        case 1:\n        case 'INCOMING':\n            return SwapDirection.INCOMING;\n        case 2:\n        case 'OUTGOING':\n            return SwapDirection.OUTGOING;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SwapDirection.UNRECOGNIZED;\n    }\n}\nexport function swapDirectionToJSON(object) {\n    switch (object) {\n        case SwapDirection.NONE:\n            return 'NONE';\n        case SwapDirection.INCOMING:\n            return 'INCOMING';\n        case SwapDirection.OUTGOING:\n            return 'OUTGOING';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHTLC = {\n    id: '',\n    sender: '',\n    to: '',\n    receiverOnOtherChain: '',\n    senderOnOtherChain: '',\n    hashLock: '',\n    secret: '',\n    timestamp: 0,\n    expirationHeight: 0,\n    state: 0,\n    closedBlock: 0,\n    transfer: false,\n    direction: 0\n};\nexport const HTLC = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.to !== '') {\n            writer.uint32(26).string(message.to);\n        }\n        if (message.receiverOnOtherChain !== '') {\n            writer.uint32(34).string(message.receiverOnOtherChain);\n        }\n        if (message.senderOnOtherChain !== '') {\n            writer.uint32(42).string(message.senderOnOtherChain);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.hashLock !== '') {\n            writer.uint32(58).string(message.hashLock);\n        }\n        if (message.secret !== '') {\n            writer.uint32(66).string(message.secret);\n        }\n        if (message.timestamp !== 0) {\n            writer.uint32(72).uint64(message.timestamp);\n        }\n        if (message.expirationHeight !== 0) {\n            writer.uint32(80).uint64(message.expirationHeight);\n        }\n        if (message.state !== 0) {\n            writer.uint32(88).int32(message.state);\n        }\n        if (message.closedBlock !== 0) {\n            writer.uint32(96).uint64(message.closedBlock);\n        }\n        if (message.transfer === true) {\n            writer.uint32(104).bool(message.transfer);\n        }\n        if (message.direction !== 0) {\n            writer.uint32(112).int32(message.direction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHTLC };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.to = reader.string();\n                    break;\n                case 4:\n                    message.receiverOnOtherChain = reader.string();\n                    break;\n                case 5:\n                    message.senderOnOtherChain = reader.string();\n                    break;\n                case 6:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.hashLock = reader.string();\n                    break;\n                case 8:\n                    message.secret = reader.string();\n                    break;\n                case 9:\n                    message.timestamp = longToNumber(reader.uint64());\n                    break;\n                case 10:\n                    message.expirationHeight = longToNumber(reader.uint64());\n                    break;\n                case 11:\n                    message.state = reader.int32();\n                    break;\n                case 12:\n                    message.closedBlock = longToNumber(reader.uint64());\n                    break;\n                case 13:\n                    message.transfer = reader.bool();\n                    break;\n                case 14:\n                    message.direction = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHTLC };\n        message.amount = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = '';\n        }\n        if (object.receiverOnOtherChain !== undefined && object.receiverOnOtherChain !== null) {\n            message.receiverOnOtherChain = String(object.receiverOnOtherChain);\n        }\n        else {\n            message.receiverOnOtherChain = '';\n        }\n        if (object.senderOnOtherChain !== undefined && object.senderOnOtherChain !== null) {\n            message.senderOnOtherChain = String(object.senderOnOtherChain);\n        }\n        else {\n            message.senderOnOtherChain = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.hashLock !== undefined && object.hashLock !== null) {\n            message.hashLock = String(object.hashLock);\n        }\n        else {\n            message.hashLock = '';\n        }\n        if (object.secret !== undefined && object.secret !== null) {\n            message.secret = String(object.secret);\n        }\n        else {\n            message.secret = '';\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = Number(object.timestamp);\n        }\n        else {\n            message.timestamp = 0;\n        }\n        if (object.expirationHeight !== undefined && object.expirationHeight !== null) {\n            message.expirationHeight = Number(object.expirationHeight);\n        }\n        else {\n            message.expirationHeight = 0;\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = hTLCStateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.closedBlock !== undefined && object.closedBlock !== null) {\n            message.closedBlock = Number(object.closedBlock);\n        }\n        else {\n            message.closedBlock = 0;\n        }\n        if (object.transfer !== undefined && object.transfer !== null) {\n            message.transfer = Boolean(object.transfer);\n        }\n        else {\n            message.transfer = false;\n        }\n        if (object.direction !== undefined && object.direction !== null) {\n            message.direction = swapDirectionFromJSON(object.direction);\n        }\n        else {\n            message.direction = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.to !== undefined && (obj.to = message.to);\n        message.receiverOnOtherChain !== undefined && (obj.receiverOnOtherChain = message.receiverOnOtherChain);\n        message.senderOnOtherChain !== undefined && (obj.senderOnOtherChain = message.senderOnOtherChain);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.hashLock !== undefined && (obj.hashLock = message.hashLock);\n        message.secret !== undefined && (obj.secret = message.secret);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        message.expirationHeight !== undefined && (obj.expirationHeight = message.expirationHeight);\n        message.state !== undefined && (obj.state = hTLCStateToJSON(message.state));\n        message.closedBlock !== undefined && (obj.closedBlock = message.closedBlock);\n        message.transfer !== undefined && (obj.transfer = message.transfer);\n        message.direction !== undefined && (obj.direction = swapDirectionToJSON(message.direction));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHTLC };\n        message.amount = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = '';\n        }\n        if (object.receiverOnOtherChain !== undefined && object.receiverOnOtherChain !== null) {\n            message.receiverOnOtherChain = object.receiverOnOtherChain;\n        }\n        else {\n            message.receiverOnOtherChain = '';\n        }\n        if (object.senderOnOtherChain !== undefined && object.senderOnOtherChain !== null) {\n            message.senderOnOtherChain = object.senderOnOtherChain;\n        }\n        else {\n            message.senderOnOtherChain = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.hashLock !== undefined && object.hashLock !== null) {\n            message.hashLock = object.hashLock;\n        }\n        else {\n            message.hashLock = '';\n        }\n        if (object.secret !== undefined && object.secret !== null) {\n            message.secret = object.secret;\n        }\n        else {\n            message.secret = '';\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = 0;\n        }\n        if (object.expirationHeight !== undefined && object.expirationHeight !== null) {\n            message.expirationHeight = object.expirationHeight;\n        }\n        else {\n            message.expirationHeight = 0;\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.closedBlock !== undefined && object.closedBlock !== null) {\n            message.closedBlock = object.closedBlock;\n        }\n        else {\n            message.closedBlock = 0;\n        }\n        if (object.transfer !== undefined && object.transfer !== null) {\n            message.transfer = object.transfer;\n        }\n        else {\n            message.transfer = false;\n        }\n        if (object.direction !== undefined && object.direction !== null) {\n            message.direction = object.direction;\n        }\n        else {\n            message.direction = 0;\n        }\n        return message;\n    }\n};\nconst baseAssetSupply = {};\nexport const AssetSupply = {\n    encode(message, writer = Writer.create()) {\n        if (message.incomingSupply !== undefined) {\n            Coin.encode(message.incomingSupply, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.outgoingSupply !== undefined) {\n            Coin.encode(message.outgoingSupply, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.currentSupply !== undefined) {\n            Coin.encode(message.currentSupply, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.timeLimitedCurrentSupply !== undefined) {\n            Coin.encode(message.timeLimitedCurrentSupply, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timeElapsed !== undefined) {\n            Duration.encode(message.timeElapsed, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAssetSupply };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.incomingSupply = Coin.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.outgoingSupply = Coin.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.currentSupply = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.timeLimitedCurrentSupply = Coin.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timeElapsed = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAssetSupply };\n        if (object.incomingSupply !== undefined && object.incomingSupply !== null) {\n            message.incomingSupply = Coin.fromJSON(object.incomingSupply);\n        }\n        else {\n            message.incomingSupply = undefined;\n        }\n        if (object.outgoingSupply !== undefined && object.outgoingSupply !== null) {\n            message.outgoingSupply = Coin.fromJSON(object.outgoingSupply);\n        }\n        else {\n            message.outgoingSupply = undefined;\n        }\n        if (object.currentSupply !== undefined && object.currentSupply !== null) {\n            message.currentSupply = Coin.fromJSON(object.currentSupply);\n        }\n        else {\n            message.currentSupply = undefined;\n        }\n        if (object.timeLimitedCurrentSupply !== undefined && object.timeLimitedCurrentSupply !== null) {\n            message.timeLimitedCurrentSupply = Coin.fromJSON(object.timeLimitedCurrentSupply);\n        }\n        else {\n            message.timeLimitedCurrentSupply = undefined;\n        }\n        if (object.timeElapsed !== undefined && object.timeElapsed !== null) {\n            message.timeElapsed = Duration.fromJSON(object.timeElapsed);\n        }\n        else {\n            message.timeElapsed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.incomingSupply !== undefined && (obj.incomingSupply = message.incomingSupply ? Coin.toJSON(message.incomingSupply) : undefined);\n        message.outgoingSupply !== undefined && (obj.outgoingSupply = message.outgoingSupply ? Coin.toJSON(message.outgoingSupply) : undefined);\n        message.currentSupply !== undefined && (obj.currentSupply = message.currentSupply ? Coin.toJSON(message.currentSupply) : undefined);\n        message.timeLimitedCurrentSupply !== undefined &&\n            (obj.timeLimitedCurrentSupply = message.timeLimitedCurrentSupply ? Coin.toJSON(message.timeLimitedCurrentSupply) : undefined);\n        message.timeElapsed !== undefined && (obj.timeElapsed = message.timeElapsed ? Duration.toJSON(message.timeElapsed) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAssetSupply };\n        if (object.incomingSupply !== undefined && object.incomingSupply !== null) {\n            message.incomingSupply = Coin.fromPartial(object.incomingSupply);\n        }\n        else {\n            message.incomingSupply = undefined;\n        }\n        if (object.outgoingSupply !== undefined && object.outgoingSupply !== null) {\n            message.outgoingSupply = Coin.fromPartial(object.outgoingSupply);\n        }\n        else {\n            message.outgoingSupply = undefined;\n        }\n        if (object.currentSupply !== undefined && object.currentSupply !== null) {\n            message.currentSupply = Coin.fromPartial(object.currentSupply);\n        }\n        else {\n            message.currentSupply = undefined;\n        }\n        if (object.timeLimitedCurrentSupply !== undefined && object.timeLimitedCurrentSupply !== null) {\n            message.timeLimitedCurrentSupply = Coin.fromPartial(object.timeLimitedCurrentSupply);\n        }\n        else {\n            message.timeLimitedCurrentSupply = undefined;\n        }\n        if (object.timeElapsed !== undefined && object.timeElapsed !== null) {\n            message.timeElapsed = Duration.fromPartial(object.timeElapsed);\n        }\n        else {\n            message.timeElapsed = undefined;\n        }\n        return message;\n    }\n};\nconst baseParams = {};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.assetParams) {\n            AssetParam.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.assetParams = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.assetParams.push(AssetParam.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.assetParams = [];\n        if (object.assetParams !== undefined && object.assetParams !== null) {\n            for (const e of object.assetParams) {\n                message.assetParams.push(AssetParam.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.assetParams) {\n            obj.assetParams = message.assetParams.map((e) => (e ? AssetParam.toJSON(e) : undefined));\n        }\n        else {\n            obj.assetParams = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.assetParams = [];\n        if (object.assetParams !== undefined && object.assetParams !== null) {\n            for (const e of object.assetParams) {\n                message.assetParams.push(AssetParam.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseAssetParam = {\n    denom: '',\n    active: false,\n    deputyAddress: '',\n    fixedFee: '',\n    minSwapAmount: '',\n    maxSwapAmount: '',\n    minBlockLock: 0,\n    maxBlockLock: 0\n};\nexport const AssetParam = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.supplyLimit !== undefined) {\n            SupplyLimit.encode(message.supplyLimit, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.active === true) {\n            writer.uint32(24).bool(message.active);\n        }\n        if (message.deputyAddress !== '') {\n            writer.uint32(34).string(message.deputyAddress);\n        }\n        if (message.fixedFee !== '') {\n            writer.uint32(42).string(message.fixedFee);\n        }\n        if (message.minSwapAmount !== '') {\n            writer.uint32(50).string(message.minSwapAmount);\n        }\n        if (message.maxSwapAmount !== '') {\n            writer.uint32(58).string(message.maxSwapAmount);\n        }\n        if (message.minBlockLock !== 0) {\n            writer.uint32(64).uint64(message.minBlockLock);\n        }\n        if (message.maxBlockLock !== 0) {\n            writer.uint32(72).uint64(message.maxBlockLock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAssetParam };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.supplyLimit = SupplyLimit.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.active = reader.bool();\n                    break;\n                case 4:\n                    message.deputyAddress = reader.string();\n                    break;\n                case 5:\n                    message.fixedFee = reader.string();\n                    break;\n                case 6:\n                    message.minSwapAmount = reader.string();\n                    break;\n                case 7:\n                    message.maxSwapAmount = reader.string();\n                    break;\n                case 8:\n                    message.minBlockLock = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.maxBlockLock = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAssetParam };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.supplyLimit !== undefined && object.supplyLimit !== null) {\n            message.supplyLimit = SupplyLimit.fromJSON(object.supplyLimit);\n        }\n        else {\n            message.supplyLimit = undefined;\n        }\n        if (object.active !== undefined && object.active !== null) {\n            message.active = Boolean(object.active);\n        }\n        else {\n            message.active = false;\n        }\n        if (object.deputyAddress !== undefined && object.deputyAddress !== null) {\n            message.deputyAddress = String(object.deputyAddress);\n        }\n        else {\n            message.deputyAddress = '';\n        }\n        if (object.fixedFee !== undefined && object.fixedFee !== null) {\n            message.fixedFee = String(object.fixedFee);\n        }\n        else {\n            message.fixedFee = '';\n        }\n        if (object.minSwapAmount !== undefined && object.minSwapAmount !== null) {\n            message.minSwapAmount = String(object.minSwapAmount);\n        }\n        else {\n            message.minSwapAmount = '';\n        }\n        if (object.maxSwapAmount !== undefined && object.maxSwapAmount !== null) {\n            message.maxSwapAmount = String(object.maxSwapAmount);\n        }\n        else {\n            message.maxSwapAmount = '';\n        }\n        if (object.minBlockLock !== undefined && object.minBlockLock !== null) {\n            message.minBlockLock = Number(object.minBlockLock);\n        }\n        else {\n            message.minBlockLock = 0;\n        }\n        if (object.maxBlockLock !== undefined && object.maxBlockLock !== null) {\n            message.maxBlockLock = Number(object.maxBlockLock);\n        }\n        else {\n            message.maxBlockLock = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.supplyLimit !== undefined && (obj.supplyLimit = message.supplyLimit ? SupplyLimit.toJSON(message.supplyLimit) : undefined);\n        message.active !== undefined && (obj.active = message.active);\n        message.deputyAddress !== undefined && (obj.deputyAddress = message.deputyAddress);\n        message.fixedFee !== undefined && (obj.fixedFee = message.fixedFee);\n        message.minSwapAmount !== undefined && (obj.minSwapAmount = message.minSwapAmount);\n        message.maxSwapAmount !== undefined && (obj.maxSwapAmount = message.maxSwapAmount);\n        message.minBlockLock !== undefined && (obj.minBlockLock = message.minBlockLock);\n        message.maxBlockLock !== undefined && (obj.maxBlockLock = message.maxBlockLock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAssetParam };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.supplyLimit !== undefined && object.supplyLimit !== null) {\n            message.supplyLimit = SupplyLimit.fromPartial(object.supplyLimit);\n        }\n        else {\n            message.supplyLimit = undefined;\n        }\n        if (object.active !== undefined && object.active !== null) {\n            message.active = object.active;\n        }\n        else {\n            message.active = false;\n        }\n        if (object.deputyAddress !== undefined && object.deputyAddress !== null) {\n            message.deputyAddress = object.deputyAddress;\n        }\n        else {\n            message.deputyAddress = '';\n        }\n        if (object.fixedFee !== undefined && object.fixedFee !== null) {\n            message.fixedFee = object.fixedFee;\n        }\n        else {\n            message.fixedFee = '';\n        }\n        if (object.minSwapAmount !== undefined && object.minSwapAmount !== null) {\n            message.minSwapAmount = object.minSwapAmount;\n        }\n        else {\n            message.minSwapAmount = '';\n        }\n        if (object.maxSwapAmount !== undefined && object.maxSwapAmount !== null) {\n            message.maxSwapAmount = object.maxSwapAmount;\n        }\n        else {\n            message.maxSwapAmount = '';\n        }\n        if (object.minBlockLock !== undefined && object.minBlockLock !== null) {\n            message.minBlockLock = object.minBlockLock;\n        }\n        else {\n            message.minBlockLock = 0;\n        }\n        if (object.maxBlockLock !== undefined && object.maxBlockLock !== null) {\n            message.maxBlockLock = object.maxBlockLock;\n        }\n        else {\n            message.maxBlockLock = 0;\n        }\n        return message;\n    }\n};\nconst baseSupplyLimit = { limit: '', timeLimited: false, timeBasedLimit: '' };\nexport const SupplyLimit = {\n    encode(message, writer = Writer.create()) {\n        if (message.limit !== '') {\n            writer.uint32(10).string(message.limit);\n        }\n        if (message.timeLimited === true) {\n            writer.uint32(16).bool(message.timeLimited);\n        }\n        if (message.timePeriod !== undefined) {\n            Duration.encode(message.timePeriod, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.timeBasedLimit !== '') {\n            writer.uint32(34).string(message.timeBasedLimit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupplyLimit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.limit = reader.string();\n                    break;\n                case 2:\n                    message.timeLimited = reader.bool();\n                    break;\n                case 3:\n                    message.timePeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.timeBasedLimit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupplyLimit };\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = String(object.limit);\n        }\n        else {\n            message.limit = '';\n        }\n        if (object.timeLimited !== undefined && object.timeLimited !== null) {\n            message.timeLimited = Boolean(object.timeLimited);\n        }\n        else {\n            message.timeLimited = false;\n        }\n        if (object.timePeriod !== undefined && object.timePeriod !== null) {\n            message.timePeriod = Duration.fromJSON(object.timePeriod);\n        }\n        else {\n            message.timePeriod = undefined;\n        }\n        if (object.timeBasedLimit !== undefined && object.timeBasedLimit !== null) {\n            message.timeBasedLimit = String(object.timeBasedLimit);\n        }\n        else {\n            message.timeBasedLimit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.timeLimited !== undefined && (obj.timeLimited = message.timeLimited);\n        message.timePeriod !== undefined && (obj.timePeriod = message.timePeriod ? Duration.toJSON(message.timePeriod) : undefined);\n        message.timeBasedLimit !== undefined && (obj.timeBasedLimit = message.timeBasedLimit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupplyLimit };\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = '';\n        }\n        if (object.timeLimited !== undefined && object.timeLimited !== null) {\n            message.timeLimited = object.timeLimited;\n        }\n        else {\n            message.timeLimited = false;\n        }\n        if (object.timePeriod !== undefined && object.timePeriod !== null) {\n            message.timePeriod = Duration.fromPartial(object.timePeriod);\n        }\n        else {\n            message.timePeriod = undefined;\n        }\n        if (object.timeBasedLimit !== undefined && object.timeBasedLimit !== null) {\n            message.timeBasedLimit = object.timeBasedLimit;\n        }\n        else {\n            message.timeBasedLimit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}