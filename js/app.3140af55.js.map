{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/royalty.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/did_registry.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseMsgCreateDid","creator","vanityName","MsgCreateDid","encode","message","writer","Writer","uint32","string","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","skipType","fromJSON","String","toJSON","obj","fromPartial","baseMsgUpdateDid","did","metadata","cid","MsgUpdateDid","baseMsgRevokeDid","MsgRevokeDid","baseMsgMintTrustedContent","MsgMintTrustedContent","baseMsgInitiateSwap","MsgInitiateSwap","baseMsgClaimSwap","MsgClaimSwap","baseMsgMintTrustedResource","MsgMintTrustedResource","baseMsgRoyaltyInfo","receiver","royaltyFeePercentage","metadataUri","denomId","MsgRoyaltyInfo","uint64","longToNumber","Number","baseMsgIssueDenom","id","schema","sender","symbol","mintRestricted","updateRestricted","MsgIssueDenom","bool","Boolean","baseMsgTransferNFT","uri","recipient","MsgTransferNFT","baseMsgCreateDIDOwner","owner","didKey","didWeb","MsgCreateDIDOwner","baseMsgCreateDIDOwnerResponse","MsgCreateDIDOwnerResponse","_","baseMsgChangeOwner","identity","newOwner","MsgChangeOwner","baseMsgGrantDelegate","delegate","delegateType","validity","MsgGrantDelegate","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","actor","MsgSetAttribute","bytes","bytesFromBase64","base64FromBytes","baseMsgSetAttributeResponse","MsgSetAttributeResponse","hash","baseMsgGrantAttribute","MsgGrantAttribute","baseMsgRevokeAttribute","MsgRevokeAttribute","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgFileMetadataResponse","MsgFileMetadataResponse","baseMsgMetadata","description","image","parent","sources","links","verifiedCredentialRef","from","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","globalThis","self","global","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","e","assign","encodeURIComponent","Array","isArray","rawQuery","filter","map","addQueryParam","params1","params2","Api","arguments","queryReadDelegate","method","queryIdentifyOwner","address","queryGetAttributes","queryCollection","queryDenoms","queryDenom","queryOwner","queryGetNft","tokenId","queryResource","queryReadRoyaltyInfo","price","queryReadWithPath","types","MissingWalletError","registry","Registry","defaultFee","amount","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgRevokeAttribute","typeUrl","msgEditNFT","msgRevokeDid","msgRoyaltyInfo","msgBurnNFT","msgGrantAttribute","msgChangeOwner","msgMintNFT","msgTransferNFT","msgTransferDenom","msgClaimSwap","msgFile","msgCreateDid","msgGrantDelegate","msgIssueDenom","msgUpdateDid","msgRevokeDelegate","msgMintTrustedResource","msgMintTrustedContent","msgInitiateSwap","msgMetadata","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","ReadRoyaltyInfo","ReadWithPath","IdentifyOwner","GetAttributes","Resource","ReadDelegate","Owner","Collection","Denom","Denoms","GetNft","_Structure","DIDOwner","Delegate","Change","Attribute","BaseNFT","IDCollection","QueryNonceRequest","QueryNonceResponse","QueryOwnersResponse","RoyaltyInfo","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadRoyaltyInfo","getReadWithPath","getIdentifyOwner","getGetAttributes","getResource","getReadDelegate","getOwner","getCollection","getDenom","getDenoms","getGetNft","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadRoyaltyInfo","options","subscribe","all","QueryReadWithPath","QueryIdentifyOwner","QueryGetAttributes","QueryResource","pagination","nextKey","QueryReadDelegate","QueryOwner","QueryCollection","denom_id","QueryDenom","QueryDenoms","QueryGetNft","token_id","sendMsgRevokeAttribute","msg","sendMsgEditNFT","sendMsgRevokeDid","sendMsgRoyaltyInfo","sendMsgBurnNFT","sendMsgGrantAttribute","sendMsgChangeOwner","sendMsgMintNFT","sendMsgTransferNFT","sendMsgTransferDenom","sendMsgClaimSwap","sendMsgFile","sendMsgCreateDid","sendMsgGrantDelegate","sendMsgIssueDenom","sendMsgUpdateDid","sendMsgRevokeDelegate","sendMsgMintTrustedResource","sendMsgMintTrustedContent","sendMsgInitiateSwap","sendMsgMetadata","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePageRequest","offset","limit","countTotal","PageRequest","basePageResponse","total","PageResponse","baseBaseNFT","baseDenom","baseIDCollection","tokenIds","v","baseOwner","idCollections","fork","ldelim","baseCollection","denom","nfts","baseRoyaltyInfo","updateCount","baseDIDOwner","didAncon","didWebDeactivated","baseDelegate","baseChange","previousChange","baseAttribute","baseQueryNonceRequest","baseQueryNonceResponse","baseQueryOwnersResponse"],"mappings":"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","file":"js/app.3140af55.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgCreateDid = { creator: '', vanityName: '' };\nexport const MsgCreateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(18).string(message.vanityName);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.vanityName = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDidResponse = { cid: '', did: '' };\nexport const MsgCreateDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.did !== undefined && (obj.did = message.did);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgUpdateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDidResponse = {};\nexport const MsgUpdateDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgRevokeDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDidResponse = {};\nexport const MsgRevokeDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeDidResponse };\n        return message;\n    }\n};\nconst baseMsgMintTrustedContent = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgMintTrustedContent = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContentResponse = {};\nexport const MsgMintTrustedContentResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContentResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        return message;\n    }\n};\nconst baseMsgInitiateSwap = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgInitiateSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwapResponse = {};\nexport const MsgInitiateSwapResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        return message;\n    }\n};\nconst baseMsgClaimSwap = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgClaimSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwapResponse = {};\nexport const MsgClaimSwapResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgClaimSwapResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgClaimSwapResponse };\n        return message;\n    }\n};\nconst baseMsgMintTrustedResource = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgMintTrustedResource = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResource };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResourceResponse = {};\nexport const MsgMintTrustedResourceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfo = { creator: '', receiver: '', royaltyFeePercentage: 0, metadataUri: '', denomId: '' };\nexport const MsgRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(34).string(message.metadataUri);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataUri = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfoResponse = { receiver: '', royaltyFeePercentage: 0, metadataUri: '' };\nexport const MsgRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(16).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(26).string(message.metadataUri);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.metadataUri = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = { identity: '', owner: '', previousChange: 0 };\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwner = { creator: '', owner: '', didKey: '', didWeb: '' };\nexport const MsgCreateDIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(26).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(34).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didKey = reader.string();\n                    break;\n                case 4:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwnerResponse = {};\nexport const MsgCreateDIDOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    }\n};\nconst baseMsgChangeOwner = { creator: '', identity: '', newOwner: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgGrantDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegateResponse = {};\nexport const MsgGrantDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.creator !== '') {\n            writer.uint32(26).string(message.creator);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(34).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(42).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.bytes();\n                    break;\n                case 5:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttribute = { identity: '', actor: '', creator: '', validity: 0 };\nexport const MsgGrantAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(48).uint64(message.validity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                case 6:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.validity !== undefined && (obj.validity = message.validity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttributeResponse = { ok: false };\nexport const MsgGrantAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.ok === true) {\n            writer.uint32(8).bool(message.ok);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ok = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = Boolean(object.ok);\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ok !== undefined && (obj.ok = message.ok);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = object.ok;\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgRevokeAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttributeResponse = {};\nexport const MsgRevokeAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateDid(request) {\n        const data = MsgCreateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'CreateDid', data);\n        return promise.then((data) => MsgCreateDidResponse.decode(new Reader(data)));\n    }\n    UpdateDid(request) {\n        const data = MsgUpdateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'UpdateDid', data);\n        return promise.then((data) => MsgUpdateDidResponse.decode(new Reader(data)));\n    }\n    RevokeDid(request) {\n        const data = MsgRevokeDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDid', data);\n        return promise.then((data) => MsgRevokeDidResponse.decode(new Reader(data)));\n    }\n    RoyaltyInfo(request) {\n        const data = MsgRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RoyaltyInfo', data);\n        return promise.then((data) => MsgRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    GrantDelegate(request) {\n        const data = MsgGrantDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantDelegate', data);\n        return promise.then((data) => MsgGrantDelegateResponse.decode(new Reader(data)));\n    }\n    GrantAttribute(request) {\n        const data = MsgGrantAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantAttribute', data);\n        return promise.then((data) => MsgGrantAttributeResponse.decode(new Reader(data)));\n    }\n    RevokeAttribute(request) {\n        const data = MsgRevokeAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeAttribute', data);\n        return promise.then((data) => MsgRevokeAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n    MintTrustedContent(request) {\n        const data = MsgMintTrustedContent.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedContent', data);\n        return promise.then((data) => MsgMintTrustedContentResponse.decode(new Reader(data)));\n    }\n    MintTrustedResource(request) {\n        const data = MsgMintTrustedResource.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedResource', data);\n        return promise.then((data) => MsgMintTrustedResourceResponse.decode(new Reader(data)));\n    }\n    InitiateSwap(request) {\n        const data = MsgInitiateSwap.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'InitiateSwap', data);\n        return promise.then((data) => MsgInitiateSwapResponse.decode(new Reader(data)));\n    }\n    ClaimSwap(request) {\n        const data = MsgClaimSwap.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ClaimSwap', data);\n        return promise.then((data) => MsgClaimSwapResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/did_registry.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryReadDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadRoyaltyInfo\n         * @summary ReadRoyaltyInfo\n         * @request GET:/ancon/royalty/{cid}/{price}\n         */\n        this.queryReadRoyaltyInfo = (cid, price, params = {}) => this.request({\n            path: `/ancon/royalty/${cid}/${price}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgRevokeAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDid } from \"./types/anconprotocol/tx\";\nimport { MsgRoyaltyInfo } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nimport { MsgGrantAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nimport { MsgClaimSwap } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgCreateDid } from \"./types/anconprotocol/tx\";\nimport { MsgGrantDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nimport { MsgUpdateDid } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedResource } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedContent } from \"./types/anconprotocol/tx\";\nimport { MsgInitiateSwap } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", MsgRevokeAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", MsgRevokeDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", MsgRoyaltyInfo],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", MsgGrantAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimSwap\", MsgClaimSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", MsgCreateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", MsgGrantDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", MsgUpdateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", MsgMintTrustedResource],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", MsgMintTrustedContent],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgInitiateSwap\", MsgInitiateSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgRevokeAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", value: data }),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n        msgRevokeDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", value: data }),\n        msgRoyaltyInfo: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n        msgGrantAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n        msgClaimSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimSwap\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgCreateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", value: data }),\n        msgGrantDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n        msgUpdateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", value: data }),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgMintTrustedResource: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", value: data }),\n        msgMintTrustedContent: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", value: data }),\n        msgInitiateSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgInitiateSwap\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { DIDOwner } from \"./module/types/anconprotocol/did_registry\";\nimport { Delegate } from \"./module/types/anconprotocol/did_registry\";\nimport { Change } from \"./module/types/anconprotocol/did_registry\";\nimport { Attribute } from \"./module/types/anconprotocol/did_registry\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { QueryNonceRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { RoyaltyInfo } from \"./module/types/anconprotocol/royalty\";\nimport { MsgCreateDIDOwner } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwnerResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttribute } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttributeResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { DIDOwner, Delegate, Change, Attribute, BaseNFT, Denom, IDCollection, Owner, Collection, QueryNonceRequest, QueryNonceResponse, QueryOwnersResponse, RoyaltyInfo, MsgCreateDIDOwner, MsgCreateDIDOwnerResponse, MsgSetAttribute, MsgSetAttributeResponse, MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadRoyaltyInfo: {},\n        ReadWithPath: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        ReadDelegate: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        _Structure: {\n            DIDOwner: getStructure(DIDOwner.fromPartial({})),\n            Delegate: getStructure(Delegate.fromPartial({})),\n            Change: getStructure(Change.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            QueryNonceRequest: getStructure(QueryNonceRequest.fromPartial({})),\n            QueryNonceResponse: getStructure(QueryNonceResponse.fromPartial({})),\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            RoyaltyInfo: getStructure(RoyaltyInfo.fromPartial({})),\n            MsgCreateDIDOwner: getStructure(MsgCreateDIDOwner.fromPartial({})),\n            MsgCreateDIDOwnerResponse: getStructure(MsgCreateDIDOwnerResponse.fromPartial({})),\n            MsgSetAttribute: getStructure(MsgSetAttribute.fromPartial({})),\n            MsgSetAttributeResponse: getStructure(MsgSetAttributeResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadRoyaltyInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadRoyaltyInfo[JSON.stringify(params)] ?? {};\n        },\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegate[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadRoyaltyInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadRoyaltyInfo(key.cid, key.price)).data;\n                commit('QUERY', { query: 'ReadRoyaltyInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadRoyaltyInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadRoyaltyInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadRoyaltyInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegate(key.id)).data;\n                commit('QUERY', { query: 'ReadDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgRevokeAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRoyaltyInfo({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgClaimSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedResource({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedContent({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgInitiateSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgInitiateSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRoyaltyInfo({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgClaimSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedResource({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedContent({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgInitiateSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgInitiateSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '' };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseRoyaltyInfo = { updateCount: 0, receiver: '', royaltyFeePercentage: 0, metadataUri: '', denomId: '' };\nexport const RoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.updateCount !== 0) {\n            writer.uint32(8).uint64(message.updateCount);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(34).string(message.metadataUri);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.updateCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataUri = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = Number(object.updateCount);\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.updateCount !== undefined && (obj.updateCount = message.updateCount);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = object.updateCount;\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseDIDOwner = { identity: '', owner: '', didAncon: '', didKey: '', didWeb: '', didWebDeactivated: '', vanityName: '' };\nexport const DIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didAncon !== '') {\n            writer.uint32(26).string(message.didAncon);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(34).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(42).string(message.didWeb);\n        }\n        if (message.didWebDeactivated !== '') {\n            writer.uint32(50).string(message.didWebDeactivated);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(58).string(message.vanityName);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didAncon = reader.string();\n                    break;\n                case 4:\n                    message.didKey = reader.string();\n                    break;\n                case 5:\n                    message.didWeb = reader.string();\n                    break;\n                case 6:\n                    message.didWebDeactivated = reader.string();\n                    break;\n                case 7:\n                    message.vanityName = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = String(object.didAncon);\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = String(object.didWebDeactivated);\n        }\n        else {\n            message.didWebDeactivated = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didAncon !== undefined && (obj.didAncon = message.didAncon);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        message.didWebDeactivated !== undefined && (obj.didWebDeactivated = message.didWebDeactivated);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = object.didAncon;\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = object.didWebDeactivated;\n        }\n        else {\n            message.didWebDeactivated = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    }\n};\nconst baseDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const Delegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseChange = { identity: '', owner: '', previousChange: 0 };\nexport const Change = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChange };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseAttribute = { identity: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(18).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(26).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.bytes();\n                    break;\n                case 3:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../cosmos/base/query/v1beta1/pagination';\nimport { Owner, Collection, Denom, BaseNFT } from '../anconprotocol/nft';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQueryReadRoyaltyInfo = { cid: '', price: '' };\nexport const QueryReadRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.price !== '') {\n            writer.uint32(18).string(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.price = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfoResponse = { receiver: '', royaltyAmount: 0 };\nexport const QueryReadRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyAmount !== 0) {\n            writer.uint32(16).uint64(message.royaltyAmount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyAmount = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = Number(object.royaltyAmount);\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyAmount !== undefined && (obj.royaltyAmount = message.royaltyAmount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = object.royaltyAmount;\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerRequest = { denomId: '', owner: '' };\nexport const QueryOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerResponse = {};\nexport const QueryOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== undefined) {\n            Owner.encode(message.owner, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = Owner.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromJSON(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner ? Owner.toJSON(message.owner) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromPartial(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionRequest = { denomId: '' };\nexport const QueryCollectionRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionResponse = {};\nexport const QueryCollectionResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.collection !== undefined) {\n            Collection.encode(message.collection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.collection = Collection.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromJSON(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.collection !== undefined && (obj.collection = message.collection ? Collection.toJSON(message.collection) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromPartial(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomRequest = { denomId: '' };\nexport const QueryDenomRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDenomResponse = {};\nexport const QueryDenomResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsRequest = {};\nexport const QueryDenomsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsResponse = {};\nexport const QueryDenomsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.denoms) {\n            Denom.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(Denom.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => (e ? Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryNFTRequest = { denomId: '', tokenId: '' };\nexport const QueryNFTRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(18).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNFTResponse = {};\nexport const QueryNFTResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nft !== undefined) {\n            BaseNFT.encode(message.nft, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nft = BaseNFT.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromJSON(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nft !== undefined && (obj.nft = message.nft ? BaseNFT.toJSON(message.nft) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromPartial(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateRequest = { id: '' };\nexport const QueryGetDelegateRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateResponse = {};\nexport const QueryGetDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadRoyaltyInfo(request) {\n        const data = QueryReadRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadRoyaltyInfo', data);\n        return promise.then((data) => QueryReadRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadDelegate(request) {\n        const data = QueryGetDelegateRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegate', data);\n        return promise.then((data) => QueryGetDelegateResponse.decode(new Reader(data)));\n    }\n    Owner(request) {\n        const data = QueryOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Owner', data);\n        return promise.then((data) => QueryOwnerResponse.decode(new Reader(data)));\n    }\n    Collection(request) {\n        const data = QueryCollectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Collection', data);\n        return promise.then((data) => QueryCollectionResponse.decode(new Reader(data)));\n    }\n    Denom(request) {\n        const data = QueryDenomRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denom', data);\n        return promise.then((data) => QueryDenomResponse.decode(new Reader(data)));\n    }\n    Denoms(request) {\n        const data = QueryDenomsRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denoms', data);\n        return promise.then((data) => QueryDenomsResponse.decode(new Reader(data)));\n    }\n    GetNft(request) {\n        const data = QueryNFTRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetNft', data);\n        return promise.then((data) => QueryNFTResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}