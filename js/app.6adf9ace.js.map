{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/royalty.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/did_registry.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseMsgCreateDid","creator","vanityName","didType","MsgCreateDid","encode","message","writer","Writer","uint32","string","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","skipType","fromJSON","String","toJSON","obj","fromPartial","baseMsgUpdateDid","did","metadata","cid","MsgUpdateDid","baseMsgRevokeDid","MsgRevokeDid","baseMsgMintTrustedContent","metadataRef","denomId","recipient","didOwner","lazyMint","price","v","MsgMintTrustedContent","bool","uint64","longToNumber","Boolean","Number","baseMsgMintSwap","destinationDenomId","MsgMintSwap","baseMsgInitiateSwap","MsgInitiateSwap","baseMsgClaimSwap","MsgClaimSwap","baseMsgClaimSwapResponse","id","MsgClaimSwapResponse","baseMsgMintTrustedResource","resourceWhitelistAccess","resourceLocation","MsgMintTrustedResource","e","map","baseMsgRoyaltyInfo","receiver","royaltyFeePercentage","MsgRoyaltyInfo","baseMsgIssueDenom","schema","sender","symbol","mintRestricted","updateRestricted","MsgIssueDenom","baseMsgTransferNFT","uri","MsgTransferNFT","baseMsgCreateDIDOwner","owner","didKey","didWeb","MsgCreateDIDOwner","baseMsgCreateDIDOwnerResponse","MsgCreateDIDOwnerResponse","_","baseMsgChangeOwner","identity","newOwner","MsgChangeOwner","baseMsgGrantDelegate","delegate","delegateType","validity","MsgGrantDelegate","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","actor","MsgSetAttribute","bytes","bytesFromBase64","base64FromBytes","baseMsgSetAttributeResponse","MsgSetAttributeResponse","hash","baseMsgGrantAttribute","MsgGrantAttribute","baseMsgRevokeAttribute","MsgRevokeAttribute","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgFileMetadataResponse","MsgFileMetadataResponse","baseMsgMetadata","description","image","parent","sources","links","verifiedCredentialRef","from","enableIpldForestAccess","factRef","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","globalThis","self","global","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryReadDelegate","method","queryIdentifyOwner","address","queryGetAttributes","queryGetDidKey","queryCollection","queryDenoms","queryDenom","queryOwner","queryGetNft","tokenId","queryResource","queryReadRoyaltyInfo","queryReadWithPath","queryResolveDidWeb","types","MissingWalletError","registry","Registry","defaultFee","amount","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgRevokeDelegate","typeUrl","msgMintNFT","msgRevokeAttribute","msgTransferNFT","msgInitiateSwap","msgMintTrustedContent","msgMintTrustedResource","msgRoyaltyInfo","msgGrantAttribute","msgEditNFT","msgBurnNFT","msgCreateDid","msgChangeOwner","msgFile","msgGrantDelegate","msgUpdateDid","msgIssueDenom","msgClaimSwap","msgRevokeDid","msgMetadata","msgTransferDenom","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","ReadRoyaltyInfo","ReadWithPath","IdentifyOwner","GetAttributes","Resource","ReadDelegate","Owner","Collection","Denom","Denoms","GetNft","ResolveDidWeb","GetDidKey","_Structure","Voucher","DIDOwner","DIDWebRoute","Delegate","Change","Attribute","BaseNFT","IDCollection","QueryReadDidKeyRequest","QueryReadDidKeyResponse","QueryNonceRequest","QueryNonceResponse","QueryOwnersResponse","RoyaltyInfo","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadRoyaltyInfo","getReadWithPath","getIdentifyOwner","getGetAttributes","getResource","getReadDelegate","getOwner","getCollection","getDenom","getDenoms","getGetNft","getResolveDidWeb","getGetDidKey","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadRoyaltyInfo","options","subscribe","all","QueryReadWithPath","QueryIdentifyOwner","QueryGetAttributes","QueryResource","pagination","nextKey","QueryReadDelegate","QueryOwner","QueryCollection","denom_id","QueryDenom","QueryDenoms","QueryGetNft","token_id","QueryResolveDidWeb","QueryGetDidKey","sendMsgRevokeDelegate","msg","sendMsgMintNFT","sendMsgRevokeAttribute","sendMsgTransferNFT","sendMsgInitiateSwap","sendMsgMintTrustedContent","sendMsgMintTrustedResource","sendMsgRoyaltyInfo","sendMsgGrantAttribute","sendMsgEditNFT","sendMsgBurnNFT","sendMsgCreateDid","sendMsgChangeOwner","sendMsgFile","sendMsgGrantDelegate","sendMsgUpdateDid","sendMsgIssueDenom","sendMsgClaimSwap","sendMsgRevokeDid","sendMsgMetadata","sendMsgTransferDenom","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePageRequest","offset","limit","countTotal","PageRequest","basePageResponse","total","PageResponse","baseBaseNFT","baseDenom","baseIDCollection","tokenIds","baseOwner","idCollections","fork","ldelim","baseCollection","denom","nfts","baseRoyaltyInfo","updateCount","metadataUri","baseVoucher","tokenName","tokenSymbol","didRecipient","baseDIDOwner","didAncon","didWebDeactivated","baseDIDWebRoute","route","baseDelegate","baseChange","previousChange","baseAttribute","baseQueryReadDidKeyRequest","baseQueryReadDidKeyResponse","baseQueryNonceRequest","baseQueryNonceResponse","baseQueryOwnersResponse"],"mappings":"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","file":"js/app.6adf9ace.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgCreateDid = { creator: '', vanityName: '', didType: '' };\nexport const MsgCreateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(18).string(message.vanityName);\n        }\n        if (message.didType !== '') {\n            writer.uint32(26).string(message.didType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.vanityName = reader.string();\n                    break;\n                case 3:\n                    message.didType = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = String(object.didType);\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        message.didType !== undefined && (obj.didType = message.didType);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = object.didType;\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDidResponse = { cid: '', did: '' };\nexport const MsgCreateDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.did !== undefined && (obj.did = message.did);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgUpdateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDidResponse = {};\nexport const MsgUpdateDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgRevokeDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDidResponse = { id: 0 };\nexport const MsgRevokeDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContent = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedContent = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(56).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(74).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(82).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(88).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.r = reader.string();\n                    break;\n                case 10:\n                    message.s = reader.string();\n                    break;\n                case 11:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContentResponse = { id: 0 };\nexport const MsgMintTrustedContentResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContentResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintSwap = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    destinationDenomId: '',\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.destinationDenomId !== '') {\n            writer.uint32(58).string(message.destinationDenomId);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(74).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(82).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(88).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.destinationDenomId = reader.string();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.r = reader.string();\n                    break;\n                case 10:\n                    message.s = reader.string();\n                    break;\n                case 11:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.destinationDenomId !== undefined && object.destinationDenomId !== null) {\n            message.destinationDenomId = String(object.destinationDenomId);\n        }\n        else {\n            message.destinationDenomId = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.destinationDenomId !== undefined && (obj.destinationDenomId = message.destinationDenomId);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.destinationDenomId !== undefined && object.destinationDenomId !== null) {\n            message.destinationDenomId = object.destinationDenomId;\n        }\n        else {\n            message.destinationDenomId = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwap = { creator: '' };\nexport const MsgInitiateSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwapResponse = { relayTo: 0, voucher: '', key: '' };\nexport const MsgInitiateSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.relayTo !== 0) {\n            writer.uint32(8).uint64(message.relayTo);\n        }\n        if (message.voucher !== '') {\n            writer.uint32(18).string(message.voucher);\n        }\n        if (message.key !== '') {\n            writer.uint32(26).string(message.key);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.relayTo = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voucher = reader.string();\n                    break;\n                case 3:\n                    message.key = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.relayTo !== undefined && object.relayTo !== null) {\n            message.relayTo = Number(object.relayTo);\n        }\n        else {\n            message.relayTo = 0;\n        }\n        if (object.voucher !== undefined && object.voucher !== null) {\n            message.voucher = String(object.voucher);\n        }\n        else {\n            message.voucher = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.relayTo !== undefined && (obj.relayTo = message.relayTo);\n        message.voucher !== undefined && (obj.voucher = message.voucher);\n        message.key !== undefined && (obj.key = message.key);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.relayTo !== undefined && object.relayTo !== null) {\n            message.relayTo = object.relayTo;\n        }\n        else {\n            message.relayTo = 0;\n        }\n        if (object.voucher !== undefined && object.voucher !== null) {\n            message.voucher = object.voucher;\n        }\n        else {\n            message.voucher = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwap = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgClaimSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwapResponse = { id: 0 };\nexport const MsgClaimSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResource = {\n    creator: '',\n    metadataRef: '',\n    didOwner: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    resourceWhitelistAccess: '',\n    resourceLocation: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedResource = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(26).string(message.didOwner);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(34).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(50).string(message.recipient);\n        }\n        for (const v of message.resourceWhitelistAccess) {\n            writer.uint32(58).string(v);\n        }\n        if (message.resourceLocation !== '') {\n            writer.uint32(66).string(message.resourceLocation);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(72).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(80).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(90).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(98).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(104).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.didOwner = reader.string();\n                    break;\n                case 4:\n                    message.denomId = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.recipient = reader.string();\n                    break;\n                case 7:\n                    message.resourceWhitelistAccess.push(reader.string());\n                    break;\n                case 8:\n                    message.resourceLocation = reader.string();\n                    break;\n                case 9:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 10:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 11:\n                    message.r = reader.string();\n                    break;\n                case 12:\n                    message.s = reader.string();\n                    break;\n                case 13:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(String(e));\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = String(object.resourceLocation);\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.resourceWhitelistAccess) {\n            obj.resourceWhitelistAccess = message.resourceWhitelistAccess.map((e) => e);\n        }\n        else {\n            obj.resourceWhitelistAccess = [];\n        }\n        message.resourceLocation !== undefined && (obj.resourceLocation = message.resourceLocation);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(e);\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = object.resourceLocation;\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResourceResponse = { id: 0 };\nexport const MsgMintTrustedResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfo = { creator: '', receiver: '', royaltyFeePercentage: 0, metadataRef: '', denomId: '' };\nexport const MsgRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(34).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataRef = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfoResponse = { receiver: '', royaltyFeePercentage: 0, metadataRef: '' };\nexport const MsgRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(16).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(26).string(message.metadataRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.metadataRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = { identity: '', owner: '', previousChange: 0 };\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwner = { creator: '', owner: '', didKey: '', didWeb: '' };\nexport const MsgCreateDIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(26).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(34).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didKey = reader.string();\n                    break;\n                case 4:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwnerResponse = {};\nexport const MsgCreateDIDOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    }\n};\nconst baseMsgChangeOwner = { creator: '', identity: '', newOwner: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgGrantDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegateResponse = {};\nexport const MsgGrantDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.creator !== '') {\n            writer.uint32(26).string(message.creator);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(34).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(42).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.bytes();\n                    break;\n                case 5:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttribute = { identity: '', actor: '', creator: '', validity: 0 };\nexport const MsgGrantAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(48).uint64(message.validity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                case 6:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.validity !== undefined && (obj.validity = message.validity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttributeResponse = { ok: false };\nexport const MsgGrantAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.ok === true) {\n            writer.uint32(8).bool(message.ok);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ok = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = Boolean(object.ok);\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ok !== undefined && (obj.ok = message.ok);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = object.ok;\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgRevokeAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttributeResponse = {};\nexport const MsgRevokeAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: '',\n    enableIpldForestAccess: false,\n    factRef: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        if (message.enableIpldForestAccess === true) {\n            writer.uint32(96).bool(message.enableIpldForestAccess);\n        }\n        if (message.factRef !== '') {\n            writer.uint32(106).string(message.factRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                case 12:\n                    message.enableIpldForestAccess = reader.bool();\n                    break;\n                case 13:\n                    message.factRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = Boolean(object.enableIpldForestAccess);\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = String(object.factRef);\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        message.enableIpldForestAccess !== undefined && (obj.enableIpldForestAccess = message.enableIpldForestAccess);\n        message.factRef !== undefined && (obj.factRef = message.factRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = object.enableIpldForestAccess;\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = object.factRef;\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateDid(request) {\n        const data = MsgCreateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'CreateDid', data);\n        return promise.then((data) => MsgCreateDidResponse.decode(new Reader(data)));\n    }\n    UpdateDid(request) {\n        const data = MsgUpdateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'UpdateDid', data);\n        return promise.then((data) => MsgUpdateDidResponse.decode(new Reader(data)));\n    }\n    RevokeDid(request) {\n        const data = MsgRevokeDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDid', data);\n        return promise.then((data) => MsgRevokeDidResponse.decode(new Reader(data)));\n    }\n    RoyaltyInfo(request) {\n        const data = MsgRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RoyaltyInfo', data);\n        return promise.then((data) => MsgRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    GrantDelegate(request) {\n        const data = MsgGrantDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantDelegate', data);\n        return promise.then((data) => MsgGrantDelegateResponse.decode(new Reader(data)));\n    }\n    GrantAttribute(request) {\n        const data = MsgGrantAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantAttribute', data);\n        return promise.then((data) => MsgGrantAttributeResponse.decode(new Reader(data)));\n    }\n    RevokeAttribute(request) {\n        const data = MsgRevokeAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeAttribute', data);\n        return promise.then((data) => MsgRevokeAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n    MintTrustedContent(request) {\n        const data = MsgMintTrustedContent.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedContent', data);\n        return promise.then((data) => MsgMintTrustedContentResponse.decode(new Reader(data)));\n    }\n    MintTrustedResource(request) {\n        const data = MsgMintTrustedResource.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedResource', data);\n        return promise.then((data) => MsgMintTrustedResourceResponse.decode(new Reader(data)));\n    }\n    InitiateSwap(request) {\n        const data = MsgInitiateSwap.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'InitiateSwap', data);\n        return promise.then((data) => MsgInitiateSwapResponse.decode(new Reader(data)));\n    }\n    MintSwap(request) {\n        const data = MsgMintTrustedContent.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintSwap', data);\n        return promise.then((data) => MsgMintTrustedContentResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/did_registry.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryReadDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetDidKey\n         * @request GET:/ancon/didregistry/{name}\n         */\n        this.queryGetDidKey = (name, params = {}) => this.request({\n            path: `/ancon/didregistry/${name}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadRoyaltyInfo\n         * @summary ReadRoyaltyInfo\n         * @request GET:/ancon/royalty/{cid}/{price}\n         */\n        this.queryReadRoyaltyInfo = (cid, price, params = {}) => this.request({\n            path: `/ancon/royalty/${cid}/${price}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResolveDidWeb\n         * @request GET:/user/{name}/did.json\n         */\n        this.queryResolveDidWeb = (name, params = {}) => this.request({\n            path: `/user/${name}/did.json`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nimport { MsgInitiateSwap } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedContent } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedResource } from \"./types/anconprotocol/tx\";\nimport { MsgRoyaltyInfo } from \"./types/anconprotocol/tx\";\nimport { MsgGrantAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nimport { MsgCreateDid } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgGrantDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgUpdateDid } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nimport { MsgClaimSwap } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDid } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", MsgRevokeAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgInitiateSwap\", MsgInitiateSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", MsgMintTrustedContent],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", MsgMintTrustedResource],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", MsgRoyaltyInfo],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", MsgGrantAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", MsgCreateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", MsgGrantDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", MsgUpdateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimSwap\", MsgClaimSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", MsgRevokeDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgRevokeAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", value: data }),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n        msgInitiateSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgInitiateSwap\", value: data }),\n        msgMintTrustedContent: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", value: data }),\n        msgMintTrustedResource: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", value: data }),\n        msgRoyaltyInfo: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", value: data }),\n        msgGrantAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", value: data }),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n        msgCreateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgGrantDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", value: data }),\n        msgUpdateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n        msgClaimSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimSwap\", value: data }),\n        msgRevokeDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Voucher } from \"./module/types/anconprotocol/did_registry\";\nimport { DIDOwner } from \"./module/types/anconprotocol/did_registry\";\nimport { DIDWebRoute } from \"./module/types/anconprotocol/did_registry\";\nimport { Delegate } from \"./module/types/anconprotocol/did_registry\";\nimport { Change } from \"./module/types/anconprotocol/did_registry\";\nimport { Attribute } from \"./module/types/anconprotocol/did_registry\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { QueryReadDidKeyRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryReadDidKeyResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { RoyaltyInfo } from \"./module/types/anconprotocol/royalty\";\nimport { MsgMintSwap } from \"./module/types/anconprotocol/tx\";\nimport { MsgClaimSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwner } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwnerResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttribute } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttributeResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { Voucher, DIDOwner, DIDWebRoute, Delegate, Change, Attribute, BaseNFT, Denom, IDCollection, Owner, Collection, QueryReadDidKeyRequest, QueryReadDidKeyResponse, QueryNonceRequest, QueryNonceResponse, QueryOwnersResponse, RoyaltyInfo, MsgMintSwap, MsgClaimSwapResponse, MsgCreateDIDOwner, MsgCreateDIDOwnerResponse, MsgSetAttribute, MsgSetAttributeResponse, MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadRoyaltyInfo: {},\n        ReadWithPath: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        ReadDelegate: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        ResolveDidWeb: {},\n        GetDidKey: {},\n        _Structure: {\n            Voucher: getStructure(Voucher.fromPartial({})),\n            DIDOwner: getStructure(DIDOwner.fromPartial({})),\n            DIDWebRoute: getStructure(DIDWebRoute.fromPartial({})),\n            Delegate: getStructure(Delegate.fromPartial({})),\n            Change: getStructure(Change.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            QueryReadDidKeyRequest: getStructure(QueryReadDidKeyRequest.fromPartial({})),\n            QueryReadDidKeyResponse: getStructure(QueryReadDidKeyResponse.fromPartial({})),\n            QueryNonceRequest: getStructure(QueryNonceRequest.fromPartial({})),\n            QueryNonceResponse: getStructure(QueryNonceResponse.fromPartial({})),\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            RoyaltyInfo: getStructure(RoyaltyInfo.fromPartial({})),\n            MsgMintSwap: getStructure(MsgMintSwap.fromPartial({})),\n            MsgClaimSwapResponse: getStructure(MsgClaimSwapResponse.fromPartial({})),\n            MsgCreateDIDOwner: getStructure(MsgCreateDIDOwner.fromPartial({})),\n            MsgCreateDIDOwnerResponse: getStructure(MsgCreateDIDOwnerResponse.fromPartial({})),\n            MsgSetAttribute: getStructure(MsgSetAttribute.fromPartial({})),\n            MsgSetAttributeResponse: getStructure(MsgSetAttributeResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadRoyaltyInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadRoyaltyInfo[JSON.stringify(params)] ?? {};\n        },\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegate[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getResolveDidWeb: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ResolveDidWeb[JSON.stringify(params)] ?? {};\n        },\n        getGetDidKey: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetDidKey[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadRoyaltyInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadRoyaltyInfo(key.cid, key.price)).data;\n                commit('QUERY', { query: 'ReadRoyaltyInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadRoyaltyInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadRoyaltyInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadRoyaltyInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegate(key.id)).data;\n                commit('QUERY', { query: 'ReadDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResolveDidWeb({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResolveDidWeb(key.name)).data;\n                commit('QUERY', { query: 'ResolveDidWeb', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResolveDidWeb', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResolveDidWeb']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResolveDidWeb', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetDidKey({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetDidKey(key.name)).data;\n                commit('QUERY', { query: 'GetDidKey', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetDidKey', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetDidKey']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetDidKey', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgInitiateSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgInitiateSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedContent({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedResource({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRoyaltyInfo({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgClaimSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgInitiateSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgInitiateSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedContent({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedResource({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRoyaltyInfo({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgClaimSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '', didOwner: '', price: 0 };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.price !== 0) {\n            writer.uint32(56).uint64(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseRoyaltyInfo = { updateCount: 0, receiver: '', royaltyFeePercentage: 0, metadataUri: '', denomId: '' };\nexport const RoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.updateCount !== 0) {\n            writer.uint32(8).uint64(message.updateCount);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(34).string(message.metadataUri);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.updateCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataUri = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = Number(object.updateCount);\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.updateCount !== undefined && (obj.updateCount = message.updateCount);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = object.updateCount;\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseVoucher = { tokenName: '', tokenSymbol: '', uri: '', owner: '', didRecipient: '', price: 0, r: '', s: '', v: 0 };\nexport const Voucher = {\n    encode(message, writer = Writer.create()) {\n        if (message.tokenName !== '') {\n            writer.uint32(10).string(message.tokenName);\n        }\n        if (message.tokenSymbol !== '') {\n            writer.uint32(18).string(message.tokenSymbol);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.owner !== '') {\n            writer.uint32(34).string(message.owner);\n        }\n        if (message.didRecipient !== '') {\n            writer.uint32(42).string(message.didRecipient);\n        }\n        if (message.price !== 0) {\n            writer.uint32(48).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(58).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(66).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(72).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoucher };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tokenName = reader.string();\n                    break;\n                case 2:\n                    message.tokenSymbol = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                case 5:\n                    message.didRecipient = reader.string();\n                    break;\n                case 6:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 7:\n                    message.r = reader.string();\n                    break;\n                case 8:\n                    message.s = reader.string();\n                    break;\n                case 9:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoucher };\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = String(object.tokenName);\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = String(object.tokenSymbol);\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = String(object.didRecipient);\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tokenName !== undefined && (obj.tokenName = message.tokenName);\n        message.tokenSymbol !== undefined && (obj.tokenSymbol = message.tokenSymbol);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didRecipient !== undefined && (obj.didRecipient = message.didRecipient);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoucher };\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = object.tokenName;\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = object.tokenSymbol;\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = object.didRecipient;\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseDIDOwner = { identity: '', owner: '', didAncon: '', didKey: '', didWeb: '', didWebDeactivated: false, vanityName: '' };\nexport const DIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didAncon !== '') {\n            writer.uint32(26).string(message.didAncon);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(34).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(42).string(message.didWeb);\n        }\n        if (message.didWebDeactivated === true) {\n            writer.uint32(48).bool(message.didWebDeactivated);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(58).string(message.vanityName);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didAncon = reader.string();\n                    break;\n                case 4:\n                    message.didKey = reader.string();\n                    break;\n                case 5:\n                    message.didWeb = reader.string();\n                    break;\n                case 6:\n                    message.didWebDeactivated = reader.bool();\n                    break;\n                case 7:\n                    message.vanityName = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = String(object.didAncon);\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = Boolean(object.didWebDeactivated);\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didAncon !== undefined && (obj.didAncon = message.didAncon);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        message.didWebDeactivated !== undefined && (obj.didWebDeactivated = message.didWebDeactivated);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = object.didAncon;\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = object.didWebDeactivated;\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    }\n};\nconst baseDIDWebRoute = { name: '', route: '', cid: '' };\nexport const DIDWebRoute = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.route !== '') {\n            writer.uint32(18).string(message.route);\n        }\n        if (message.cid !== '') {\n            writer.uint32(26).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDWebRoute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.route = reader.string();\n                    break;\n                case 3:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = String(object.route);\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.route !== undefined && (obj.route = message.route);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = object.route;\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const Delegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseChange = { identity: '', owner: '', previousChange: 0 };\nexport const Change = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChange };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseAttribute = { identity: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(18).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(26).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.bytes();\n                    break;\n                case 3:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../cosmos/base/query/v1beta1/pagination';\nimport { Owner, Collection, Denom, BaseNFT } from '../anconprotocol/nft';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQueryDidWebRequest = { name: '' };\nexport const QueryDidWebRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDidWebRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDidWebResponse = {};\nexport const QueryDidWebResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDidWebResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryDidWebResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryDidWebResponse };\n        return message;\n    }\n};\nconst baseQueryGetDidRequest = { name: '' };\nexport const QueryGetDidRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDidRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDidResponse = {};\nexport const QueryGetDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDidResponse };\n        return message;\n    }\n};\nconst baseQueryReadDidKeyRequest = { name: '' };\nexport const QueryReadDidKeyRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadDidKeyResponse = {};\nexport const QueryReadDidKeyResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfo = { cid: '', price: '' };\nexport const QueryReadRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.price !== '') {\n            writer.uint32(18).string(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.price = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfoResponse = { receiver: '', royaltyAmount: 0 };\nexport const QueryReadRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyAmount !== 0) {\n            writer.uint32(16).uint64(message.royaltyAmount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyAmount = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = Number(object.royaltyAmount);\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyAmount !== undefined && (obj.royaltyAmount = message.royaltyAmount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = object.royaltyAmount;\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerRequest = { denomId: '', owner: '' };\nexport const QueryOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerResponse = {};\nexport const QueryOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== undefined) {\n            Owner.encode(message.owner, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = Owner.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromJSON(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner ? Owner.toJSON(message.owner) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromPartial(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionRequest = { denomId: '' };\nexport const QueryCollectionRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionResponse = {};\nexport const QueryCollectionResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.collection !== undefined) {\n            Collection.encode(message.collection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.collection = Collection.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromJSON(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.collection !== undefined && (obj.collection = message.collection ? Collection.toJSON(message.collection) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromPartial(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomRequest = { denomId: '' };\nexport const QueryDenomRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDenomResponse = {};\nexport const QueryDenomResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsRequest = {};\nexport const QueryDenomsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsResponse = {};\nexport const QueryDenomsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.denoms) {\n            Denom.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(Denom.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => (e ? Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryNFTRequest = { denomId: '', tokenId: '' };\nexport const QueryNFTRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(18).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNFTResponse = {};\nexport const QueryNFTResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nft !== undefined) {\n            BaseNFT.encode(message.nft, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nft = BaseNFT.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromJSON(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nft !== undefined && (obj.nft = message.nft ? BaseNFT.toJSON(message.nft) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromPartial(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateRequest = { id: '' };\nexport const QueryGetDelegateRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateResponse = {};\nexport const QueryGetDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadRoyaltyInfo(request) {\n        const data = QueryReadRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadRoyaltyInfo', data);\n        return promise.then((data) => QueryReadRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadDelegate(request) {\n        const data = QueryGetDelegateRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegate', data);\n        return promise.then((data) => QueryGetDelegateResponse.decode(new Reader(data)));\n    }\n    Owner(request) {\n        const data = QueryOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Owner', data);\n        return promise.then((data) => QueryOwnerResponse.decode(new Reader(data)));\n    }\n    Collection(request) {\n        const data = QueryCollectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Collection', data);\n        return promise.then((data) => QueryCollectionResponse.decode(new Reader(data)));\n    }\n    Denom(request) {\n        const data = QueryDenomRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denom', data);\n        return promise.then((data) => QueryDenomResponse.decode(new Reader(data)));\n    }\n    Denoms(request) {\n        const data = QueryDenomsRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denoms', data);\n        return promise.then((data) => QueryDenomsResponse.decode(new Reader(data)));\n    }\n    GetNft(request) {\n        const data = QueryNFTRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetNft', data);\n        return promise.then((data) => QueryNFTResponse.decode(new Reader(data)));\n    }\n    ResolveDidWeb(request) {\n        const data = QueryDidWebRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ResolveDidWeb', data);\n        return promise.then((data) => QueryDidWebResponse.decode(new Reader(data)));\n    }\n    GetDidKey(request) {\n        const data = QueryGetDidRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetDidKey', data);\n        return promise.then((data) => QueryGetDidResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}