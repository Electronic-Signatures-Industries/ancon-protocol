{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseMsgIssueDenom","id","schema","sender","symbol","mintRestricted","updateRestricted","MsgIssueDenom","encode","message","writer","Writer","uint32","string","bool","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","skipType","fromJSON","String","Boolean","toJSON","obj","fromPartial","baseMsgTransferNFT","denomId","uri","recipient","MsgTransferNFT","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgFileMetadataResponse","MsgFileMetadataResponse","hash","bytes","bytesFromBase64","base64FromBytes","baseMsgMetadata","creator","description","image","owner","parent","sources","links","verifiedCredentialRef","did","from","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","globalThis","self","global","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","e","assign","encodeURIComponent","Array","isArray","rawQuery","filter","map","addQueryParam","params1","params2","Api","arguments","queryResource","cid","method","queryReadFile","queryCollection","queryDenoms","queryDenom","queryOwner","queryGetNft","tokenId","queryRead","queryReadWithPath","types","MissingWalletError","Error","registry","Registry","defaultFee","amount","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","address","signAndBroadcast","msgs","fee","memo","msgMintNFT","typeUrl","msgEditNFT","msgMetadata","msgBurnNFT","msgTransferDenom","msgFile","msgIssueDenom","msgTransferNFT","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","ReadWithPath","ReadFile","Read","Resource","Owner","Collection","Denom","Denoms","GetNft","_Structure","BaseNFT","IDCollection","QuerySupplyResponse","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadWithPath","getReadFile","getRead","getResource","getOwner","getCollection","getDenom","getDenoms","getGetNft","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadWithPath","options","subscribe","all","QueryReadFile","QueryRead","pagination","nextKey","QueryResource","QueryOwner","QueryCollection","denom_id","QueryDenom","QueryDenoms","QueryGetNft","token_id","sendMsgMintNFT","msg","sendMsgEditNFT","sendMsgMetadata","sendMsgBurnNFT","sendMsgTransferDenom","sendMsgFile","sendMsgIssueDenom","sendMsgTransferNFT","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePageRequest","offset","limit","countTotal","PageRequest","uint64","longToNumber","Number","basePageResponse","total","PageResponse","long","gt","MAX_SAFE_INTEGER","toNumber","util","Long","configure","baseBaseNFT","baseDenom","baseIDCollection","tokenIds","v","baseOwner","idCollections","fork","ldelim","baseCollection","denom","nfts","baseQuerySupplyResponse"],"mappings":"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","file":"js/app.70697798.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryReadFile\n       * @summary additional handler that uses ReadFile\n      Queries a list of resource items.\n       * @request GET:/ancon/file/{cid}/{path}\n       */\n        this.queryReadFile = (cid, path, params = {}) => this.request({\n            path: `/ancon/file/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRead\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}\n         */\n        this.queryRead = (cid, query, params = {}) => this.request({\n            path: `/ancon/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { QuerySupplyResponse } from \"./module/types/anconprotocol/query\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { BaseNFT, Denom, IDCollection, Owner, Collection, QuerySupplyResponse, MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadWithPath: {},\n        ReadFile: {},\n        Read: {},\n        Resource: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        _Structure: {\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            QuerySupplyResponse: getStructure(QuerySupplyResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getReadFile: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadFile[JSON.stringify(params)] ?? {};\n        },\n        getRead: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Read[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadFile({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadFile(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadFile', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadFile', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadFile']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadFile', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRead({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRead(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRead(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Read', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRead', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRead']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRead', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '' };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../cosmos/base/query/v1beta1/pagination';\nimport { Owner, Collection, Denom, BaseNFT } from '../anconprotocol/nft';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQuerySupplyResponse = { amount: 0 };\nexport const QuerySupplyResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.amount !== 0) {\n            writer.uint32(8).uint64(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQuerySupplyResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQuerySupplyResponse };\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQuerySupplyResponse };\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerRequest = { denomId: '', owner: '' };\nexport const QueryOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerResponse = {};\nexport const QueryOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== undefined) {\n            Owner.encode(message.owner, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = Owner.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromJSON(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner ? Owner.toJSON(message.owner) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromPartial(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionRequest = { denomId: '' };\nexport const QueryCollectionRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionResponse = {};\nexport const QueryCollectionResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.collection !== undefined) {\n            Collection.encode(message.collection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.collection = Collection.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromJSON(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.collection !== undefined && (obj.collection = message.collection ? Collection.toJSON(message.collection) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromPartial(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomRequest = { denomId: '' };\nexport const QueryDenomRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDenomResponse = {};\nexport const QueryDenomResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsRequest = {};\nexport const QueryDenomsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsResponse = {};\nexport const QueryDenomsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.denoms) {\n            Denom.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(Denom.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => (e ? Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryNFTRequest = { denomId: '', tokenId: '' };\nexport const QueryNFTRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(18).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNFTResponse = {};\nexport const QueryNFTResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nft !== undefined) {\n            BaseNFT.encode(message.nft, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nft = BaseNFT.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromJSON(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nft !== undefined && (obj.nft = message.nft ? BaseNFT.toJSON(message.nft) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromPartial(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadFile(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadFile', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    Read(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Read', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    Owner(request) {\n        const data = QueryOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Owner', data);\n        return promise.then((data) => QueryOwnerResponse.decode(new Reader(data)));\n    }\n    Collection(request) {\n        const data = QueryCollectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Collection', data);\n        return promise.then((data) => QueryCollectionResponse.decode(new Reader(data)));\n    }\n    Denom(request) {\n        const data = QueryDenomRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denom', data);\n        return promise.then((data) => QueryDenomResponse.decode(new Reader(data)));\n    }\n    Denoms(request) {\n        const data = QueryDenomsRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denoms', data);\n        return promise.then((data) => QueryDenomsResponse.decode(new Reader(data)));\n    }\n    GetNft(request) {\n        const data = QueryNFTRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetNft', data);\n        return promise.then((data) => QueryNFTResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}