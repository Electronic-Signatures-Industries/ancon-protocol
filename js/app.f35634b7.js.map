{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/did_registry.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseMsgIssueDenom","id","schema","sender","symbol","mintRestricted","updateRestricted","MsgIssueDenom","encode","message","writer","Writer","uint32","string","bool","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","skipType","fromJSON","String","Boolean","toJSON","obj","fromPartial","baseMsgTransferNFT","denomId","uri","recipient","MsgTransferNFT","baseMsgCreateDIDOwner","creator","owner","didKey","didWeb","MsgCreateDIDOwner","baseMsgCreateDIDOwnerResponse","MsgCreateDIDOwnerResponse","_","baseMsgChangeOwner","identity","newOwner","MsgChangeOwner","baseMsgGrantDelegate","delegate","delegateType","validity","MsgGrantDelegate","uint64","longToNumber","Number","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","actor","MsgSetAttribute","bytes","bytesFromBase64","base64FromBytes","baseMsgSetAttributeResponse","MsgSetAttributeResponse","hash","baseMsgGrantAttribute","MsgGrantAttribute","baseMsgRevokeAttribute","MsgRevokeAttribute","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgFileMetadataResponse","MsgFileMetadataResponse","baseMsgMetadata","description","image","parent","sources","links","verifiedCredentialRef","did","from","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","globalThis","self","global","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","e","assign","encodeURIComponent","Array","isArray","rawQuery","filter","map","addQueryParam","params1","params2","Api","arguments","queryReadDelegate","method","queryIdentifyOwner","address","queryGetAttributes","queryReadFile","cid","queryCollection","queryDenoms","queryDenom","queryOwner","queryGetNft","tokenId","queryResource","queryReadRoyaltyInfo","queryRead","queryReadWithPath","types","MissingWalletError","registry","Registry","defaultFee","amount","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgRevokeDelegate","typeUrl","msgIssueDenom","msgBurnNFT","msgChangeOwner","msgMintNFT","msgFile","msgRevokeAttribute","msgMetadata","msgGrantAttribute","msgGrantDelegate","msgEditNFT","msgTransferNFT","msgTransferDenom","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","ReadRoyaltyInfo","ReadWithPath","ReadFile","Read","IdentifyOwner","GetAttributes","Resource","ReadDelegate","Owner","Collection","Denom","Denoms","GetNft","_Structure","DIDOwner","Delegate","Change","Attribute","BaseNFT","IDCollection","QuerySupplyResponse","QueryNonceRequest","QueryNonceResponse","QueryOwnersResponse","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadRoyaltyInfo","getReadWithPath","getReadFile","getRead","getIdentifyOwner","getGetAttributes","getResource","getReadDelegate","getOwner","getCollection","getDenom","getDenoms","getGetNft","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadRoyaltyInfo","options","subscribe","all","pagination","nextKey","QueryReadWithPath","QueryReadFile","QueryRead","QueryIdentifyOwner","QueryGetAttributes","QueryResource","QueryReadDelegate","QueryOwner","QueryCollection","denom_id","QueryDenom","QueryDenoms","QueryGetNft","token_id","sendMsgRevokeDelegate","msg","sendMsgIssueDenom","sendMsgBurnNFT","sendMsgChangeOwner","sendMsgMintNFT","sendMsgFile","sendMsgRevokeAttribute","sendMsgMetadata","sendMsgGrantAttribute","sendMsgGrantDelegate","sendMsgEditNFT","sendMsgTransferNFT","sendMsgTransferDenom","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePageRequest","offset","limit","countTotal","PageRequest","basePageResponse","total","PageResponse","baseBaseNFT","baseDenom","baseIDCollection","tokenIds","v","baseOwner","idCollections","fork","ldelim","baseCollection","denom","nfts","baseDIDOwner","didAncon","baseDelegate","baseChange","previousChange","baseAttribute","baseQuerySupplyResponse","baseQueryNonceRequest","baseQueryNonceResponse","baseQueryOwnersResponse"],"mappings":"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","file":"js/app.f35634b7.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgRoyaltyInfo = { creator: '', receiver: '', royaltyFeePercentage: 0, metadataUri: '', denomId: '' };\nexport const MsgRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(34).string(message.metadataUri);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataUri = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfoResponse = { receiver: '', royaltyFeePercentage: 0, metadataUri: '' };\nexport const MsgRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(16).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(26).string(message.metadataUri);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.metadataUri = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = { identity: '', owner: '', previousChange: 0 };\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwner = { creator: '', owner: '', didKey: '', didWeb: '' };\nexport const MsgCreateDIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(26).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(34).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didKey = reader.string();\n                    break;\n                case 4:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwnerResponse = {};\nexport const MsgCreateDIDOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    }\n};\nconst baseMsgChangeOwner = { creator: '', identity: '', newOwner: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgGrantDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegateResponse = {};\nexport const MsgGrantDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.creator !== '') {\n            writer.uint32(26).string(message.creator);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(34).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(42).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.bytes();\n                    break;\n                case 5:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttribute = { identity: '', actor: '', creator: '', validity: 0 };\nexport const MsgGrantAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(48).uint64(message.validity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                case 6:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.validity !== undefined && (obj.validity = message.validity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttributeResponse = { ok: false };\nexport const MsgGrantAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.ok === true) {\n            writer.uint32(8).bool(message.ok);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ok = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = Boolean(object.ok);\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ok !== undefined && (obj.ok = message.ok);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = object.ok;\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgRevokeAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttributeResponse = {};\nexport const MsgRevokeAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    RoyaltyInfo(request) {\n        const data = MsgRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RoyaltyInfo', data);\n        return promise.then((data) => MsgRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    GrantDelegate(request) {\n        const data = MsgGrantDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantDelegate', data);\n        return promise.then((data) => MsgGrantDelegateResponse.decode(new Reader(data)));\n    }\n    GrantAttribute(request) {\n        const data = MsgGrantAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantAttribute', data);\n        return promise.then((data) => MsgGrantAttributeResponse.decode(new Reader(data)));\n    }\n    RevokeAttribute(request) {\n        const data = MsgRevokeAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeAttribute', data);\n        return promise.then((data) => MsgRevokeAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n    MintTrustedContent(request) {\n        const data = MsgMintTrustedContent.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedContent', data);\n        return promise.then((data) => MsgMintTrustedContentResponse.decode(new Reader(data)));\n    }\n    MintTrustedResource(request) {\n        const data = MsgMintTrustedResource.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedResource', data);\n        return promise.then((data) => MsgMintTrustedResourceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/did_registry.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryReadDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryReadFile\n       * @summary additional handler that uses ReadFile\n      Queries a list of resource items.\n       * @request GET:/ancon/file/{cid}/{path}\n       */\n        this.queryReadFile = (cid, path, params = {}) => this.request({\n            path: `/ancon/file/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadRoyaltyInfo\n         * @summary ReadRoyaltyInfo\n         * @request GET:/ancon/royalty/{cid}/info\n         */\n        this.queryReadRoyaltyInfo = (cid, query, params = {}) => this.request({\n            path: `/ancon/royalty/${cid}/info`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRead\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}\n         */\n        this.queryRead = (cid, query, params = {}) => this.request({\n            path: `/ancon/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgGrantAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgGrantDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", MsgRevokeAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", MsgGrantAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", MsgGrantDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgRevokeAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgGrantAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", value: data }),\n        msgGrantDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", value: data }),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { DIDOwner } from \"./module/types/anconprotocol/did_registry\";\nimport { Delegate } from \"./module/types/anconprotocol/did_registry\";\nimport { Change } from \"./module/types/anconprotocol/did_registry\";\nimport { Attribute } from \"./module/types/anconprotocol/did_registry\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { QuerySupplyResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { MsgCreateDIDOwner } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwnerResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttribute } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttributeResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { DIDOwner, Delegate, Change, Attribute, BaseNFT, Denom, IDCollection, Owner, Collection, QuerySupplyResponse, QueryNonceRequest, QueryNonceResponse, QueryOwnersResponse, MsgCreateDIDOwner, MsgCreateDIDOwnerResponse, MsgSetAttribute, MsgSetAttributeResponse, MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadRoyaltyInfo: {},\n        ReadWithPath: {},\n        ReadFile: {},\n        Read: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        ReadDelegate: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        _Structure: {\n            DIDOwner: getStructure(DIDOwner.fromPartial({})),\n            Delegate: getStructure(Delegate.fromPartial({})),\n            Change: getStructure(Change.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            QuerySupplyResponse: getStructure(QuerySupplyResponse.fromPartial({})),\n            QueryNonceRequest: getStructure(QueryNonceRequest.fromPartial({})),\n            QueryNonceResponse: getStructure(QueryNonceResponse.fromPartial({})),\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            MsgCreateDIDOwner: getStructure(MsgCreateDIDOwner.fromPartial({})),\n            MsgCreateDIDOwnerResponse: getStructure(MsgCreateDIDOwnerResponse.fromPartial({})),\n            MsgSetAttribute: getStructure(MsgSetAttribute.fromPartial({})),\n            MsgSetAttributeResponse: getStructure(MsgSetAttributeResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadRoyaltyInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadRoyaltyInfo[JSON.stringify(params)] ?? {};\n        },\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getReadFile: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadFile[JSON.stringify(params)] ?? {};\n        },\n        getRead: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Read[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegate[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadRoyaltyInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadRoyaltyInfo(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryReadRoyaltyInfo(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ReadRoyaltyInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadRoyaltyInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadRoyaltyInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadRoyaltyInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadFile({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadFile(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadFile', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadFile', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadFile']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadFile', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRead({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRead(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRead(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Read', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRead', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRead']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRead', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegate(key.id)).data;\n                commit('QUERY', { query: 'ReadDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '' };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseDIDOwner = { identity: '', owner: '', didAncon: '', didKey: '', didWeb: '' };\nexport const DIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didAncon !== '') {\n            writer.uint32(26).string(message.didAncon);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(34).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(42).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didAncon = reader.string();\n                    break;\n                case 4:\n                    message.didKey = reader.string();\n                    break;\n                case 5:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = String(object.didAncon);\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didAncon !== undefined && (obj.didAncon = message.didAncon);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = object.didAncon;\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const Delegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseChange = { identity: '', owner: '', previousChange: 0 };\nexport const Change = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChange };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseAttribute = { identity: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(18).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(26).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.bytes();\n                    break;\n                case 3:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../cosmos/base/query/v1beta1/pagination';\nimport { Owner, Collection, Denom, BaseNFT } from '../anconprotocol/nft';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQuerySupplyResponse = { amount: 0 };\nexport const QuerySupplyResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.amount !== 0) {\n            writer.uint32(8).uint64(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQuerySupplyResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQuerySupplyResponse };\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQuerySupplyResponse };\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerRequest = { denomId: '', owner: '' };\nexport const QueryOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerResponse = {};\nexport const QueryOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== undefined) {\n            Owner.encode(message.owner, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = Owner.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromJSON(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner ? Owner.toJSON(message.owner) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromPartial(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionRequest = { denomId: '' };\nexport const QueryCollectionRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionResponse = {};\nexport const QueryCollectionResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.collection !== undefined) {\n            Collection.encode(message.collection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.collection = Collection.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromJSON(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.collection !== undefined && (obj.collection = message.collection ? Collection.toJSON(message.collection) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromPartial(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomRequest = { denomId: '' };\nexport const QueryDenomRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDenomResponse = {};\nexport const QueryDenomResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsRequest = {};\nexport const QueryDenomsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsResponse = {};\nexport const QueryDenomsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.denoms) {\n            Denom.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(Denom.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => (e ? Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryNFTRequest = { denomId: '', tokenId: '' };\nexport const QueryNFTRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(18).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNFTResponse = {};\nexport const QueryNFTResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nft !== undefined) {\n            BaseNFT.encode(message.nft, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nft = BaseNFT.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromJSON(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nft !== undefined && (obj.nft = message.nft ? BaseNFT.toJSON(message.nft) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromPartial(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateRequest = { id: '' };\nexport const QueryGetDelegateRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateResponse = {};\nexport const QueryGetDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadRoyaltyInfo(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadRoyaltyInfo', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadFile(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadFile', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    Read(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Read', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadDelegate(request) {\n        const data = QueryGetDelegateRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegate', data);\n        return promise.then((data) => QueryGetDelegateResponse.decode(new Reader(data)));\n    }\n    Owner(request) {\n        const data = QueryOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Owner', data);\n        return promise.then((data) => QueryOwnerResponse.decode(new Reader(data)));\n    }\n    Collection(request) {\n        const data = QueryCollectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Collection', data);\n        return promise.then((data) => QueryCollectionResponse.decode(new Reader(data)));\n    }\n    Denom(request) {\n        const data = QueryDenomRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denom', data);\n        return promise.then((data) => QueryDenomResponse.decode(new Reader(data)));\n    }\n    Denoms(request) {\n        const data = QueryDenomsRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denoms', data);\n        return promise.then((data) => QueryDenomsResponse.decode(new Reader(data)));\n    }\n    GetNft(request) {\n        const data = QueryNFTRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetNft', data);\n        return promise.then((data) => QueryNFTResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}