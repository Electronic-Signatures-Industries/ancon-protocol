{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/royalty.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/did_registry.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseMsgMintTrustedContent","creator","did","metadata","cid","MsgMintTrustedContent","encode","message","writer","Writer","uint32","string","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","skipType","fromJSON","String","toJSON","obj","fromPartial","baseMsgInitiateSwap","MsgInitiateSwap","baseMsgClaimSwap","MsgClaimSwap","baseMsgMintTrustedResource","MsgMintTrustedResource","baseMsgRoyaltyInfo","receiver","royaltyFeePercentage","metadataUri","denomId","MsgRoyaltyInfo","uint64","longToNumber","Number","baseMsgIssueDenom","id","schema","sender","symbol","mintRestricted","updateRestricted","MsgIssueDenom","bool","Boolean","baseMsgTransferNFT","uri","recipient","MsgTransferNFT","baseMsgCreateDIDOwner","owner","didKey","didWeb","MsgCreateDIDOwner","baseMsgCreateDIDOwnerResponse","MsgCreateDIDOwnerResponse","_","baseMsgChangeOwner","identity","newOwner","MsgChangeOwner","baseMsgGrantDelegate","delegate","delegateType","validity","MsgGrantDelegate","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","actor","MsgSetAttribute","bytes","bytesFromBase64","base64FromBytes","baseMsgSetAttributeResponse","MsgSetAttributeResponse","hash","baseMsgGrantAttribute","MsgGrantAttribute","baseMsgRevokeAttribute","MsgRevokeAttribute","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgFileMetadataResponse","MsgFileMetadataResponse","baseMsgMetadata","description","image","parent","sources","links","verifiedCredentialRef","from","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","globalThis","self","global","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","e","assign","encodeURIComponent","Array","isArray","rawQuery","filter","map","addQueryParam","params1","params2","Api","arguments","queryReadDelegate","method","queryIdentifyOwner","address","queryGetAttributes","queryCollection","queryDenoms","queryDenom","queryOwner","queryGetNft","tokenId","queryResource","queryReadRoyaltyInfo","price","queryReadWithPath","types","MissingWalletError","registry","Registry","defaultFee","amount","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgMintTrustedResource","typeUrl","msgChangeOwner","msgRevokeAttribute","msgTransferDenom","msgBurnNFT","msgTransferNFT","msgRoyaltyInfo","msgFile","msgIssueDenom","msgRevokeDelegate","msgInitiateSwap","msgClaimSwap","msgEditNFT","msgMintNFT","msgMetadata","msgGrantDelegate","msgMintTrustedContent","msgGrantAttribute","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","ReadRoyaltyInfo","ReadWithPath","IdentifyOwner","GetAttributes","Resource","ReadDelegate","Owner","Collection","Denom","Denoms","GetNft","_Structure","DIDOwner","Delegate","Change","Attribute","BaseNFT","IDCollection","QueryNonceRequest","QueryNonceResponse","QueryOwnersResponse","RoyaltyInfo","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadRoyaltyInfo","getReadWithPath","getIdentifyOwner","getGetAttributes","getResource","getReadDelegate","getOwner","getCollection","getDenom","getDenoms","getGetNft","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadRoyaltyInfo","options","subscribe","all","QueryReadWithPath","QueryIdentifyOwner","QueryGetAttributes","QueryResource","pagination","nextKey","QueryReadDelegate","QueryOwner","QueryCollection","denom_id","QueryDenom","QueryDenoms","QueryGetNft","token_id","sendMsgMintTrustedResource","msg","sendMsgChangeOwner","sendMsgRevokeAttribute","sendMsgTransferDenom","sendMsgBurnNFT","sendMsgTransferNFT","sendMsgRoyaltyInfo","sendMsgFile","sendMsgIssueDenom","sendMsgRevokeDelegate","sendMsgInitiateSwap","sendMsgClaimSwap","sendMsgEditNFT","sendMsgMintNFT","sendMsgMetadata","sendMsgGrantDelegate","sendMsgMintTrustedContent","sendMsgGrantAttribute","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePageRequest","offset","limit","countTotal","PageRequest","basePageResponse","total","PageResponse","baseBaseNFT","baseDenom","baseIDCollection","tokenIds","v","baseOwner","idCollections","fork","ldelim","baseCollection","denom","nfts","baseRoyaltyInfo","updateCount","baseDIDOwner","didAncon","baseDelegate","baseChange","previousChange","baseAttribute","baseQueryNonceRequest","baseQueryNonceResponse","baseQueryOwnersResponse"],"mappings":"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","file":"js/app.dfe27a82.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgMintTrustedContent = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgMintTrustedContent = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContentResponse = {};\nexport const MsgMintTrustedContentResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContentResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        return message;\n    }\n};\nconst baseMsgInitiateSwap = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgInitiateSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwapResponse = {};\nexport const MsgInitiateSwapResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        return message;\n    }\n};\nconst baseMsgClaimSwap = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgClaimSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwapResponse = {};\nexport const MsgClaimSwapResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgClaimSwapResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgClaimSwapResponse };\n        return message;\n    }\n};\nconst baseMsgMintTrustedResource = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgMintTrustedResource = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResource };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResourceResponse = {};\nexport const MsgMintTrustedResourceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfo = { creator: '', receiver: '', royaltyFeePercentage: 0, metadataUri: '', denomId: '' };\nexport const MsgRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(34).string(message.metadataUri);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataUri = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfoResponse = { receiver: '', royaltyFeePercentage: 0, metadataUri: '' };\nexport const MsgRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(16).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(26).string(message.metadataUri);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.metadataUri = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = { identity: '', owner: '', previousChange: 0 };\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwner = { creator: '', owner: '', didKey: '', didWeb: '' };\nexport const MsgCreateDIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(26).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(34).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didKey = reader.string();\n                    break;\n                case 4:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwnerResponse = {};\nexport const MsgCreateDIDOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    }\n};\nconst baseMsgChangeOwner = { creator: '', identity: '', newOwner: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgGrantDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegateResponse = {};\nexport const MsgGrantDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.creator !== '') {\n            writer.uint32(26).string(message.creator);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(34).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(42).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.bytes();\n                    break;\n                case 5:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttribute = { identity: '', actor: '', creator: '', validity: 0 };\nexport const MsgGrantAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(48).uint64(message.validity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                case 6:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.validity !== undefined && (obj.validity = message.validity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttributeResponse = { ok: false };\nexport const MsgGrantAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.ok === true) {\n            writer.uint32(8).bool(message.ok);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ok = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = Boolean(object.ok);\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ok !== undefined && (obj.ok = message.ok);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = object.ok;\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgRevokeAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttributeResponse = {};\nexport const MsgRevokeAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    RoyaltyInfo(request) {\n        const data = MsgRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RoyaltyInfo', data);\n        return promise.then((data) => MsgRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    GrantDelegate(request) {\n        const data = MsgGrantDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantDelegate', data);\n        return promise.then((data) => MsgGrantDelegateResponse.decode(new Reader(data)));\n    }\n    GrantAttribute(request) {\n        const data = MsgGrantAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantAttribute', data);\n        return promise.then((data) => MsgGrantAttributeResponse.decode(new Reader(data)));\n    }\n    RevokeAttribute(request) {\n        const data = MsgRevokeAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeAttribute', data);\n        return promise.then((data) => MsgRevokeAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n    MintTrustedContent(request) {\n        const data = MsgMintTrustedContent.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedContent', data);\n        return promise.then((data) => MsgMintTrustedContentResponse.decode(new Reader(data)));\n    }\n    MintTrustedResource(request) {\n        const data = MsgMintTrustedResource.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedResource', data);\n        return promise.then((data) => MsgMintTrustedResourceResponse.decode(new Reader(data)));\n    }\n    InitiateSwap(request) {\n        const data = MsgInitiateSwap.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'InitiateSwap', data);\n        return promise.then((data) => MsgInitiateSwapResponse.decode(new Reader(data)));\n    }\n    ClaimSwap(request) {\n        const data = MsgClaimSwap.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ClaimSwap', data);\n        return promise.then((data) => MsgClaimSwapResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/did_registry.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryReadDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadRoyaltyInfo\n         * @summary ReadRoyaltyInfo\n         * @request GET:/ancon/royalty/{cid}/{price}\n         */\n        this.queryReadRoyaltyInfo = (cid, price, params = {}) => this.request({\n            path: `/ancon/royalty/${cid}/${price}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMintTrustedResource } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nimport { MsgRoyaltyInfo } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgInitiateSwap } from \"./types/anconprotocol/tx\";\nimport { MsgClaimSwap } from \"./types/anconprotocol/tx\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgGrantDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedContent } from \"./types/anconprotocol/tx\";\nimport { MsgGrantAttribute } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", MsgMintTrustedResource],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", MsgRevokeAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", MsgRoyaltyInfo],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgInitiateSwap\", MsgInitiateSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimSwap\", MsgClaimSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", MsgGrantDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", MsgMintTrustedContent],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", MsgGrantAttribute],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgMintTrustedResource: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgRevokeAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", value: data }),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n        msgRoyaltyInfo: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgInitiateSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgInitiateSwap\", value: data }),\n        msgClaimSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimSwap\", value: data }),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgGrantDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", value: data }),\n        msgMintTrustedContent: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", value: data }),\n        msgGrantAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { DIDOwner } from \"./module/types/anconprotocol/did_registry\";\nimport { Delegate } from \"./module/types/anconprotocol/did_registry\";\nimport { Change } from \"./module/types/anconprotocol/did_registry\";\nimport { Attribute } from \"./module/types/anconprotocol/did_registry\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { QueryNonceRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { RoyaltyInfo } from \"./module/types/anconprotocol/royalty\";\nimport { MsgCreateDIDOwner } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwnerResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttribute } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttributeResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { DIDOwner, Delegate, Change, Attribute, BaseNFT, Denom, IDCollection, Owner, Collection, QueryNonceRequest, QueryNonceResponse, QueryOwnersResponse, RoyaltyInfo, MsgCreateDIDOwner, MsgCreateDIDOwnerResponse, MsgSetAttribute, MsgSetAttributeResponse, MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadRoyaltyInfo: {},\n        ReadWithPath: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        ReadDelegate: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        _Structure: {\n            DIDOwner: getStructure(DIDOwner.fromPartial({})),\n            Delegate: getStructure(Delegate.fromPartial({})),\n            Change: getStructure(Change.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            QueryNonceRequest: getStructure(QueryNonceRequest.fromPartial({})),\n            QueryNonceResponse: getStructure(QueryNonceResponse.fromPartial({})),\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            RoyaltyInfo: getStructure(RoyaltyInfo.fromPartial({})),\n            MsgCreateDIDOwner: getStructure(MsgCreateDIDOwner.fromPartial({})),\n            MsgCreateDIDOwnerResponse: getStructure(MsgCreateDIDOwnerResponse.fromPartial({})),\n            MsgSetAttribute: getStructure(MsgSetAttribute.fromPartial({})),\n            MsgSetAttributeResponse: getStructure(MsgSetAttributeResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadRoyaltyInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadRoyaltyInfo[JSON.stringify(params)] ?? {};\n        },\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegate[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadRoyaltyInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadRoyaltyInfo(key.cid, key.price)).data;\n                commit('QUERY', { query: 'ReadRoyaltyInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadRoyaltyInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadRoyaltyInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadRoyaltyInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegate(key.id)).data;\n                commit('QUERY', { query: 'ReadDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgMintTrustedResource({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRoyaltyInfo({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgInitiateSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgInitiateSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgClaimSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedContent({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedResource({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRoyaltyInfo({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgInitiateSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgInitiateSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgClaimSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedContent({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '' };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseRoyaltyInfo = { updateCount: 0, receiver: '', royaltyFeePercentage: 0, metadataUri: '', denomId: '' };\nexport const RoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.updateCount !== 0) {\n            writer.uint32(8).uint64(message.updateCount);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(34).string(message.metadataUri);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.updateCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataUri = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = Number(object.updateCount);\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.updateCount !== undefined && (obj.updateCount = message.updateCount);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = object.updateCount;\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseDIDOwner = { identity: '', owner: '', didAncon: '', didKey: '', didWeb: '' };\nexport const DIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didAncon !== '') {\n            writer.uint32(26).string(message.didAncon);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(34).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(42).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didAncon = reader.string();\n                    break;\n                case 4:\n                    message.didKey = reader.string();\n                    break;\n                case 5:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = String(object.didAncon);\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didAncon !== undefined && (obj.didAncon = message.didAncon);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = object.didAncon;\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const Delegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseChange = { identity: '', owner: '', previousChange: 0 };\nexport const Change = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChange };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseAttribute = { identity: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(18).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(26).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.bytes();\n                    break;\n                case 3:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../cosmos/base/query/v1beta1/pagination';\nimport { Owner, Collection, Denom, BaseNFT } from '../anconprotocol/nft';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQueryReadRoyaltyInfo = { cid: '', price: '' };\nexport const QueryReadRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.price !== '') {\n            writer.uint32(18).string(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.price = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfoResponse = { receiver: '', royaltyAmount: 0 };\nexport const QueryReadRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyAmount !== 0) {\n            writer.uint32(16).uint64(message.royaltyAmount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyAmount = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = Number(object.royaltyAmount);\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyAmount !== undefined && (obj.royaltyAmount = message.royaltyAmount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = object.royaltyAmount;\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerRequest = { denomId: '', owner: '' };\nexport const QueryOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerResponse = {};\nexport const QueryOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== undefined) {\n            Owner.encode(message.owner, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = Owner.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromJSON(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner ? Owner.toJSON(message.owner) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromPartial(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionRequest = { denomId: '' };\nexport const QueryCollectionRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionResponse = {};\nexport const QueryCollectionResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.collection !== undefined) {\n            Collection.encode(message.collection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.collection = Collection.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromJSON(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.collection !== undefined && (obj.collection = message.collection ? Collection.toJSON(message.collection) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromPartial(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomRequest = { denomId: '' };\nexport const QueryDenomRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDenomResponse = {};\nexport const QueryDenomResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsRequest = {};\nexport const QueryDenomsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsResponse = {};\nexport const QueryDenomsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.denoms) {\n            Denom.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(Denom.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => (e ? Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryNFTRequest = { denomId: '', tokenId: '' };\nexport const QueryNFTRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(18).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNFTResponse = {};\nexport const QueryNFTResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nft !== undefined) {\n            BaseNFT.encode(message.nft, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nft = BaseNFT.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromJSON(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nft !== undefined && (obj.nft = message.nft ? BaseNFT.toJSON(message.nft) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromPartial(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateRequest = { id: '' };\nexport const QueryGetDelegateRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateResponse = {};\nexport const QueryGetDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadRoyaltyInfo(request) {\n        const data = QueryReadRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadRoyaltyInfo', data);\n        return promise.then((data) => QueryReadRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadDelegate(request) {\n        const data = QueryGetDelegateRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegate', data);\n        return promise.then((data) => QueryGetDelegateResponse.decode(new Reader(data)));\n    }\n    Owner(request) {\n        const data = QueryOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Owner', data);\n        return promise.then((data) => QueryOwnerResponse.decode(new Reader(data)));\n    }\n    Collection(request) {\n        const data = QueryCollectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Collection', data);\n        return promise.then((data) => QueryCollectionResponse.decode(new Reader(data)));\n    }\n    Denom(request) {\n        const data = QueryDenomRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denom', data);\n        return promise.then((data) => QueryDenomResponse.decode(new Reader(data)));\n    }\n    Denoms(request) {\n        const data = QueryDenomsRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denoms', data);\n        return promise.then((data) => QueryDenomsResponse.decode(new Reader(data)));\n    }\n    GetNft(request) {\n        const data = QueryNFTRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetNft', data);\n        return promise.then((data) => QueryNFTResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}