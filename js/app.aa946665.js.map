{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseMsgChangeOwner","creator","MsgChangeOwner","string","String","baseMsgAddDelegate","MsgAddDelegate","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","MsgSetAttribute","baseMsgFileMetadataResponse","MsgFileMetadataResponse","hash","bytes","bytesFromBase64","base64FromBytes","baseMsgMetadata","description","image","owner","parent","sources","links","verifiedCredentialRef","did","from","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","pubKey","PublicKey","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","uint64","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","baseMsgFileTx","MsgFileTx","baseMsgMetadataTx","MsgMetadataTx","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryIdentifyOwner","method","queryGetAttributes","queryReadFile","cid","queryResource","queryRead","queryReadWithPath","types","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgMetadata","msgAddDelegate","msgSetAttribute","msgRevokeDelegate","msgFile","msgChangeOwner","queryClient","baseQueryOwnersResponse","QueryOwnersResponse","_","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","field","getDefaultState","ReadWithPath","ReadFile","Read","IdentifyOwner","GetAttributes","Resource","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadWithPath","getReadFile","getRead","getIdentifyOwner","getGetAttributes","getResource","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadWithPath","options","subscribe","all","QueryReadFile","QueryRead","pagination","nextKey","QueryIdentifyOwner","QueryGetAttributes","QueryResource","sendMsgMetadata","msg","sendMsgAddDelegate","sendMsgSetAttribute","sendMsgRevokeDelegate","sendMsgFile","sendMsgChangeOwner","queryAllBalances","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgSend","msgMultiSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryParams","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","sendMsgMultiSend","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgFundCommunityPool","msgWithdrawDelegatorReward","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgSetWithdrawAddress","sendMsgFundCommunityPool","sendMsgWithdrawDelegatorReward","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","V1Beta1ProposalStatus","V1Beta1VoteOption","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgVote","MsgDeposit","MsgSubmitProposal","msgVote","msgDeposit","msgSubmitProposal","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVote","sendMsgDeposit","sendMsgSubmitProposal","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","V1Beta1BondStatus","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgUndelegate","msgCreateValidator","msgDelegate","msgBeginRedelegate","msgEditValidator","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgUndelegate","sendMsgCreateValidator","sendMsgDelegate","sendMsgBeginRedelegate","sendMsgEditValidator","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","V1Order","V1State","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenTry","MsgChannelCloseInit","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgTimeoutOnClose","MsgChannelCloseConfirm","MsgChannelOpenInit","MsgRecvPacket","MsgTimeout","MsgAcknowledgement","msgChannelOpenTry","msgChannelCloseInit","msgChannelOpenAck","msgChannelOpenConfirm","msgTimeoutOnClose","msgChannelCloseConfirm","msgChannelOpenInit","msgRecvPacket","msgTimeout","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","revision_number","revision_height","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenTry","sendMsgChannelCloseInit","sendMsgChannelOpenAck","sendMsgChannelOpenConfirm","sendMsgTimeoutOnClose","sendMsgChannelCloseConfirm","sendMsgChannelOpenInit","sendMsgRecvPacket","sendMsgTimeout","sendMsgAcknowledgement","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpdateClient","msgSubmitMisbehaviour","msgCreateClient","msgUpgradeClient","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","client_id","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpdateClient","sendMsgSubmitMisbehaviour","sendMsgCreateClient","sendMsgUpgradeClient","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenTry","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenAck","msgConnectionOpenTry","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenAck","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenTry","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenAck","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","ElectronicSignaturesIndustriesAnconProtocolAnconprotocol","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkIbcCoreConnectionV1","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","id","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.aa946665.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgChangeOwner = { creator: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = {};\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgAddDelegate = { creator: '' };\nexport const MsgAddDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAddDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAddDelegate };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAddDelegate };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAddDelegateResponse = {};\nexport const MsgAddDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAddDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAddDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAddDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { creator: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    AddDelegate(request) {\n        const data = MsgAddDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'AddDelegate', data);\n        return promise.then((data) => MsgAddDelegateResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    SetAttribute(request) {\n        const data = MsgSetAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'SetAttribute', data);\n        return promise.then((data) => MsgSetAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseMsgCreateClient = { signer: '' };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpdateClient = { clientId: '', signer: '' };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpgradeClient = { clientId: '', signer: '' };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviour = { clientId: '', signer: '' };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'CreateClient', data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpdateClient', data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpgradeClient', data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'SubmitMisbehaviour', data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { Header } from '../../tendermint/types/types';\nimport { ProofOps } from '../../tendermint/crypto/proof';\nimport { EvidenceParams, ValidatorParams, VersionParams } from '../../tendermint/types/params';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.abci';\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NEW':\n            return CheckTxType.NEW;\n        case 1:\n        case 'RECHECK':\n            return CheckTxType.RECHECK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return 'NEW';\n        case CheckTxType.RECHECK:\n            return 'RECHECK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case 'DUPLICATE_VOTE':\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case 'LIGHT_CLIENT_ATTACK':\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return 'UNKNOWN';\n        case EvidenceType.DUPLICATE_VOTE:\n            return 'DUPLICATE_VOTE';\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return 'LIGHT_CLIENT_ATTACK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case 'REJECT':\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case 'REJECT_FORMAT':\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case 'REJECT_SENDER':\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseOfferSnapshot_Result.ABORT:\n            return 'ABORT';\n        case ResponseOfferSnapshot_Result.REJECT:\n            return 'REJECT';\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return 'REJECT_FORMAT';\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return 'REJECT_SENDER';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case 'RETRY':\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case 'RETRY_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case 'REJECT_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return 'ABORT';\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return 'RETRY';\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return 'RETRY_SNAPSHOT';\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return 'REJECT_SNAPSHOT';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseRequestEcho = { message: '' };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    }\n};\nconst baseRequestInfo = { version: '', blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== '') {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestSetOption = { key: '', value: '' };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseRequestInitChain = { chainId: '', initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestQuery = { path: '', height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    }\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    }\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    }\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: '' };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseResponseException = { error: '' };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== '') {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEcho = { message: '' };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    }\n};\nconst baseResponseInfo = {\n    data: '',\n    version: '',\n    appVersion: 0,\n    lastBlockHeight: 0\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== '') {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseSetOption = { code: 0, log: '', info: '' };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: '',\n    info: '',\n    index: 0,\n    height: 0,\n    codespace: ''\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: ''\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    }\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? VoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEvent = { type: '' };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    }\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Echo', data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Flush', data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Info', data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'SetOption', data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'DeliverTx', data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'CheckTx', data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Query', data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Commit', data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'InitChain', data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'BeginBlock', data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'EndBlock', data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ListSnapshots', data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'OfferSnapshot', data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'LoadSnapshotChunk', data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ApplySnapshotChunk', data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../google/protobuf/duration';\nexport const protobufPackage = 'tendermint.types';\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    }\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorParams = { pubKeyTypes: '' };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined && (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'anconprotocol';\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgFileTx = { path: '', content: '', mode: '', time: 0, contentType: '', did: '', from: '' };\nexport const MsgFileTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(18).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(26).string(message.mode);\n        }\n        if (message.time !== 0) {\n            writer.uint32(32).uint64(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(42).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(50).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(58).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.content = reader.string();\n                    break;\n                case 3:\n                    message.mode = reader.string();\n                    break;\n                case 4:\n                    message.time = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.contentType = reader.string();\n                    break;\n                case 6:\n                    message.did = reader.string();\n                    break;\n                case 7:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = Number(object.time);\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataTx = {\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadataTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(26).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(34).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(42).string(message.parent);\n        }\n        for (const v of message.sources) {\n            writer.uint32(50).string(v);\n        }\n        for (const v of message.links) {\n            writer.uint32(58).string(v);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(66).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(74).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(82).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.image = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                case 5:\n                    message.parent = reader.string();\n                    break;\n                case 6:\n                    message.sources.push(reader.string());\n                    break;\n                case 7:\n                    message.links.push(reader.string());\n                    break;\n                case 8:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 9:\n                    message.did = reader.string();\n                    break;\n                case 10:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(String(e));\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(String(e));\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        if (message.sources) {\n            obj.sources = message.sources.map((e) => e);\n        }\n        else {\n            obj.sources = [];\n        }\n        if (message.links) {\n            obj.links = message.links.map((e) => e);\n        }\n        else {\n            obj.links = [];\n        }\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(e);\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(e);\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case 4:\n        case 'STATE_CLOSED':\n            return State.STATE_CLOSED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        case State.STATE_CLOSED:\n            return 'STATE_CLOSED';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'ORDER_NONE_UNSPECIFIED':\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case 'ORDER_UNORDERED':\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case 'ORDER_ORDERED':\n            return Order.ORDER_ORDERED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return 'ORDER_NONE_UNSPECIFIED';\n        case Order.ORDER_UNORDERED:\n            return 'ORDER_UNORDERED';\n        case Order.ORDER_ORDERED:\n            return 'ORDER_ORDERED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: ''\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    }\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: '',\n    portId: '',\n    channelId: ''\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== '') {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { portId: '', channelId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: '',\n    sourceChannel: '',\n    destinationPort: '',\n    destinationChannel: '',\n    timeoutTimestamp: 0\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== '') {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== '') {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== '') {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst basePacketState = { portId: '', channelId: '', sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = {\n    moniker: '',\n    identity: '',\n    website: '',\n    securityContact: '',\n    details: ''\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = {\n    operatorAddress: '',\n    jailed: false,\n    status: 0,\n    tokens: '',\n    delegatorShares: '',\n    unbondingHeight: 0,\n    minSelfDelegation: ''\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = {\n    delegatorAddress: '',\n    validatorAddress: '',\n    shares: ''\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    balance: ''\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    sharesDst: ''\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: ''\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryReadFile\n       * @summary additional handler that uses ReadFile\n      Queries a list of resource items.\n       * @request GET:/ancon/file/{cid}/{path}\n       */\n        this.queryReadFile = (cid, path, params = {}) => this.request({\n            path: `/ancon/file/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRead\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}\n         */\n        this.queryRead = (cid, query, params = {}) => this.request({\n            path: `/ancon/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgAddDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgSetAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgAddDelegate\", MsgAddDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgSetAttribute\", MsgSetAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgAddDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgAddDelegate\", value: data }),\n        msgSetAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgSetAttribute\", value: data }),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadFile(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadFile', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    Read(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Read', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n}\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { QueryOwnersResponse, MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadWithPath: {},\n        ReadFile: {},\n        Read: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        _Structure: {\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getReadFile: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadFile[JSON.stringify(params)] ?? {};\n        },\n        getRead: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Read[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadFile({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadFile(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadFile', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadFile', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadFile']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadFile', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRead({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRead(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRead(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Read', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRead', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRead']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRead', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAddDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAddDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAddDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAddDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAddDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAddDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAddDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAddDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryResource = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/anconprotocol.MsgFile\", MsgFile],\n    [\"/anconprotocol.MsgMetadata\", MsgMetadata],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgFile: (data) => ({ typeUrl: \"/anconprotocol.MsgFile\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/anconprotocol.MsgMetadata\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileTx } from \"./module/types/anconprotocol/tx\";\nimport { MsgMetadataTx } from \"./module/types/anconprotocol/tx\";\nexport { MsgFileMetadataResponse, MsgFileTx, MsgMetadataTx };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Resource: {},\n        _Structure: {\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n            MsgFileTx: getStructure(MsgFileTx.fromPartial({})),\n            MsgMetadataTx: getStructure(MsgMetadataTx.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, key.path)).data;\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nexport { TxResponse, ABCIMessageLog, StringEvent, Attribute, GasInfo, Result, SimulationResponse, MsgData, TxMsgData, SearchTxsResult };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.abci.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nexport { Coin, DecCoin, IntProto, DecProto };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = {\n    sender: '',\n    invariantModuleName: '',\n    invariantRoute: ''\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = {\n    minSelfDelegation: '',\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgEditValidator = {\n    validatorAddress: '',\n    commissionRate: '',\n    minSelfDelegation: ''\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/channel.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nexport { Channel, IdentifiedChannel, Counterparty, Packet, PacketState, Acknowledgement, PacketSequence };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.channel.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannels(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionChannels(key.connection, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nexport { IdentifiedClientState, ConsensusStateWithHeight, ClientConsensusStates, ClientUpdateProposal, Height, Params, GenesisMetadata, IdentifiedGenesisMetadata };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.client.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientStates(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusStates(key.client_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/connection.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nexport { ConnectionEnd, IdentifiedConnection, Counterparty, ClientPaths, ConnectionPaths, Version };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.connection.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnections(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nimport ElectronicSignaturesIndustriesAnconProtocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/anconprotocol';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n    ElectronicSignaturesIndustriesAnconProtocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolAnconprotocol, 'anconprotocol'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedChannel, PacketState } from '../../../../ibc/core/channel/v1/channel';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    }\n};\nconst basePacketSequence = { portId: '', channelId: '', sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { MerklePrefix } from '../../../../ibc/core/commitment/v1/commitment';\nexport const protobufPackage = 'ibc.core.connection.v1';\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseConnectionEnd = { clientId: '', state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseIdentifiedConnection = {\n    id: '',\n    clientId: '',\n    state: 0,\n    delayPeriod: 0\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { clientId: '', connectionId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== '') {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientPaths = { paths: '' };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConnectionPaths = { clientId: '', paths: '' };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersion = { identifier: '', features: '' };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== '') {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = {\n    communityTax: '',\n    baseProposerReward: '',\n    bonusProposerReward: '',\n    withdrawAddrEnabled: false\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = {\n    title: '',\n    description: '',\n    recipient: ''\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: '',\n    height: 0\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: '',\n    description: '',\n    recipient: '',\n    amount: '',\n    deposit: ''\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = {\n    address: '',\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: ''\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: '',\n    period: 0\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: '',\n    height: 0,\n    period: 0\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = {\n    fromAddress: '',\n    toAddress: '',\n    endTime: 0,\n    delayed: false\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Channel, Packet } from '../../../../ibc/core/channel/v1/channel';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseMsgChannelOpenInit = { portId: '', signer: '' };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenTry = {\n    portId: '',\n    previousChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== '') {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenAck = {\n    portId: '',\n    channelId: '',\n    counterpartyChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== '') {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseInit = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgRecvPacket = { signer: '' };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    }\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    }\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    }\n};\nconst baseMsgAcknowledgement = { signer: '' };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenInit', data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenTry', data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenAck', data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenConfirm', data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseInit', data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseConfirm', data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'RecvPacket', data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Timeout', data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'TimeoutOnClose', data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Acknowledgement', data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = {\n    denom: '',\n    amount: 0,\n    sender: '',\n    receiver: ''\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedClientState, ClientConsensusStates, Params } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    }\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseIdentifiedGenesisMetadata = { clientId: '' };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Counterparty, Version } from '../../../../ibc/core/connection/v1/connection';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.connection.v1';\nconst baseMsgConnectionOpenInit = {\n    clientId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: '',\n    previousConnectionId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== '') {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: '',\n    counterpartyConnectionId: '',\n    signer: ''\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== '') {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: '', signer: '' };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenInit', data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenTry', data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenAck', data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenConfirm', data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from '../../../../confio/proofs';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.core.commitment.v1';\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePath = { keyPath: '' };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ics23';\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_HASH':\n            return HashOp.NO_HASH;\n        case 1:\n        case 'SHA256':\n            return HashOp.SHA256;\n        case 2:\n        case 'SHA512':\n            return HashOp.SHA512;\n        case 3:\n        case 'KECCAK':\n            return HashOp.KECCAK;\n        case 4:\n        case 'RIPEMD160':\n            return HashOp.RIPEMD160;\n        case 5:\n        case 'BITCOIN':\n            return HashOp.BITCOIN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return 'NO_HASH';\n        case HashOp.SHA256:\n            return 'SHA256';\n        case HashOp.SHA512:\n            return 'SHA512';\n        case HashOp.KECCAK:\n            return 'KECCAK';\n        case HashOp.RIPEMD160:\n            return 'RIPEMD160';\n        case HashOp.BITCOIN:\n            return 'BITCOIN';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_PREFIX':\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case 'VAR_PROTO':\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case 'VAR_RLP':\n            return LengthOp.VAR_RLP;\n        case 3:\n        case 'FIXED32_BIG':\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case 'FIXED32_LITTLE':\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case 'FIXED64_BIG':\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case 'FIXED64_LITTLE':\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case 'REQUIRE_32_BYTES':\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case 'REQUIRE_64_BYTES':\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return 'NO_PREFIX';\n        case LengthOp.VAR_PROTO:\n            return 'VAR_PROTO';\n        case LengthOp.VAR_RLP:\n            return 'VAR_RLP';\n        case LengthOp.FIXED32_BIG:\n            return 'FIXED32_BIG';\n        case LengthOp.FIXED32_LITTLE:\n            return 'FIXED32_LITTLE';\n        case LengthOp.FIXED64_BIG:\n            return 'FIXED64_BIG';\n        case LengthOp.FIXED64_LITTLE:\n            return 'FIXED64_LITTLE';\n        case LengthOp.REQUIRE_32_BYTES:\n            return 'REQUIRE_32_BYTES';\n        case LengthOp.REQUIRE_64_BYTES:\n            return 'REQUIRE_64_BYTES';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch ? BatchProof.toJSON(message.batch) : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    }\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    }\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    }\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Event } from '../../../../tendermint/abci/types';\nexport const protobufPackage = 'cosmos.base.abci.v1beta1';\nconst baseTxResponse = {\n    height: 0,\n    txhash: '',\n    codespace: '',\n    code: 0,\n    data: '',\n    rawLog: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: ''\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== '') {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== '') {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== '') {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== '') {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    }\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: '' };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseStringEvent = { type: '' };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseAttribute = { key: '', value: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseResult = { log: '' };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgData = { msgType: '' };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== '') {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = {\n    sourcePort: '',\n    sourceChannel: '',\n    sender: '',\n    receiver: '',\n    timeoutTimestamp: 0\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n"],"sourceRoot":""}