{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/ethermint/evm/v1/evm.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?cc14","webpack:///./src/App.vue?8ecf","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.aguaclara/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.aguaclara/module/types/aguaclara/packet.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.aguaclara/module/types/aguaclara/tx.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.aguaclara/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.aguaclara/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/event.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/authz.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/feegrant/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/feegrant/v1beta1/feegrant.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/authz.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/rest.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/index.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/ethermint/evm/v1/genesis.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?5e87","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?4306","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?eaa4","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/App.vue?b519","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/ethermint/evm/v1/query.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/ethermint/evm/v1/tx.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/did_registry.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/cosmos/upgrade/v1beta1/upgrade.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/authz.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseMsgUpdateMetadataOwnership","hash","previousOwner","newOwner","currentChainId","recipientChainId","sender","tokenAddress","tokenId","MsgUpdateMetadataOwnership","string","String","baseMsgRegisterRelay","chain","alg","pub","MsgRegisterRelay","baseMsgRegisterRelayResponse","id","MsgRegisterRelayResponse","baseMsgCreateDid","creator","vanityName","didType","MsgCreateDid","baseMsgUpdateDid","did","metadata","cid","MsgUpdateDid","baseMsgRevokeDid","MsgRevokeDid","baseMsgMintTrustedContent","metadataRef","denomId","recipient","didOwner","lazyMint","price","v","MsgMintTrustedContent","bool","uint64","Boolean","baseMsgSendCrossMintTrusted","metaTransaction","destinationDomain","MsgSendCrossMintTrusted","baseMsgSendCrossMintTrustedResponse","MsgSendCrossMintTrustedResponse","baseMsgMintSwapResponse","MsgMintSwapResponse","baseMsgMintSwap","destinationDenomId","MsgMintSwap","baseMsgInitiateSwap","MsgInitiateSwap","baseMsgInitiateSwapResponse","relayTo","voucher","MsgInitiateSwapResponse","baseMsgClaimSwap","MsgClaimSwap","baseMsgClaimSwapResponse","MsgClaimSwapResponse","baseMsgMintTrustedResource","resourceWhitelistAccess","resourceLocation","MsgMintTrustedResource","e","map","baseMsgRoyaltyInfo","receiver","royaltyFeePercentage","MsgRoyaltyInfo","baseMsgIssueDenom","schema","symbol","mintRestricted","updateRestricted","MsgIssueDenom","baseMsgTransferNFT","uri","MsgTransferNFT","baseMsgCreateDIDOwner","owner","didKey","didWeb","MsgCreateDIDOwner","baseMsgCreateDIDOwnerResponse","MsgCreateDIDOwnerResponse","_","baseMsgChangeOwner","identity","MsgChangeOwner","baseMsgGrantDelegate","delegate","delegateType","validity","MsgGrantDelegate","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","actor","MsgSetAttribute","bytes","bytesFromBase64","base64FromBytes","baseMsgSetAttributeResponse","MsgSetAttributeResponse","baseMsgGrantAttribute","MsgGrantAttribute","baseMsgRevokeAttribute","MsgRevokeAttribute","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgFileMetadataResponse","MsgFileMetadataResponse","baseMsgMetadata","description","image","parent","additionalSources","links","verifiedCredentialRef","from","enableIpldForestAccess","factRef","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","baseMsgFileResponse","MsgFileResponse","baseMsgSendMetadataOwnership","MsgSendMetadataOwnership","AguaclaraPacketData","fork","ldelim","baseAguaclaraPacketData","didRecipient","toMetadata","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","baseAny","typeUrl","Any","baseDuration","Duration","baseEquivocation","height","power","consensusAddress","Equivocation","toTimestamp","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","basePermanentLockedAccount","PermanentLockedAccount","basePageRequest","offset","limit","countTotal","reverse","PageRequest","basePageResponse","total","PageResponse","nextKey","baseParams","evmDenom","enableCreate","enableCall","extraEips","Params","chainConfig","ChainConfig","end2","baseChainConfig","homesteadBlock","daoForkBlock","daoForkSupport","eip150Block","eip150Hash","eip155Block","eip158Block","byzantiumBlock","constantinopleBlock","petersburgBlock","istanbulBlock","muirGlacierBlock","berlinBlock","catalystBlock","londonBlock","baseState","State","baseTransactionLogs","TransactionLogs","logs","Log","baseLog","address","topics","blockNumber","txHash","txIndex","blockHash","index","removed","baseTxResult","contractAddress","reverted","gasUsed","TxResult","bloom","txLogs","ret","baseAccessTuple","storageKeys","AccessTuple","baseTraceConfig","tracer","timeout","reexec","disableMemory","disableStack","disableStorage","disableReturnData","debug","TraceConfig","overrides","baseFungibleTokenPacketData","denom","FungibleTokenPacketData","baseDenomTrace","baseDenom","DenomTrace","sendEnabled","receiveEnabled","baseHeight","revisionNumber","revisionHeight","Height","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","UNRECOGNIZED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","header","Header","valset","Validator","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","website","securityContact","details","Description","baseValidator","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","maxValidators","maxEntries","historicalEntries","bondDenom","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","__exports__","components","Sidebar","created","dispatch","errorCaptured","err","console","log","render","ContentType","baseNoData","NoData","portId","channelId","types","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgSendMetadataOwnership","initTxClient","vuexGetters","getStructure","template","structure","fields","field","type","getDefaultState","_Structure","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","assign","QUERY","query","JSON","stringify","SUBSCRIBE","subscription","add","UNSUBSCRIBE","delete","getters","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","sendMsgSendMetadataOwnership","msg","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","request","body","secure","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryReadDelegate","method","queryIdentifyOwner","queryGetAttributes","queryGetDidKey","queryCollection","queryDenoms","queryDenom","queryOwner","queryGetNft","queryReadMetadataProof","queryResource","queryReadRoyaltyInfo","queryReadWithPath","queryResolveDidWeb","msgRevokeDelegate","msgTransferNFT","msgChangeOwner","msgUpdateMetadataOwnership","msgMintNFT","msgGrantAttribute","msgRevokeDid","msgEditNFT","msgUpdateDid","msgRevokeAttribute","msgRoyaltyInfo","msgIssueDenom","msgFile","msgMintTrustedContent","msgGrantDelegate","msgMintTrustedResource","msgTransferDenom","msgMetadata","msgCreateDid","msgBurnNFT","queryClient","initQueryClient","mergeResults","next_values","prop","ReadRoyaltyInfo","ReadWithPath","ReadMetadataProof","IdentifyOwner","GetAttributes","Resource","ReadDelegate","Owner","Collection","Denom","Denoms","GetNft","ResolveDidWeb","GetDidKey","DIDOwner","DIDWebRoute","Delegate","Change","Attribute","BaseNFT","IDCollection","QueryReadDidKeyRequest","QueryReadDidKeyResponse","QueryNonceRequest","QueryNonceResponse","QueryOwnersResponse","getReadRoyaltyInfo","getReadWithPath","getReadMetadataProof","getIdentifyOwner","getGetAttributes","getResource","getReadDelegate","getOwner","getCollection","getDenom","getDenoms","getGetNft","getResolveDidWeb","getGetDidKey","QueryReadRoyaltyInfo","options","subscribe","all","QueryReadWithPath","QueryReadMetadataProof","QueryIdentifyOwner","QueryGetAttributes","QueryResource","pagination","QueryReadDelegate","QueryOwner","QueryCollection","denom_id","QueryDenom","QueryDenoms","QueryGetNft","token_id","QueryResolveDidWeb","QueryGetDidKey","sendMsgRevokeDelegate","sendMsgTransferNFT","sendMsgChangeOwner","sendMsgUpdateMetadataOwnership","sendMsgMintNFT","sendMsgGrantAttribute","sendMsgRevokeDid","sendMsgEditNFT","sendMsgUpdateDid","sendMsgRevokeAttribute","sendMsgRoyaltyInfo","sendMsgIssueDenom","sendMsgFile","sendMsgMintTrustedContent","sendMsgGrantDelegate","sendMsgMintTrustedResource","sendMsgTransferDenom","sendMsgMetadata","sendMsgCreateDid","sendMsgBurnNFT","queryGrants","MsgGrant","MsgExec","MsgRevoke","msgGrant","msgExec","msgRevoke","baseEventGrant","msgTypeUrl","granter","grantee","EventGrant","baseEventRevoke","EventRevoke","baseGrantAuthorization","GrantAuthorization","authorization","expiration","Grants","GenericAuthorization","Grant","getGrants","QueryGrants","sendMsgGrant","sendMsgExec","sendMsgRevoke","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgSend","msgMultiSend","baseSendAuthorization","SendAuthorization","spendLimit","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryParams","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","sendMsgMultiSend","baseMsgVerifyInvariant","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgFundCommunityPool","msgWithdrawDelegatorReward","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgSetWithdrawAddress","sendMsgFundCommunityPool","sendMsgWithdrawDelegatorReward","queryAllEvidence","queryEvidence","evidenceHash","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","queryAllowance","queryAllowances","baseMsgGrantAllowance","MsgGrantAllowance","allowance","baseMsgRevokeAllowance","MsgRevokeAllowance","msgRevokeAllowance","msgGrantAllowance","baseBasicAllowance","BasicAllowance","basePeriodicAllowance","PeriodicAllowance","basic","period","periodSpendLimit","periodCanSpend","periodReset","baseAllowedMsgAllowance","allowedMessages","AllowedMsgAllowance","baseGrant","V1Beta1ProposalStatus","V1Beta1VoteOption","Allowance","Allowances","getAllowance","getAllowances","QueryAllowance","QueryAllowances","sendMsgRevokeAllowance","sendMsgGrantAllowance","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgVote","MsgDeposit","MsgSubmitProposal","MsgVoteWeighted","msgVote","msgDeposit","msgSubmitProposal","msgVoteWeighted","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","WeightedVoteOption","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVote","sendMsgDeposit","sendMsgSubmitProposal","sendMsgVoteWeighted","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","V1Beta1BondStatus","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","AuthorizationType","msgCreateValidator","msgEditValidator","msgDelegate","msgBeginRedelegate","msgUndelegate","authorizationTypeFromJSON","AUTHORIZATION_TYPE_UNSPECIFIED","AUTHORIZATION_TYPE_DELEGATE","AUTHORIZATION_TYPE_UNDELEGATE","AUTHORIZATION_TYPE_REDELEGATE","authorizationTypeToJSON","baseStakeAuthorization","authorizationType","StakeAuthorization","maxTokens","allowList","StakeAuthorization_Validators","denyList","baseStakeAuthorization_Validators","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgCreateValidator","sendMsgEditValidator","sendMsgDelegate","sendMsgBeginRedelegate","sendMsgUndelegate","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTraces","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","queryAccount","queryCode","queryCosmosAccount","queryEstimateGas","queryEthCall","queryStorage","queryTraceTx","queryValidatorAccount","MsgEthereumTx","msgEthereumTx","baseGenesisAccount","code","GenesisAccount","storage","Account","CosmosAccount","ValidatorAccount","Storage","Code","EthCall","EstimateGas","TraceTx","QueryTxLogsRequest","QueryTxLogsResponse","QueryStaticCallResponse","LegacyTx","AccessListTx","DynamicFeeTx","ExtensionOptionsEthereumTx","getAccount","getCosmosAccount","getValidatorAccount","getStorage","getCode","getEthCall","getEstimateGas","getTraceTx","QueryAccount","QueryCosmosAccount","QueryValidatorAccount","QueryStorage","QueryCode","QueryEthCall","QueryEstimateGas","QueryTraceTx","sendMsgEthereumTx","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAguaclara","load","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","CosmosCosmosSdkCosmosAuthzV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosFeegrantV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosIbcGoIbcApplicationsTransferV1","TharsisEthermintEthermintEvmV1","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseQueryTxLogsRequest","baseQueryTxLogsResponse","baseQueryStaticCallResponse","baseMsgTransfer","sourcePort","sourceChannel","timeoutTimestamp","token","timeoutHeight","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","DecCoin","baseValidatorCurrentRewards","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseBaseNFT","baseIDCollection","tokenIds","baseOwner","idCollections","baseCollection","nfts","baseMsgEthereumTx","size","double","baseLegacyTx","nonce","gasPrice","to","baseAccessListTx","chainId","accesses","baseDynamicFeeTx","gasTipCap","gasFeeCap","baseExtensionOptionsEthereumTx","baseMsgEthereumTxResponse","vmError","MsgEthereumTxResponse","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseDecCoin","baseMsgGrant","grant","baseMsgExec","baseMsgRevoke","baseBaseAccount","accountNumber","sequence","pubKey","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseWeightedVoteOption","option","weight","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseDIDOwner","didWebDeactivated","baseDIDWebRoute","route","baseDelegate","baseChange","previousChange","baseAttribute","baseQueryReadDidKeyRequest","baseQueryReadDidKeyResponse","baseQueryNonceRequest","baseQueryNonceResponse","baseQueryOwnersResponse","baseConsensus","block","Consensus","baseLastValidatorPower","basePlan","info","Plan","basePublicKey","PublicKey","ed25519","secp256k1","baseValidatorSet","totalVotingPower","ValidatorSet","validators","proposer","votingPower","proposerPriority","BlockIDFlag","SignedMsgType","basePartSetHeader","PartSetHeader","baseBlockID","BlockID","partSetHeader","baseHeader","version","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","proposerAddress","baseGenericAuthorization","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgVoteWeighted","baseMsgDeposit"],"mappings":"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","file":"js/app.1f908269.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgUpdateMetadataOwnership = {\n    hash: '',\n    previousOwner: '',\n    newOwner: '',\n    currentChainId: '',\n    recipientChainId: '',\n    sender: '',\n    tokenAddress: '',\n    tokenId: ''\n};\nexport const MsgUpdateMetadataOwnership = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        if (message.previousOwner !== '') {\n            writer.uint32(18).string(message.previousOwner);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        if (message.currentChainId !== '') {\n            writer.uint32(34).string(message.currentChainId);\n        }\n        if (message.recipientChainId !== '') {\n            writer.uint32(42).string(message.recipientChainId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.tokenAddress !== '') {\n            writer.uint32(58).string(message.tokenAddress);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(66).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateMetadataOwnership };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.previousOwner = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                case 4:\n                    message.currentChainId = reader.string();\n                    break;\n                case 5:\n                    message.recipientChainId = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.tokenAddress = reader.string();\n                    break;\n                case 8:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateMetadataOwnership };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.previousOwner !== undefined && object.previousOwner !== null) {\n            message.previousOwner = String(object.previousOwner);\n        }\n        else {\n            message.previousOwner = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = String(object.currentChainId);\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = String(object.recipientChainId);\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.tokenAddress !== undefined && object.tokenAddress !== null) {\n            message.tokenAddress = String(object.tokenAddress);\n        }\n        else {\n            message.tokenAddress = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.previousOwner !== undefined && (obj.previousOwner = message.previousOwner);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        message.currentChainId !== undefined && (obj.currentChainId = message.currentChainId);\n        message.recipientChainId !== undefined && (obj.recipientChainId = message.recipientChainId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.tokenAddress !== undefined && (obj.tokenAddress = message.tokenAddress);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateMetadataOwnership };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.previousOwner !== undefined && object.previousOwner !== null) {\n            message.previousOwner = object.previousOwner;\n        }\n        else {\n            message.previousOwner = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = object.currentChainId;\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = object.recipientChainId;\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.tokenAddress !== undefined && object.tokenAddress !== null) {\n            message.tokenAddress = object.tokenAddress;\n        }\n        else {\n            message.tokenAddress = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateMetadataOwnershipResponse = { metadataRef: '', packetRef: '' };\nexport const MsgUpdateMetadataOwnershipResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.metadataRef !== '') {\n            writer.uint32(10).string(message.metadataRef);\n        }\n        if (message.packetRef !== '') {\n            writer.uint32(18).string(message.packetRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateMetadataOwnershipResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.metadataRef = reader.string();\n                    break;\n                case 2:\n                    message.packetRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateMetadataOwnershipResponse };\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.packetRef !== undefined && object.packetRef !== null) {\n            message.packetRef = String(object.packetRef);\n        }\n        else {\n            message.packetRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.packetRef !== undefined && (obj.packetRef = message.packetRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateMetadataOwnershipResponse };\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.packetRef !== undefined && object.packetRef !== null) {\n            message.packetRef = object.packetRef;\n        }\n        else {\n            message.packetRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRegisterRelay = { sender: '', chain: '', alg: '', pub: '' };\nexport const MsgRegisterRelay = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.chain !== '') {\n            writer.uint32(18).string(message.chain);\n        }\n        if (message.alg !== '') {\n            writer.uint32(26).string(message.alg);\n        }\n        if (message.pub !== '') {\n            writer.uint32(34).string(message.pub);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRegisterRelay };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.chain = reader.string();\n                    break;\n                case 3:\n                    message.alg = reader.string();\n                    break;\n                case 4:\n                    message.pub = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRegisterRelay };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = String(object.chain);\n        }\n        else {\n            message.chain = '';\n        }\n        if (object.alg !== undefined && object.alg !== null) {\n            message.alg = String(object.alg);\n        }\n        else {\n            message.alg = '';\n        }\n        if (object.pub !== undefined && object.pub !== null) {\n            message.pub = String(object.pub);\n        }\n        else {\n            message.pub = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.chain !== undefined && (obj.chain = message.chain);\n        message.alg !== undefined && (obj.alg = message.alg);\n        message.pub !== undefined && (obj.pub = message.pub);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRegisterRelay };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = object.chain;\n        }\n        else {\n            message.chain = '';\n        }\n        if (object.alg !== undefined && object.alg !== null) {\n            message.alg = object.alg;\n        }\n        else {\n            message.alg = '';\n        }\n        if (object.pub !== undefined && object.pub !== null) {\n            message.pub = object.pub;\n        }\n        else {\n            message.pub = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRegisterRelayResponse = { id: '' };\nexport const MsgRegisterRelayResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRegisterRelayResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRegisterRelayResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRegisterRelayResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDid = { creator: '', vanityName: '', didType: '' };\nexport const MsgCreateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(18).string(message.vanityName);\n        }\n        if (message.didType !== '') {\n            writer.uint32(26).string(message.didType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.vanityName = reader.string();\n                    break;\n                case 3:\n                    message.didType = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = String(object.didType);\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        message.didType !== undefined && (obj.didType = message.didType);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = object.didType;\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDidResponse = { cid: '', did: '' };\nexport const MsgCreateDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.did !== undefined && (obj.did = message.did);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgUpdateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDidResponse = {};\nexport const MsgUpdateDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgRevokeDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDidResponse = { id: 0 };\nexport const MsgRevokeDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContent = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedContent = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(56).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(74).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(82).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(88).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.r = reader.string();\n                    break;\n                case 10:\n                    message.s = reader.string();\n                    break;\n                case 11:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContentResponse = { id: 0 };\nexport const MsgMintTrustedContentResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContentResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgSendCrossMintTrusted = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    lazyMint: false,\n    price: 0,\n    metaTransaction: '',\n    destinationDomain: 0\n};\nexport const MsgSendCrossMintTrusted = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(56).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.metaTransaction !== '') {\n            writer.uint32(74).string(message.metaTransaction);\n        }\n        if (message.destinationDomain !== 0) {\n            writer.uint32(80).uint64(message.destinationDomain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendCrossMintTrusted };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.metaTransaction = reader.string();\n                    break;\n                case 10:\n                    message.destinationDomain = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendCrossMintTrusted };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.metaTransaction !== undefined && object.metaTransaction !== null) {\n            message.metaTransaction = String(object.metaTransaction);\n        }\n        else {\n            message.metaTransaction = '';\n        }\n        if (object.destinationDomain !== undefined && object.destinationDomain !== null) {\n            message.destinationDomain = Number(object.destinationDomain);\n        }\n        else {\n            message.destinationDomain = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.metaTransaction !== undefined && (obj.metaTransaction = message.metaTransaction);\n        message.destinationDomain !== undefined && (obj.destinationDomain = message.destinationDomain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendCrossMintTrusted };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.metaTransaction !== undefined && object.metaTransaction !== null) {\n            message.metaTransaction = object.metaTransaction;\n        }\n        else {\n            message.metaTransaction = '';\n        }\n        if (object.destinationDomain !== undefined && object.destinationDomain !== null) {\n            message.destinationDomain = object.destinationDomain;\n        }\n        else {\n            message.destinationDomain = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgSendCrossMintTrustedResponse = { id: 0 };\nexport const MsgSendCrossMintTrustedResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendCrossMintTrustedResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendCrossMintTrustedResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendCrossMintTrustedResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintSwapResponse = { id: 0 };\nexport const MsgMintSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintSwap = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    destinationDenomId: '',\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.destinationDenomId !== '') {\n            writer.uint32(58).string(message.destinationDenomId);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(74).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(82).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(88).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.destinationDenomId = reader.string();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.r = reader.string();\n                    break;\n                case 10:\n                    message.s = reader.string();\n                    break;\n                case 11:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.destinationDenomId !== undefined && object.destinationDenomId !== null) {\n            message.destinationDenomId = String(object.destinationDenomId);\n        }\n        else {\n            message.destinationDenomId = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.destinationDenomId !== undefined && (obj.destinationDenomId = message.destinationDenomId);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.destinationDenomId !== undefined && object.destinationDenomId !== null) {\n            message.destinationDenomId = object.destinationDenomId;\n        }\n        else {\n            message.destinationDenomId = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwap = { creator: '' };\nexport const MsgInitiateSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwapResponse = { relayTo: 0, voucher: '', key: '' };\nexport const MsgInitiateSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.relayTo !== 0) {\n            writer.uint32(8).uint64(message.relayTo);\n        }\n        if (message.voucher !== '') {\n            writer.uint32(18).string(message.voucher);\n        }\n        if (message.key !== '') {\n            writer.uint32(26).string(message.key);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.relayTo = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voucher = reader.string();\n                    break;\n                case 3:\n                    message.key = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.relayTo !== undefined && object.relayTo !== null) {\n            message.relayTo = Number(object.relayTo);\n        }\n        else {\n            message.relayTo = 0;\n        }\n        if (object.voucher !== undefined && object.voucher !== null) {\n            message.voucher = String(object.voucher);\n        }\n        else {\n            message.voucher = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.relayTo !== undefined && (obj.relayTo = message.relayTo);\n        message.voucher !== undefined && (obj.voucher = message.voucher);\n        message.key !== undefined && (obj.key = message.key);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.relayTo !== undefined && object.relayTo !== null) {\n            message.relayTo = object.relayTo;\n        }\n        else {\n            message.relayTo = 0;\n        }\n        if (object.voucher !== undefined && object.voucher !== null) {\n            message.voucher = object.voucher;\n        }\n        else {\n            message.voucher = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwap = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgClaimSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwapResponse = { id: 0 };\nexport const MsgClaimSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResource = {\n    creator: '',\n    metadataRef: '',\n    didOwner: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    resourceWhitelistAccess: '',\n    resourceLocation: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedResource = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(26).string(message.didOwner);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(34).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(50).string(message.recipient);\n        }\n        for (const v of message.resourceWhitelistAccess) {\n            writer.uint32(58).string(v);\n        }\n        if (message.resourceLocation !== '') {\n            writer.uint32(66).string(message.resourceLocation);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(72).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(80).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(90).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(98).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(104).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.didOwner = reader.string();\n                    break;\n                case 4:\n                    message.denomId = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.recipient = reader.string();\n                    break;\n                case 7:\n                    message.resourceWhitelistAccess.push(reader.string());\n                    break;\n                case 8:\n                    message.resourceLocation = reader.string();\n                    break;\n                case 9:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 10:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 11:\n                    message.r = reader.string();\n                    break;\n                case 12:\n                    message.s = reader.string();\n                    break;\n                case 13:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(String(e));\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = String(object.resourceLocation);\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.resourceWhitelistAccess) {\n            obj.resourceWhitelistAccess = message.resourceWhitelistAccess.map((e) => e);\n        }\n        else {\n            obj.resourceWhitelistAccess = [];\n        }\n        message.resourceLocation !== undefined && (obj.resourceLocation = message.resourceLocation);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(e);\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = object.resourceLocation;\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResourceResponse = { id: 0 };\nexport const MsgMintTrustedResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfo = { creator: '', id: '', receiver: '', royaltyFeePercentage: 0, metadataRef: '', denomId: '' };\nexport const MsgRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== '') {\n            writer.uint32(18).string(message.id);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(26).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(32).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(42).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(50).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = reader.string();\n                    break;\n                case 3:\n                    message.receiver = reader.string();\n                    break;\n                case 4:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.metadataRef = reader.string();\n                    break;\n                case 6:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfoResponse = { receiver: '', royaltyFeePercentage: 0, metadataRef: '' };\nexport const MsgRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(16).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(26).string(message.metadataRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.metadataRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = { identity: '', owner: '', previousChange: 0 };\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwner = { creator: '', owner: '', didKey: '', didWeb: '' };\nexport const MsgCreateDIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(26).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(34).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didKey = reader.string();\n                    break;\n                case 4:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwnerResponse = {};\nexport const MsgCreateDIDOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    }\n};\nconst baseMsgChangeOwner = { creator: '', identity: '', newOwner: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgGrantDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegateResponse = {};\nexport const MsgGrantDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.creator !== '') {\n            writer.uint32(26).string(message.creator);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(34).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(42).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.bytes();\n                    break;\n                case 5:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttribute = { identity: '', actor: '', creator: '', validity: 0 };\nexport const MsgGrantAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(48).uint64(message.validity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                case 6:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.validity !== undefined && (obj.validity = message.validity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttributeResponse = { ok: false };\nexport const MsgGrantAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.ok === true) {\n            writer.uint32(8).bool(message.ok);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ok = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = Boolean(object.ok);\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ok !== undefined && (obj.ok = message.ok);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = object.ok;\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgRevokeAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttributeResponse = {};\nexport const MsgRevokeAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    additionalSources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: '',\n    enableIpldForestAccess: false,\n    factRef: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        for (const v of message.additionalSources) {\n            writer.uint32(58).string(v);\n        }\n        for (const v of message.links) {\n            writer.uint32(66).string(v);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        if (message.enableIpldForestAccess === true) {\n            writer.uint32(96).bool(message.enableIpldForestAccess);\n        }\n        if (message.factRef !== '') {\n            writer.uint32(106).string(message.factRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        message.additionalSources = [];\n        message.links = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.additionalSources.push(reader.string());\n                    break;\n                case 8:\n                    message.links.push(reader.string());\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                case 12:\n                    message.enableIpldForestAccess = reader.bool();\n                    break;\n                case 13:\n                    message.factRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        message.additionalSources = [];\n        message.links = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.additionalSources !== undefined && object.additionalSources !== null) {\n            for (const e of object.additionalSources) {\n                message.additionalSources.push(String(e));\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(String(e));\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = Boolean(object.enableIpldForestAccess);\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = String(object.factRef);\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        if (message.additionalSources) {\n            obj.additionalSources = message.additionalSources.map((e) => e);\n        }\n        else {\n            obj.additionalSources = [];\n        }\n        if (message.links) {\n            obj.links = message.links.map((e) => e);\n        }\n        else {\n            obj.links = [];\n        }\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        message.enableIpldForestAccess !== undefined && (obj.enableIpldForestAccess = message.enableIpldForestAccess);\n        message.factRef !== undefined && (obj.factRef = message.factRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        message.additionalSources = [];\n        message.links = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.additionalSources !== undefined && object.additionalSources !== null) {\n            for (const e of object.additionalSources) {\n                message.additionalSources.push(e);\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(e);\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = object.enableIpldForestAccess;\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = object.factRef;\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSendMetadataOwnership = { creator: '' };\nexport const MsgSendMetadataOwnership = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.data !== undefined) {\n            AguaclaraPacketData.encode(message.data, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendMetadataOwnership };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.data = AguaclaraPacketData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendMetadataOwnership };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = AguaclaraPacketData.fromJSON(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.data !== undefined && (obj.data = message.data ? AguaclaraPacketData.toJSON(message.data) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendMetadataOwnership };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = AguaclaraPacketData.fromPartial(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSendMetadataOwnershipResponse = { cid: '' };\nexport const MsgSendMetadataOwnershipResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendMetadataOwnershipResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendMetadataOwnershipResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendMetadataOwnershipResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseAguaclaraPacketData = {\n    creator: '',\n    tokenAddress: '',\n    tokenId: '',\n    didRecipient: '',\n    toMetadata: '',\n    hash: '',\n    currentChainId: '',\n    recipientChainId: ''\n};\nexport const AguaclaraPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.tokenAddress !== '') {\n            writer.uint32(18).string(message.tokenAddress);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(26).string(message.tokenId);\n        }\n        if (message.didRecipient !== '') {\n            writer.uint32(34).string(message.didRecipient);\n        }\n        if (message.toMetadata !== '') {\n            writer.uint32(42).string(message.toMetadata);\n        }\n        if (message.hash !== '') {\n            writer.uint32(50).string(message.hash);\n        }\n        if (message.currentChainId !== '') {\n            writer.uint32(58).string(message.currentChainId);\n        }\n        if (message.recipientChainId !== '') {\n            writer.uint32(66).string(message.recipientChainId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAguaclaraPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.tokenAddress = reader.string();\n                    break;\n                case 3:\n                    message.tokenId = reader.string();\n                    break;\n                case 4:\n                    message.didRecipient = reader.string();\n                    break;\n                case 5:\n                    message.toMetadata = reader.string();\n                    break;\n                case 6:\n                    message.hash = reader.string();\n                    break;\n                case 7:\n                    message.currentChainId = reader.string();\n                    break;\n                case 8:\n                    message.recipientChainId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAguaclaraPacketData };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.tokenAddress !== undefined && object.tokenAddress !== null) {\n            message.tokenAddress = String(object.tokenAddress);\n        }\n        else {\n            message.tokenAddress = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = String(object.didRecipient);\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.toMetadata !== undefined && object.toMetadata !== null) {\n            message.toMetadata = String(object.toMetadata);\n        }\n        else {\n            message.toMetadata = '';\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = String(object.currentChainId);\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = String(object.recipientChainId);\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.tokenAddress !== undefined && (obj.tokenAddress = message.tokenAddress);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        message.didRecipient !== undefined && (obj.didRecipient = message.didRecipient);\n        message.toMetadata !== undefined && (obj.toMetadata = message.toMetadata);\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.currentChainId !== undefined && (obj.currentChainId = message.currentChainId);\n        message.recipientChainId !== undefined && (obj.recipientChainId = message.recipientChainId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAguaclaraPacketData };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.tokenAddress !== undefined && object.tokenAddress !== null) {\n            message.tokenAddress = object.tokenAddress;\n        }\n        else {\n            message.tokenAddress = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = object.didRecipient;\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.toMetadata !== undefined && object.toMetadata !== null) {\n            message.toMetadata = object.toMetadata;\n        }\n        else {\n            message.toMetadata = '';\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = object.currentChainId;\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = object.recipientChainId;\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SendMetadataOwnership(request) {\n        const data = MsgSendMetadataOwnership.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'SendMetadataOwnership', data);\n        return promise.then((data) => MsgSendMetadataOwnershipResponse.decode(new Reader(data)));\n    }\n    CreateDid(request) {\n        const data = MsgCreateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'CreateDid', data);\n        return promise.then((data) => MsgCreateDidResponse.decode(new Reader(data)));\n    }\n    UpdateDid(request) {\n        const data = MsgUpdateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'UpdateDid', data);\n        return promise.then((data) => MsgUpdateDidResponse.decode(new Reader(data)));\n    }\n    RevokeDid(request) {\n        const data = MsgRevokeDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDid', data);\n        return promise.then((data) => MsgRevokeDidResponse.decode(new Reader(data)));\n    }\n    RoyaltyInfo(request) {\n        const data = MsgRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RoyaltyInfo', data);\n        return promise.then((data) => MsgRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    GrantDelegate(request) {\n        const data = MsgGrantDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantDelegate', data);\n        return promise.then((data) => MsgGrantDelegateResponse.decode(new Reader(data)));\n    }\n    GrantAttribute(request) {\n        const data = MsgGrantAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantAttribute', data);\n        return promise.then((data) => MsgGrantAttributeResponse.decode(new Reader(data)));\n    }\n    RevokeAttribute(request) {\n        const data = MsgRevokeAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeAttribute', data);\n        return promise.then((data) => MsgRevokeAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n    MintTrustedContent(request) {\n        const data = MsgMintTrustedContent.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedContent', data);\n        return promise.then((data) => MsgMintTrustedContentResponse.decode(new Reader(data)));\n    }\n    MintTrustedResource(request) {\n        const data = MsgMintTrustedResource.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedResource', data);\n        return promise.then((data) => MsgMintTrustedResourceResponse.decode(new Reader(data)));\n    }\n    UpdateMetadataOwnership(request) {\n        const data = MsgUpdateMetadataOwnership.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'UpdateMetadataOwnership', data);\n        return promise.then((data) => MsgUpdateMetadataOwnershipResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined && object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined && (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined && object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined && object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined && object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined && (obj.baseAccount = message.baseAccount ? BaseAccount.toJSON(message.baseAccount) : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined && object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined && object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseContinuousVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseContinuousVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseContinuousVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => (e ? Period.toJSON(e) : undefined));\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePermanentLockedAccount = {};\nexport const PermanentLockedAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePermanentLockedAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePermanentLockedAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePermanentLockedAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false, reverse: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        if (message.reverse === true) {\n            writer.uint32(40).bool(message.reverse);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                case 5:\n                    message.reverse = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = Boolean(object.reverse);\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        message.reverse !== undefined && (obj.reverse = message.reverse);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = object.reverse;\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ethermint.evm.v1';\nconst baseParams = { evmDenom: '', enableCreate: false, enableCall: false, extraEips: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.evmDenom !== '') {\n            writer.uint32(10).string(message.evmDenom);\n        }\n        if (message.enableCreate === true) {\n            writer.uint32(16).bool(message.enableCreate);\n        }\n        if (message.enableCall === true) {\n            writer.uint32(24).bool(message.enableCall);\n        }\n        writer.uint32(34).fork();\n        for (const v of message.extraEips) {\n            writer.int64(v);\n        }\n        writer.ldelim();\n        if (message.chainConfig !== undefined) {\n            ChainConfig.encode(message.chainConfig, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.extraEips = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.evmDenom = reader.string();\n                    break;\n                case 2:\n                    message.enableCreate = reader.bool();\n                    break;\n                case 3:\n                    message.enableCall = reader.bool();\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.extraEips.push(longToNumber(reader.int64()));\n                        }\n                    }\n                    else {\n                        message.extraEips.push(longToNumber(reader.int64()));\n                    }\n                    break;\n                case 5:\n                    message.chainConfig = ChainConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.extraEips = [];\n        if (object.evmDenom !== undefined && object.evmDenom !== null) {\n            message.evmDenom = String(object.evmDenom);\n        }\n        else {\n            message.evmDenom = '';\n        }\n        if (object.enableCreate !== undefined && object.enableCreate !== null) {\n            message.enableCreate = Boolean(object.enableCreate);\n        }\n        else {\n            message.enableCreate = false;\n        }\n        if (object.enableCall !== undefined && object.enableCall !== null) {\n            message.enableCall = Boolean(object.enableCall);\n        }\n        else {\n            message.enableCall = false;\n        }\n        if (object.extraEips !== undefined && object.extraEips !== null) {\n            for (const e of object.extraEips) {\n                message.extraEips.push(Number(e));\n            }\n        }\n        if (object.chainConfig !== undefined && object.chainConfig !== null) {\n            message.chainConfig = ChainConfig.fromJSON(object.chainConfig);\n        }\n        else {\n            message.chainConfig = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.evmDenom !== undefined && (obj.evmDenom = message.evmDenom);\n        message.enableCreate !== undefined && (obj.enableCreate = message.enableCreate);\n        message.enableCall !== undefined && (obj.enableCall = message.enableCall);\n        if (message.extraEips) {\n            obj.extraEips = message.extraEips.map((e) => e);\n        }\n        else {\n            obj.extraEips = [];\n        }\n        message.chainConfig !== undefined && (obj.chainConfig = message.chainConfig ? ChainConfig.toJSON(message.chainConfig) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.extraEips = [];\n        if (object.evmDenom !== undefined && object.evmDenom !== null) {\n            message.evmDenom = object.evmDenom;\n        }\n        else {\n            message.evmDenom = '';\n        }\n        if (object.enableCreate !== undefined && object.enableCreate !== null) {\n            message.enableCreate = object.enableCreate;\n        }\n        else {\n            message.enableCreate = false;\n        }\n        if (object.enableCall !== undefined && object.enableCall !== null) {\n            message.enableCall = object.enableCall;\n        }\n        else {\n            message.enableCall = false;\n        }\n        if (object.extraEips !== undefined && object.extraEips !== null) {\n            for (const e of object.extraEips) {\n                message.extraEips.push(e);\n            }\n        }\n        if (object.chainConfig !== undefined && object.chainConfig !== null) {\n            message.chainConfig = ChainConfig.fromPartial(object.chainConfig);\n        }\n        else {\n            message.chainConfig = undefined;\n        }\n        return message;\n    }\n};\nconst baseChainConfig = {\n    homesteadBlock: '',\n    daoForkBlock: '',\n    daoForkSupport: false,\n    eip150Block: '',\n    eip150Hash: '',\n    eip155Block: '',\n    eip158Block: '',\n    byzantiumBlock: '',\n    constantinopleBlock: '',\n    petersburgBlock: '',\n    istanbulBlock: '',\n    muirGlacierBlock: '',\n    berlinBlock: '',\n    catalystBlock: '',\n    londonBlock: ''\n};\nexport const ChainConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.homesteadBlock !== '') {\n            writer.uint32(10).string(message.homesteadBlock);\n        }\n        if (message.daoForkBlock !== '') {\n            writer.uint32(18).string(message.daoForkBlock);\n        }\n        if (message.daoForkSupport === true) {\n            writer.uint32(24).bool(message.daoForkSupport);\n        }\n        if (message.eip150Block !== '') {\n            writer.uint32(34).string(message.eip150Block);\n        }\n        if (message.eip150Hash !== '') {\n            writer.uint32(42).string(message.eip150Hash);\n        }\n        if (message.eip155Block !== '') {\n            writer.uint32(50).string(message.eip155Block);\n        }\n        if (message.eip158Block !== '') {\n            writer.uint32(58).string(message.eip158Block);\n        }\n        if (message.byzantiumBlock !== '') {\n            writer.uint32(66).string(message.byzantiumBlock);\n        }\n        if (message.constantinopleBlock !== '') {\n            writer.uint32(74).string(message.constantinopleBlock);\n        }\n        if (message.petersburgBlock !== '') {\n            writer.uint32(82).string(message.petersburgBlock);\n        }\n        if (message.istanbulBlock !== '') {\n            writer.uint32(90).string(message.istanbulBlock);\n        }\n        if (message.muirGlacierBlock !== '') {\n            writer.uint32(98).string(message.muirGlacierBlock);\n        }\n        if (message.berlinBlock !== '') {\n            writer.uint32(106).string(message.berlinBlock);\n        }\n        if (message.catalystBlock !== '') {\n            writer.uint32(130).string(message.catalystBlock);\n        }\n        if (message.londonBlock !== '') {\n            writer.uint32(138).string(message.londonBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChainConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.homesteadBlock = reader.string();\n                    break;\n                case 2:\n                    message.daoForkBlock = reader.string();\n                    break;\n                case 3:\n                    message.daoForkSupport = reader.bool();\n                    break;\n                case 4:\n                    message.eip150Block = reader.string();\n                    break;\n                case 5:\n                    message.eip150Hash = reader.string();\n                    break;\n                case 6:\n                    message.eip155Block = reader.string();\n                    break;\n                case 7:\n                    message.eip158Block = reader.string();\n                    break;\n                case 8:\n                    message.byzantiumBlock = reader.string();\n                    break;\n                case 9:\n                    message.constantinopleBlock = reader.string();\n                    break;\n                case 10:\n                    message.petersburgBlock = reader.string();\n                    break;\n                case 11:\n                    message.istanbulBlock = reader.string();\n                    break;\n                case 12:\n                    message.muirGlacierBlock = reader.string();\n                    break;\n                case 13:\n                    message.berlinBlock = reader.string();\n                    break;\n                case 16:\n                    message.catalystBlock = reader.string();\n                    break;\n                case 17:\n                    message.londonBlock = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChainConfig };\n        if (object.homesteadBlock !== undefined && object.homesteadBlock !== null) {\n            message.homesteadBlock = String(object.homesteadBlock);\n        }\n        else {\n            message.homesteadBlock = '';\n        }\n        if (object.daoForkBlock !== undefined && object.daoForkBlock !== null) {\n            message.daoForkBlock = String(object.daoForkBlock);\n        }\n        else {\n            message.daoForkBlock = '';\n        }\n        if (object.daoForkSupport !== undefined && object.daoForkSupport !== null) {\n            message.daoForkSupport = Boolean(object.daoForkSupport);\n        }\n        else {\n            message.daoForkSupport = false;\n        }\n        if (object.eip150Block !== undefined && object.eip150Block !== null) {\n            message.eip150Block = String(object.eip150Block);\n        }\n        else {\n            message.eip150Block = '';\n        }\n        if (object.eip150Hash !== undefined && object.eip150Hash !== null) {\n            message.eip150Hash = String(object.eip150Hash);\n        }\n        else {\n            message.eip150Hash = '';\n        }\n        if (object.eip155Block !== undefined && object.eip155Block !== null) {\n            message.eip155Block = String(object.eip155Block);\n        }\n        else {\n            message.eip155Block = '';\n        }\n        if (object.eip158Block !== undefined && object.eip158Block !== null) {\n            message.eip158Block = String(object.eip158Block);\n        }\n        else {\n            message.eip158Block = '';\n        }\n        if (object.byzantiumBlock !== undefined && object.byzantiumBlock !== null) {\n            message.byzantiumBlock = String(object.byzantiumBlock);\n        }\n        else {\n            message.byzantiumBlock = '';\n        }\n        if (object.constantinopleBlock !== undefined && object.constantinopleBlock !== null) {\n            message.constantinopleBlock = String(object.constantinopleBlock);\n        }\n        else {\n            message.constantinopleBlock = '';\n        }\n        if (object.petersburgBlock !== undefined && object.petersburgBlock !== null) {\n            message.petersburgBlock = String(object.petersburgBlock);\n        }\n        else {\n            message.petersburgBlock = '';\n        }\n        if (object.istanbulBlock !== undefined && object.istanbulBlock !== null) {\n            message.istanbulBlock = String(object.istanbulBlock);\n        }\n        else {\n            message.istanbulBlock = '';\n        }\n        if (object.muirGlacierBlock !== undefined && object.muirGlacierBlock !== null) {\n            message.muirGlacierBlock = String(object.muirGlacierBlock);\n        }\n        else {\n            message.muirGlacierBlock = '';\n        }\n        if (object.berlinBlock !== undefined && object.berlinBlock !== null) {\n            message.berlinBlock = String(object.berlinBlock);\n        }\n        else {\n            message.berlinBlock = '';\n        }\n        if (object.catalystBlock !== undefined && object.catalystBlock !== null) {\n            message.catalystBlock = String(object.catalystBlock);\n        }\n        else {\n            message.catalystBlock = '';\n        }\n        if (object.londonBlock !== undefined && object.londonBlock !== null) {\n            message.londonBlock = String(object.londonBlock);\n        }\n        else {\n            message.londonBlock = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.homesteadBlock !== undefined && (obj.homesteadBlock = message.homesteadBlock);\n        message.daoForkBlock !== undefined && (obj.daoForkBlock = message.daoForkBlock);\n        message.daoForkSupport !== undefined && (obj.daoForkSupport = message.daoForkSupport);\n        message.eip150Block !== undefined && (obj.eip150Block = message.eip150Block);\n        message.eip150Hash !== undefined && (obj.eip150Hash = message.eip150Hash);\n        message.eip155Block !== undefined && (obj.eip155Block = message.eip155Block);\n        message.eip158Block !== undefined && (obj.eip158Block = message.eip158Block);\n        message.byzantiumBlock !== undefined && (obj.byzantiumBlock = message.byzantiumBlock);\n        message.constantinopleBlock !== undefined && (obj.constantinopleBlock = message.constantinopleBlock);\n        message.petersburgBlock !== undefined && (obj.petersburgBlock = message.petersburgBlock);\n        message.istanbulBlock !== undefined && (obj.istanbulBlock = message.istanbulBlock);\n        message.muirGlacierBlock !== undefined && (obj.muirGlacierBlock = message.muirGlacierBlock);\n        message.berlinBlock !== undefined && (obj.berlinBlock = message.berlinBlock);\n        message.catalystBlock !== undefined && (obj.catalystBlock = message.catalystBlock);\n        message.londonBlock !== undefined && (obj.londonBlock = message.londonBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChainConfig };\n        if (object.homesteadBlock !== undefined && object.homesteadBlock !== null) {\n            message.homesteadBlock = object.homesteadBlock;\n        }\n        else {\n            message.homesteadBlock = '';\n        }\n        if (object.daoForkBlock !== undefined && object.daoForkBlock !== null) {\n            message.daoForkBlock = object.daoForkBlock;\n        }\n        else {\n            message.daoForkBlock = '';\n        }\n        if (object.daoForkSupport !== undefined && object.daoForkSupport !== null) {\n            message.daoForkSupport = object.daoForkSupport;\n        }\n        else {\n            message.daoForkSupport = false;\n        }\n        if (object.eip150Block !== undefined && object.eip150Block !== null) {\n            message.eip150Block = object.eip150Block;\n        }\n        else {\n            message.eip150Block = '';\n        }\n        if (object.eip150Hash !== undefined && object.eip150Hash !== null) {\n            message.eip150Hash = object.eip150Hash;\n        }\n        else {\n            message.eip150Hash = '';\n        }\n        if (object.eip155Block !== undefined && object.eip155Block !== null) {\n            message.eip155Block = object.eip155Block;\n        }\n        else {\n            message.eip155Block = '';\n        }\n        if (object.eip158Block !== undefined && object.eip158Block !== null) {\n            message.eip158Block = object.eip158Block;\n        }\n        else {\n            message.eip158Block = '';\n        }\n        if (object.byzantiumBlock !== undefined && object.byzantiumBlock !== null) {\n            message.byzantiumBlock = object.byzantiumBlock;\n        }\n        else {\n            message.byzantiumBlock = '';\n        }\n        if (object.constantinopleBlock !== undefined && object.constantinopleBlock !== null) {\n            message.constantinopleBlock = object.constantinopleBlock;\n        }\n        else {\n            message.constantinopleBlock = '';\n        }\n        if (object.petersburgBlock !== undefined && object.petersburgBlock !== null) {\n            message.petersburgBlock = object.petersburgBlock;\n        }\n        else {\n            message.petersburgBlock = '';\n        }\n        if (object.istanbulBlock !== undefined && object.istanbulBlock !== null) {\n            message.istanbulBlock = object.istanbulBlock;\n        }\n        else {\n            message.istanbulBlock = '';\n        }\n        if (object.muirGlacierBlock !== undefined && object.muirGlacierBlock !== null) {\n            message.muirGlacierBlock = object.muirGlacierBlock;\n        }\n        else {\n            message.muirGlacierBlock = '';\n        }\n        if (object.berlinBlock !== undefined && object.berlinBlock !== null) {\n            message.berlinBlock = object.berlinBlock;\n        }\n        else {\n            message.berlinBlock = '';\n        }\n        if (object.catalystBlock !== undefined && object.catalystBlock !== null) {\n            message.catalystBlock = object.catalystBlock;\n        }\n        else {\n            message.catalystBlock = '';\n        }\n        if (object.londonBlock !== undefined && object.londonBlock !== null) {\n            message.londonBlock = object.londonBlock;\n        }\n        else {\n            message.londonBlock = '';\n        }\n        return message;\n    }\n};\nconst baseState = { key: '', value: '' };\nexport const State = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseState };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseState };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseTransactionLogs = { hash: '' };\nexport const TransactionLogs = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        for (const v of message.logs) {\n            Log.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTransactionLogs };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.logs.push(Log.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTransactionLogs };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => (e ? Log.toJSON(e) : undefined));\n        }\n        else {\n            obj.logs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTransactionLogs };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseLog = { address: '', topics: '', blockNumber: 0, txHash: '', txIndex: 0, blockHash: '', index: 0, removed: false };\nexport const Log = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.topics) {\n            writer.uint32(18).string(v);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        if (message.blockNumber !== 0) {\n            writer.uint32(32).uint64(message.blockNumber);\n        }\n        if (message.txHash !== '') {\n            writer.uint32(42).string(message.txHash);\n        }\n        if (message.txIndex !== 0) {\n            writer.uint32(48).uint64(message.txIndex);\n        }\n        if (message.blockHash !== '') {\n            writer.uint32(58).string(message.blockHash);\n        }\n        if (message.index !== 0) {\n            writer.uint32(64).uint64(message.index);\n        }\n        if (message.removed === true) {\n            writer.uint32(72).bool(message.removed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLog };\n        message.topics = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.topics.push(reader.string());\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                case 4:\n                    message.blockNumber = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.txHash = reader.string();\n                    break;\n                case 6:\n                    message.txIndex = longToNumber(reader.uint64());\n                    break;\n                case 7:\n                    message.blockHash = reader.string();\n                    break;\n                case 8:\n                    message.index = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.removed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLog };\n        message.topics = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.topics !== undefined && object.topics !== null) {\n            for (const e of object.topics) {\n                message.topics.push(String(e));\n            }\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.blockNumber !== undefined && object.blockNumber !== null) {\n            message.blockNumber = Number(object.blockNumber);\n        }\n        else {\n            message.blockNumber = 0;\n        }\n        if (object.txHash !== undefined && object.txHash !== null) {\n            message.txHash = String(object.txHash);\n        }\n        else {\n            message.txHash = '';\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = Number(object.txIndex);\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.blockHash !== undefined && object.blockHash !== null) {\n            message.blockHash = String(object.blockHash);\n        }\n        else {\n            message.blockHash = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.removed !== undefined && object.removed !== null) {\n            message.removed = Boolean(object.removed);\n        }\n        else {\n            message.removed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.topics) {\n            obj.topics = message.topics.map((e) => e);\n        }\n        else {\n            obj.topics = [];\n        }\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.blockNumber !== undefined && (obj.blockNumber = message.blockNumber);\n        message.txHash !== undefined && (obj.txHash = message.txHash);\n        message.txIndex !== undefined && (obj.txIndex = message.txIndex);\n        message.blockHash !== undefined && (obj.blockHash = message.blockHash);\n        message.index !== undefined && (obj.index = message.index);\n        message.removed !== undefined && (obj.removed = message.removed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLog };\n        message.topics = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.topics !== undefined && object.topics !== null) {\n            for (const e of object.topics) {\n                message.topics.push(e);\n            }\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.blockNumber !== undefined && object.blockNumber !== null) {\n            message.blockNumber = object.blockNumber;\n        }\n        else {\n            message.blockNumber = 0;\n        }\n        if (object.txHash !== undefined && object.txHash !== null) {\n            message.txHash = object.txHash;\n        }\n        else {\n            message.txHash = '';\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = object.txIndex;\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.blockHash !== undefined && object.blockHash !== null) {\n            message.blockHash = object.blockHash;\n        }\n        else {\n            message.blockHash = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.removed !== undefined && object.removed !== null) {\n            message.removed = object.removed;\n        }\n        else {\n            message.removed = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { contractAddress: '', reverted: false, gasUsed: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.contractAddress !== '') {\n            writer.uint32(10).string(message.contractAddress);\n        }\n        if (message.bloom.length !== 0) {\n            writer.uint32(18).bytes(message.bloom);\n        }\n        if (message.txLogs !== undefined) {\n            TransactionLogs.encode(message.txLogs, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.ret.length !== 0) {\n            writer.uint32(34).bytes(message.ret);\n        }\n        if (message.reverted === true) {\n            writer.uint32(40).bool(message.reverted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.contractAddress = reader.string();\n                    break;\n                case 2:\n                    message.bloom = reader.bytes();\n                    break;\n                case 3:\n                    message.txLogs = TransactionLogs.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.ret = reader.bytes();\n                    break;\n                case 5:\n                    message.reverted = reader.bool();\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.contractAddress !== undefined && object.contractAddress !== null) {\n            message.contractAddress = String(object.contractAddress);\n        }\n        else {\n            message.contractAddress = '';\n        }\n        if (object.bloom !== undefined && object.bloom !== null) {\n            message.bloom = bytesFromBase64(object.bloom);\n        }\n        if (object.txLogs !== undefined && object.txLogs !== null) {\n            message.txLogs = TransactionLogs.fromJSON(object.txLogs);\n        }\n        else {\n            message.txLogs = undefined;\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = bytesFromBase64(object.ret);\n        }\n        if (object.reverted !== undefined && object.reverted !== null) {\n            message.reverted = Boolean(object.reverted);\n        }\n        else {\n            message.reverted = false;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.contractAddress !== undefined && (obj.contractAddress = message.contractAddress);\n        message.bloom !== undefined && (obj.bloom = base64FromBytes(message.bloom !== undefined ? message.bloom : new Uint8Array()));\n        message.txLogs !== undefined && (obj.txLogs = message.txLogs ? TransactionLogs.toJSON(message.txLogs) : undefined);\n        message.ret !== undefined && (obj.ret = base64FromBytes(message.ret !== undefined ? message.ret : new Uint8Array()));\n        message.reverted !== undefined && (obj.reverted = message.reverted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.contractAddress !== undefined && object.contractAddress !== null) {\n            message.contractAddress = object.contractAddress;\n        }\n        else {\n            message.contractAddress = '';\n        }\n        if (object.bloom !== undefined && object.bloom !== null) {\n            message.bloom = object.bloom;\n        }\n        else {\n            message.bloom = new Uint8Array();\n        }\n        if (object.txLogs !== undefined && object.txLogs !== null) {\n            message.txLogs = TransactionLogs.fromPartial(object.txLogs);\n        }\n        else {\n            message.txLogs = undefined;\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = object.ret;\n        }\n        else {\n            message.ret = new Uint8Array();\n        }\n        if (object.reverted !== undefined && object.reverted !== null) {\n            message.reverted = object.reverted;\n        }\n        else {\n            message.reverted = false;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseAccessTuple = { address: '', storageKeys: '' };\nexport const AccessTuple = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.storageKeys) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAccessTuple };\n        message.storageKeys = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.storageKeys.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAccessTuple };\n        message.storageKeys = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.storageKeys !== undefined && object.storageKeys !== null) {\n            for (const e of object.storageKeys) {\n                message.storageKeys.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.storageKeys) {\n            obj.storageKeys = message.storageKeys.map((e) => e);\n        }\n        else {\n            obj.storageKeys = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAccessTuple };\n        message.storageKeys = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.storageKeys !== undefined && object.storageKeys !== null) {\n            for (const e of object.storageKeys) {\n                message.storageKeys.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseTraceConfig = {\n    tracer: '',\n    timeout: '',\n    reexec: 0,\n    disableMemory: false,\n    disableStack: false,\n    disableStorage: false,\n    disableReturnData: false,\n    debug: false,\n    limit: 0\n};\nexport const TraceConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.tracer !== '') {\n            writer.uint32(10).string(message.tracer);\n        }\n        if (message.timeout !== '') {\n            writer.uint32(18).string(message.timeout);\n        }\n        if (message.reexec !== 0) {\n            writer.uint32(24).uint64(message.reexec);\n        }\n        if (message.disableMemory === true) {\n            writer.uint32(32).bool(message.disableMemory);\n        }\n        if (message.disableStack === true) {\n            writer.uint32(40).bool(message.disableStack);\n        }\n        if (message.disableStorage === true) {\n            writer.uint32(48).bool(message.disableStorage);\n        }\n        if (message.disableReturnData === true) {\n            writer.uint32(56).bool(message.disableReturnData);\n        }\n        if (message.debug === true) {\n            writer.uint32(64).bool(message.debug);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(72).int32(message.limit);\n        }\n        if (message.overrides !== undefined) {\n            ChainConfig.encode(message.overrides, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTraceConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tracer = reader.string();\n                    break;\n                case 2:\n                    message.timeout = reader.string();\n                    break;\n                case 3:\n                    message.reexec = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.disableMemory = reader.bool();\n                    break;\n                case 5:\n                    message.disableStack = reader.bool();\n                    break;\n                case 6:\n                    message.disableStorage = reader.bool();\n                    break;\n                case 7:\n                    message.disableReturnData = reader.bool();\n                    break;\n                case 8:\n                    message.debug = reader.bool();\n                    break;\n                case 9:\n                    message.limit = reader.int32();\n                    break;\n                case 10:\n                    message.overrides = ChainConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTraceConfig };\n        if (object.tracer !== undefined && object.tracer !== null) {\n            message.tracer = String(object.tracer);\n        }\n        else {\n            message.tracer = '';\n        }\n        if (object.timeout !== undefined && object.timeout !== null) {\n            message.timeout = String(object.timeout);\n        }\n        else {\n            message.timeout = '';\n        }\n        if (object.reexec !== undefined && object.reexec !== null) {\n            message.reexec = Number(object.reexec);\n        }\n        else {\n            message.reexec = 0;\n        }\n        if (object.disableMemory !== undefined && object.disableMemory !== null) {\n            message.disableMemory = Boolean(object.disableMemory);\n        }\n        else {\n            message.disableMemory = false;\n        }\n        if (object.disableStack !== undefined && object.disableStack !== null) {\n            message.disableStack = Boolean(object.disableStack);\n        }\n        else {\n            message.disableStack = false;\n        }\n        if (object.disableStorage !== undefined && object.disableStorage !== null) {\n            message.disableStorage = Boolean(object.disableStorage);\n        }\n        else {\n            message.disableStorage = false;\n        }\n        if (object.disableReturnData !== undefined && object.disableReturnData !== null) {\n            message.disableReturnData = Boolean(object.disableReturnData);\n        }\n        else {\n            message.disableReturnData = false;\n        }\n        if (object.debug !== undefined && object.debug !== null) {\n            message.debug = Boolean(object.debug);\n        }\n        else {\n            message.debug = false;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.overrides !== undefined && object.overrides !== null) {\n            message.overrides = ChainConfig.fromJSON(object.overrides);\n        }\n        else {\n            message.overrides = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tracer !== undefined && (obj.tracer = message.tracer);\n        message.timeout !== undefined && (obj.timeout = message.timeout);\n        message.reexec !== undefined && (obj.reexec = message.reexec);\n        message.disableMemory !== undefined && (obj.disableMemory = message.disableMemory);\n        message.disableStack !== undefined && (obj.disableStack = message.disableStack);\n        message.disableStorage !== undefined && (obj.disableStorage = message.disableStorage);\n        message.disableReturnData !== undefined && (obj.disableReturnData = message.disableReturnData);\n        message.debug !== undefined && (obj.debug = message.debug);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.overrides !== undefined && (obj.overrides = message.overrides ? ChainConfig.toJSON(message.overrides) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTraceConfig };\n        if (object.tracer !== undefined && object.tracer !== null) {\n            message.tracer = object.tracer;\n        }\n        else {\n            message.tracer = '';\n        }\n        if (object.timeout !== undefined && object.timeout !== null) {\n            message.timeout = object.timeout;\n        }\n        else {\n            message.timeout = '';\n        }\n        if (object.reexec !== undefined && object.reexec !== null) {\n            message.reexec = object.reexec;\n        }\n        else {\n            message.reexec = 0;\n        }\n        if (object.disableMemory !== undefined && object.disableMemory !== null) {\n            message.disableMemory = object.disableMemory;\n        }\n        else {\n            message.disableMemory = false;\n        }\n        if (object.disableStack !== undefined && object.disableStack !== null) {\n            message.disableStack = object.disableStack;\n        }\n        else {\n            message.disableStack = false;\n        }\n        if (object.disableStorage !== undefined && object.disableStorage !== null) {\n            message.disableStorage = object.disableStorage;\n        }\n        else {\n            message.disableStorage = false;\n        }\n        if (object.disableReturnData !== undefined && object.disableReturnData !== null) {\n            message.disableReturnData = object.disableReturnData;\n        }\n        else {\n            message.disableReturnData = false;\n        }\n        if (object.debug !== undefined && object.debug !== null) {\n            message.debug = object.debug;\n        }\n        else {\n            message.debug = false;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.overrides !== undefined && object.overrides !== null) {\n            message.overrides = ChainConfig.fromPartial(object.overrides);\n        }\n        else {\n            message.overrides = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = { denom: '', amount: 0, sender: '', receiver: '' };\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFungibleTokenPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFungibleTokenPacketData };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFungibleTokenPacketData };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined && (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Plan } from '../../../../cosmos/upgrade/v1beta1/upgrade';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined && (obj.clientState = message.clientState ? Any.toJSON(message.clientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusStateWithHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined && (obj.consensusState = message.consensusState ? Any.toJSON(message.consensusState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => (e ? ConsensusStateWithHeight.toJSON(e) : undefined));\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = { title: '', description: '', subjectClientId: '', substituteClientId: '' };\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.subjectClientId !== '') {\n            writer.uint32(26).string(message.subjectClientId);\n        }\n        if (message.substituteClientId !== '') {\n            writer.uint32(34).string(message.substituteClientId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.subjectClientId = reader.string();\n                    break;\n                case 4:\n                    message.substituteClientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n            message.subjectClientId = String(object.subjectClientId);\n        }\n        else {\n            message.subjectClientId = '';\n        }\n        if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n            message.substituteClientId = String(object.substituteClientId);\n        }\n        else {\n            message.substituteClientId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.subjectClientId !== undefined && (obj.subjectClientId = message.subjectClientId);\n        message.substituteClientId !== undefined && (obj.substituteClientId = message.substituteClientId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n            message.subjectClientId = object.subjectClientId;\n        }\n        else {\n            message.subjectClientId = '';\n        }\n        if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n            message.substituteClientId = object.substituteClientId;\n        }\n        else {\n            message.substituteClientId = '';\n        }\n        return message;\n    }\n};\nconst baseUpgradeProposal = { title: '', description: '' };\nexport const UpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.upgradedClientState !== undefined) {\n            Any.encode(message.upgradedClientState, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.upgradedClientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromJSON(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        message.upgradedClientState !== undefined && (obj.upgradedClientState = message.upgradedClientState ? Any.toJSON(message.upgradedClientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromPartial(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined && (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined && (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined && (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined && (obj.commissionRates = message.commissionRates ? CommissionRates.toJSON(message.commissionRates) : undefined);\n        message.updateTime !== undefined && (obj.updateTime = message.updateTime !== undefined ? message.updateTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = { moniker: '', identity: '', website: '', securityContact: '', details: '' };\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined && (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = { operatorAddress: '', jailed: false, status: 0, tokens: '', delegatorShares: '', unbondingHeight: 0, minSelfDelegation: '' };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined && (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined && (obj.consensusPubkey = message.consensusPubkey ? Any.toJSON(message.consensusPubkey) : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined && (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined && (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.unbondingHeight !== undefined && (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime !== undefined ? message.unbondingTime.toISOString() : null);\n        message.commission !== undefined && (obj.commission = message.commission ? Commission.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => (e ? DVVTriplet.toJSON(e) : undefined));\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = { delegatorAddress: '', validatorAddress: '', shares: '' };\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = { delegatorAddress: '', validatorAddress: '' };\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? UnbondingDelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = { creationHeight: 0, initialBalance: '', balance: '' };\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined && (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = { creationHeight: 0, initialBalance: '', sharesDst: '' };\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined && (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? RedelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = { maxValidators: 0, maxEntries: 0, historicalEntries: 0, bondDenom: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime ? Duration.toJSON(message.unbondingTime) : undefined);\n        message.maxValidators !== undefined && (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined && (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined && (obj.delegation = message.delegation ? Delegation.toJSON(message.delegation) : undefined);\n        message.balance !== undefined && (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntryResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntryResponse };\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry ? RedelegationEntry.toJSON(message.redelegationEntry) : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntryResponse };\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined && (obj.redelegation = message.redelegation ? Redelegation.toJSON(message.redelegation) : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? RedelegationEntryResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined && (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined && (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title aguaclara/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.aguaclara';\nconst baseAguaclaraPacketData = {\n    creator: '',\n    tokenAddress: '',\n    tokenId: '',\n    didRecipient: '',\n    toMetadata: '',\n    hash: '',\n    currentChainId: '',\n    recipientChainId: ''\n};\nexport const AguaclaraPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.tokenAddress !== '') {\n            writer.uint32(18).string(message.tokenAddress);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(26).string(message.tokenId);\n        }\n        if (message.didRecipient !== '') {\n            writer.uint32(34).string(message.didRecipient);\n        }\n        if (message.toMetadata !== '') {\n            writer.uint32(42).string(message.toMetadata);\n        }\n        if (message.hash !== '') {\n            writer.uint32(50).string(message.hash);\n        }\n        if (message.currentChainId !== '') {\n            writer.uint32(58).string(message.currentChainId);\n        }\n        if (message.recipientChainId !== '') {\n            writer.uint32(66).string(message.recipientChainId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAguaclaraPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.tokenAddress = reader.string();\n                    break;\n                case 3:\n                    message.tokenId = reader.string();\n                    break;\n                case 4:\n                    message.didRecipient = reader.string();\n                    break;\n                case 5:\n                    message.toMetadata = reader.string();\n                    break;\n                case 6:\n                    message.hash = reader.string();\n                    break;\n                case 7:\n                    message.currentChainId = reader.string();\n                    break;\n                case 8:\n                    message.recipientChainId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAguaclaraPacketData };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.tokenAddress !== undefined && object.tokenAddress !== null) {\n            message.tokenAddress = String(object.tokenAddress);\n        }\n        else {\n            message.tokenAddress = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = String(object.didRecipient);\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.toMetadata !== undefined && object.toMetadata !== null) {\n            message.toMetadata = String(object.toMetadata);\n        }\n        else {\n            message.toMetadata = '';\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = String(object.currentChainId);\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = String(object.recipientChainId);\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.tokenAddress !== undefined && (obj.tokenAddress = message.tokenAddress);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        message.didRecipient !== undefined && (obj.didRecipient = message.didRecipient);\n        message.toMetadata !== undefined && (obj.toMetadata = message.toMetadata);\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.currentChainId !== undefined && (obj.currentChainId = message.currentChainId);\n        message.recipientChainId !== undefined && (obj.recipientChainId = message.recipientChainId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAguaclaraPacketData };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.tokenAddress !== undefined && object.tokenAddress !== null) {\n            message.tokenAddress = object.tokenAddress;\n        }\n        else {\n            message.tokenAddress = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = object.didRecipient;\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.toMetadata !== undefined && object.toMetadata !== null) {\n            message.toMetadata = object.toMetadata;\n        }\n        else {\n            message.toMetadata = '';\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = object.currentChainId;\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = object.recipientChainId;\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        return message;\n    }\n};\nconst baseNoData = {};\nexport const NoData = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNoData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseNoData };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseNoData };\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { AguaclaraPacketData } from '../aguaclara/packet';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.aguaclara';\nconst baseMsgSendMetadataOwnership = { creator: '', portId: '', channelId: '' };\nexport const MsgSendMetadataOwnership = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.portId !== '') {\n            writer.uint32(18).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(26).string(message.channelId);\n        }\n        if (message.data !== undefined) {\n            AguaclaraPacketData.encode(message.data, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendMetadataOwnership };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.portId = reader.string();\n                    break;\n                case 3:\n                    message.channelId = reader.string();\n                    break;\n                case 4:\n                    message.data = AguaclaraPacketData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendMetadataOwnership };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = AguaclaraPacketData.fromJSON(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.data !== undefined && (obj.data = message.data ? AguaclaraPacketData.toJSON(message.data) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendMetadataOwnership };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = AguaclaraPacketData.fromPartial(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSendMetadataOwnershipResponse = { cid: '' };\nexport const MsgSendMetadataOwnershipResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendMetadataOwnershipResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendMetadataOwnershipResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendMetadataOwnershipResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SendMetadataOwnership(request) {\n        const data = MsgSendMetadataOwnership.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.aguaclara.Msg', 'SendMetadataOwnership', data);\n        return promise.then((data) => MsgSendMetadataOwnershipResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSendMetadataOwnership } from \"./types/aguaclara/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.aguaclara.MsgSendMetadataOwnership\", MsgSendMetadataOwnership],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSendMetadataOwnership: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.aguaclara.MsgSendMetadataOwnership\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { AguaclaraPacketData } from \"./module/types/aguaclara/packet\";\nimport { NoData } from \"./module/types/aguaclara/packet\";\nexport { AguaclaraPacketData, NoData };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            AguaclaraPacketData: getStructure(AguaclaraPacketData.fromPartial({})),\n            NoData: getStructure(NoData.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.aguaclara initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgSendMetadataOwnership({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSendMetadataOwnership(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSendMetadataOwnership({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSendMetadataOwnership(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/did_registry.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryReadDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetDidKey\n         * @request GET:/ancon/didregistry/{name}\n         */\n        this.queryGetDidKey = (name, params = {}) => this.request({\n            path: `/ancon/didregistry/${name}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadMetadataProof\n         * @summary Reads metadata proofs\n         * @request GET:/ancon/proof/{cid}/{path}\n         */\n        this.queryReadMetadataProof = (cid, path, params = {}) => this.request({\n            path: `/ancon/proof/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadRoyaltyInfo\n         * @summary ReadRoyaltyInfo\n         * @request GET:/ancon/royalty/{cid}/{price}\n         */\n        this.queryReadRoyaltyInfo = (cid, price, params = {}) => this.request({\n            path: `/ancon/royalty/${cid}/${price}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResolveDidWeb\n         * @request GET:/user/{name}/did.json\n         */\n        this.queryResolveDidWeb = (name, params = {}) => this.request({\n            path: `/user/${name}/did.json`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSendMetadataOwnership } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgUpdateMetadataOwnership } from \"./types/anconprotocol/tx\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgGrantAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDid } from \"./types/anconprotocol/tx\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nimport { MsgUpdateDid } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgRoyaltyInfo } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedContent } from \"./types/anconprotocol/tx\";\nimport { MsgGrantDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedResource } from \"./types/anconprotocol/tx\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgCreateDid } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgSendMetadataOwnership\", MsgSendMetadataOwnership],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateMetadataOwnership\", MsgUpdateMetadataOwnership],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", MsgGrantAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", MsgRevokeDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", MsgUpdateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", MsgRevokeAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", MsgRoyaltyInfo],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", MsgMintTrustedContent],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", MsgGrantDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", MsgMintTrustedResource],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", MsgCreateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSendMetadataOwnership: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgSendMetadataOwnership\", value: data }),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgUpdateMetadataOwnership: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateMetadataOwnership\", value: data }),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgGrantAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", value: data }),\n        msgRevokeDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", value: data }),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n        msgUpdateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", value: data }),\n        msgRevokeAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", value: data }),\n        msgRoyaltyInfo: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgMintTrustedContent: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", value: data }),\n        msgGrantDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", value: data }),\n        msgMintTrustedResource: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", value: data }),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgCreateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { DIDOwner } from \"./module/types/anconprotocol/did_registry\";\nimport { DIDWebRoute } from \"./module/types/anconprotocol/did_registry\";\nimport { Delegate } from \"./module/types/anconprotocol/did_registry\";\nimport { Change } from \"./module/types/anconprotocol/did_registry\";\nimport { Attribute } from \"./module/types/anconprotocol/did_registry\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { QueryReadDidKeyRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryReadDidKeyResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { MsgRegisterRelay } from \"./module/types/anconprotocol/tx\";\nimport { MsgRegisterRelayResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSendCrossMintTrusted } from \"./module/types/anconprotocol/tx\";\nimport { MsgSendCrossMintTrustedResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgMintSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgMintSwap } from \"./module/types/anconprotocol/tx\";\nimport { MsgInitiateSwap } from \"./module/types/anconprotocol/tx\";\nimport { MsgInitiateSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgClaimSwap } from \"./module/types/anconprotocol/tx\";\nimport { MsgClaimSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwner } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwnerResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttribute } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttributeResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileResponse } from \"./module/types/anconprotocol/tx\";\nimport { AguaclaraPacketData } from \"./module/types/anconprotocol/tx\";\nexport { DIDOwner, DIDWebRoute, Delegate, Change, Attribute, BaseNFT, Denom, IDCollection, Owner, Collection, QueryReadDidKeyRequest, QueryReadDidKeyResponse, QueryNonceRequest, QueryNonceResponse, QueryOwnersResponse, MsgRegisterRelay, MsgRegisterRelayResponse, MsgSendCrossMintTrusted, MsgSendCrossMintTrustedResponse, MsgMintSwapResponse, MsgMintSwap, MsgInitiateSwap, MsgInitiateSwapResponse, MsgClaimSwap, MsgClaimSwapResponse, MsgCreateDIDOwner, MsgCreateDIDOwnerResponse, MsgSetAttribute, MsgSetAttributeResponse, MsgFileMetadataResponse, MsgFileResponse, AguaclaraPacketData };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadRoyaltyInfo: {},\n        ReadWithPath: {},\n        ReadMetadataProof: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        ReadDelegate: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        ResolveDidWeb: {},\n        GetDidKey: {},\n        _Structure: {\n            DIDOwner: getStructure(DIDOwner.fromPartial({})),\n            DIDWebRoute: getStructure(DIDWebRoute.fromPartial({})),\n            Delegate: getStructure(Delegate.fromPartial({})),\n            Change: getStructure(Change.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            QueryReadDidKeyRequest: getStructure(QueryReadDidKeyRequest.fromPartial({})),\n            QueryReadDidKeyResponse: getStructure(QueryReadDidKeyResponse.fromPartial({})),\n            QueryNonceRequest: getStructure(QueryNonceRequest.fromPartial({})),\n            QueryNonceResponse: getStructure(QueryNonceResponse.fromPartial({})),\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            MsgRegisterRelay: getStructure(MsgRegisterRelay.fromPartial({})),\n            MsgRegisterRelayResponse: getStructure(MsgRegisterRelayResponse.fromPartial({})),\n            MsgSendCrossMintTrusted: getStructure(MsgSendCrossMintTrusted.fromPartial({})),\n            MsgSendCrossMintTrustedResponse: getStructure(MsgSendCrossMintTrustedResponse.fromPartial({})),\n            MsgMintSwapResponse: getStructure(MsgMintSwapResponse.fromPartial({})),\n            MsgMintSwap: getStructure(MsgMintSwap.fromPartial({})),\n            MsgInitiateSwap: getStructure(MsgInitiateSwap.fromPartial({})),\n            MsgInitiateSwapResponse: getStructure(MsgInitiateSwapResponse.fromPartial({})),\n            MsgClaimSwap: getStructure(MsgClaimSwap.fromPartial({})),\n            MsgClaimSwapResponse: getStructure(MsgClaimSwapResponse.fromPartial({})),\n            MsgCreateDIDOwner: getStructure(MsgCreateDIDOwner.fromPartial({})),\n            MsgCreateDIDOwnerResponse: getStructure(MsgCreateDIDOwnerResponse.fromPartial({})),\n            MsgSetAttribute: getStructure(MsgSetAttribute.fromPartial({})),\n            MsgSetAttributeResponse: getStructure(MsgSetAttributeResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n            MsgFileResponse: getStructure(MsgFileResponse.fromPartial({})),\n            AguaclaraPacketData: getStructure(AguaclaraPacketData.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadRoyaltyInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadRoyaltyInfo[JSON.stringify(params)] ?? {};\n        },\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getReadMetadataProof: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadMetadataProof[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegate[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getResolveDidWeb: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ResolveDidWeb[JSON.stringify(params)] ?? {};\n        },\n        getGetDidKey: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetDidKey[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadRoyaltyInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadRoyaltyInfo(key.cid, key.price)).data;\n                commit('QUERY', { query: 'ReadRoyaltyInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadRoyaltyInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadRoyaltyInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadRoyaltyInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadMetadataProof({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadMetadataProof(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadMetadataProof', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadMetadataProof', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadMetadataProof']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadMetadataProof', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegate(key.id)).data;\n                commit('QUERY', { query: 'ReadDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResolveDidWeb({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResolveDidWeb(key.name)).data;\n                commit('QUERY', { query: 'ResolveDidWeb', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResolveDidWeb', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResolveDidWeb']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResolveDidWeb', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetDidKey({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetDidKey(key.name)).data;\n                commit('QUERY', { query: 'GetDidKey', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetDidKey', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetDidKey']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetDidKey', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSendMetadataOwnership({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSendMetadataOwnership(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateMetadataOwnership({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateMetadataOwnership(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateMetadataOwnership:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRoyaltyInfo({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedContent({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedResource({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSendMetadataOwnership({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSendMetadataOwnership(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateMetadataOwnership({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateMetadataOwnership(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateMetadataOwnership:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRoyaltyInfo({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedContent({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedResource({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/authz/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGrants\n         * @summary Returns list of `Authorization`, granted to the grantee by the granter.\n         * @request GET:/cosmos/authz/v1beta1/grants\n         */\n        this.queryGrants = (query, params = {}) => this.request({\n            path: `/cosmos/authz/v1beta1/grants`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgGrant } from \"./types/cosmos/authz/v1beta1/tx\";\nimport { MsgExec } from \"./types/cosmos/authz/v1beta1/tx\";\nimport { MsgRevoke } from \"./types/cosmos/authz/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.authz.v1beta1.MsgGrant\", MsgGrant],\n    [\"/cosmos.authz.v1beta1.MsgExec\", MsgExec],\n    [\"/cosmos.authz.v1beta1.MsgRevoke\", MsgRevoke],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgGrant: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgGrant\", value: data }),\n        msgExec: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgExec\", value: data }),\n        msgRevoke: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgRevoke\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseEventGrant = { msgTypeUrl: '', granter: '', grantee: '' };\nexport const EventGrant = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(18).string(message.msgTypeUrl);\n        }\n        if (message.granter !== '') {\n            writer.uint32(26).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(34).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                case 3:\n                    message.granter = reader.string();\n                    break;\n                case 4:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventGrant };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventGrant };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\nconst baseEventRevoke = { msgTypeUrl: '', granter: '', grantee: '' };\nexport const EventRevoke = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(18).string(message.msgTypeUrl);\n        }\n        if (message.granter !== '') {\n            writer.uint32(26).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(34).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventRevoke };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                case 3:\n                    message.granter = reader.string();\n                    break;\n                case 4:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventRevoke };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventRevoke };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.authorization) {\n            GrantAuthorization.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization.push(GrantAuthorization.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        if (object.authorization !== undefined && object.authorization !== null) {\n            for (const e of object.authorization) {\n                message.authorization.push(GrantAuthorization.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.authorization) {\n            obj.authorization = message.authorization.map((e) => (e ? GrantAuthorization.toJSON(e) : undefined));\n        }\n        else {\n            obj.authorization = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        if (object.authorization !== undefined && object.authorization !== null) {\n            for (const e of object.authorization) {\n                message.authorization.push(GrantAuthorization.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseGrantAuthorization = { granter: '', grantee: '' };\nexport const GrantAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.authorization !== undefined) {\n            Any.encode(message.authorization, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrantAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.authorization = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrantAuthorization };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromJSON(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.authorization !== undefined && (obj.authorization = message.authorization ? Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrantAuthorization };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromPartial(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { GenericAuthorization } from \"./module/types/cosmos/authz/v1beta1/authz\";\nimport { Grant } from \"./module/types/cosmos/authz/v1beta1/authz\";\nimport { EventGrant } from \"./module/types/cosmos/authz/v1beta1/event\";\nimport { EventRevoke } from \"./module/types/cosmos/authz/v1beta1/event\";\nimport { GrantAuthorization } from \"./module/types/cosmos/authz/v1beta1/genesis\";\nexport { GenericAuthorization, Grant, EventGrant, EventRevoke, GrantAuthorization };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Grants: {},\n        _Structure: {\n            GenericAuthorization: getStructure(GenericAuthorization.fromPartial({})),\n            Grant: getStructure(Grant.fromPartial({})),\n            EventGrant: getStructure(EventGrant.fromPartial({})),\n            EventRevoke: getStructure(EventRevoke.fromPartial({})),\n            GrantAuthorization: getStructure(GrantAuthorization.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getGrants: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Grants[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.authz.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryGrants({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGrants(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryGrants({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Grants', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGrants', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGrants']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGrants', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgGrant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgExec({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgExec(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgExec:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgExec:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevoke({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevoke(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevoke:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevoke:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgGrant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgExec({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgExec(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgExec:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgExec:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevoke({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevoke(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevoke:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevoke:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => (e ? SendEnabled.toJSON(e) : undefined));\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined && (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '', name: '', symbol: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        if (message.name !== '') {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(50).string(message.symbol);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.symbol = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => (e ? DenomUnit.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        message.name !== undefined && (obj.name = message.name);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => (e ? Output.toJSON(e) : undefined));\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseSendAuthorization = {};\nexport const SendAuthorization = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.spendLimit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.spendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.spendLimit) {\n            obj.spendLimit = message.spendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.spendLimit = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => (e ? Balance.toJSON(e) : undefined));\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => (e ? Metadata.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SendAuthorization } from \"./module/types/cosmos/bank/v1beta1/authz\";\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { SendAuthorization, Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            SendAuthorization: getStructure(SendAuthorization.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryTotalSupply({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = { sender: '', invariantModuleName: '', invariantRoute: '' };\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined && object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined && (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined && (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined && object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariantResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVerifyInvariantResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVerifyInvariantResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = { delegatorAddress: '', withdrawAddress: '' };\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/feegrant/v1beta1/feegrant.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllowance\n         * @summary Allowance returns fee granted to the grantee by the granter.\n         * @request GET:/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}\n         */\n        this.queryAllowance = (granter, grantee, params = {}) => this.request({\n            path: `/cosmos/feegrant/v1beta1/allowance/${granter}/${grantee}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllowances\n         * @summary Allowances returns all the grants for address.\n         * @request GET:/cosmos/feegrant/v1beta1/allowances/{grantee}\n         */\n        this.queryAllowances = (grantee, query, params = {}) => this.request({\n            path: `/cosmos/feegrant/v1beta1/allowances/${grantee}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.feegrant.v1beta1';\nconst baseMsgGrantAllowance = { granter: '', grantee: '' };\nexport const MsgGrantAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAllowance };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAllowanceResponse = {};\nexport const MsgGrantAllowanceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAllowanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgGrantAllowanceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgGrantAllowanceResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeAllowance = { granter: '', grantee: '' };\nexport const MsgRevokeAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAllowance };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAllowanceResponse = {};\nexport const MsgRevokeAllowanceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    GrantAllowance(request) {\n        const data = MsgGrantAllowance.encode(request).finish();\n        const promise = this.rpc.request('cosmos.feegrant.v1beta1.Msg', 'GrantAllowance', data);\n        return promise.then((data) => MsgGrantAllowanceResponse.decode(new Reader(data)));\n    }\n    RevokeAllowance(request) {\n        const data = MsgRevokeAllowance.encode(request).finish();\n        const promise = this.rpc.request('cosmos.feegrant.v1beta1.Msg', 'RevokeAllowance', data);\n        return promise.then((data) => MsgRevokeAllowanceResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgRevokeAllowance } from \"./types/cosmos/feegrant/v1beta1/tx\";\nimport { MsgGrantAllowance } from \"./types/cosmos/feegrant/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\", MsgRevokeAllowance],\n    [\"/cosmos.feegrant.v1beta1.MsgGrantAllowance\", MsgGrantAllowance],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgRevokeAllowance: (data) => ({ typeUrl: \"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\", value: data }),\n        msgGrantAllowance: (data) => ({ typeUrl: \"/cosmos.feegrant.v1beta1.MsgGrantAllowance\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.feegrant.v1beta1';\nconst baseBasicAllowance = {};\nexport const BasicAllowance = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.spendLimit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.spendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.spendLimit) {\n            obj.spendLimit = message.spendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.spendLimit = [];\n        }\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriodicAllowance = {};\nexport const PeriodicAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.basic !== undefined) {\n            BasicAllowance.encode(message.basic, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== undefined) {\n            Duration.encode(message.period, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.periodSpendLimit) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.periodCanSpend) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.periodReset !== undefined) {\n            Timestamp.encode(toTimestamp(message.periodReset), writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.basic = BasicAllowance.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.period = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.periodSpendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.periodCanSpend.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.periodReset = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        if (object.basic !== undefined && object.basic !== null) {\n            message.basic = BasicAllowance.fromJSON(object.basic);\n        }\n        else {\n            message.basic = undefined;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Duration.fromJSON(object.period);\n        }\n        else {\n            message.period = undefined;\n        }\n        if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n            for (const e of object.periodSpendLimit) {\n                message.periodSpendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n            for (const e of object.periodCanSpend) {\n                message.periodCanSpend.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.periodReset !== undefined && object.periodReset !== null) {\n            message.periodReset = fromJsonTimestamp(object.periodReset);\n        }\n        else {\n            message.periodReset = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.basic !== undefined && (obj.basic = message.basic ? BasicAllowance.toJSON(message.basic) : undefined);\n        message.period !== undefined && (obj.period = message.period ? Duration.toJSON(message.period) : undefined);\n        if (message.periodSpendLimit) {\n            obj.periodSpendLimit = message.periodSpendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodSpendLimit = [];\n        }\n        if (message.periodCanSpend) {\n            obj.periodCanSpend = message.periodCanSpend.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodCanSpend = [];\n        }\n        message.periodReset !== undefined && (obj.periodReset = message.periodReset !== undefined ? message.periodReset.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        if (object.basic !== undefined && object.basic !== null) {\n            message.basic = BasicAllowance.fromPartial(object.basic);\n        }\n        else {\n            message.basic = undefined;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Duration.fromPartial(object.period);\n        }\n        else {\n            message.period = undefined;\n        }\n        if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n            for (const e of object.periodSpendLimit) {\n                message.periodSpendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n            for (const e of object.periodCanSpend) {\n                message.periodCanSpend.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.periodReset !== undefined && object.periodReset !== null) {\n            message.periodReset = object.periodReset;\n        }\n        else {\n            message.periodReset = undefined;\n        }\n        return message;\n    }\n};\nconst baseAllowedMsgAllowance = { allowedMessages: '' };\nexport const AllowedMsgAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.allowedMessages) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowedMessages.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n            for (const e of object.allowedMessages) {\n                message.allowedMessages.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        if (message.allowedMessages) {\n            obj.allowedMessages = message.allowedMessages.map((e) => e);\n        }\n        else {\n            obj.allowedMessages = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n            for (const e of object.allowedMessages) {\n                message.allowedMessages.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseGrant = { granter: '', grantee: '' };\nexport const Grant = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BasicAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { PeriodicAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { AllowedMsgAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { Grant } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nexport { BasicAllowance, PeriodicAllowance, AllowedMsgAllowance, Grant };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Allowance: {},\n        Allowances: {},\n        _Structure: {\n            BasicAllowance: getStructure(BasicAllowance.fromPartial({})),\n            PeriodicAllowance: getStructure(PeriodicAllowance.fromPartial({})),\n            AllowedMsgAllowance: getStructure(AllowedMsgAllowance.fromPartial({})),\n            Grant: getStructure(Grant.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getAllowance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Allowance[JSON.stringify(params)] ?? {};\n        },\n        getAllowances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Allowances[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.feegrant.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryAllowance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllowance(key.granter, key.grantee)).data;\n                commit('QUERY', { query: 'Allowance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllowance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllowance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllowance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllowances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllowances(key.grantee, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllowances(key.grantee, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Allowances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllowances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllowances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllowances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgRevokeAllowance({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAllowance(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAllowance({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAllowance(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAllowance({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAllowance(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAllowance({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAllowance(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVoteWeighted } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgVoteWeighted\", MsgVoteWeighted],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgVoteWeighted: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVoteWeighted\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { WeightedVoteOption } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { WeightedVoteOption, TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            WeightedVoteOption: getStructure(WeightedVoteOption.fromPartial({})),\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgVoteWeighted({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVoteWeighted(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgVoteWeighted({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVoteWeighted(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined && (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = { minSelfDelegation: '', delegatorAddress: '', validatorAddress: '' };\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.commission !== undefined && (obj.commission = message.commission ? CommissionRates.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined && (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined && (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidatorResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateValidatorResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateValidatorResponse };\n        return message;\n    }\n};\nconst baseMsgEditValidator = { validatorAddress: '', commissionRate: '', minSelfDelegation: '' };\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined && (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidatorResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditValidatorResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditValidatorResponse };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** AuthorizationType defines the type of staking module authorization type */\nexport var AuthorizationType;\n(function (AuthorizationType) {\n    /** AUTHORIZATION_TYPE_UNSPECIFIED - AUTHORIZATION_TYPE_UNSPECIFIED specifies an unknown authorization type */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNSPECIFIED\"] = 0] = \"AUTHORIZATION_TYPE_UNSPECIFIED\";\n    /** AUTHORIZATION_TYPE_DELEGATE - AUTHORIZATION_TYPE_DELEGATE defines an authorization type for Msg/Delegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_DELEGATE\"] = 1] = \"AUTHORIZATION_TYPE_DELEGATE\";\n    /** AUTHORIZATION_TYPE_UNDELEGATE - AUTHORIZATION_TYPE_UNDELEGATE defines an authorization type for Msg/Undelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNDELEGATE\"] = 2] = \"AUTHORIZATION_TYPE_UNDELEGATE\";\n    /** AUTHORIZATION_TYPE_REDELEGATE - AUTHORIZATION_TYPE_REDELEGATE defines an authorization type for Msg/BeginRedelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_REDELEGATE\"] = 3] = \"AUTHORIZATION_TYPE_REDELEGATE\";\n    AuthorizationType[AuthorizationType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(AuthorizationType || (AuthorizationType = {}));\nexport function authorizationTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'AUTHORIZATION_TYPE_UNSPECIFIED':\n            return AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED;\n        case 1:\n        case 'AUTHORIZATION_TYPE_DELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_DELEGATE;\n        case 2:\n        case 'AUTHORIZATION_TYPE_UNDELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE;\n        case 3:\n        case 'AUTHORIZATION_TYPE_REDELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return AuthorizationType.UNRECOGNIZED;\n    }\n}\nexport function authorizationTypeToJSON(object) {\n    switch (object) {\n        case AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED:\n            return 'AUTHORIZATION_TYPE_UNSPECIFIED';\n        case AuthorizationType.AUTHORIZATION_TYPE_DELEGATE:\n            return 'AUTHORIZATION_TYPE_DELEGATE';\n        case AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE:\n            return 'AUTHORIZATION_TYPE_UNDELEGATE';\n        case AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE:\n            return 'AUTHORIZATION_TYPE_REDELEGATE';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseStakeAuthorization = { authorizationType: 0 };\nexport const StakeAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxTokens !== undefined) {\n            Coin.encode(message.maxTokens, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.allowList !== undefined) {\n            StakeAuthorization_Validators.encode(message.allowList, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.denyList !== undefined) {\n            StakeAuthorization_Validators.encode(message.denyList, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.authorizationType !== 0) {\n            writer.uint32(32).int32(message.authorizationType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStakeAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxTokens = Coin.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.denyList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.authorizationType = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromJSON(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromJSON(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromJSON(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined && object.authorizationType !== null) {\n            message.authorizationType = authorizationTypeFromJSON(object.authorizationType);\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxTokens !== undefined && (obj.maxTokens = message.maxTokens ? Coin.toJSON(message.maxTokens) : undefined);\n        message.allowList !== undefined && (obj.allowList = message.allowList ? StakeAuthorization_Validators.toJSON(message.allowList) : undefined);\n        message.denyList !== undefined && (obj.denyList = message.denyList ? StakeAuthorization_Validators.toJSON(message.denyList) : undefined);\n        message.authorizationType !== undefined && (obj.authorizationType = authorizationTypeToJSON(message.authorizationType));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromPartial(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromPartial(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromPartial(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined && object.authorizationType !== null) {\n            message.authorizationType = object.authorizationType;\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    }\n};\nconst baseStakeAuthorization_Validators = { address: '' };\nexport const StakeAuthorization_Validators = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.address) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.address) {\n            obj.address = message.address.map((e) => e);\n        }\n        else {\n            obj.address = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(e);\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { StakeAuthorization } from \"./module/types/cosmos/staking/v1beta1/authz\";\nimport { StakeAuthorization_Validators } from \"./module/types/cosmos/staking/v1beta1/authz\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { StakeAuthorization, StakeAuthorization_Validators, LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            StakeAuthorization: getStructure(StakeAuthorization.fromPartial({})),\n            StakeAuthorization_Validators: getStructure(StakeAuthorization_Validators.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PermanentLockedAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount, PermanentLockedAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n            PermanentLockedAccount: getStructure(PermanentLockedAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/apps/transfer/v1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/apps/transfer/v1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/apps/transfer/v1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ethermint/evm/v1/evm.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAccount\n         * @summary Account queries an Ethereum account.\n         * @request GET:/ethermint/evm/v1/account/{address}\n         */\n        this.queryAccount = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1/account/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryBalance\n       * @summary Balance queries the balance of a the EVM denomination for a single\n      EthAccount.\n       * @request GET:/ethermint/evm/v1/balances/{address}\n       */\n        this.queryBalance = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1/balances/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCode\n         * @summary Code queries the balance of all coins for a single account.\n         * @request GET:/ethermint/evm/v1/codes/{address}\n         */\n        this.queryCode = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1/codes/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCosmosAccount\n         * @summary CosmosAccount queries an Ethereum account's Cosmos Address.\n         * @request GET:/ethermint/evm/v1/cosmos_account/{address}\n         */\n        this.queryCosmosAccount = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1/cosmos_account/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEstimateGas\n         * @summary EstimateGas implements the `eth_estimateGas` rpc api\n         * @request GET:/ethermint/evm/v1/estimate_gas\n         */\n        this.queryEstimateGas = (query, params = {}) => this.request({\n            path: `/ethermint/evm/v1/estimate_gas`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEthCall\n         * @summary EthCall implements the `eth_call` rpc api\n         * @request GET:/ethermint/evm/v1/eth_call\n         */\n        this.queryEthCall = (query, params = {}) => this.request({\n            path: `/ethermint/evm/v1/eth_call`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/evm module.\n         * @request GET:/ethermint/evm/v1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ethermint/evm/v1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryStorage\n         * @summary Storage queries the balance of all coins for a single account.\n         * @request GET:/ethermint/evm/v1/storage/{address}/{key}\n         */\n        this.queryStorage = (address, key, params = {}) => this.request({\n            path: `/ethermint/evm/v1/storage/${address}/${key}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTraceTx\n         * @summary TraceTx implements the `debug_traceTransaction` rpc api\n         * @request GET:/ethermint/evm/v1/trace_tx\n         */\n        this.queryTraceTx = (query, params = {}) => this.request({\n            path: `/ethermint/evm/v1/trace_tx`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryValidatorAccount\n       * @summary ValidatorAccount queries an Ethereum account's from a validator consensus\n      Address.\n       * @request GET:/ethermint/evm/v1/validator_account/{consAddress}\n       */\n        this.queryValidatorAccount = (consAddress, params = {}) => this.request({\n            path: `/ethermint/evm/v1/validator_account/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgEthereumTx } from \"./types/ethermint/evm/v1/tx\";\nconst types = [\n    [\"/ethermint.evm.v1.MsgEthereumTx\", MsgEthereumTx],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgEthereumTx: (data) => ({ typeUrl: \"/ethermint.evm.v1.MsgEthereumTx\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, State } from '../../../ethermint/evm/v1/evm';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ethermint.evm.v1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.accounts) {\n            GenesisAccount.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.accounts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.accounts.push(GenesisAccount.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.accounts = [];\n        if (object.accounts !== undefined && object.accounts !== null) {\n            for (const e of object.accounts) {\n                message.accounts.push(GenesisAccount.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.accounts) {\n            obj.accounts = message.accounts.map((e) => (e ? GenesisAccount.toJSON(e) : undefined));\n        }\n        else {\n            obj.accounts = [];\n        }\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.accounts = [];\n        if (object.accounts !== undefined && object.accounts !== null) {\n            for (const e of object.accounts) {\n                message.accounts.push(GenesisAccount.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisAccount = { address: '', code: '' };\nexport const GenesisAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.code !== '') {\n            writer.uint32(18).string(message.code);\n        }\n        for (const v of message.storage) {\n            State.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisAccount };\n        message.storage = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.code = reader.string();\n                    break;\n                case 3:\n                    message.storage.push(State.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisAccount };\n        message.storage = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = String(object.code);\n        }\n        else {\n            message.code = '';\n        }\n        if (object.storage !== undefined && object.storage !== null) {\n            for (const e of object.storage) {\n                message.storage.push(State.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.code !== undefined && (obj.code = message.code);\n        if (message.storage) {\n            obj.storage = message.storage.map((e) => (e ? State.toJSON(e) : undefined));\n        }\n        else {\n            obj.storage = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisAccount };\n        message.storage = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = '';\n        }\n        if (object.storage !== undefined && object.storage !== null) {\n            for (const e of object.storage) {\n                message.storage.push(State.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/ethermint/evm/v1/evm\";\nimport { ChainConfig } from \"./module/types/ethermint/evm/v1/evm\";\nimport { State } from \"./module/types/ethermint/evm/v1/evm\";\nimport { TransactionLogs } from \"./module/types/ethermint/evm/v1/evm\";\nimport { Log } from \"./module/types/ethermint/evm/v1/evm\";\nimport { TxResult } from \"./module/types/ethermint/evm/v1/evm\";\nimport { AccessTuple } from \"./module/types/ethermint/evm/v1/evm\";\nimport { TraceConfig } from \"./module/types/ethermint/evm/v1/evm\";\nimport { GenesisAccount } from \"./module/types/ethermint/evm/v1/genesis\";\nimport { QueryTxLogsRequest } from \"./module/types/ethermint/evm/v1/query\";\nimport { QueryTxLogsResponse } from \"./module/types/ethermint/evm/v1/query\";\nimport { QueryStaticCallResponse } from \"./module/types/ethermint/evm/v1/query\";\nimport { LegacyTx } from \"./module/types/ethermint/evm/v1/tx\";\nimport { AccessListTx } from \"./module/types/ethermint/evm/v1/tx\";\nimport { DynamicFeeTx } from \"./module/types/ethermint/evm/v1/tx\";\nimport { ExtensionOptionsEthereumTx } from \"./module/types/ethermint/evm/v1/tx\";\nexport { Params, ChainConfig, State, TransactionLogs, Log, TxResult, AccessTuple, TraceConfig, GenesisAccount, QueryTxLogsRequest, QueryTxLogsResponse, QueryStaticCallResponse, LegacyTx, AccessListTx, DynamicFeeTx, ExtensionOptionsEthereumTx };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Account: {},\n        CosmosAccount: {},\n        ValidatorAccount: {},\n        Balance: {},\n        Storage: {},\n        Code: {},\n        Params: {},\n        EthCall: {},\n        EstimateGas: {},\n        TraceTx: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ChainConfig: getStructure(ChainConfig.fromPartial({})),\n            State: getStructure(State.fromPartial({})),\n            TransactionLogs: getStructure(TransactionLogs.fromPartial({})),\n            Log: getStructure(Log.fromPartial({})),\n            TxResult: getStructure(TxResult.fromPartial({})),\n            AccessTuple: getStructure(AccessTuple.fromPartial({})),\n            TraceConfig: getStructure(TraceConfig.fromPartial({})),\n            GenesisAccount: getStructure(GenesisAccount.fromPartial({})),\n            QueryTxLogsRequest: getStructure(QueryTxLogsRequest.fromPartial({})),\n            QueryTxLogsResponse: getStructure(QueryTxLogsResponse.fromPartial({})),\n            QueryStaticCallResponse: getStructure(QueryStaticCallResponse.fromPartial({})),\n            LegacyTx: getStructure(LegacyTx.fromPartial({})),\n            AccessListTx: getStructure(AccessListTx.fromPartial({})),\n            DynamicFeeTx: getStructure(DynamicFeeTx.fromPartial({})),\n            ExtensionOptionsEthereumTx: getStructure(ExtensionOptionsEthereumTx.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getAccount: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Account[JSON.stringify(params)] ?? {};\n        },\n        getCosmosAccount: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CosmosAccount[JSON.stringify(params)] ?? {};\n        },\n        getValidatorAccount: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorAccount[JSON.stringify(params)] ?? {};\n        },\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getStorage: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Storage[JSON.stringify(params)] ?? {};\n        },\n        getCode: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Code[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getEthCall: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.EthCall[JSON.stringify(params)] ?? {};\n        },\n        getEstimateGas: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.EstimateGas[JSON.stringify(params)] ?? {};\n        },\n        getTraceTx: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TraceTx[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ethermint.evm.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryAccount({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAccount(key.address)).data;\n                commit('QUERY', { query: 'Account', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAccount', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAccount']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAccount', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCosmosAccount({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCosmosAccount(key.address)).data;\n                commit('QUERY', { query: 'CosmosAccount', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCosmosAccount', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCosmosAccount']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCosmosAccount', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorAccount({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorAccount(key.cons_address)).data;\n                commit('QUERY', { query: 'ValidatorAccount', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorAccount', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorAccount']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorAccount', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryStorage({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryStorage(key.address, key.key)).data;\n                commit('QUERY', { query: 'Storage', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryStorage', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getStorage']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryStorage', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCode({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCode(key.address)).data;\n                commit('QUERY', { query: 'Code', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCode', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCode']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCode', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryEthCall({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEthCall(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryEthCall({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'EthCall', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEthCall', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEthCall']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEthCall', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryEstimateGas({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEstimateGas(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryEstimateGas({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'EstimateGas', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEstimateGas', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEstimateGas']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEstimateGas', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTraceTx({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTraceTx(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryTraceTx({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'TraceTx', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTraceTx', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTraceTx']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTraceTx', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgEthereumTx({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEthereumTx(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgEthereumTx({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEthereumTx(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAguaclara from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.aguaclara';\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nimport CosmosCosmosSdkCosmosAuthzV1Beta1 from './cosmos/cosmos-sdk/cosmos.authz.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosFeegrantV1Beta1 from './cosmos/cosmos-sdk/cosmos.feegrant.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosIbcGoIbcApplicationsTransferV1 from './cosmos/ibc-go/ibc.applications.transfer.v1';\nimport TharsisEthermintEthermintEvmV1 from './tharsis/ethermint/ethermint.evm.v1';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAguaclara: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAguaclara, 'ElectronicSignaturesIndustries.anconprotocol.aguaclara'),\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n    CosmosCosmosSdkCosmosAuthzV1Beta1: load(CosmosCosmosSdkCosmosAuthzV1Beta1, 'cosmos.authz.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosFeegrantV1Beta1: load(CosmosCosmosSdkCosmosFeegrantV1Beta1, 'cosmos.feegrant.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosIbcGoIbcApplicationsTransferV1: load(CosmosIbcGoIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    TharsisEthermintEthermintEvmV1: load(TharsisEthermintEthermintEvmV1, 'ethermint.evm.v1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined && (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => (e ? SigningInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => (e ? ValidatorMissedBlocks.toJSON(e) : undefined));\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => (e ? MissedBlock.toJSON(e) : undefined));\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false, reverse: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        if (message.reverse === true) {\n            writer.uint32(40).bool(message.reverse);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                case 5:\n                    message.reverse = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = Boolean(object.reverse);\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        message.reverse !== undefined && (obj.reverse = message.reverse);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = object.reverse;\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../../../cosmos/base/query/v1beta1/pagination';\nimport { Log, Params, TraceConfig } from '../../../ethermint/evm/v1/evm';\nimport { MsgEthereumTx, MsgEthereumTxResponse } from '../../../ethermint/evm/v1/tx';\nexport const protobufPackage = 'ethermint.evm.v1';\nconst baseQueryAccountRequest = { address: '' };\nexport const QueryAccountRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryAccountRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryAccountRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryAccountRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryAccountResponse = { balance: '', codeHash: '', nonce: 0 };\nexport const QueryAccountResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.balance !== '') {\n            writer.uint32(10).string(message.balance);\n        }\n        if (message.codeHash !== '') {\n            writer.uint32(18).string(message.codeHash);\n        }\n        if (message.nonce !== 0) {\n            writer.uint32(24).uint64(message.nonce);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.balance = reader.string();\n                    break;\n                case 2:\n                    message.codeHash = reader.string();\n                    break;\n                case 3:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryAccountResponse };\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        if (object.codeHash !== undefined && object.codeHash !== null) {\n            message.codeHash = String(object.codeHash);\n        }\n        else {\n            message.codeHash = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.balance !== undefined && (obj.balance = message.balance);\n        message.codeHash !== undefined && (obj.codeHash = message.codeHash);\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryAccountResponse };\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        if (object.codeHash !== undefined && object.codeHash !== null) {\n            message.codeHash = object.codeHash;\n        }\n        else {\n            message.codeHash = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryCosmosAccountRequest = { address: '' };\nexport const QueryCosmosAccountRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCosmosAccountRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCosmosAccountRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCosmosAccountRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryCosmosAccountResponse = { cosmosAddress: '', sequence: 0, accountNumber: 0 };\nexport const QueryCosmosAccountResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cosmosAddress !== '') {\n            writer.uint32(10).string(message.cosmosAddress);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(16).uint64(message.sequence);\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCosmosAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cosmosAddress = reader.string();\n                    break;\n                case 2:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCosmosAccountResponse };\n        if (object.cosmosAddress !== undefined && object.cosmosAddress !== null) {\n            message.cosmosAddress = String(object.cosmosAddress);\n        }\n        else {\n            message.cosmosAddress = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cosmosAddress !== undefined && (obj.cosmosAddress = message.cosmosAddress);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.accountNumber !== undefined && (obj.accountNumber = message.accountNumber);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCosmosAccountResponse };\n        if (object.cosmosAddress !== undefined && object.cosmosAddress !== null) {\n            message.cosmosAddress = object.cosmosAddress;\n        }\n        else {\n            message.cosmosAddress = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryValidatorAccountRequest = { consAddress: '' };\nexport const QueryValidatorAccountRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.consAddress !== '') {\n            writer.uint32(10).string(message.consAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryValidatorAccountRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryValidatorAccountRequest };\n        if (object.consAddress !== undefined && object.consAddress !== null) {\n            message.consAddress = String(object.consAddress);\n        }\n        else {\n            message.consAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consAddress !== undefined && (obj.consAddress = message.consAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryValidatorAccountRequest };\n        if (object.consAddress !== undefined && object.consAddress !== null) {\n            message.consAddress = object.consAddress;\n        }\n        else {\n            message.consAddress = '';\n        }\n        return message;\n    }\n};\nconst baseQueryValidatorAccountResponse = { accountAddress: '', sequence: 0, accountNumber: 0 };\nexport const QueryValidatorAccountResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.accountAddress !== '') {\n            writer.uint32(10).string(message.accountAddress);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(16).uint64(message.sequence);\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryValidatorAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.accountAddress = reader.string();\n                    break;\n                case 2:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryValidatorAccountResponse };\n        if (object.accountAddress !== undefined && object.accountAddress !== null) {\n            message.accountAddress = String(object.accountAddress);\n        }\n        else {\n            message.accountAddress = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.accountNumber !== undefined && (obj.accountNumber = message.accountNumber);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryValidatorAccountResponse };\n        if (object.accountAddress !== undefined && object.accountAddress !== null) {\n            message.accountAddress = object.accountAddress;\n        }\n        else {\n            message.accountAddress = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryBalanceRequest = { address: '' };\nexport const QueryBalanceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryBalanceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryBalanceRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryBalanceRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryBalanceResponse = { balance: '' };\nexport const QueryBalanceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.balance !== '') {\n            writer.uint32(10).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryBalanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryBalanceResponse };\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryBalanceResponse };\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseQueryStorageRequest = { address: '', key: '' };\nexport const QueryStorageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.key !== '') {\n            writer.uint32(18).string(message.key);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryStorageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryStorageRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.key !== undefined && (obj.key = message.key);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryStorageRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    }\n};\nconst baseQueryStorageResponse = { value: '' };\nexport const QueryStorageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.value !== '') {\n            writer.uint32(10).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryStorageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryStorageResponse };\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryStorageResponse };\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseQueryCodeRequest = { address: '' };\nexport const QueryCodeRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCodeRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCodeRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCodeRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryCodeResponse = {};\nexport const QueryCodeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.code.length !== 0) {\n            writer.uint32(10).bytes(message.code);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCodeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCodeResponse };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = bytesFromBase64(object.code);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = base64FromBytes(message.code !== undefined ? message.code : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCodeResponse };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseQueryTxLogsRequest = { hash: '' };\nexport const QueryTxLogsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryTxLogsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryTxLogsRequest };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryTxLogsRequest };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryTxLogsResponse = {};\nexport const QueryTxLogsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.logs) {\n            Log.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryTxLogsResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.logs.push(Log.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryTxLogsResponse };\n        message.logs = [];\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => (e ? Log.toJSON(e) : undefined));\n        }\n        else {\n            obj.logs = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryTxLogsResponse };\n        message.logs = [];\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryParamsRequest = {};\nexport const QueryParamsRequest = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryParamsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryParamsRequest };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryParamsRequest };\n        return message;\n    }\n};\nconst baseQueryParamsResponse = {};\nexport const QueryParamsResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryParamsResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryParamsResponse };\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryParamsResponse };\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryStaticCallResponse = {};\nexport const QueryStaticCallResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryStaticCallResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryStaticCallResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryStaticCallResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseEthCallRequest = { gasCap: 0 };\nexport const EthCallRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.args.length !== 0) {\n            writer.uint32(10).bytes(message.args);\n        }\n        if (message.gasCap !== 0) {\n            writer.uint32(16).uint64(message.gasCap);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEthCallRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.args = reader.bytes();\n                    break;\n                case 2:\n                    message.gasCap = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEthCallRequest };\n        if (object.args !== undefined && object.args !== null) {\n            message.args = bytesFromBase64(object.args);\n        }\n        if (object.gasCap !== undefined && object.gasCap !== null) {\n            message.gasCap = Number(object.gasCap);\n        }\n        else {\n            message.gasCap = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.args !== undefined && (obj.args = base64FromBytes(message.args !== undefined ? message.args : new Uint8Array()));\n        message.gasCap !== undefined && (obj.gasCap = message.gasCap);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEthCallRequest };\n        if (object.args !== undefined && object.args !== null) {\n            message.args = object.args;\n        }\n        else {\n            message.args = new Uint8Array();\n        }\n        if (object.gasCap !== undefined && object.gasCap !== null) {\n            message.gasCap = object.gasCap;\n        }\n        else {\n            message.gasCap = 0;\n        }\n        return message;\n    }\n};\nconst baseEstimateGasResponse = { gas: 0 };\nexport const EstimateGasResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gas !== 0) {\n            writer.uint32(8).uint64(message.gas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEstimateGasResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEstimateGasResponse };\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gas !== undefined && (obj.gas = message.gas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEstimateGasResponse };\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryTraceTxRequest = { txIndex: 0 };\nexport const QueryTraceTxRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.msg !== undefined) {\n            MsgEthereumTx.encode(message.msg, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.txIndex !== 0) {\n            writer.uint32(16).uint64(message.txIndex);\n        }\n        if (message.traceConfig !== undefined) {\n            TraceConfig.encode(message.traceConfig, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryTraceTxRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msg = MsgEthereumTx.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.txIndex = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.traceConfig = TraceConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryTraceTxRequest };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgEthereumTx.fromJSON(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = Number(object.txIndex);\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.traceConfig !== undefined && object.traceConfig !== null) {\n            message.traceConfig = TraceConfig.fromJSON(object.traceConfig);\n        }\n        else {\n            message.traceConfig = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msg !== undefined && (obj.msg = message.msg ? MsgEthereumTx.toJSON(message.msg) : undefined);\n        message.txIndex !== undefined && (obj.txIndex = message.txIndex);\n        message.traceConfig !== undefined && (obj.traceConfig = message.traceConfig ? TraceConfig.toJSON(message.traceConfig) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryTraceTxRequest };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgEthereumTx.fromPartial(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = object.txIndex;\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.traceConfig !== undefined && object.traceConfig !== null) {\n            message.traceConfig = TraceConfig.fromPartial(object.traceConfig);\n        }\n        else {\n            message.traceConfig = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryTraceTxResponse = {};\nexport const QueryTraceTxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryTraceTxResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryTraceTxResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryTraceTxResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Account(request) {\n        const data = QueryAccountRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Account', data);\n        return promise.then((data) => QueryAccountResponse.decode(new Reader(data)));\n    }\n    CosmosAccount(request) {\n        const data = QueryCosmosAccountRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'CosmosAccount', data);\n        return promise.then((data) => QueryCosmosAccountResponse.decode(new Reader(data)));\n    }\n    ValidatorAccount(request) {\n        const data = QueryValidatorAccountRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'ValidatorAccount', data);\n        return promise.then((data) => QueryValidatorAccountResponse.decode(new Reader(data)));\n    }\n    Balance(request) {\n        const data = QueryBalanceRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Balance', data);\n        return promise.then((data) => QueryBalanceResponse.decode(new Reader(data)));\n    }\n    Storage(request) {\n        const data = QueryStorageRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Storage', data);\n        return promise.then((data) => QueryStorageResponse.decode(new Reader(data)));\n    }\n    Code(request) {\n        const data = QueryCodeRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Code', data);\n        return promise.then((data) => QueryCodeResponse.decode(new Reader(data)));\n    }\n    Params(request) {\n        const data = QueryParamsRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Params', data);\n        return promise.then((data) => QueryParamsResponse.decode(new Reader(data)));\n    }\n    EthCall(request) {\n        const data = EthCallRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'EthCall', data);\n        return promise.then((data) => MsgEthereumTxResponse.decode(new Reader(data)));\n    }\n    EstimateGas(request) {\n        const data = EthCallRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'EstimateGas', data);\n        return promise.then((data) => EstimateGasResponse.decode(new Reader(data)));\n    }\n    TraceTx(request) {\n        const data = QueryTraceTxRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'TraceTx', data);\n        return promise.then((data) => QueryTraceTxResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = { sourcePort: '', sourceChannel: '', sender: '', receiver: '', timeoutTimestamp: 0 };\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined && (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined && (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined && (obj.timeoutHeight = message.timeoutHeight ? Height.toJSON(message.timeoutHeight) : undefined);\n        message.timeoutTimestamp !== undefined && (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = { communityTax: '', baseProposerReward: '', bonusProposerReward: '', withdrawAddrEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined && object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined && object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined && object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined && (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined && (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined && (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined && (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined && object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined && object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined && object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined && (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined && (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => (e ? ValidatorSlashEvent.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = { title: '', description: '', recipient: '' };\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = { previousPeriod: 0, stake: '', height: 0 };\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined && (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = { title: '', description: '', recipient: '', amount: '', deposit: '' };\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = { address: '', startHeight: 0, indexOffset: 0, tombstoned: false, missedBlocksCounter: 0 };\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined && (obj.jailedUntil = message.jailedUntil !== undefined ? message.jailedUntil.toISOString() : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined && (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined && (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined ? message.minSignedPerWindow : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration ? Duration.toJSON(message.downtimeJailDuration) : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined ? message.slashFractionDoubleSign : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined ? message.slashFractionDowntime : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '', didOwner: '', price: 0 };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.price !== 0) {\n            writer.uint32(56).uint64(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { AccessTuple, Log } from '../../../ethermint/evm/v1/evm';\nexport const protobufPackage = 'ethermint.evm.v1';\nconst baseMsgEthereumTx = { size: 0, hash: '', from: '' };\nexport const MsgEthereumTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== undefined) {\n            Any.encode(message.data, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.size !== 0) {\n            writer.uint32(17).double(message.size);\n        }\n        if (message.hash !== '') {\n            writer.uint32(26).string(message.hash);\n        }\n        if (message.from !== '') {\n            writer.uint32(34).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEthereumTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.size = reader.double();\n                    break;\n                case 3:\n                    message.hash = reader.string();\n                    break;\n                case 4:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEthereumTx };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = Any.fromJSON(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        if (object.size !== undefined && object.size !== null) {\n            message.size = Number(object.size);\n        }\n        else {\n            message.size = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data ? Any.toJSON(message.data) : undefined);\n        message.size !== undefined && (obj.size = message.size);\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEthereumTx };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = Any.fromPartial(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        if (object.size !== undefined && object.size !== null) {\n            message.size = object.size;\n        }\n        else {\n            message.size = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseLegacyTx = { nonce: 0, gasPrice: '', gas: 0, to: '', value: '' };\nexport const LegacyTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.nonce !== 0) {\n            writer.uint32(8).uint64(message.nonce);\n        }\n        if (message.gasPrice !== '') {\n            writer.uint32(18).string(message.gasPrice);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(24).uint64(message.gas);\n        }\n        if (message.to !== '') {\n            writer.uint32(34).string(message.to);\n        }\n        if (message.value !== '') {\n            writer.uint32(42).string(message.value);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.v.length !== 0) {\n            writer.uint32(58).bytes(message.v);\n        }\n        if (message.r.length !== 0) {\n            writer.uint32(66).bytes(message.r);\n        }\n        if (message.s.length !== 0) {\n            writer.uint32(74).bytes(message.s);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLegacyTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasPrice = reader.string();\n                    break;\n                case 3:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.to = reader.string();\n                    break;\n                case 5:\n                    message.value = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.v = reader.bytes();\n                    break;\n                case 8:\n                    message.r = reader.bytes();\n                    break;\n                case 9:\n                    message.s = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLegacyTx };\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasPrice !== undefined && object.gasPrice !== null) {\n            message.gasPrice = String(object.gasPrice);\n        }\n        else {\n            message.gasPrice = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = bytesFromBase64(object.v);\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = bytesFromBase64(object.r);\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = bytesFromBase64(object.s);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        message.gasPrice !== undefined && (obj.gasPrice = message.gasPrice);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.to !== undefined && (obj.to = message.to);\n        message.value !== undefined && (obj.value = message.value);\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.v !== undefined && (obj.v = base64FromBytes(message.v !== undefined ? message.v : new Uint8Array()));\n        message.r !== undefined && (obj.r = base64FromBytes(message.r !== undefined ? message.r : new Uint8Array()));\n        message.s !== undefined && (obj.s = base64FromBytes(message.s !== undefined ? message.s : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLegacyTx };\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasPrice !== undefined && object.gasPrice !== null) {\n            message.gasPrice = object.gasPrice;\n        }\n        else {\n            message.gasPrice = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = new Uint8Array();\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = new Uint8Array();\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAccessListTx = { chainId: '', nonce: 0, gasPrice: '', gas: 0, to: '', value: '' };\nexport const AccessListTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.chainId !== '') {\n            writer.uint32(10).string(message.chainId);\n        }\n        if (message.nonce !== 0) {\n            writer.uint32(16).uint64(message.nonce);\n        }\n        if (message.gasPrice !== '') {\n            writer.uint32(26).string(message.gasPrice);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(32).uint64(message.gas);\n        }\n        if (message.to !== '') {\n            writer.uint32(42).string(message.to);\n        }\n        if (message.value !== '') {\n            writer.uint32(50).string(message.value);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(58).bytes(message.data);\n        }\n        for (const v of message.accesses) {\n            AccessTuple.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.v.length !== 0) {\n            writer.uint32(74).bytes(message.v);\n        }\n        if (message.r.length !== 0) {\n            writer.uint32(82).bytes(message.r);\n        }\n        if (message.s.length !== 0) {\n            writer.uint32(90).bytes(message.s);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAccessListTx };\n        message.accesses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chainId = reader.string();\n                    break;\n                case 2:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.gasPrice = reader.string();\n                    break;\n                case 4:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.to = reader.string();\n                    break;\n                case 6:\n                    message.value = reader.string();\n                    break;\n                case 7:\n                    message.data = reader.bytes();\n                    break;\n                case 8:\n                    message.accesses.push(AccessTuple.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.v = reader.bytes();\n                    break;\n                case 10:\n                    message.r = reader.bytes();\n                    break;\n                case 11:\n                    message.s = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAccessListTx };\n        message.accesses = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasPrice !== undefined && object.gasPrice !== null) {\n            message.gasPrice = String(object.gasPrice);\n        }\n        else {\n            message.gasPrice = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.accesses !== undefined && object.accesses !== null) {\n            for (const e of object.accesses) {\n                message.accesses.push(AccessTuple.fromJSON(e));\n            }\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = bytesFromBase64(object.v);\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = bytesFromBase64(object.r);\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = bytesFromBase64(object.s);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        message.gasPrice !== undefined && (obj.gasPrice = message.gasPrice);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.to !== undefined && (obj.to = message.to);\n        message.value !== undefined && (obj.value = message.value);\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        if (message.accesses) {\n            obj.accesses = message.accesses.map((e) => (e ? AccessTuple.toJSON(e) : undefined));\n        }\n        else {\n            obj.accesses = [];\n        }\n        message.v !== undefined && (obj.v = base64FromBytes(message.v !== undefined ? message.v : new Uint8Array()));\n        message.r !== undefined && (obj.r = base64FromBytes(message.r !== undefined ? message.r : new Uint8Array()));\n        message.s !== undefined && (obj.s = base64FromBytes(message.s !== undefined ? message.s : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAccessListTx };\n        message.accesses = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasPrice !== undefined && object.gasPrice !== null) {\n            message.gasPrice = object.gasPrice;\n        }\n        else {\n            message.gasPrice = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.accesses !== undefined && object.accesses !== null) {\n            for (const e of object.accesses) {\n                message.accesses.push(AccessTuple.fromPartial(e));\n            }\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = new Uint8Array();\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = new Uint8Array();\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseDynamicFeeTx = { chainId: '', nonce: 0, gasTipCap: '', gasFeeCap: '', gas: 0, to: '', value: '' };\nexport const DynamicFeeTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.chainId !== '') {\n            writer.uint32(10).string(message.chainId);\n        }\n        if (message.nonce !== 0) {\n            writer.uint32(16).uint64(message.nonce);\n        }\n        if (message.gasTipCap !== '') {\n            writer.uint32(26).string(message.gasTipCap);\n        }\n        if (message.gasFeeCap !== '') {\n            writer.uint32(34).string(message.gasFeeCap);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(40).uint64(message.gas);\n        }\n        if (message.to !== '') {\n            writer.uint32(50).string(message.to);\n        }\n        if (message.value !== '') {\n            writer.uint32(58).string(message.value);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(66).bytes(message.data);\n        }\n        for (const v of message.accesses) {\n            AccessTuple.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.v.length !== 0) {\n            writer.uint32(82).bytes(message.v);\n        }\n        if (message.r.length !== 0) {\n            writer.uint32(90).bytes(message.r);\n        }\n        if (message.s.length !== 0) {\n            writer.uint32(98).bytes(message.s);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDynamicFeeTx };\n        message.accesses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chainId = reader.string();\n                    break;\n                case 2:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.gasTipCap = reader.string();\n                    break;\n                case 4:\n                    message.gasFeeCap = reader.string();\n                    break;\n                case 5:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.to = reader.string();\n                    break;\n                case 7:\n                    message.value = reader.string();\n                    break;\n                case 8:\n                    message.data = reader.bytes();\n                    break;\n                case 9:\n                    message.accesses.push(AccessTuple.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.v = reader.bytes();\n                    break;\n                case 11:\n                    message.r = reader.bytes();\n                    break;\n                case 12:\n                    message.s = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDynamicFeeTx };\n        message.accesses = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasTipCap !== undefined && object.gasTipCap !== null) {\n            message.gasTipCap = String(object.gasTipCap);\n        }\n        else {\n            message.gasTipCap = '';\n        }\n        if (object.gasFeeCap !== undefined && object.gasFeeCap !== null) {\n            message.gasFeeCap = String(object.gasFeeCap);\n        }\n        else {\n            message.gasFeeCap = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.accesses !== undefined && object.accesses !== null) {\n            for (const e of object.accesses) {\n                message.accesses.push(AccessTuple.fromJSON(e));\n            }\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = bytesFromBase64(object.v);\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = bytesFromBase64(object.r);\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = bytesFromBase64(object.s);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        message.gasTipCap !== undefined && (obj.gasTipCap = message.gasTipCap);\n        message.gasFeeCap !== undefined && (obj.gasFeeCap = message.gasFeeCap);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.to !== undefined && (obj.to = message.to);\n        message.value !== undefined && (obj.value = message.value);\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        if (message.accesses) {\n            obj.accesses = message.accesses.map((e) => (e ? AccessTuple.toJSON(e) : undefined));\n        }\n        else {\n            obj.accesses = [];\n        }\n        message.v !== undefined && (obj.v = base64FromBytes(message.v !== undefined ? message.v : new Uint8Array()));\n        message.r !== undefined && (obj.r = base64FromBytes(message.r !== undefined ? message.r : new Uint8Array()));\n        message.s !== undefined && (obj.s = base64FromBytes(message.s !== undefined ? message.s : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDynamicFeeTx };\n        message.accesses = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasTipCap !== undefined && object.gasTipCap !== null) {\n            message.gasTipCap = object.gasTipCap;\n        }\n        else {\n            message.gasTipCap = '';\n        }\n        if (object.gasFeeCap !== undefined && object.gasFeeCap !== null) {\n            message.gasFeeCap = object.gasFeeCap;\n        }\n        else {\n            message.gasFeeCap = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.accesses !== undefined && object.accesses !== null) {\n            for (const e of object.accesses) {\n                message.accesses.push(AccessTuple.fromPartial(e));\n            }\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = new Uint8Array();\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = new Uint8Array();\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseExtensionOptionsEthereumTx = {};\nexport const ExtensionOptionsEthereumTx = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExtensionOptionsEthereumTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseExtensionOptionsEthereumTx };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseExtensionOptionsEthereumTx };\n        return message;\n    }\n};\nconst baseMsgEthereumTxResponse = { hash: '', vmError: '', gasUsed: 0 };\nexport const MsgEthereumTxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        for (const v of message.logs) {\n            Log.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.ret.length !== 0) {\n            writer.uint32(26).bytes(message.ret);\n        }\n        if (message.vmError !== '') {\n            writer.uint32(34).string(message.vmError);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(40).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEthereumTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.logs.push(Log.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.ret = reader.bytes();\n                    break;\n                case 4:\n                    message.vmError = reader.string();\n                    break;\n                case 5:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEthereumTxResponse };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromJSON(e));\n            }\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = bytesFromBase64(object.ret);\n        }\n        if (object.vmError !== undefined && object.vmError !== null) {\n            message.vmError = String(object.vmError);\n        }\n        else {\n            message.vmError = '';\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => (e ? Log.toJSON(e) : undefined));\n        }\n        else {\n            obj.logs = [];\n        }\n        message.ret !== undefined && (obj.ret = base64FromBytes(message.ret !== undefined ? message.ret : new Uint8Array()));\n        message.vmError !== undefined && (obj.vmError = message.vmError);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEthereumTxResponse };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromPartial(e));\n            }\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = object.ret;\n        }\n        else {\n            message.ret = new Uint8Array();\n        }\n        if (object.vmError !== undefined && object.vmError !== null) {\n            message.vmError = object.vmError;\n        }\n        else {\n            message.vmError = '';\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    EthereumTx(request) {\n        const data = MsgEthereumTx.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Msg', 'EthereumTx', data);\n        return promise.then((data) => MsgEthereumTxResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined && (obj.evidence = message.evidence ? Any.toJSON(message.evidence) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = { delegatorAddress: '', withdrawAddress: '' };\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = { validatorAddress: '' };\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined && (obj.accumulated = message.accumulated ? ValidatorAccumulatedCommission.toJSON(message.accumulated) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = { validatorAddress: '', period: 0 };\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorHistoricalRewards.toJSON(message.rewards) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorCurrentRewards.toJSON(message.rewards) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = { delegatorAddress: '', validatorAddress: '' };\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfoRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfoRecord };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined && (obj.startingInfo = message.startingInfo ? DelegatorStartingInfo.toJSON(message.startingInfo) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfoRecord };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = { validatorAddress: '', height: 0, period: 0 };\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEventRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEventRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEventRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined && object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined && (obj.feePool = message.feePool ? FeePool.toJSON(message.feePool) : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => (e ? DelegatorWithdrawInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined && (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => (e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => (e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => (e ? DelegatorStartingInfoRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => (e ? ValidatorSlashEventRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined && object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = { fromAddress: '', toAddress: '', endTime: 0, delayed: false };\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Grant } from '../../../cosmos/authz/v1beta1/authz';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseMsgGrant = { granter: '', grantee: '' };\nexport const MsgGrant = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.grant !== undefined) {\n            Grant.encode(message.grant, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.grant = Grant.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromJSON(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.grant !== undefined && (obj.grant = message.grant ? Grant.toJSON(message.grant) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromPartial(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgExecResponse = {};\nexport const MsgExecResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.results) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.results.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.results) {\n            obj.results = message.results.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.results = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgExec = { grantee: '' };\nexport const MsgExec = {\n    encode(message, writer = Writer.create()) {\n        if (message.grantee !== '') {\n            writer.uint32(10).string(message.grantee);\n        }\n        for (const v of message.msgs) {\n            Any.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grantee = reader.string();\n                    break;\n                case 2:\n                    message.msgs.push(Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        if (message.msgs) {\n            obj.msgs = message.msgs.map((e) => (e ? Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.msgs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgGrantResponse = {};\nexport const MsgGrantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    }\n};\nconst baseMsgRevoke = { granter: '', grantee: '', msgTypeUrl: '' };\nexport const MsgRevoke = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(26).string(message.msgTypeUrl);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevoke };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeResponse = {};\nexport const MsgRevokeResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Grant(request) {\n        const data = MsgGrant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Grant', data);\n        return promise.then((data) => MsgGrantResponse.decode(new Reader(data)));\n    }\n    Exec(request) {\n        const data = MsgExec.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Exec', data);\n        return promise.then((data) => MsgExecResponse.decode(new Reader(data)));\n    }\n    Revoke(request) {\n        const data = MsgRevoke.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Revoke', data);\n        return promise.then((data) => MsgRevokeResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined && (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined && (obj.baseAccount = message.baseAccount ? BaseAccount.toJSON(message.baseAccount) : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = { maxMemoCharacters: 0, txSigLimit: 0, txSizeCostPerByte: 0, sigVerifyCostEd25519: 0, sigVerifyCostSecp256k1: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined && (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined && (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined && (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined && (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseWeightedVoteOption = { option: 0, weight: '' };\nexport const WeightedVoteOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.option !== 0) {\n            writer.uint32(8).int32(message.option);\n        }\n        if (message.weight !== '') {\n            writer.uint32(18).string(message.weight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseWeightedVoteOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.option = reader.int32();\n                    break;\n                case 2:\n                    message.weight = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseWeightedVoteOption };\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.weight !== undefined && object.weight !== null) {\n            message.weight = String(object.weight);\n        }\n        else {\n            message.weight = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        message.weight !== undefined && (obj.weight = message.weight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseWeightedVoteOption };\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.weight !== undefined && object.weight !== null) {\n            message.weight = object.weight;\n        }\n        else {\n            message.weight = '';\n        }\n        return message;\n    }\n};\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined && (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined && (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined && (obj.finalTallyResult = message.finalTallyResult ? TallyResult.toJSON(message.finalTallyResult) : undefined);\n        message.submitTime !== undefined && (obj.submitTime = message.submitTime !== undefined ? message.submitTime.toISOString() : null);\n        message.depositEndTime !== undefined && (obj.depositEndTime = message.depositEndTime !== undefined ? message.depositEndTime.toISOString() : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined && (obj.votingStartTime = message.votingStartTime !== undefined ? message.votingStartTime.toISOString() : null);\n        message.votingEndTime !== undefined && (obj.votingEndTime = message.votingEndTime !== undefined ? message.votingEndTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        for (const v of message.options) {\n            WeightedVoteOption.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        message.options = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                case 4:\n                    message.options.push(WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined && (obj.maxDepositPeriod = message.maxDepositPeriod ? Duration.toJSON(message.maxDepositPeriod) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined && (obj.votingPeriod = message.votingPeriod ? Duration.toJSON(message.votingPeriod) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined && (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined && (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined && (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined ? message.vetoThreshold : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseDIDOwner = { identity: '', owner: '', cid: '', didWebDeactivated: false, vanityName: '' };\nexport const DIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.cid !== '') {\n            writer.uint32(26).string(message.cid);\n        }\n        if (message.didWebDeactivated === true) {\n            writer.uint32(32).bool(message.didWebDeactivated);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(42).string(message.vanityName);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.cid = reader.string();\n                    break;\n                case 4:\n                    message.didWebDeactivated = reader.bool();\n                    break;\n                case 5:\n                    message.vanityName = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = Boolean(object.didWebDeactivated);\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.didWebDeactivated !== undefined && (obj.didWebDeactivated = message.didWebDeactivated);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = object.didWebDeactivated;\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    }\n};\nconst baseDIDWebRoute = { name: '', route: '', cid: '' };\nexport const DIDWebRoute = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.route !== '') {\n            writer.uint32(18).string(message.route);\n        }\n        if (message.cid !== '') {\n            writer.uint32(26).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDWebRoute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.route = reader.string();\n                    break;\n                case 3:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = String(object.route);\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.route !== undefined && (obj.route = message.route);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = object.route;\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const Delegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseChange = { identity: '', owner: '', previousChange: 0 };\nexport const Change = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChange };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseAttribute = { identity: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(18).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(26).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.bytes();\n                    break;\n                case 3:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../cosmos/base/query/v1beta1/pagination';\nimport { Owner, Collection, Denom, BaseNFT } from '../anconprotocol/nft';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQueryDidWebRequest = { name: '' };\nexport const QueryDidWebRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDidWebRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryProofMetadataRequest = { cid: '', path: '' };\nexport const QueryProofMetadataRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryProofMetadataRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryProofMetadataRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryProofMetadataRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryProofResponse = { root: '', proof: '' };\nexport const QueryProofResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.root !== '') {\n            writer.uint32(10).string(message.root);\n        }\n        if (message.proof !== '') {\n            writer.uint32(18).string(message.proof);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryProofResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.root = reader.string();\n                    break;\n                case 2:\n                    message.proof = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryProofResponse };\n        if (object.root !== undefined && object.root !== null) {\n            message.root = String(object.root);\n        }\n        else {\n            message.root = '';\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = String(object.proof);\n        }\n        else {\n            message.proof = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.root !== undefined && (obj.root = message.root);\n        message.proof !== undefined && (obj.proof = message.proof);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryProofResponse };\n        if (object.root !== undefined && object.root !== null) {\n            message.root = object.root;\n        }\n        else {\n            message.root = '';\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = object.proof;\n        }\n        else {\n            message.proof = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDidRequest = { name: '' };\nexport const QueryGetDidRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDidRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadDidKeyRequest = { name: '' };\nexport const QueryReadDidKeyRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadDidKeyResponse = {};\nexport const QueryReadDidKeyResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfo = { cid: '', price: '' };\nexport const QueryReadRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.price !== '') {\n            writer.uint32(18).string(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.price = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfoResponse = { receiver: '', royaltyAmount: 0 };\nexport const QueryReadRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyAmount !== 0) {\n            writer.uint32(16).uint64(message.royaltyAmount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyAmount = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = Number(object.royaltyAmount);\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyAmount !== undefined && (obj.royaltyAmount = message.royaltyAmount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = object.royaltyAmount;\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerRequest = { denomId: '', owner: '' };\nexport const QueryOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerResponse = {};\nexport const QueryOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== undefined) {\n            Owner.encode(message.owner, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = Owner.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromJSON(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner ? Owner.toJSON(message.owner) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromPartial(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionRequest = { denomId: '' };\nexport const QueryCollectionRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionResponse = {};\nexport const QueryCollectionResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.collection !== undefined) {\n            Collection.encode(message.collection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.collection = Collection.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromJSON(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.collection !== undefined && (obj.collection = message.collection ? Collection.toJSON(message.collection) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromPartial(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomRequest = { denomId: '' };\nexport const QueryDenomRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDenomResponse = {};\nexport const QueryDenomResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsRequest = {};\nexport const QueryDenomsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsResponse = {};\nexport const QueryDenomsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.denoms) {\n            Denom.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(Denom.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => (e ? Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryNFTRequest = { denomId: '', tokenId: '' };\nexport const QueryNFTRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(18).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNFTResponse = {};\nexport const QueryNFTResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nft !== undefined) {\n            BaseNFT.encode(message.nft, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nft = BaseNFT.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromJSON(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nft !== undefined && (obj.nft = message.nft ? BaseNFT.toJSON(message.nft) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromPartial(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateRequest = { id: '' };\nexport const QueryGetDelegateRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateResponse = {};\nexport const QueryGetDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadRoyaltyInfo(request) {\n        const data = QueryReadRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadRoyaltyInfo', data);\n        return promise.then((data) => QueryReadRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadMetadataProof(request) {\n        const data = QueryProofMetadataRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadMetadataProof', data);\n        return promise.then((data) => QueryProofResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadDelegate(request) {\n        const data = QueryGetDelegateRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegate', data);\n        return promise.then((data) => QueryGetDelegateResponse.decode(new Reader(data)));\n    }\n    Owner(request) {\n        const data = QueryOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Owner', data);\n        return promise.then((data) => QueryOwnerResponse.decode(new Reader(data)));\n    }\n    Collection(request) {\n        const data = QueryCollectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Collection', data);\n        return promise.then((data) => QueryCollectionResponse.decode(new Reader(data)));\n    }\n    Denom(request) {\n        const data = QueryDenomRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denom', data);\n        return promise.then((data) => QueryDenomResponse.decode(new Reader(data)));\n    }\n    Denoms(request) {\n        const data = QueryDenomsRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denoms', data);\n        return promise.then((data) => QueryDenomsResponse.decode(new Reader(data)));\n    }\n    GetNft(request) {\n        const data = QueryNFTRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetNft', data);\n        return promise.then((data) => QueryNFTResponse.decode(new Reader(data)));\n    }\n    ResolveDidWeb(request) {\n        const data = QueryDidWebRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ResolveDidWeb', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    GetDidKey(request) {\n        const data = QueryGetDidRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetDidKey', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined ? message.lastTotalPower : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => (e ? LastValidatorPower.toJSON(e) : undefined));\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => (e ? Delegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => (e ? UnbondingDelegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => (e ? Redelegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.upgrade.v1beta1';\nconst basePlan = { name: '', height: 0, info: '' };\nexport const Plan = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePlan };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePlan };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.height !== undefined && (obj.height = message.height);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePlan };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseSoftwareUpgradeProposal = { title: '', description: '' };\nexport const SoftwareUpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSoftwareUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        return message;\n    }\n};\nconst baseCancelSoftwareUpgradeProposal = { title: '', description: '' };\nexport const CancelSoftwareUpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined && (obj.ed25519 = message.ed25519 !== undefined ? base64FromBytes(message.ed25519) : undefined);\n        message.secp256k1 !== undefined && (obj.secp256k1 = message.secp256k1 !== undefined ? base64FromBytes(message.secp256k1) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer ? Validator.toJSON(message.proposer) : undefined);\n        message.totalVotingPower !== undefined && (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined && (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined && (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined && (obj.partSetHeader = message.partSetHeader ? PartSetHeader.toJSON(message.partSetHeader) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version ? Consensus.toJSON(message.version) : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined && (obj.lastBlockId = message.lastBlockId ? BlockID.toJSON(message.lastBlockId) : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined ? message.lastCommitHash : new Uint8Array()));\n        message.dataHash !== undefined && (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined ? message.validatorsHash : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n        message.consensusHash !== undefined && (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined ? message.consensusHash : new Uint8Array()));\n        message.appHash !== undefined && (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined ? message.lastResultsHash : new Uint8Array()));\n        message.evidenceHash !== undefined && (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined ? message.evidenceHash : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined ? message.proposerAddress : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.validatorIndex !== undefined && (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (e ? CommitSig.toJSON(e) : undefined));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined && (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined && (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined && (obj.signedHeader = message.signedHeader ? SignedHeader.toJSON(message.signedHeader) : undefined);\n        message.validatorSet !== undefined && (obj.validatorSet = message.validatorSet ? ValidatorSet.toJSON(message.validatorSet) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined && (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseGenericAuthorization = { msg: '' };\nexport const GenericAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.msg !== '') {\n            writer.uint32(10).string(message.msg);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenericAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msg = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenericAuthorization };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = String(object.msg);\n        }\n        else {\n            message.msg = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msg !== undefined && (obj.msg = message.msg);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenericAuthorization };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = object.msg;\n        }\n        else {\n            message.msg = '';\n        }\n        return message;\n    }\n};\nconst baseGrant = {};\nexport const Grant = {\n    encode(message, writer = Writer.create()) {\n        if (message.authorization !== undefined) {\n            Any.encode(message.authorization, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrant };\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromJSON(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authorization !== undefined && (obj.authorization = message.authorization ? Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrant };\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromPartial(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { WeightedVoteOption, voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined && (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposalResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgVoteWeighted = { proposalId: 0, voter: '' };\nexport const MsgVoteWeighted = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        for (const v of message.options) {\n            WeightedVoteOption.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.options.push(WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgVoteWeightedResponse = {};\nexport const MsgVoteWeightedResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteWeightedResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteWeightedResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteWeightedResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    VoteWeighted(request) {\n        const data = MsgVoteWeighted.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'VoteWeighted', data);\n        return promise.then((data) => MsgVoteWeightedResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}