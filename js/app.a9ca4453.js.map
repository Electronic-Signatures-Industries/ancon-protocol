{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseMsgFileMetadataResponse","MsgFileMetadataResponse","hash","bytes","bytesFromBase64","base64FromBytes","baseMsgFileTx","path","content","time","contentType","did","from","MsgFileTx","string","uint64","String","baseMsgMetadataTx","description","image","owner","parent","sources","links","verifiedCredentialRef","MsgMetadataTx","v","e","map","baseMsgMetadata","creator","MsgMetadata","baseMsgFile","MsgFile","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","baseValidatorSet","totalVotingPower","ValidatorSet","validators","Validator","fork","ldelim","proposer","baseValidator","votingPower","proposerPriority","address","pubKey","PublicKey","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","types","Registry","baseCoin","denom","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","getStructure","template","structure","fields","field","getDefaultState","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","assign","QUERY","query","JSON","stringify","SUBSCRIBE","subscription","add","UNSUBSCRIBE","delete","getters","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","MsgCreateVestingAccount","MissingWalletError","registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgCreateVestingAccount","initTxClient","vuexGetters","sendMsgCreateVestingAccount","msg","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","request","body","secure","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryClientParams","method","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpdateClient","msgSubmitMisbehaviour","msgCreateClient","msgUpgradeClient","queryClient","initQueryClient","mergeResults","next_values","prop","V1Beta1ProposalStatus","V1Beta1VoteOption","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","options","subscribe","all","client_id","QueryClientStates","pagination","nextKey","QueryConsensusState","revision_number","revision_height","QueryConsensusStates","QueryClientParams","sendMsgUpdateClient","sendMsgSubmitMisbehaviour","sendMsgCreateClient","sendMsgUpgradeClient","queryParams","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","depositor","queryTallyResult","queryVotes","queryVote","voter","MsgVote","MsgDeposit","MsgSubmitProposal","msgVote","msgDeposit","msgSubmitProposal","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getParams","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","QueryParams","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVote","sendMsgDeposit","sendMsgSubmitProposal","V1Order","V1State","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenTry","MsgChannelCloseInit","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgTimeoutOnClose","MsgChannelCloseConfirm","MsgChannelOpenInit","MsgRecvPacket","MsgTimeout","MsgAcknowledgement","msgChannelOpenTry","msgChannelCloseInit","msgChannelOpenAck","msgChannelOpenConfirm","msgTimeoutOnClose","msgChannelCloseConfirm","msgChannelOpenInit","msgRecvPacket","msgTimeout","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenTry","sendMsgChannelCloseInit","sendMsgChannelOpenAck","sendMsgChannelOpenConfirm","sendMsgTimeoutOnClose","sendMsgChannelCloseConfirm","sendMsgChannelOpenInit","sendMsgRecvPacket","sendMsgTimeout","sendMsgAcknowledgement","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgSend","msgMultiSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","sendMsgMultiSend","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","V1Beta1BondStatus","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidators","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgUndelegate","msgCreateValidator","msgDelegate","msgBeginRedelegate","msgEditValidator","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidators","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidators","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidators","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgUndelegate","sendMsgCreateValidator","sendMsgDelegate","sendMsgBeginRedelegate","sendMsgEditValidator","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenTry","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenAck","msgConnectionOpenTry","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenAck","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenTry","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenAck","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","MsgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgFundCommunityPool","msgWithdrawDelegatorReward","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgSetWithdrawAddress","sendMsgFundCommunityPool","sendMsgWithdrawDelegatorReward","queryResource","cid","msgFile","msgMetadata","Resource","getResource","QueryResource","sendMsgFile","sendMsgMetadata","queryRead","queryReadWithPath","ReadWithPath","Read","getReadWithPath","getRead","QueryReadWithPath","QueryRead","CosmosCosmosSdkCosmosBaseV1Beta1","load","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosDistributionV1Beta1","ElectronicSignaturesIndustriesAnconProtocolAnconprotocol","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","id","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.a9ca4453.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgFileTx = { path: '', content: '', mode: '', time: 0, contentType: '', did: '', from: '' };\nexport const MsgFileTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(18).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(26).string(message.mode);\n        }\n        if (message.time !== 0) {\n            writer.uint32(32).uint64(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(42).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(50).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(58).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.content = reader.string();\n                    break;\n                case 3:\n                    message.mode = reader.string();\n                    break;\n                case 4:\n                    message.time = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.contentType = reader.string();\n                    break;\n                case 6:\n                    message.did = reader.string();\n                    break;\n                case 7:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = Number(object.time);\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataTx = {\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadataTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(26).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(34).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(42).string(message.parent);\n        }\n        for (const v of message.sources) {\n            writer.uint32(50).string(v);\n        }\n        for (const v of message.links) {\n            writer.uint32(58).string(v);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(66).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(74).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(82).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.image = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                case 5:\n                    message.parent = reader.string();\n                    break;\n                case 6:\n                    message.sources.push(reader.string());\n                    break;\n                case 7:\n                    message.links.push(reader.string());\n                    break;\n                case 8:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 9:\n                    message.did = reader.string();\n                    break;\n                case 10:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(String(e));\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(String(e));\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        if (message.sources) {\n            obj.sources = message.sources.map((e) => e);\n        }\n        else {\n            obj.sources = [];\n        }\n        if (message.links) {\n            obj.links = message.links.map((e) => e);\n        }\n        else {\n            obj.links = [];\n        }\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(e);\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(e);\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseMsgCreateClient = { signer: '' };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpdateClient = { clientId: '', signer: '' };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpgradeClient = { clientId: '', signer: '' };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviour = { clientId: '', signer: '' };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'CreateClient', data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpdateClient', data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpgradeClient', data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'SubmitMisbehaviour', data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { Header } from '../../tendermint/types/types';\nimport { ProofOps } from '../../tendermint/crypto/proof';\nimport { EvidenceParams, ValidatorParams, VersionParams } from '../../tendermint/types/params';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.abci';\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NEW':\n            return CheckTxType.NEW;\n        case 1:\n        case 'RECHECK':\n            return CheckTxType.RECHECK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return 'NEW';\n        case CheckTxType.RECHECK:\n            return 'RECHECK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case 'DUPLICATE_VOTE':\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case 'LIGHT_CLIENT_ATTACK':\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return 'UNKNOWN';\n        case EvidenceType.DUPLICATE_VOTE:\n            return 'DUPLICATE_VOTE';\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return 'LIGHT_CLIENT_ATTACK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case 'REJECT':\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case 'REJECT_FORMAT':\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case 'REJECT_SENDER':\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseOfferSnapshot_Result.ABORT:\n            return 'ABORT';\n        case ResponseOfferSnapshot_Result.REJECT:\n            return 'REJECT';\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return 'REJECT_FORMAT';\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return 'REJECT_SENDER';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case 'RETRY':\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case 'RETRY_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case 'REJECT_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return 'ABORT';\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return 'RETRY';\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return 'RETRY_SNAPSHOT';\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return 'REJECT_SNAPSHOT';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseRequestEcho = { message: '' };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    }\n};\nconst baseRequestInfo = { version: '', blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== '') {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestSetOption = { key: '', value: '' };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseRequestInitChain = { chainId: '', initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestQuery = { path: '', height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    }\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    }\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    }\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: '' };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseResponseException = { error: '' };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== '') {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEcho = { message: '' };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    }\n};\nconst baseResponseInfo = {\n    data: '',\n    version: '',\n    appVersion: 0,\n    lastBlockHeight: 0\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== '') {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseSetOption = { code: 0, log: '', info: '' };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: '',\n    info: '',\n    index: 0,\n    height: 0,\n    codespace: ''\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: ''\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    }\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? VoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEvent = { type: '' };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    }\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Echo', data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Flush', data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Info', data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'SetOption', data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'DeliverTx', data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'CheckTx', data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Query', data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Commit', data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'InitChain', data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'BeginBlock', data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'EndBlock', data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ListSnapshots', data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'OfferSnapshot', data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'LoadSnapshotChunk', data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ApplySnapshotChunk', data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../google/protobuf/duration';\nexport const protobufPackage = 'tendermint.types';\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    }\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorParams = { pubKeyTypes: '' };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined && (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'anconprotocol';\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgFileTx = { path: '', content: '', mode: '', time: 0, contentType: '', did: '', from: '' };\nexport const MsgFileTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(18).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(26).string(message.mode);\n        }\n        if (message.time !== 0) {\n            writer.uint32(32).uint64(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(42).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(50).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(58).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.content = reader.string();\n                    break;\n                case 3:\n                    message.mode = reader.string();\n                    break;\n                case 4:\n                    message.time = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.contentType = reader.string();\n                    break;\n                case 6:\n                    message.did = reader.string();\n                    break;\n                case 7:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = Number(object.time);\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataTx = {\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadataTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(26).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(34).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(42).string(message.parent);\n        }\n        for (const v of message.sources) {\n            writer.uint32(50).string(v);\n        }\n        for (const v of message.links) {\n            writer.uint32(58).string(v);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(66).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(74).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(82).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.image = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                case 5:\n                    message.parent = reader.string();\n                    break;\n                case 6:\n                    message.sources.push(reader.string());\n                    break;\n                case 7:\n                    message.links.push(reader.string());\n                    break;\n                case 8:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 9:\n                    message.did = reader.string();\n                    break;\n                case 10:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(String(e));\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(String(e));\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        if (message.sources) {\n            obj.sources = message.sources.map((e) => e);\n        }\n        else {\n            obj.sources = [];\n        }\n        if (message.links) {\n            obj.links = message.links.map((e) => e);\n        }\n        else {\n            obj.links = [];\n        }\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(e);\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(e);\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case 4:\n        case 'STATE_CLOSED':\n            return State.STATE_CLOSED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        case State.STATE_CLOSED:\n            return 'STATE_CLOSED';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'ORDER_NONE_UNSPECIFIED':\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case 'ORDER_UNORDERED':\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case 'ORDER_ORDERED':\n            return Order.ORDER_ORDERED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return 'ORDER_NONE_UNSPECIFIED';\n        case Order.ORDER_UNORDERED:\n            return 'ORDER_UNORDERED';\n        case Order.ORDER_ORDERED:\n            return 'ORDER_ORDERED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: ''\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    }\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: '',\n    portId: '',\n    channelId: ''\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== '') {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { portId: '', channelId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: '',\n    sourceChannel: '',\n    destinationPort: '',\n    destinationChannel: '',\n    timeoutTimestamp: 0\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== '') {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== '') {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== '') {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst basePacketState = { portId: '', channelId: '', sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = {\n    moniker: '',\n    identity: '',\n    website: '',\n    securityContact: '',\n    details: ''\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = {\n    operatorAddress: '',\n    jailed: false,\n    status: 0,\n    tokens: '',\n    delegatorShares: '',\n    unbondingHeight: 0,\n    minSelfDelegation: ''\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = {\n    delegatorAddress: '',\n    validatorAddress: '',\n    shares: ''\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    balance: ''\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    sharesDst: ''\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: ''\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nexport { Coin, DecCoin, IntProto, DecProto };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nexport { IdentifiedClientState, ConsensusStateWithHeight, ClientConsensusStates, ClientUpdateProposal, Height, Params, GenesisMetadata, IdentifiedGenesisMetadata };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.client.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientStates(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusStates(key.client_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nexport { TxResponse, ABCIMessageLog, StringEvent, Attribute, GasInfo, Result, SimulationResponse, MsgData, TxMsgData, SearchTxsResult };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.abci.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/channel.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nexport { Channel, IdentifiedChannel, Counterparty, Packet, PacketState, Acknowledgement, PacketSequence };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.channel.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannels(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionChannels(key.connection, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = {\n    sender: '',\n    invariantModuleName: '',\n    invariantRoute: ''\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = {\n    minSelfDelegation: '',\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgEditValidator = {\n    validatorAddress: '',\n    commissionRate: '',\n    minSelfDelegation: ''\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/connection.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nexport { ConnectionEnd, IdentifiedConnection, Counterparty, ClientPaths, ConnectionPaths, Version };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.connection.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnections(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryResource = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/anconprotocol.MsgFile\", MsgFile],\n    [\"/anconprotocol.MsgMetadata\", MsgMetadata],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgFile: (data) => ({ typeUrl: \"/anconprotocol.MsgFile\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/anconprotocol.MsgMetadata\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileTx } from \"./module/types/anconprotocol/tx\";\nimport { MsgMetadataTx } from \"./module/types/anconprotocol/tx\";\nexport { MsgFileMetadataResponse, MsgFileTx, MsgMetadataTx };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Resource: {},\n        _Structure: {\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n            MsgFileTx: getStructure(MsgFileTx.fromPartial({})),\n            MsgMetadataTx: getStructure(MsgMetadataTx.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, key.path)).data;\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRead\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}\n         */\n        this.queryRead = (cid, query, params = {}) => this.request({\n            path: `/ancon/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileTx } from \"./module/types/anconprotocol/tx\";\nimport { MsgMetadataTx } from \"./module/types/anconprotocol/tx\";\nexport { MsgFileMetadataResponse, MsgFileTx, MsgMetadataTx };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadWithPath: {},\n        Read: {},\n        Resource: {},\n        _Structure: {\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n            MsgFileTx: getStructure(MsgFileTx.fromPartial({})),\n            MsgMetadataTx: getStructure(MsgMetadataTx.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getRead: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Read[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRead({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRead(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRead(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Read', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRead', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRead']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRead', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport ElectronicSignaturesIndustriesAnconProtocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/anconprotocol';\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nexport default {\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    ElectronicSignaturesIndustriesAnconProtocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolAnconprotocol, 'anconprotocol'),\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedChannel, PacketState } from '../../../../ibc/core/channel/v1/channel';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    }\n};\nconst basePacketSequence = { portId: '', channelId: '', sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { MerklePrefix } from '../../../../ibc/core/commitment/v1/commitment';\nexport const protobufPackage = 'ibc.core.connection.v1';\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseConnectionEnd = { clientId: '', state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseIdentifiedConnection = {\n    id: '',\n    clientId: '',\n    state: 0,\n    delayPeriod: 0\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { clientId: '', connectionId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== '') {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientPaths = { paths: '' };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConnectionPaths = { clientId: '', paths: '' };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersion = { identifier: '', features: '' };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== '') {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = {\n    communityTax: '',\n    baseProposerReward: '',\n    bonusProposerReward: '',\n    withdrawAddrEnabled: false\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = {\n    title: '',\n    description: '',\n    recipient: ''\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: '',\n    height: 0\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: '',\n    description: '',\n    recipient: '',\n    amount: '',\n    deposit: ''\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = {\n    address: '',\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: ''\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: '',\n    period: 0\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: '',\n    height: 0,\n    period: 0\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = {\n    fromAddress: '',\n    toAddress: '',\n    endTime: 0,\n    delayed: false\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Channel, Packet } from '../../../../ibc/core/channel/v1/channel';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseMsgChannelOpenInit = { portId: '', signer: '' };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenTry = {\n    portId: '',\n    previousChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== '') {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenAck = {\n    portId: '',\n    channelId: '',\n    counterpartyChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== '') {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseInit = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgRecvPacket = { signer: '' };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    }\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    }\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    }\n};\nconst baseMsgAcknowledgement = { signer: '' };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenInit', data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenTry', data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenAck', data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenConfirm', data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseInit', data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseConfirm', data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'RecvPacket', data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Timeout', data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'TimeoutOnClose', data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Acknowledgement', data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = {\n    denom: '',\n    amount: 0,\n    sender: '',\n    receiver: ''\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedClientState, ClientConsensusStates, Params } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    }\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseIdentifiedGenesisMetadata = { clientId: '' };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Counterparty, Version } from '../../../../ibc/core/connection/v1/connection';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.connection.v1';\nconst baseMsgConnectionOpenInit = {\n    clientId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: '',\n    previousConnectionId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== '') {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: '',\n    counterpartyConnectionId: '',\n    signer: ''\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== '') {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: '', signer: '' };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenInit', data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenTry', data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenAck', data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenConfirm', data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from '../../../../confio/proofs';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.core.commitment.v1';\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePath = { keyPath: '' };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ics23';\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_HASH':\n            return HashOp.NO_HASH;\n        case 1:\n        case 'SHA256':\n            return HashOp.SHA256;\n        case 2:\n        case 'SHA512':\n            return HashOp.SHA512;\n        case 3:\n        case 'KECCAK':\n            return HashOp.KECCAK;\n        case 4:\n        case 'RIPEMD160':\n            return HashOp.RIPEMD160;\n        case 5:\n        case 'BITCOIN':\n            return HashOp.BITCOIN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return 'NO_HASH';\n        case HashOp.SHA256:\n            return 'SHA256';\n        case HashOp.SHA512:\n            return 'SHA512';\n        case HashOp.KECCAK:\n            return 'KECCAK';\n        case HashOp.RIPEMD160:\n            return 'RIPEMD160';\n        case HashOp.BITCOIN:\n            return 'BITCOIN';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_PREFIX':\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case 'VAR_PROTO':\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case 'VAR_RLP':\n            return LengthOp.VAR_RLP;\n        case 3:\n        case 'FIXED32_BIG':\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case 'FIXED32_LITTLE':\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case 'FIXED64_BIG':\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case 'FIXED64_LITTLE':\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case 'REQUIRE_32_BYTES':\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case 'REQUIRE_64_BYTES':\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return 'NO_PREFIX';\n        case LengthOp.VAR_PROTO:\n            return 'VAR_PROTO';\n        case LengthOp.VAR_RLP:\n            return 'VAR_RLP';\n        case LengthOp.FIXED32_BIG:\n            return 'FIXED32_BIG';\n        case LengthOp.FIXED32_LITTLE:\n            return 'FIXED32_LITTLE';\n        case LengthOp.FIXED64_BIG:\n            return 'FIXED64_BIG';\n        case LengthOp.FIXED64_LITTLE:\n            return 'FIXED64_LITTLE';\n        case LengthOp.REQUIRE_32_BYTES:\n            return 'REQUIRE_32_BYTES';\n        case LengthOp.REQUIRE_64_BYTES:\n            return 'REQUIRE_64_BYTES';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch ? BatchProof.toJSON(message.batch) : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    }\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    }\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    }\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Event } from '../../../../tendermint/abci/types';\nexport const protobufPackage = 'cosmos.base.abci.v1beta1';\nconst baseTxResponse = {\n    height: 0,\n    txhash: '',\n    codespace: '',\n    code: 0,\n    data: '',\n    rawLog: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: ''\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== '') {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== '') {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== '') {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== '') {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    }\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: '' };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseStringEvent = { type: '' };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseAttribute = { key: '', value: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseResult = { log: '' };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgData = { msgType: '' };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== '') {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = {\n    sourcePort: '',\n    sourceChannel: '',\n    sender: '',\n    receiver: '',\n    timeoutTimestamp: 0\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n"],"sourceRoot":""}